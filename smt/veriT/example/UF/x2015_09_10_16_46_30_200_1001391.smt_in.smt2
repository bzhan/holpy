(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Sledgehammer, converted to v2.6 by CVC4
Application: Verfication goals in Isabelle
Target solver: CVC4, Z3
Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)


(declare-sort N$ 0)
(declare-sort T$ 0)
(declare-sort Dtree$ 0)
(declare-sort N_set$ 0)
(declare-sort T_set$ 0)
(declare-sort Dtree_set$ 0)
(declare-sort N_bool_fun$ 0)
(declare-sort T_bool_fun$ 0)
(declare-sort N_N_sum_set$ 0)
(declare-sort N_T_sum_set$ 0)
(declare-sort T_N_sum_set$ 0)
(declare-sort T_T_sum_set$ 0)
(declare-sort Dtree_bool_fun$ 0)
(declare-sort N_set_bool_fun$ 0)
(declare-sort Dtree_N_sum_set$ 0)
(declare-sort Dtree_T_sum_set$ 0)
(declare-sort Dtree_dtree_fun$ 0)
(declare-sort N_dtree_sum_set$ 0)
(declare-sort T_dtree_sum_set$ 0)
(declare-sort N_N_sum_bool_fun$ 0)
(declare-sort T_T_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_fset$ 0)
(declare-sort Dtree_dtree_sum_set$ 0)
(declare-sort T_dtree_sum_set_set$ 0)
(declare-sort Dtree_T_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun$ 0)
(declare-sort T_dtree_sum_fset_set$ 0)
(declare-sort N_T_dtree_sum_sum_set$ 0)
(declare-sort T_T_dtree_sum_sum_set$ 0)
(declare-sort T_dtree_sum_N_sum_set$ 0)
(declare-sort T_dtree_sum_T_sum_set$ 0)
(declare-sort T_dtree_sum_option_set$ 0)
(declare-sort Dtree_dtree_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_set_set$ 0)
(declare-sort T_dtree_sum_set_bool_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_dtree_dtree_sum_fun$ 0)
(declare-sort Dtree_dtree_sum_dtree_fun$ 0)
(declare-sort T_dtree_sum_fset_bool_fun$ 0)
(declare-sort T_dtree_sum_set_dtree_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_fun$ 0)
(declare-sort N_T_dtree_sum_sum_bool_fun$ 0)
(declare-sort T_dtree_sum_N_sum_bool_fun$ 0)
(declare-sort T_dtree_sum_fset_dtree_fun$ 0)
(declare-sort T_dtree_sum_fset_option_set$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_sum_set$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_prod_set$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_set_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_fset_sum_set$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_sum_bool_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_set_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_sum_set$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_fset_prod_set$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_prod_set$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_sum_set$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_prod_set$ 0)
(declare-sort Dtree_dtree_dtree_sum_sum_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_dtree_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_dtree_sum_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_sum_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_dtree_dtree_sum_sum_T_dtree_sum_fset_fun$ 0)
(declare-sort Dtree_dtree_fun_dtree_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_dtree_sum_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_fset_dtree_sum_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_sum_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_fset_dtree_sum_T_dtree_sum_fset_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_fset_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_fset_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_fset_fun_T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_fun$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun_fun$ 0)
(declare-sort T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_sum$ 0)
(declare-sort T_dtree_sum_N_sum$ 0)
(declare-sort N_T_dtree_sum_sum$ 0)
(declare-sort N_N_sum$ 0)
(declare-sort Dtree_dtree_sum$ 0)
(declare-sort N_dtree_sum$ 0)
(declare-sort N_T_sum$ 0)
(declare-sort Dtree_N_sum$ 0)
(declare-sort Dtree_T_sum$ 0)
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_sum$ 0)
(declare-sort Dtree_dtree_dtree_sum_sum$ 0)
(declare-sort Dtree_dtree_sum_dtree_sum$ 0)
(declare-sort Dtree_T_dtree_sum_fset_sum$ 0)
(declare-sort T_dtree_sum_fset_dtree_sum$ 0)
(declare-fun projl$ (T_dtree_sum$) T$)
(declare-fun inl$ (T$) T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$) Dtree$)
(declare-fun inr$ (Dtree$) T_dtree_sum$)
(declare-fun projl$a (T_dtree_sum_T_dtree_sum_sum$) T_dtree_sum$)
(declare-fun inl$a (T_dtree_sum$) T_dtree_sum_T_dtree_sum_sum$)
(declare-fun projr$a (T_dtree_sum_T_dtree_sum_sum$) T_dtree_sum$)
(declare-fun inr$a (T_dtree_sum$) T_dtree_sum_T_dtree_sum_sum$)
(declare-fun projl$b (T_dtree_sum_N_sum$) T_dtree_sum$)
(declare-fun inl$b (T_dtree_sum$) T_dtree_sum_N_sum$)
(declare-fun projr$b (T_dtree_sum_N_sum$) N$)
(declare-fun inr$b (N$) T_dtree_sum_N_sum$)
(declare-fun projl$c (N_T_dtree_sum_sum$) N$)
(declare-fun inl$c (N$) N_T_dtree_sum_sum$)
(declare-fun projr$c (N_T_dtree_sum_sum$) T_dtree_sum$)
(declare-fun inr$c (T_dtree_sum$) N_T_dtree_sum_sum$)
(declare-fun projl$d (N_N_sum$) N$)
(declare-fun inl$d (N$) N_N_sum$)
(declare-fun projr$d (N_N_sum$) N$)
(declare-fun inr$d (N$) N_N_sum$)
(declare-fun projl$e (Dtree_dtree_sum$) Dtree$)
(declare-fun inl$e (Dtree$) Dtree_dtree_sum$)
(declare-fun projr$e (Dtree_dtree_sum$) Dtree$)
(declare-fun inr$e (Dtree$) Dtree_dtree_sum$)
(declare-fun projl$f (N_dtree_sum$) N$)
(declare-fun inl$f (N$) N_dtree_sum$)
(declare-fun projr$f (N_dtree_sum$) Dtree$)
(declare-fun inr$f (Dtree$) N_dtree_sum$)
(declare-fun projl$g (N_T_sum$) N$)
(declare-fun inl$g (N$) N_T_sum$)
(declare-fun projr$g (N_T_sum$) T$)
(declare-fun inr$g (T$) N_T_sum$)
(declare-fun projl$h (Dtree_N_sum$) Dtree$)
(declare-fun inl$h (Dtree$) Dtree_N_sum$)
(declare-fun projr$h (Dtree_N_sum$) N$)
(declare-fun inr$h (N$) Dtree_N_sum$)
(declare-fun projl$i (Dtree_T_sum$) Dtree$)
(declare-fun inl$i (Dtree$) Dtree_T_sum$)
(declare-fun projr$i (Dtree_T_sum$) T$)
(declare-fun inr$i (T$) Dtree_T_sum$)
(declare-fun projl$j (T_dtree_sum_fset_T_dtree_sum_fset_sum$) T_dtree_sum_fset$)
(declare-fun inl$j (T_dtree_sum_fset$) T_dtree_sum_fset_T_dtree_sum_fset_sum$)
(declare-fun projr$j (T_dtree_sum_fset_T_dtree_sum_fset_sum$) T_dtree_sum_fset$)
(declare-fun inr$j (T_dtree_sum_fset$) T_dtree_sum_fset_T_dtree_sum_fset_sum$)
(declare-fun projl$k (Dtree_dtree_dtree_sum_sum$) Dtree$)
(declare-fun inl$k (Dtree$) Dtree_dtree_dtree_sum_sum$)
(declare-fun projr$k (Dtree_dtree_dtree_sum_sum$) Dtree_dtree_sum$)
(declare-fun inr$k (Dtree_dtree_sum$) Dtree_dtree_dtree_sum_sum$)
(declare-fun projl$l (Dtree_dtree_sum_dtree_sum$) Dtree_dtree_sum$)
(declare-fun inl$l (Dtree_dtree_sum$) Dtree_dtree_sum_dtree_sum$)
(declare-fun projr$l (Dtree_dtree_sum_dtree_sum$) Dtree$)
(declare-fun inr$l (Dtree$) Dtree_dtree_sum_dtree_sum$)
(declare-fun projl$m (Dtree_T_dtree_sum_fset_sum$) Dtree$)
(declare-fun inl$m (Dtree$) Dtree_T_dtree_sum_fset_sum$)
(declare-fun projr$m (Dtree_T_dtree_sum_fset_sum$) T_dtree_sum_fset$)
(declare-fun inr$m (T_dtree_sum_fset$) Dtree_T_dtree_sum_fset_sum$)
(declare-fun projl$n (T_dtree_sum_fset_dtree_sum$) T_dtree_sum_fset$)
(declare-fun inl$n (T_dtree_sum_fset$) T_dtree_sum_fset_dtree_sum$)
(declare-fun projr$n (T_dtree_sum_fset_dtree_sum$) Dtree$)
(declare-fun inr$n (Dtree$) T_dtree_sum_fset_dtree_sum$)
(declare-fun t$ () T$)
(declare-fun ns$ () N_set$)
(declare-fun tr$ () Dtree$)
(declare-fun uu$ (N_T_dtree_sum_sum_set$) N_T_dtree_sum_sum_bool_fun$)
(declare-fun bot$ () T_dtree_sum_set$)
(declare-fun isl$ (T_dtree_sum$) Bool)
(declare-fun top$ () T_dtree_sum_fset_set$)
(declare-fun uua$ (N_N_sum_set$) N_N_sum_bool_fun$)
(declare-fun uub$ (Dtree_set$) Dtree_bool_fun$)
(declare-fun uuc$ (T_dtree_sum_fset_set$) T_dtree_sum_fset_bool_fun$)
(declare-fun uud$ (T_set$) T_bool_fun$)
(declare-fun uue$ (N_set$) N_bool_fun$)
(declare-fun uuf$ (T_dtree_sum_set$) T_dtree_sum_bool_fun$)
(declare-fun uug$ () Dtree_dtree_dtree_sum_fun$)
(declare-fun uuh$ () Dtree_dtree_dtree_sum_fun$)
(declare-fun bot$a () N_set$)
(declare-fun bot$b () T_set$)
(declare-fun bot$c () Dtree_set$)
(declare-fun comp$ (Dtree_dtree_sum_T_dtree_sum_fset_fun$) Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_fset_fun_fun$)
(declare-fun cont$ () Dtree_T_dtree_sum_set_fun$)
(declare-fun fold$ (T_dtree_sum_T_dtree_sum_set_T_dtree_sum_set_fun_fun$) T_dtree_sum_set_T_dtree_sum_set_T_dtree_sum_set_fun_fun$)
(declare-fun fset$ () T_dtree_sum_fset_T_dtree_sum_set_fun$)
(declare-fun inFr$ (N_set$) Dtree_T_bool_fun_fun$)
(declare-fun less$ (N_set$) N_set_bool_fun$)
(declare-fun node$ (N$) T_dtree_sum_set_dtree_fun$)
(declare-fun plus$ (N_set$ N_set$) N_N_sum_set$)
(declare-fun root$ (Dtree$) N$)
(declare-fun setl$ (T_dtree_sum$) T_set$)
(declare-fun setr$ (T_dtree_sum$) Dtree_set$)
(declare-fun top$a () T_dtree_sum_fset_T_dtree_sum_fset_sum_set$)
(declare-fun top$b () T_dtree_sum_T_dtree_sum_sum_set$)
(declare-fun top$c () T_dtree_sum_set$)
(declare-fun top$d () T_set$)
(declare-fun top$e () Dtree_set$)
(declare-fun top$f () T_dtree_sum_T_dtree_sum_fset_sum_set$)
(declare-fun top$g () T_dtree_sum_fset_T_dtree_sum_sum_set$)
(declare-fun top$h () N_set$)
(declare-fun top$i () T_dtree_sum_T_dtree_sum_prod_set$)
(declare-fun top$j () T_dtree_sum_T_dtree_sum_fset_prod_set$)
(declare-fun top$k () T_dtree_sum_fset_T_dtree_sum_prod_set$)
(declare-fun top$l () T_dtree_sum_fset_T_dtree_sum_fset_prod_set$)
(declare-fun top$m () T_dtree_sum_set_set$)
(declare-fun top$n () T_dtree_sum_fset_set_set$)
(declare-fun top$o () T_dtree_sum_option_set$)
(declare-fun top$p () T_dtree_sum_fset_option_set$)
(declare-fun ccont$ () Dtree_T_dtree_sum_fset_fun$)
(declare-fun comp$a (Dtree_dtree_sum_T_dtree_sum_set_fun$) Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun comp$b (T_dtree_sum_fset_T_dtree_sum_set_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$)
(declare-fun comp$c (T_dtree_sum_fset_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun comp$d (T_dtree_sum_fset_T_dtree_sum_fset_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$e (T_dtree_sum_fset_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$f (T_dtree_sum_set_T_dtree_sum_fset_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$g (T_dtree_sum_set_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$h (T_dtree_sum_set_T_dtree_sum_set_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$)
(declare-fun comp$i (T_dtree_sum_set_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun comp$j (T_dtree_sum_fset_T_dtree_sum_set_fun$ Dtree_dtree_dtree_sum_sum_T_dtree_sum_fset_fun$) Dtree_dtree_dtree_sum_sum_T_dtree_sum_set_fun$)
(declare-fun comp$k (T_dtree_sum_fset_T_dtree_sum_set_fun$ Dtree_dtree_sum_dtree_sum_T_dtree_sum_fset_fun$) Dtree_dtree_sum_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun comp$l (T_dtree_sum_fset_T_dtree_sum_set_fun$ Dtree_T_dtree_sum_fset_sum_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_fset_sum_T_dtree_sum_set_fun$)
(declare-fun comp$m (T_dtree_sum_fset_T_dtree_sum_set_fun$) T_dtree_sum_fset_T_dtree_sum_fset_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$)
(declare-fun comp$n (T_dtree_sum_fset_T_dtree_sum_set_fun$ T_dtree_sum_fset_dtree_sum_T_dtree_sum_fset_fun$) T_dtree_sum_fset_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun comp$o (T_dtree_sum_set_T_dtree_sum_set_fun$ Dtree_T_dtree_sum_fset_sum_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_fset_sum_T_dtree_sum_set_fun$)
(declare-fun comp$p (T_dtree_sum_set_T_dtree_sum_set_fun$) T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$)
(declare-fun comp$q (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_fset_dtree_sum_T_dtree_sum_set_fun$) T_dtree_sum_fset_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun comp$r (Dtree_T_dtree_sum_fset_fun$) Dtree_dtree_fun_dtree_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$s (Dtree_T_dtree_sum_set_fun$) Dtree_dtree_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun comp$t (T_dtree_sum_fset_T_dtree_sum_set_fun$) T_dtree_sum_set_T_dtree_sum_fset_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$)
(declare-fun comp$u (T_dtree_sum_set_T_dtree_sum_set_fun$) T_dtree_sum_set_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$)
(declare-fun comp$v (Dtree_T_dtree_sum_fset_fun$) Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$w (Dtree_T_dtree_sum_set_fun$) Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$)
(declare-fun comp$x (Dtree_T_dtree_sum_fset_fun$) T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$)
(declare-fun comp$y (Dtree_T_dtree_sum_set_fun$) T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$)
(declare-fun comp$z (T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$) T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$)
(declare-fun less$a (T_dtree_sum_set$) T_dtree_sum_set_bool_fun$)
(declare-fun minus$ (T_dtree_sum_set$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun nNode$ (N$) T_dtree_sum_fset_dtree_fun$)
(declare-fun plus$a (T_set$ Dtree_set$) T_dtree_sum_set$)
(declare-fun plus$b (N_set$ T_dtree_sum_set$) N_T_dtree_sum_sum_set$)
(declare-fun plus$c (T_dtree_sum_set$ N_set$) T_dtree_sum_N_sum_set$)
(declare-fun plus$d (T_dtree_sum_set$ T_dtree_sum_set$) T_dtree_sum_T_dtree_sum_sum_set$)
(declare-fun plus$e (N_set$ Dtree_set$) N_dtree_sum_set$)
(declare-fun plus$f (N_set$ T_set$) N_T_sum_set$)
(declare-fun plus$g (Dtree_set$ N_set$) Dtree_N_sum_set$)
(declare-fun plus$h (Dtree_set$ Dtree_set$) Dtree_dtree_sum_set$)
(declare-fun plus$i (Dtree_set$ T_set$) Dtree_T_sum_set$)
(declare-fun plus$j (T_dtree_sum_fset_set$ T_dtree_sum_fset_set$) T_dtree_sum_fset_T_dtree_sum_fset_sum_set$)
(declare-fun plus$k (T_set$ T_set$) T_T_sum_set$)
(declare-fun plus$l (T_set$ N_set$) T_N_sum_set$)
(declare-fun plus$m (T_dtree_sum_set$ T_set$) T_dtree_sum_T_sum_set$)
(declare-fun plus$n (T_set$ T_dtree_sum_set$) T_T_dtree_sum_sum_set$)
(declare-fun setlp$ (T_dtree_sum$) T_bool_fun$)
(declare-fun setrp$ (T_dtree_sum$) Dtree_bool_fun$)
(declare-fun finite$ (T_dtree_sum_set$) Bool)
(declare-fun insert$ (T_dtree_sum$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun member$ (T_dtree_sum$) T_dtree_sum_set_bool_fun$)
(declare-fun minus$a (N_set$ N_set$) N_set$)
(declare-fun remove$ () T_dtree_sum_T_dtree_sum_set_T_dtree_sum_set_fun_fun$)
(declare-fun collect$ (T_dtree_sum_bool_fun$) T_dtree_sum_set$)
(declare-fun finite$a (T_set$) Bool)
(declare-fun finite$b (Dtree_set$) Bool)
(declare-fun finite$c (T_dtree_sum_T_dtree_sum_sum_set$) Bool)
(declare-fun finite$d (T_T_sum_set$) Bool)
(declare-fun finite$e (T_N_sum_set$) Bool)
(declare-fun finite$f (N_set$) Bool)
(declare-fun finite$g (N_T_sum_set$) Bool)
(declare-fun finite$h (N_N_sum_set$) Bool)
(declare-fun finite$i (T_dtree_sum_T_sum_set$) Bool)
(declare-fun finite$j (T_dtree_sum_N_sum_set$) Bool)
(declare-fun finite$k (T_T_dtree_sum_sum_set$) Bool)
(declare-fun finite$l (N_T_dtree_sum_sum_set$) Bool)
(declare-fun finite$m (T_dtree_sum_fset_T_dtree_sum_fset_sum_set$) Bool)
(declare-fun finite$n (T_dtree_sum_fset_set$) Bool)
(declare-fun finite$o (T_dtree_sum_T_dtree_sum_fset_sum_set$) Bool)
(declare-fun finite$p (T_dtree_sum_fset_T_dtree_sum_sum_set$) Bool)
(declare-fun finite$q (T_dtree_sum_T_dtree_sum_prod_set$) Bool)
(declare-fun finite$r (T_dtree_sum_T_dtree_sum_fset_prod_set$) Bool)
(declare-fun finite$s (T_dtree_sum_fset_T_dtree_sum_prod_set$) Bool)
(declare-fun finite$t (T_dtree_sum_fset_T_dtree_sum_fset_prod_set$) Bool)
(declare-fun finite$u (T_dtree_sum_set_set$) Bool)
(declare-fun finite$v (T_dtree_sum_fset_set_set$) Bool)
(declare-fun finite$w (T_dtree_sum_option_set$) Bool)
(declare-fun finite$x (T_dtree_sum_fset_option_set$) Bool)
(declare-fun fun_app$ (Dtree_dtree_dtree_sum_fun$ Dtree$) Dtree_dtree_sum$)
(declare-fun insert$a (N$ N_set$) N_set$)
(declare-fun insert$b (T$ T_set$) T_set$)
(declare-fun insert$c (Dtree$ Dtree_set$) Dtree_set$)
(declare-fun map_fun$ (Dtree_T_dtree_sum_fset_fun$) T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun_fun$)
(declare-fun member$a (N_T_dtree_sum_sum$ N_T_dtree_sum_sum_set$) Bool)
(declare-fun member$b (N_N_sum$ N_N_sum_set$) Bool)
(declare-fun member$c (Dtree$ Dtree_set$) Bool)
(declare-fun member$d (T_dtree_sum_fset$ T_dtree_sum_fset_set$) Bool)
(declare-fun member$e (T$ T_set$) Bool)
(declare-fun member$f (N$) N_set_bool_fun$)
(declare-fun member$g (T_dtree_sum_N_sum$ T_dtree_sum_N_sum_set$) Bool)
(declare-fun member$h (T_dtree_sum_T_dtree_sum_sum$ T_dtree_sum_T_dtree_sum_sum_set$) Bool)
(declare-fun member$i (N_dtree_sum$ N_dtree_sum_set$) Bool)
(declare-fun member$j (N_T_sum$ N_T_sum_set$) Bool)
(declare-fun member$k (Dtree_N_sum$ Dtree_N_sum_set$) Bool)
(declare-fun member$l (Dtree_dtree_sum$ Dtree_dtree_sum_set$) Bool)
(declare-fun member$m (Dtree_T_sum$ Dtree_T_sum_set$) Bool)
(declare-fun member$n (T_dtree_sum_fset_T_dtree_sum_fset_sum$ T_dtree_sum_fset_T_dtree_sum_fset_sum_set$) Bool)
(declare-fun rel_sum$ (T_T_bool_fun_fun$) Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$)
(declare-fun case_sum$ (Dtree_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$)
(declare-fun collect$a (N_bool_fun$) N_set$)
(declare-fun collect$b (N_T_dtree_sum_sum_bool_fun$) N_T_dtree_sum_sum_set$)
(declare-fun collect$c (N_N_sum_bool_fun$) N_N_sum_set$)
(declare-fun collect$d (Dtree_bool_fun$) Dtree_set$)
(declare-fun collect$e (T_dtree_sum_fset_bool_fun$) T_dtree_sum_fset_set$)
(declare-fun collect$f (T_bool_fun$) T_set$)
(declare-fun fun_app$a (T_dtree_sum_bool_fun$ T_dtree_sum$) Bool)
(declare-fun fun_app$b (T_dtree_sum_set_bool_fun$ T_dtree_sum_set$) Bool)
(declare-fun fun_app$c (N_T_dtree_sum_sum_bool_fun$ N_T_dtree_sum_sum$) Bool)
(declare-fun fun_app$d (N_N_sum_bool_fun$ N_N_sum$) Bool)
(declare-fun fun_app$e (Dtree_bool_fun$ Dtree$) Bool)
(declare-fun fun_app$f (T_dtree_sum_fset_bool_fun$ T_dtree_sum_fset$) Bool)
(declare-fun fun_app$g (T_bool_fun$ T$) Bool)
(declare-fun fun_app$h (N_bool_fun$ N$) Bool)
(declare-fun fun_app$i (N_set_bool_fun$ N_set$) Bool)
(declare-fun fun_app$j (Dtree_T_bool_fun_fun$ Dtree$) T_bool_fun$)
(declare-fun fun_app$k (T_dtree_sum_set_dtree_fun$ T_dtree_sum_set$) Dtree$)
(declare-fun fun_app$l (Dtree_T_dtree_sum_set_fun$ Dtree$) T_dtree_sum_set$)
(declare-fun fun_app$m (T_dtree_sum_fset_dtree_fun$ T_dtree_sum_fset$) Dtree$)
(declare-fun fun_app$n (Dtree_T_dtree_sum_fset_fun$ Dtree$) T_dtree_sum_fset$)
(declare-fun fun_app$o (T_dtree_sum_T_dtree_sum_sum_bool_fun$ T_dtree_sum_T_dtree_sum_sum$) Bool)
(declare-fun fun_app$p (T_dtree_sum_N_sum_bool_fun$ T_dtree_sum_N_sum$) Bool)
(declare-fun fun_app$q (Dtree_dtree_sum_T_dtree_sum_fset_fun$ Dtree_dtree_sum$) T_dtree_sum_fset$)
(declare-fun fun_app$r (Dtree_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ Dtree_T_dtree_sum_fset_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun fun_app$s (Dtree_dtree_sum_T_dtree_sum_set_fun$ Dtree_dtree_sum$) T_dtree_sum_set$)
(declare-fun fun_app$t (Dtree_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ Dtree_T_dtree_sum_set_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun fun_app$u (Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_fset_fun_fun$ Dtree_dtree_dtree_sum_fun$) Dtree_T_dtree_sum_fset_fun$)
(declare-fun fun_app$v (Dtree_dtree_dtree_sum_fun_dtree_T_dtree_sum_set_fun_fun$ Dtree_dtree_dtree_sum_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$w (Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ Dtree_dtree_sum_T_dtree_sum_fset_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun fun_app$x (Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$ Dtree_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$y (Dtree_dtree_sum_T_dtree_sum_fset_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ Dtree_dtree_sum_T_dtree_sum_fset_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun fun_app$z (Dtree_T_dtree_sum_fset_fun_dtree_T_dtree_sum_fset_fun_fun$ Dtree_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_fset_fun$)
(declare-fun map_fun$a (T_dtree_sum_fset_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_fset_fun_T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_fun$)
(declare-fun map_fun$b (Dtree_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_set_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$)
(declare-fun case_sum$a (Dtree_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$)
(declare-fun case_sum$b (Dtree_T_dtree_sum_fset_fun$ Dtree_dtree_sum_T_dtree_sum_fset_fun$) Dtree_dtree_dtree_sum_sum_T_dtree_sum_fset_fun$)
(declare-fun case_sum$c (Dtree_T_dtree_sum_set_fun$ Dtree_dtree_sum_T_dtree_sum_set_fun$) Dtree_dtree_dtree_sum_sum_T_dtree_sum_set_fun$)
(declare-fun case_sum$d (Dtree_dtree_sum_T_dtree_sum_fset_fun$ Dtree_T_dtree_sum_fset_fun$) Dtree_dtree_sum_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun case_sum$e (Dtree_dtree_sum_T_dtree_sum_set_fun$ Dtree_T_dtree_sum_set_fun$) Dtree_dtree_sum_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun case_sum$f (Dtree_T_dtree_sum_fset_fun$ T_dtree_sum_fset_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_fset_sum_T_dtree_sum_fset_fun$)
(declare-fun case_sum$g (Dtree_T_dtree_sum_set_fun$ T_dtree_sum_fset_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_fset_sum_T_dtree_sum_set_fun$)
(declare-fun case_sum$h (T_dtree_sum_fset_T_dtree_sum_fset_fun$ Dtree_T_dtree_sum_fset_fun$) T_dtree_sum_fset_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun case_sum$i (T_dtree_sum_fset_T_dtree_sum_set_fun$ Dtree_T_dtree_sum_set_fun$) T_dtree_sum_fset_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun fun_app$aa (Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ Dtree_dtree_sum_T_dtree_sum_set_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun fun_app$ab (Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_fset_fun_fun$ Dtree_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_fset_fun$)
(declare-fun fun_app$ac (Dtree_dtree_sum_T_dtree_sum_set_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ Dtree_dtree_sum_T_dtree_sum_set_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun fun_app$ad (Dtree_T_dtree_sum_set_fun_dtree_T_dtree_sum_set_fun_fun$ Dtree_T_dtree_sum_set_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$ae (T_dtree_sum_fset_T_dtree_sum_fset_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ T_dtree_sum_fset_T_dtree_sum_fset_fun$) T_dtree_sum_fset_T_dtree_sum_set_fun$)
(declare-fun fun_app$af (T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ T_dtree_sum_fset_T_dtree_sum_set_fun$) T_dtree_sum_fset_T_dtree_sum_set_fun$)
(declare-fun fun_app$ag (Dtree_dtree_fun_dtree_T_dtree_sum_fset_fun_fun$ Dtree_dtree_fun$) Dtree_T_dtree_sum_fset_fun$)
(declare-fun fun_app$ah (Dtree_dtree_fun_dtree_T_dtree_sum_set_fun_fun$ Dtree_dtree_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$ai (T_dtree_sum_set_T_dtree_sum_fset_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ T_dtree_sum_set_T_dtree_sum_fset_fun$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun fun_app$aj (T_dtree_sum_set_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ T_dtree_sum_set_T_dtree_sum_set_fun$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun fun_app$ak (Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_fset_fun_fun$ Dtree_dtree_sum_dtree_fun$) Dtree_dtree_sum_T_dtree_sum_fset_fun$)
(declare-fun fun_app$al (Dtree_dtree_sum_dtree_fun_dtree_dtree_sum_T_dtree_sum_set_fun_fun$ Dtree_dtree_sum_dtree_fun$) Dtree_dtree_sum_T_dtree_sum_set_fun$)
(declare-fun fun_app$am (T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ T_dtree_sum_fset_dtree_fun$) T_dtree_sum_fset_T_dtree_sum_fset_fun$)
(declare-fun fun_app$an (T_dtree_sum_fset_dtree_fun_T_dtree_sum_fset_T_dtree_sum_set_fun_fun$ T_dtree_sum_fset_dtree_fun$) T_dtree_sum_fset_T_dtree_sum_set_fun$)
(declare-fun fun_app$ao (T_dtree_sum_fset_T_dtree_sum_set_fun$ T_dtree_sum_fset$) T_dtree_sum_set$)
(declare-fun fun_app$ap (T_dtree_sum_fset_T_dtree_sum_fset_fun$ T_dtree_sum_fset$) T_dtree_sum_fset$)
(declare-fun fun_app$aq (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun fun_app$ar (T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun$ T_dtree_sum_set_dtree_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$as (T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$ T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$) T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun fun_app$at (T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$ T_dtree_sum_fset_T_dtree_sum_fset_fun$) Dtree_T_dtree_sum_set_fun$)
(declare-fun fun_app$au (T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ T_dtree_sum_set_dtree_fun$) T_dtree_sum_fset_T_dtree_sum_fset_fun$)
(declare-fun fun_app$av (Dtree_dtree_fun$ Dtree$) Dtree$)
(declare-fun fun_app$aw (T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun_fun$ T_dtree_sum_fset_T_dtree_sum_set_fun$) T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun fun_app$ax (Dtree_T_dtree_sum_fset_fun_T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun_fun$ Dtree_T_dtree_sum_fset_fun$) T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$)
(declare-fun fun_app$ay (Dtree_T_dtree_sum_set_fun_T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun_fun$ Dtree_T_dtree_sum_set_fun$) T_dtree_sum_set_dtree_fun_dtree_T_dtree_sum_set_fun_fun$)
(declare-fun fun_app$az (T_dtree_sum_T_dtree_sum_bool_fun_fun$ T_dtree_sum$) T_dtree_sum_bool_fun$)
(declare-fun fun_app$ba (Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ Dtree_dtree_bool_fun_fun$) T_dtree_sum_T_dtree_sum_bool_fun_fun$)
(declare-fun fun_app$bb (Dtree_dtree_bool_fun_fun$ Dtree$) Dtree_bool_fun$)
(declare-fun fun_app$bc (T_T_bool_fun_fun$ T$) T_bool_fun$)
(declare-fun fun_app$bd (T_dtree_sum_set_T_dtree_sum_fset_fun$ T_dtree_sum_set$) T_dtree_sum_fset$)
(declare-fun fun_app$be (T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_fset_fun_fun$ T_dtree_sum_fset_T_dtree_sum_set_fun$) T_dtree_sum_set_T_dtree_sum_fset_fun$)
(declare-fun fun_app$bf (T_dtree_sum_set_T_dtree_sum_set_T_dtree_sum_set_fun_fun$ T_dtree_sum_set$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun the_inv_into$ (T_dtree_sum_fset_set$) T_dtree_sum_fset_T_dtree_sum_set_fun_T_dtree_sum_set_T_dtree_sum_fset_fun_fun$)
(assert (forall ((?v0 Dtree$)) (! (= (fun_app$ uuh$ ?v0) (inr$e ?v0)) :pattern ((fun_app$ uuh$ ?v0)))))
(assert (forall ((?v0 Dtree$)) (! (= (fun_app$ uug$ ?v0) (inl$e ?v0)) :pattern ((fun_app$ uug$ ?v0)))))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum$)) (! (= (fun_app$a (uuf$ ?v0) ?v1) (fun_app$b (member$ ?v1) ?v0)) :pattern ((fun_app$a (uuf$ ?v0) ?v1)))))
(assert (forall ((?v0 N_T_dtree_sum_sum_set$) (?v1 N_T_dtree_sum_sum$)) (! (= (fun_app$c (uu$ ?v0) ?v1) (member$a ?v1 ?v0)) :pattern ((fun_app$c (uu$ ?v0) ?v1)))))
(assert (forall ((?v0 N_N_sum_set$) (?v1 N_N_sum$)) (! (= (fun_app$d (uua$ ?v0) ?v1) (member$b ?v1 ?v0)) :pattern ((fun_app$d (uua$ ?v0) ?v1)))))
(assert (forall ((?v0 Dtree_set$) (?v1 Dtree$)) (! (= (fun_app$e (uub$ ?v0) ?v1) (member$c ?v1 ?v0)) :pattern ((fun_app$e (uub$ ?v0) ?v1)))))
(assert (forall ((?v0 T_dtree_sum_fset_set$) (?v1 T_dtree_sum_fset$)) (! (= (fun_app$f (uuc$ ?v0) ?v1) (member$d ?v1 ?v0)) :pattern ((fun_app$f (uuc$ ?v0) ?v1)))))
(assert (forall ((?v0 T_set$) (?v1 T$)) (! (= (fun_app$g (uud$ ?v0) ?v1) (member$e ?v1 ?v0)) :pattern ((fun_app$g (uud$ ?v0) ?v1)))))
(assert (forall ((?v0 N_set$) (?v1 N$)) (! (= (fun_app$h (uue$ ?v0) ?v1) (fun_app$i (member$f ?v1) ?v0)) :pattern ((fun_app$h (uue$ ?v0) ?v1)))))
(assert (not (fun_app$i (member$f (root$ tr$)) ns$)))
(assert (fun_app$g (fun_app$j (inFr$ ns$) tr$) t$))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum_set$)) (= (root$ (fun_app$k (node$ ?v0) ?v1)) ?v0) ))
(assert (forall ((?v0 Dtree$) (?v1 N_set$) (?v2 T$)) (=> (and (fun_app$i (member$f (root$ ?v0)) ?v1) (fun_app$b (member$ (inl$ ?v2)) (fun_app$l cont$ ?v0))) (fun_app$g (fun_app$j (inFr$ ?v1) ?v0) ?v2)) ))
(assert (forall ((?v0 Dtree$) (?v1 N_set$) (?v2 Dtree$) (?v3 T$)) (=> (and (fun_app$i (member$f (root$ ?v0)) ?v1) (and (fun_app$b (member$ (inr$ ?v2)) (fun_app$l cont$ ?v0)) (fun_app$g (fun_app$j (inFr$ ?v1) ?v2) ?v3))) (fun_app$g (fun_app$j (inFr$ ?v1) ?v0) ?v3)) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum_fset$)) (! (= (root$ (fun_app$m (nNode$ ?v0) ?v1)) ?v0) :pattern ((fun_app$m (nNode$ ?v0) ?v1)))))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (=> (and (= (root$ ?v0) (root$ ?v1)) (= (fun_app$l cont$ ?v0) (fun_app$l cont$ ?v1))) (= ?v0 ?v1)) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (=> (and (= (root$ ?v0) (root$ ?v1)) (= (fun_app$n ccont$ ?v0) (fun_app$n ccont$ ?v1))) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N_set$) (?v1 Dtree$) (?v2 T$)) (= (fun_app$g (fun_app$j (inFr$ ?v0) ?v1) ?v2) (or (exists ((?v3 Dtree$) (?v4 N_set$) (?v5 T$)) (and (= ?v0 ?v4) (and (= ?v1 ?v3) (and (= ?v2 ?v5) (and (fun_app$i (member$f (root$ ?v3)) ?v4) (fun_app$b (member$ (inl$ ?v5)) (fun_app$l cont$ ?v3)))))) ) (exists ((?v3 Dtree$) (?v4 N_set$) (?v5 Dtree$) (?v6 T$)) (and (= ?v0 ?v4) (and (= ?v1 ?v3) (and (= ?v2 ?v6) (and (fun_app$i (member$f (root$ ?v3)) ?v4) (and (fun_app$b (member$ (inr$ ?v5)) (fun_app$l cont$ ?v3)) (fun_app$g (fun_app$j (inFr$ ?v4) ?v5) ?v6)))))) ))) ))
(assert (forall ((?v0 N_set$) (?v1 Dtree$) (?v2 T$)) (=> (and (fun_app$g (fun_app$j (inFr$ ?v0) ?v1) ?v2) (and (forall ((?v3 Dtree$) (?v4 N_set$) (?v5 T$)) (=> (and (= ?v0 ?v4) (and (= ?v1 ?v3) (and (= ?v2 ?v5) (and (fun_app$i (member$f (root$ ?v3)) ?v4) (fun_app$b (member$ (inl$ ?v5)) (fun_app$l cont$ ?v3)))))) false) ) (forall ((?v3 Dtree$) (?v4 N_set$) (?v5 Dtree$) (?v6 T$)) (=> (and (= ?v0 ?v4) (and (= ?v1 ?v3) (and (= ?v2 ?v6) (and (fun_app$i (member$f (root$ ?v3)) ?v4) (and (fun_app$b (member$ (inr$ ?v5)) (fun_app$l cont$ ?v3)) (fun_app$g (fun_app$j (inFr$ ?v4) ?v5) ?v6)))))) false) ))) false) ))
(assert (forall ((?v0 Dtree$)) (= (fun_app$k (node$ (root$ ?v0)) (fun_app$l cont$ ?v0)) ?v0) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum_fset$) (?v2 N$) (?v3 T_dtree_sum_fset$)) (= (= (fun_app$m (nNode$ ?v0) ?v1) (fun_app$m (nNode$ ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3))) ))
(assert (forall ((?v0 Dtree$)) (= (fun_app$m (nNode$ (root$ ?v0)) (fun_app$n ccont$ ?v0)) ?v0) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum_fset$)) (! (= (fun_app$n ccont$ (fun_app$m (nNode$ ?v0) ?v1)) ?v1) :pattern ((fun_app$m (nNode$ ?v0) ?v1)))))
(assert (forall ((?v0 Dtree$)) (=> (forall ((?v1 N$) (?v2 T_dtree_sum_fset$)) (=> (= ?v0 (fun_app$m (nNode$ ?v1) ?v2)) false) ) false) ))
(assert (forall ((?v0 Dtree$)) (=> (=> (= ?v0 (fun_app$m (nNode$ (root$ ?v0)) (fun_app$n ccont$ ?v0))) false) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inl$a ?v0) (inr$a ?v1)) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (= (= (inl$b ?v0) (inr$b ?v1)) false) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (= (= (inl$c ?v0) (inr$c ?v1)) false) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inl$d ?v0) (inr$d ?v1)) false) ))
(assert (forall ((?v0 T$) (?v1 Dtree$)) (= (= (inl$ ?v0) (inr$ ?v1)) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inr$a ?v0) (inl$a ?v1)) false) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (= (= (inr$b ?v0) (inl$b ?v1)) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (= (= (inr$c ?v0) (inl$c ?v1)) false) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inr$d ?v0) (inl$d ?v1)) false) ))
(assert (forall ((?v0 Dtree$) (?v1 T$)) (= (= (inr$ ?v0) (inl$ ?v1)) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inl$b ?v0) (inl$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inl$c ?v0) (inl$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inl$d ?v0) (inl$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inl$b ?v0) (inl$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inl$c ?v0) (inl$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inl$d ?v0) (inl$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inr$a ?v0) (inr$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inr$b ?v0) (inr$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inr$c ?v0) (inr$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inr$d ?v0) (inr$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (= (= (inr$ ?v0) (inr$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inr$a ?v0) (inr$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inr$b ?v0) (inr$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (= (= (inr$c ?v0) (inr$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (= (= (inr$d ?v0) (inr$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (= (= (inr$ ?v0) (inr$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum_bool_fun$)) (= (exists ((?v1 T_dtree_sum_T_dtree_sum_sum$)) (fun_app$o ?v0 ?v1) ) (or (exists ((?v1 T_dtree_sum$)) (fun_app$o ?v0 (inl$a ?v1)) ) (exists ((?v1 T_dtree_sum$)) (fun_app$o ?v0 (inr$a ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_N_sum_bool_fun$)) (= (exists ((?v1 T_dtree_sum_N_sum$)) (fun_app$p ?v0 ?v1) ) (or (exists ((?v1 T_dtree_sum$)) (fun_app$p ?v0 (inl$b ?v1)) ) (exists ((?v1 N$)) (fun_app$p ?v0 (inr$b ?v1)) ))) ))
(assert (forall ((?v0 N_T_dtree_sum_sum_bool_fun$)) (= (exists ((?v1 N_T_dtree_sum_sum$)) (fun_app$c ?v0 ?v1) ) (or (exists ((?v1 N$)) (fun_app$c ?v0 (inl$c ?v1)) ) (exists ((?v1 T_dtree_sum$)) (fun_app$c ?v0 (inr$c ?v1)) ))) ))
(assert (forall ((?v0 N_N_sum_bool_fun$)) (= (exists ((?v1 N_N_sum$)) (fun_app$d ?v0 ?v1) ) (or (exists ((?v1 N$)) (fun_app$d ?v0 (inl$d ?v1)) ) (exists ((?v1 N$)) (fun_app$d ?v0 (inr$d ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_bool_fun$)) (= (exists ((?v1 T_dtree_sum$)) (fun_app$a ?v0 ?v1) ) (or (exists ((?v1 T$)) (fun_app$a ?v0 (inl$ ?v1)) ) (exists ((?v1 Dtree$)) (fun_app$a ?v0 (inr$ ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum_bool_fun$)) (= (forall ((?v1 T_dtree_sum_T_dtree_sum_sum$)) (fun_app$o ?v0 ?v1) ) (and (forall ((?v1 T_dtree_sum$)) (fun_app$o ?v0 (inl$a ?v1)) ) (forall ((?v1 T_dtree_sum$)) (fun_app$o ?v0 (inr$a ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_N_sum_bool_fun$)) (= (forall ((?v1 T_dtree_sum_N_sum$)) (fun_app$p ?v0 ?v1) ) (and (forall ((?v1 T_dtree_sum$)) (fun_app$p ?v0 (inl$b ?v1)) ) (forall ((?v1 N$)) (fun_app$p ?v0 (inr$b ?v1)) ))) ))
(assert (forall ((?v0 N_T_dtree_sum_sum_bool_fun$)) (= (forall ((?v1 N_T_dtree_sum_sum$)) (fun_app$c ?v0 ?v1) ) (and (forall ((?v1 N$)) (fun_app$c ?v0 (inl$c ?v1)) ) (forall ((?v1 T_dtree_sum$)) (fun_app$c ?v0 (inr$c ?v1)) ))) ))
(assert (forall ((?v0 N_N_sum_bool_fun$)) (= (forall ((?v1 N_N_sum$)) (fun_app$d ?v0 ?v1) ) (and (forall ((?v1 N$)) (fun_app$d ?v0 (inl$d ?v1)) ) (forall ((?v1 N$)) (fun_app$d ?v0 (inr$d ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_bool_fun$)) (= (forall ((?v1 T_dtree_sum$)) (fun_app$a ?v0 ?v1) ) (and (forall ((?v1 T$)) (fun_app$a ?v0 (inl$ ?v1)) ) (forall ((?v1 Dtree$)) (fun_app$a ?v0 (inr$ ?v1)) ))) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$a ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$a ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum_N_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$b ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$b ?v1)) false) )) false) ))
(assert (forall ((?v0 N_T_dtree_sum_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$c ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$c ?v1)) false) )) false) ))
(assert (forall ((?v0 N_N_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$d ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$d ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$)) (=> (and (forall ((?v1 T$)) (=> (= ?v0 (inl$ ?v1)) false) ) (forall ((?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (= (inr$a ?v0) (inr$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (= (inr$b ?v0) (inr$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (= (inr$c ?v0) (inr$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (= (inr$d ?v0) (inr$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (=> (= (inr$ ?v0) (inr$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (= (inl$b ?v0) (inl$b ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (= (inl$c ?v0) (inl$c ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (= (inl$d ?v0) (inl$d ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T$) (?v1 T$)) (=> (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (not (= (inl$a ?v0) (inr$a ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (not (= (inl$b ?v0) (inr$b ?v1))) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (not (= (inl$c ?v0) (inr$c ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (not (= (inl$d ?v0) (inr$d ?v1))) ))
(assert (forall ((?v0 T$) (?v1 Dtree$)) (not (= (inl$ ?v0) (inr$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (not (= (inr$a ?v0) (inl$a ?v1))) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (not (= (inr$b ?v0) (inl$b ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (not (= (inr$c ?v0) (inl$c ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (not (= (inr$d ?v0) (inl$d ?v1))) ))
(assert (forall ((?v0 Dtree$) (?v1 T$)) (not (= (inr$ ?v0) (inl$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (not (= (inl$a ?v0) (inr$a ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (not (= (inl$b ?v0) (inr$b ?v1))) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (not (= (inl$c ?v0) (inr$c ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (not (= (inl$d ?v0) (inr$d ?v1))) ))
(assert (forall ((?v0 T$) (?v1 Dtree$)) (not (= (inl$ ?v0) (inr$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (not (= (inr$a ?v0) (inl$a ?v1))) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum$)) (not (= (inr$b ?v0) (inl$b ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 N$)) (not (= (inr$c ?v0) (inl$c ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (not (= (inr$d ?v0) (inl$d ?v1))) ))
(assert (forall ((?v0 Dtree$) (?v1 T$)) (not (= (inr$ ?v0) (inl$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$a ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$a ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum_N_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$b ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$b ?v1)) false) )) false) ))
(assert (forall ((?v0 N_T_dtree_sum_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$c ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$c ?v1)) false) )) false) ))
(assert (forall ((?v0 N_N_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$d ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$d ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$)) (=> (and (forall ((?v1 T$)) (=> (= ?v0 (inl$ ?v1)) false) ) (forall ((?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$a ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$a ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum_N_sum$)) (=> (and (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inl$b ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$b ?v1)) false) )) false) ))
(assert (forall ((?v0 N_T_dtree_sum_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$c ?v1)) false) ) (forall ((?v1 T_dtree_sum$)) (=> (= ?v0 (inr$c ?v1)) false) )) false) ))
(assert (forall ((?v0 N_N_sum$)) (=> (and (forall ((?v1 N$)) (=> (= ?v0 (inl$d ?v1)) false) ) (forall ((?v1 N$)) (=> (= ?v0 (inr$d ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$)) (=> (and (forall ((?v1 T$)) (=> (= ?v0 (inl$ ?v1)) false) ) (forall ((?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (not (= ?v0 ?v1)) (not (= (inr$a ?v0) (inr$a ?v1)))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (not (= ?v0 ?v1)) (not (= (inr$b ?v0) (inr$b ?v1)))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum$)) (=> (not (= ?v0 ?v1)) (not (= (inr$c ?v0) (inr$c ?v1)))) ))
(assert (forall ((?v0 N$) (?v1 N$)) (=> (not (= ?v0 ?v1)) (not (= (inr$d ?v0) (inr$d ?v1)))) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree$)) (=> (not (= ?v0 ?v1)) (not (= (inr$ ?v0) (inr$ ?v1)))) ))
(assert (forall ((?v0 T_dtree_sum_bool_fun$) (?v1 T_dtree_sum_bool_fun$)) (=> (forall ((?v2 T_dtree_sum$)) (= (fun_app$a ?v0 ?v2) (fun_app$a ?v1 ?v2)) ) (= (collect$ ?v0) (collect$ ?v1))) ))
(assert (forall ((?v0 N_bool_fun$) (?v1 N_bool_fun$)) (=> (forall ((?v2 N$)) (= (fun_app$h ?v0 ?v2) (fun_app$h ?v1 ?v2)) ) (= (collect$a ?v0) (collect$a ?v1))) ))
(assert (forall ((?v0 N_T_dtree_sum_sum_set$)) (= (collect$b (uu$ ?v0)) ?v0) ))
(assert (forall ((?v0 N_N_sum_set$)) (= (collect$c (uua$ ?v0)) ?v0) ))
(assert (forall ((?v0 Dtree_set$)) (= (collect$d (uub$ ?v0)) ?v0) ))
(assert (forall ((?v0 T_dtree_sum_fset_set$)) (= (collect$e (uuc$ ?v0)) ?v0) ))
(assert (forall ((?v0 T_set$)) (= (collect$f (uud$ ?v0)) ?v0) ))
(assert (forall ((?v0 N_set$)) (= (collect$a (uue$ ?v0)) ?v0) ))
(assert (forall ((?v0 T_dtree_sum_set$)) (= (collect$ (uuf$ ?v0)) ?v0) ))
(assert (forall ((?v0 N_T_dtree_sum_sum$) (?v1 N_T_dtree_sum_sum_bool_fun$)) (= (member$a ?v0 (collect$b ?v1)) (fun_app$c ?v1 ?v0)) ))
(assert (forall ((?v0 N_N_sum$) (?v1 N_N_sum_bool_fun$)) (= (member$b ?v0 (collect$c ?v1)) (fun_app$d ?v1 ?v0)) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree_bool_fun$)) (= (member$c ?v0 (collect$d ?v1)) (fun_app$e ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_fset$) (?v1 T_dtree_sum_fset_bool_fun$)) (= (member$d ?v0 (collect$e ?v1)) (fun_app$f ?v1 ?v0)) ))
(assert (forall ((?v0 T$) (?v1 T_bool_fun$)) (= (member$e ?v0 (collect$f ?v1)) (fun_app$g ?v1 ?v0)) ))
(assert (forall ((?v0 N$) (?v1 N_bool_fun$)) (= (fun_app$i (member$f ?v0) (collect$a ?v1)) (fun_app$h ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_bool_fun$)) (= (fun_app$b (member$ ?v0) (collect$ ?v1)) (fun_app$a ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 N$)) (=> (finite$ ?v0) (= (fun_app$l cont$ (fun_app$k (node$ ?v1) ?v0)) ?v0)) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Bool) (?v3 Dtree$) (?v4 Dtree$)) (= (fun_app$q (fun_app$r (case_sum$ ?v0) ?v1) (ite ?v2 (inl$e ?v3) (inr$e ?v4))) (ite ?v2 (fun_app$n ?v0 ?v3) (fun_app$n ?v1 ?v4))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Bool) (?v3 Dtree$) (?v4 Dtree$)) (= (fun_app$s (fun_app$t (case_sum$a ?v0) ?v1) (ite ?v2 (inl$e ?v3) (inr$e ?v4))) (ite ?v2 (fun_app$l ?v0 ?v3) (fun_app$l ?v1 ?v4))) ))
(assert (forall ((?v0 N_N_sum$) (?v1 N_set$) (?v2 N_set$)) (=> (and (member$b ?v0 (plus$ ?v1 ?v2)) (and (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v1) (= ?v0 (inl$d ?v3))) false) ) (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v2) (= ?v0 (inr$d ?v3))) false) ))) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_set$) (?v2 Dtree_set$)) (=> (and (fun_app$b (member$ ?v0) (plus$a ?v1 ?v2)) (and (forall ((?v3 T$)) (=> (and (member$e ?v3 ?v1) (= ?v0 (inl$ ?v3))) false) ) (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v2) (= ?v0 (inr$ ?v3))) false) ))) false) ))
(assert (forall ((?v0 N_T_dtree_sum_sum$) (?v1 N_set$) (?v2 T_dtree_sum_set$)) (=> (and (member$a ?v0 (plus$b ?v1 ?v2)) (and (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v1) (= ?v0 (inl$c ?v3))) false) ) (forall ((?v3 T_dtree_sum$)) (=> (and (fun_app$b (member$ ?v3) ?v2) (= ?v0 (inr$c ?v3))) false) ))) false) ))
(assert (forall ((?v0 T_dtree_sum_N_sum$) (?v1 T_dtree_sum_set$) (?v2 N_set$)) (=> (and (member$g ?v0 (plus$c ?v1 ?v2)) (and (forall ((?v3 T_dtree_sum$)) (=> (and (fun_app$b (member$ ?v3) ?v1) (= ?v0 (inl$b ?v3))) false) ) (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v2) (= ?v0 (inr$b ?v3))) false) ))) false) ))
(assert (forall ((?v0 T_dtree_sum_T_dtree_sum_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (=> (and (member$h ?v0 (plus$d ?v1 ?v2)) (and (forall ((?v3 T_dtree_sum$)) (=> (and (fun_app$b (member$ ?v3) ?v1) (= ?v0 (inl$a ?v3))) false) ) (forall ((?v3 T_dtree_sum$)) (=> (and (fun_app$b (member$ ?v3) ?v2) (= ?v0 (inr$a ?v3))) false) ))) false) ))
(assert (forall ((?v0 N_dtree_sum$) (?v1 N_set$) (?v2 Dtree_set$)) (=> (and (member$i ?v0 (plus$e ?v1 ?v2)) (and (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v1) (= ?v0 (inl$f ?v3))) false) ) (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v2) (= ?v0 (inr$f ?v3))) false) ))) false) ))
(assert (forall ((?v0 N_T_sum$) (?v1 N_set$) (?v2 T_set$)) (=> (and (member$j ?v0 (plus$f ?v1 ?v2)) (and (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v1) (= ?v0 (inl$g ?v3))) false) ) (forall ((?v3 T$)) (=> (and (member$e ?v3 ?v2) (= ?v0 (inr$g ?v3))) false) ))) false) ))
(assert (forall ((?v0 Dtree_N_sum$) (?v1 Dtree_set$) (?v2 N_set$)) (=> (and (member$k ?v0 (plus$g ?v1 ?v2)) (and (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v1) (= ?v0 (inl$h ?v3))) false) ) (forall ((?v3 N$)) (=> (and (fun_app$i (member$f ?v3) ?v2) (= ?v0 (inr$h ?v3))) false) ))) false) ))
(assert (forall ((?v0 Dtree_dtree_sum$) (?v1 Dtree_set$) (?v2 Dtree_set$)) (=> (and (member$l ?v0 (plus$h ?v1 ?v2)) (and (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v1) (= ?v0 (inl$e ?v3))) false) ) (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v2) (= ?v0 (inr$e ?v3))) false) ))) false) ))
(assert (forall ((?v0 Dtree_T_sum$) (?v1 Dtree_set$) (?v2 T_set$)) (=> (and (member$m ?v0 (plus$i ?v1 ?v2)) (and (forall ((?v3 Dtree$)) (=> (and (member$c ?v3 ?v1) (= ?v0 (inl$i ?v3))) false) ) (forall ((?v3 T$)) (=> (and (member$e ?v3 ?v2) (= ?v0 (inr$i ?v3))) false) ))) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (=> (fun_app$b (member$ ?v0) ?v1) (member$h (inr$a ?v0) (plus$d ?v2 ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N_set$) (?v2 T_dtree_sum_set$)) (=> (fun_app$i (member$f ?v0) ?v1) (member$g (inr$b ?v0) (plus$c ?v2 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_fset$) (?v1 T_dtree_sum_fset_set$) (?v2 T_dtree_sum_fset_set$)) (=> (member$d ?v0 ?v1) (member$n (inr$j ?v0) (plus$j ?v2 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 N_set$)) (=> (fun_app$b (member$ ?v0) ?v1) (member$a (inr$c ?v0) (plus$b ?v2 ?v1))) ))
(assert (forall ((?v0 N$) (?v1 N_set$) (?v2 N_set$)) (=> (fun_app$i (member$f ?v0) ?v1) (member$b (inr$d ?v0) (plus$ ?v2 ?v1))) ))
(assert (forall ((?v0 Dtree$) (?v1 Dtree_set$) (?v2 T_set$)) (=> (member$c ?v0 ?v1) (fun_app$b (member$ (inr$ ?v0)) (plus$a ?v2 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (=> (fun_app$b (member$ ?v0) ?v1) (member$h (inl$a ?v0) (plus$d ?v1 ?v2))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 N_set$)) (=> (fun_app$b (member$ ?v0) ?v1) (member$g (inl$b ?v0) (plus$c ?v1 ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset$) (?v1 T_dtree_sum_fset_set$) (?v2 T_dtree_sum_fset_set$)) (=> (member$d ?v0 ?v1) (member$n (inl$j ?v0) (plus$j ?v1 ?v2))) ))
(assert (forall ((?v0 N$) (?v1 N_set$) (?v2 T_dtree_sum_set$)) (=> (fun_app$i (member$f ?v0) ?v1) (member$a (inl$c ?v0) (plus$b ?v1 ?v2))) ))
(assert (forall ((?v0 N$) (?v1 N_set$) (?v2 N_set$)) (=> (fun_app$i (member$f ?v0) ?v1) (member$b (inl$d ?v0) (plus$ ?v1 ?v2))) ))
(assert (forall ((?v0 T$) (?v1 T_set$) (?v2 Dtree_set$)) (=> (member$e ?v0 ?v1) (fun_app$b (member$ (inl$ ?v0)) (plus$a ?v1 ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$) (?v2 N$) (?v3 N$)) (=> (and (finite$ ?v0) (finite$ ?v1)) (= (= (fun_app$k (node$ ?v2) ?v0) (fun_app$k (node$ ?v3) ?v1)) (and (= ?v2 ?v3) (= ?v0 ?v1)))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$r (case_sum$ ?v0) ?v1) (fun_app$r (case_sum$ ?v2) ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$t (case_sum$a ?v0) ?v1) (fun_app$t (case_sum$a ?v2) ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$)) (! (= (fun_app$q (fun_app$r (case_sum$ ?v0) ?v1) (inr$e ?v2)) (fun_app$n ?v1 ?v2)) :pattern ((fun_app$q (fun_app$r (case_sum$ ?v0) ?v1) (inr$e ?v2))))))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree$)) (! (= (fun_app$s (fun_app$t (case_sum$a ?v0) ?v1) (inr$e ?v2)) (fun_app$l ?v1 ?v2)) :pattern ((fun_app$s (fun_app$t (case_sum$a ?v0) ?v1) (inr$e ?v2))))))
(assert (forall ((?v0 Dtree$)) (finite$ (fun_app$l cont$ ?v0)) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$)) (! (= (fun_app$q (fun_app$r (case_sum$ ?v0) ?v1) (inl$e ?v2)) (fun_app$n ?v0 ?v2)) :pattern ((fun_app$q (fun_app$r (case_sum$ ?v0) ?v1) (inl$e ?v2))))))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree$)) (! (= (fun_app$s (fun_app$t (case_sum$a ?v0) ?v1) (inl$e ?v2)) (fun_app$l ?v0 ?v2)) :pattern ((fun_app$s (fun_app$t (case_sum$a ?v0) ?v1) (inl$e ?v2))))))
(assert (forall ((?v0 Dtree$)) (=> (forall ((?v1 N$) (?v2 T_dtree_sum_set$)) (=> (and (finite$ ?v2) (= ?v0 (fun_app$k (node$ ?v1) ?v2))) false) ) false) ))
(assert (forall ((?v0 T_set$) (?v1 Dtree_set$)) (= (finite$ (plus$a ?v0 ?v1)) (and (finite$a ?v0) (finite$b ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (= (finite$c (plus$d ?v0 ?v1)) (and (finite$ ?v0) (finite$ ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 T_set$)) (= (finite$d (plus$k ?v0 ?v1)) (and (finite$a ?v0) (finite$a ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 N_set$)) (= (finite$e (plus$l ?v0 ?v1)) (and (finite$a ?v0) (finite$f ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 T_set$)) (= (finite$g (plus$f ?v0 ?v1)) (and (finite$f ?v0) (finite$a ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 N_set$)) (= (finite$h (plus$ ?v0 ?v1)) (and (finite$f ?v0) (finite$f ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_set$)) (= (finite$i (plus$m ?v0 ?v1)) (and (finite$ ?v0) (finite$a ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 N_set$)) (= (finite$j (plus$c ?v0 ?v1)) (and (finite$ ?v0) (finite$f ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 T_dtree_sum_set$)) (= (finite$k (plus$n ?v0 ?v1)) (and (finite$a ?v0) (finite$ ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 T_dtree_sum_set$)) (= (finite$l (plus$b ?v0 ?v1)) (and (finite$f ?v0) (finite$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 N_set$)) (=> (finite$j (plus$c ?v0 ?v1)) (finite$ ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_fset_set$) (?v1 T_dtree_sum_fset_set$)) (=> (finite$m (plus$j ?v0 ?v1)) (finite$n ?v0)) ))
(assert (forall ((?v0 N_set$) (?v1 T_dtree_sum_set$)) (=> (finite$l (plus$b ?v0 ?v1)) (finite$f ?v0)) ))
(assert (forall ((?v0 N_set$) (?v1 N_set$)) (=> (finite$h (plus$ ?v0 ?v1)) (finite$f ?v0)) ))
(assert (forall ((?v0 T_set$) (?v1 Dtree_set$)) (=> (finite$ (plus$a ?v0 ?v1)) (finite$a ?v0)) ))
(assert (forall ((?v0 N_set$) (?v1 T_dtree_sum_set$)) (=> (finite$l (plus$b ?v0 ?v1)) (finite$ ?v1)) ))
(assert (forall ((?v0 T_dtree_sum_fset_set$) (?v1 T_dtree_sum_fset_set$)) (=> (finite$m (plus$j ?v0 ?v1)) (finite$n ?v1)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 N_set$)) (=> (finite$j (plus$c ?v0 ?v1)) (finite$f ?v1)) ))
(assert (forall ((?v0 N_set$) (?v1 N_set$)) (=> (finite$h (plus$ ?v0 ?v1)) (finite$f ?v1)) ))
(assert (forall ((?v0 T_set$) (?v1 Dtree_set$)) (=> (finite$ (plus$a ?v0 ?v1)) (finite$b ?v1)) ))
(assert (forall ((?v0 T_set$) (?v1 Dtree_set$)) (=> (and (finite$a ?v0) (finite$b ?v1)) (finite$ (plus$a ?v0 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (=> (and (finite$ ?v0) (finite$ ?v1)) (finite$c (plus$d ?v0 ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 T_set$)) (=> (and (finite$a ?v0) (finite$a ?v1)) (finite$d (plus$k ?v0 ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 N_set$)) (=> (and (finite$a ?v0) (finite$f ?v1)) (finite$e (plus$l ?v0 ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 T_set$)) (=> (and (finite$f ?v0) (finite$a ?v1)) (finite$g (plus$f ?v0 ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 N_set$)) (=> (and (finite$f ?v0) (finite$f ?v1)) (finite$h (plus$ ?v0 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_set$)) (=> (and (finite$ ?v0) (finite$a ?v1)) (finite$i (plus$m ?v0 ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 N_set$)) (=> (and (finite$ ?v0) (finite$f ?v1)) (finite$j (plus$c ?v0 ?v1))) ))
(assert (forall ((?v0 T_set$) (?v1 T_dtree_sum_set$)) (=> (and (finite$a ?v0) (finite$ ?v1)) (finite$k (plus$n ?v0 ?v1))) ))
(assert (forall ((?v0 N_set$) (?v1 T_dtree_sum_set$)) (=> (and (finite$f ?v0) (finite$ ?v1)) (finite$l (plus$b ?v0 ?v1))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (=> (= (fun_app$u (comp$ ?v0) uug$) ?v1) (= (= ?v2 (fun_app$u (comp$ ?v0) uuh$)) (= (fun_app$r (case_sum$ ?v1) ?v2) ?v0))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$)) (=> (= (fun_app$v (comp$a ?v0) uug$) ?v1) (= (= ?v2 (fun_app$v (comp$a ?v0) uuh$)) (= (fun_app$t (case_sum$a ?v1) ?v2) ?v0))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$w (comp$b ?v0) (fun_app$r (case_sum$ ?v1) ?v2)) (fun_app$t (case_sum$a (fun_app$x (comp$c ?v0) ?v1)) (fun_app$x (comp$c ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$y (comp$d ?v0) (fun_app$r (case_sum$ ?v1) ?v2)) (fun_app$r (case_sum$ (fun_app$z (comp$e ?v0) ?v1)) (fun_app$z (comp$e ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$)) (= (fun_app$aa (comp$f ?v0) (fun_app$t (case_sum$a ?v1) ?v2)) (fun_app$r (case_sum$ (fun_app$ab (comp$g ?v0) ?v1)) (fun_app$ab (comp$g ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$)) (= (fun_app$ac (comp$h ?v0) (fun_app$t (case_sum$a ?v1) ?v2)) (fun_app$t (case_sum$a (fun_app$ad (comp$i ?v0) ?v1)) (fun_app$ad (comp$i ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_sum_T_dtree_sum_fset_fun$)) (= (comp$j ?v0 (case_sum$b ?v1 ?v2)) (case_sum$c (fun_app$x (comp$c ?v0) ?v1) (fun_app$w (comp$b ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (comp$k ?v0 (case_sum$d ?v1 ?v2)) (case_sum$e (fun_app$w (comp$b ?v0) ?v1) (fun_app$x (comp$c ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_fset_fun$)) (= (comp$l ?v0 (case_sum$f ?v1 ?v2)) (case_sum$g (fun_app$x (comp$c ?v0) ?v1) (fun_app$ae (comp$m ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (comp$n ?v0 (case_sum$h ?v1 ?v2)) (case_sum$i (fun_app$ae (comp$m ?v0) ?v1) (fun_app$x (comp$c ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (= (comp$o ?v0 (case_sum$g ?v1 ?v2)) (case_sum$g (fun_app$ad (comp$i ?v0) ?v1) (fun_app$af (comp$p ?v0) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$)) (= (comp$q ?v0 (case_sum$i ?v1 ?v2)) (case_sum$i (fun_app$af (comp$p ?v0) ?v1) (fun_app$ad (comp$i ?v0) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ag (comp$r ?v0) ?v1) (fun_app$z (comp$e ?v2) ?v3)) (= (fun_app$ae (comp$m ?v4) ?v2) ?v5)) (= (fun_app$ah (comp$s (fun_app$x (comp$c ?v4) ?v0)) ?v1) (fun_app$x (comp$c ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 Dtree_dtree_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$z (comp$e ?v0) ?v1) (fun_app$ag (comp$r ?v2) ?v3)) (= (fun_app$x (comp$c ?v4) ?v2) ?v5)) (= (fun_app$x (comp$c (fun_app$ae (comp$m ?v4) ?v0)) ?v1) (fun_app$ah (comp$s ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$af (comp$p ?v4) ?v2) ?v5)) (= (fun_app$x (comp$c (fun_app$af (comp$p ?v4) ?v0)) ?v1) (fun_app$x (comp$c ?v5) ?v3))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ag (comp$r ?v0) ?v1) (fun_app$ab (comp$g ?v2) ?v3)) (= (fun_app$ai (comp$t ?v4) ?v2) ?v5)) (= (fun_app$ah (comp$s (fun_app$x (comp$c ?v4) ?v0)) ?v1) (fun_app$ad (comp$i ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 Dtree_dtree_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ab (comp$g ?v0) ?v1) (fun_app$ag (comp$r ?v2) ?v3)) (= (fun_app$x (comp$c ?v4) ?v2) ?v5)) (= (fun_app$ad (comp$i (fun_app$ai (comp$t ?v4) ?v0)) ?v1) (fun_app$ah (comp$s ?v5) ?v3))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ah (comp$s ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$af (comp$p ?v4) ?v2) ?v5)) (= (fun_app$ah (comp$s (fun_app$ad (comp$i ?v4) ?v0)) ?v1) (fun_app$x (comp$c ?v5) ?v3))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ah (comp$s ?v0) ?v1) (fun_app$ad (comp$i ?v2) ?v3)) (= (fun_app$aj (comp$u ?v4) ?v2) ?v5)) (= (fun_app$ah (comp$s (fun_app$ad (comp$i ?v4) ?v0)) ?v1) (fun_app$ad (comp$i ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_fun$) (?v4 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$ah (comp$s ?v2) ?v3)) (= (fun_app$ad (comp$i ?v4) ?v2) ?v5)) (= (fun_app$x (comp$c (fun_app$af (comp$p ?v4) ?v0)) ?v1) (fun_app$ah (comp$s ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_fun$) (?v4 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ad (comp$i ?v0) ?v1) (fun_app$ah (comp$s ?v2) ?v3)) (= (fun_app$ad (comp$i ?v4) ?v2) ?v5)) (= (fun_app$ad (comp$i (fun_app$aj (comp$u ?v4) ?v0)) ?v1) (fun_app$ah (comp$s ?v5) ?v3))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_dtree_sum_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$u (comp$ ?v0) ?v1) (fun_app$ab (comp$g ?v2) ?v3)) (= (fun_app$ai (comp$t ?v4) ?v2) ?v5)) (= (fun_app$v (comp$a (fun_app$w (comp$b ?v4) ?v0)) ?v1) (fun_app$ad (comp$i ?v5) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 Dtree_dtree_fun$) (?v5 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$ag (comp$r ?v3) ?v4) ?v5)) (= (fun_app$x (comp$c ?v0) (fun_app$ag (comp$r ?v1) ?v4)) (fun_app$x (comp$c ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v4 Dtree_T_dtree_sum_fset_fun$) (?v5 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$af (comp$p ?v0) ?v1) (fun_app$ae (comp$m ?v2) ?v3)) (= (fun_app$z (comp$e ?v3) ?v4) ?v5)) (= (fun_app$ad (comp$i ?v0) (fun_app$x (comp$c ?v1) ?v4)) (fun_app$x (comp$c ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v4 Dtree_T_dtree_sum_fset_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ae (comp$m ?v0) ?v1) (fun_app$af (comp$p ?v2) ?v3)) (= (fun_app$x (comp$c ?v3) ?v4) ?v5)) (= (fun_app$x (comp$c ?v0) (fun_app$z (comp$e ?v1) ?v4)) (fun_app$ad (comp$i ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 Dtree_dtree_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$ad (comp$i ?v2) ?v3)) (= (fun_app$ah (comp$s ?v3) ?v4) ?v5)) (= (fun_app$x (comp$c ?v0) (fun_app$ag (comp$r ?v1) ?v4)) (fun_app$ad (comp$i ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 Dtree_dtree_fun$) (?v5 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$ad (comp$i ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$ag (comp$r ?v3) ?v4) ?v5)) (= (fun_app$ad (comp$i ?v0) (fun_app$ah (comp$s ?v1) ?v4)) (fun_app$x (comp$c ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 Dtree_dtree_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$ad (comp$i ?v0) ?v1) (fun_app$ad (comp$i ?v2) ?v3)) (= (fun_app$ah (comp$s ?v3) ?v4) ?v5)) (= (fun_app$ad (comp$i ?v0) (fun_app$ah (comp$s ?v1) ?v4)) (fun_app$ad (comp$i ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_sum_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v4 Dtree_dtree_dtree_sum_fun$) (?v5 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$ac (comp$h ?v0) ?v1) (fun_app$w (comp$b ?v2) ?v3)) (= (fun_app$u (comp$ ?v3) ?v4) ?v5)) (= (fun_app$ad (comp$i ?v0) (fun_app$v (comp$a ?v1) ?v4)) (fun_app$x (comp$c ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 Dtree_dtree_sum_dtree_fun$) (?v5 Dtree_dtree_sum_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$ak (comp$v ?v3) ?v4) ?v5)) (= (fun_app$w (comp$b ?v0) (fun_app$ak (comp$v ?v1) ?v4)) (fun_app$w (comp$b ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$) (?v4 Dtree_dtree_sum_dtree_fun$) (?v5 Dtree_dtree_sum_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$ad (comp$i ?v2) ?v3)) (= (fun_app$al (comp$w ?v3) ?v4) ?v5)) (= (fun_app$w (comp$b ?v0) (fun_app$ak (comp$v ?v1) ?v4)) (fun_app$ac (comp$h ?v2) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_sum_T_dtree_sum_set_fun$) (?v4 Dtree_dtree_dtree_sum_fun$) (?v5 Dtree_T_dtree_sum_set_fun$)) (=> (and (= (fun_app$w (comp$b ?v0) ?v1) (fun_app$ac (comp$h ?v2) ?v3)) (= (fun_app$v (comp$a ?v3) ?v4) ?v5)) (= (fun_app$x (comp$c ?v0) (fun_app$u (comp$ ?v1) ?v4)) (fun_app$ad (comp$i ?v2) ?v5))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$ag (comp$r ?v0) ?v1) ?v2) (= (fun_app$ah (comp$s (fun_app$x (comp$c ?v3) ?v0)) ?v1) (fun_app$x (comp$c ?v3) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$z (comp$e ?v0) ?v1) ?v2) (= (fun_app$x (comp$c (fun_app$ae (comp$m ?v3) ?v0)) ?v1) (fun_app$x (comp$c ?v3) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) ?v2) (= (fun_app$x (comp$c (fun_app$af (comp$p ?v3) ?v0)) ?v1) (fun_app$ad (comp$i ?v3) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (= (fun_app$ah (comp$s ?v0) ?v1) ?v2) (= (fun_app$ah (comp$s (fun_app$ad (comp$i ?v3) ?v0)) ?v1) (fun_app$ad (comp$i ?v3) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_sum_dtree_fun$) (?v2 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$ak (comp$v ?v0) ?v1) ?v2) (= (fun_app$al (comp$w (fun_app$x (comp$c ?v3) ?v0)) ?v1) (fun_app$w (comp$b ?v3) ?v2))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_dtree_sum_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$u (comp$ ?v0) ?v1) ?v2) (= (fun_app$v (comp$a (fun_app$w (comp$b ?v3) ?v0)) ?v1) (fun_app$x (comp$c ?v3) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 T_dtree_sum_fset_dtree_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$am (comp$x ?v0) ?v1) ?v2) (= (fun_app$an (comp$y (fun_app$x (comp$c ?v3) ?v0)) ?v1) (fun_app$ae (comp$m ?v3) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_dtree_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (= (fun_app$an (comp$y ?v0) ?v1) ?v2) (= (fun_app$an (comp$y (fun_app$ad (comp$i ?v3) ?v0)) ?v1) (fun_app$af (comp$p ?v3) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$ab (comp$g ?v0) ?v1) ?v2) (= (fun_app$ad (comp$i (fun_app$ai (comp$t ?v3) ?v0)) ?v1) (fun_app$x (comp$c ?v3) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$)) (=> (= (fun_app$ad (comp$i ?v0) ?v1) ?v2) (= (fun_app$ad (comp$i (fun_app$aj (comp$u ?v3) ?v0)) ?v1) (fun_app$ad (comp$i ?v3) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_fun$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) ?v2) (= (fun_app$x (comp$c ?v0) (fun_app$ag (comp$r ?v1) ?v3)) (fun_app$ah (comp$s ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$)) (=> (= (fun_app$af (comp$p ?v0) ?v1) ?v2) (= (fun_app$ad (comp$i ?v0) (fun_app$x (comp$c ?v1) ?v3)) (fun_app$x (comp$c ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$)) (=> (= (fun_app$ae (comp$m ?v0) ?v1) ?v2) (= (fun_app$x (comp$c ?v0) (fun_app$z (comp$e ?v1) ?v3)) (fun_app$x (comp$c ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_fun$)) (=> (= (fun_app$ad (comp$i ?v0) ?v1) ?v2) (= (fun_app$ad (comp$i ?v0) (fun_app$ah (comp$s ?v1) ?v3)) (fun_app$ah (comp$s ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_sum_dtree_fun$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) ?v2) (= (fun_app$w (comp$b ?v0) (fun_app$ak (comp$v ?v1) ?v3)) (fun_app$al (comp$w ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_sum_T_dtree_sum_set_fun$) (?v3 Dtree_dtree_dtree_sum_fun$)) (=> (= (fun_app$w (comp$b ?v0) ?v1) ?v2) (= (fun_app$x (comp$c ?v0) (fun_app$u (comp$ ?v1) ?v3)) (fun_app$v (comp$a ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_set_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$)) (=> (= (fun_app$ai (comp$t ?v0) ?v1) ?v2) (= (fun_app$x (comp$c ?v0) (fun_app$ab (comp$g ?v1) ?v3)) (fun_app$ad (comp$i ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_set_fun$)) (=> (= (fun_app$aj (comp$u ?v0) ?v1) ?v2) (= (fun_app$ad (comp$i ?v0) (fun_app$ad (comp$i ?v1) ?v3)) (fun_app$ad (comp$i ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_fset_dtree_fun$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) ?v2) (= (fun_app$ae (comp$m ?v0) (fun_app$am (comp$x ?v1) ?v3)) (fun_app$an (comp$y ?v2) ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 T_dtree_sum_fset_dtree_fun$)) (=> (= (fun_app$ad (comp$i ?v0) ?v1) ?v2) (= (fun_app$af (comp$p ?v0) (fun_app$an (comp$y ?v1) ?v3)) (fun_app$an (comp$y ?v2) ?v3))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_sum$)) (=> (= (fun_app$u (comp$ ?v0) uug$) ?v1) (= (fun_app$q ?v0 ?v2) (fun_app$q (fun_app$r (case_sum$ ?v1) (fun_app$u (comp$ ?v0) uuh$)) ?v2))) ))
(assert (forall ((?v0 Dtree_dtree_sum_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree_dtree_sum$)) (=> (= (fun_app$v (comp$a ?v0) uug$) ?v1) (= (fun_app$s ?v0 ?v2) (fun_app$s (fun_app$t (case_sum$a ?v1) (fun_app$v (comp$a ?v0) uuh$)) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$u (comp$ (fun_app$r (case_sum$ ?v0) ?v1)) uug$) ?v0) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$)) (= (fun_app$v (comp$a (fun_app$t (case_sum$a ?v0) ?v1)) uug$) ?v0) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$u (comp$ (fun_app$r (case_sum$ ?v0) ?v1)) uuh$) ?v1) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$)) (= (fun_app$v (comp$a (fun_app$t (case_sum$a ?v0) ?v1)) uuh$) ?v1) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_sum$)) (! (= (fun_app$s (fun_app$w (comp$b ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$q ?v1 ?v2))) :pattern ((fun_app$s (fun_app$w (comp$b ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset$)) (! (= (fun_app$ao (fun_app$ae (comp$m ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$ap ?v1 ?v2))) :pattern ((fun_app$ao (fun_app$ae (comp$m ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_set_fun$) (?v2 Dtree$)) (! (= (fun_app$l (fun_app$ad (comp$i ?v0) ?v1) ?v2) (fun_app$aq ?v0 (fun_app$l ?v1 ?v2))) :pattern ((fun_app$l (fun_app$ad (comp$i ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset$)) (! (= (fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2) (fun_app$aq ?v0 (fun_app$ao ?v1 ?v2))) :pattern ((fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$) (?v1 T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$) (?v2 T_dtree_sum_set_dtree_fun$)) (! (= (fun_app$ar (fun_app$as (comp$z ?v0) ?v1) ?v2) (fun_app$at ?v0 (fun_app$au ?v1 ?v2))) :pattern ((fun_app$ar (fun_app$as (comp$z ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$)) (! (= (fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$n ?v1 ?v2))) :pattern ((fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v4 Dtree_dtree_sum_T_dtree_sum_fset_fun$) (?v5 Dtree_dtree_sum$)) (=> (= (fun_app$aq ?v0 (fun_app$ao ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$q ?v4 ?v5))) (= (fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2) (fun_app$s (fun_app$w (comp$b ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v5 T_dtree_sum_fset$)) (=> (= (fun_app$aq ?v0 (fun_app$ao ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$ap ?v4 ?v5))) (= (fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2) (fun_app$ao (fun_app$ae (comp$m ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v4 Dtree_T_dtree_sum_set_fun$) (?v5 Dtree$)) (=> (= (fun_app$aq ?v0 (fun_app$ao ?v1 ?v2)) (fun_app$aq ?v3 (fun_app$l ?v4 ?v5))) (= (fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2) (fun_app$l (fun_app$ad (comp$i ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset$) (?v3 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v4 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v5 T_dtree_sum_fset$)) (=> (= (fun_app$aq ?v0 (fun_app$ao ?v1 ?v2)) (fun_app$aq ?v3 (fun_app$ao ?v4 ?v5))) (= (fun_app$ao (fun_app$af (comp$p ?v0) ?v1) ?v2) (fun_app$ao (fun_app$af (comp$p ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$) (?v1 T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$) (?v2 T_dtree_sum_set_dtree_fun$) (?v3 T_dtree_sum_fset_T_dtree_sum_fset_fun_dtree_T_dtree_sum_set_fun_fun$) (?v4 T_dtree_sum_set_dtree_fun_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$) (?v5 T_dtree_sum_set_dtree_fun$)) (=> (= (fun_app$at ?v0 (fun_app$au ?v1 ?v2)) (fun_app$at ?v3 (fun_app$au ?v4 ?v5))) (= (fun_app$ar (fun_app$as (comp$z ?v0) ?v1) ?v2) (fun_app$ar (fun_app$as (comp$z ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v4 Dtree_T_dtree_sum_fset_fun$) (?v5 Dtree$)) (=> (= (fun_app$ao ?v0 (fun_app$n ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$n ?v4 ?v5))) (= (fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2) (fun_app$l (fun_app$x (comp$c ?v3) ?v4) ?v5))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$) (?v3 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v4 Dtree_T_dtree_sum_fset_fun$)) (=> (= (fun_app$ao ?v0 (fun_app$n ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$n ?v4 ?v2))) (= (fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2) (fun_app$l (fun_app$x (comp$c ?v3) ?v4) ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 Dtree_dtree_fun$) (?v2 Dtree$) (?v3 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v4 Dtree_T_dtree_sum_fset_fun$) (?v5 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$n ?v0 (fun_app$av ?v1 ?v2)) (fun_app$ap ?v3 (fun_app$n ?v4 ?v2))) (= (fun_app$l (fun_app$ah (comp$s (fun_app$x (comp$c ?v5) ?v0)) ?v1) ?v2) (fun_app$l (fun_app$x (comp$c (fun_app$ae (comp$m ?v5) ?v3)) ?v4) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 Dtree_dtree_fun$) (?v5 T_dtree_sum_fset_T_dtree_sum_set_fun$)) (=> (= (fun_app$ap ?v0 (fun_app$n ?v1 ?v2)) (fun_app$n ?v3 (fun_app$av ?v4 ?v2))) (= (fun_app$l (fun_app$x (comp$c (fun_app$ae (comp$m ?v5) ?v0)) ?v1) ?v2) (fun_app$l (fun_app$ah (comp$s (fun_app$x (comp$c ?v5) ?v3)) ?v4) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_set_fun$) (?v3 Dtree$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) ?v2) (= (fun_app$ao ?v0 (fun_app$n ?v1 ?v3)) (fun_app$l ?v2 ?v3))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_fun$)) (= (fun_app$ah (comp$s (fun_app$x (comp$c ?v0) ?v1)) ?v2) (fun_app$x (comp$c ?v0) (fun_app$ag (comp$r ?v1) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$x (comp$c (fun_app$af (comp$p ?v0) ?v1)) ?v2) (fun_app$ad (comp$i ?v0) (fun_app$x (comp$c ?v1) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$x (comp$c (fun_app$ae (comp$m ?v0) ?v1)) ?v2) (fun_app$x (comp$c ?v0) (fun_app$z (comp$e ?v1) ?v2))) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree$)) (! (= (fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$n ?v1 ?v2))) :pattern ((fun_app$l (fun_app$x (comp$c ?v0) ?v1) ?v2)))))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$)) (=> (and (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (=> (forall ((?v4 Dtree$)) (= (fun_app$ao ?v0 (fun_app$n ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$n ?v3 ?v4))) ) false)) false) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 Dtree$)) (=> (= (fun_app$x (comp$c ?v0) ?v1) (fun_app$x (comp$c ?v2) ?v3)) (= (fun_app$ao ?v0 (fun_app$n ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$n ?v3 ?v4)))) ))
(assert (forall ((?v0 T_dtree_sum_set_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$ad (comp$i ?v0) (fun_app$x (comp$c ?v1) ?v2)) (fun_app$x (comp$c (fun_app$af (comp$p ?v0) ?v1)) ?v2)) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 Dtree_T_dtree_sum_fset_fun$) (?v2 Dtree_dtree_fun$)) (= (fun_app$x (comp$c ?v0) (fun_app$ag (comp$r ?v1) ?v2)) (fun_app$ah (comp$s (fun_app$x (comp$c ?v0) ?v1)) ?v2)) ))
(assert (forall ((?v0 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_fset_fun$) (?v2 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$x (comp$c ?v0) (fun_app$z (comp$e ?v1) ?v2)) (fun_app$x (comp$c (fun_app$ae (comp$m ?v0) ?v1)) ?v2)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T$)) (=> (and (fun_app$g (setlp$ ?v0) ?v1) (forall ((?v2 T$)) (=> (and (= ?v1 ?v2) (= ?v0 (inl$ ?v2))) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T$)) (=> (= ?v0 (inl$ ?v1)) (fun_app$g (setlp$ ?v0) ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T$)) (= (fun_app$g (setlp$ ?v0) ?v1) (exists ((?v2 T$)) (and (= ?v1 ?v2) (= ?v0 (inl$ ?v2))) )) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 Dtree$)) (=> (and (fun_app$e (setrp$ ?v0) ?v1) (forall ((?v2 Dtree$)) (=> (and (= ?v1 ?v2) (= ?v0 (inr$ ?v2))) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 Dtree$)) (= (fun_app$e (setrp$ ?v0) ?v1) (exists ((?v2 Dtree$)) (and (= ?v1 ?v2) (= ?v0 (inr$ ?v2))) )) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) (fun_app$e (setrp$ ?v0) ?v1)) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$)) (= (fun_app$as (comp$z (fun_app$aw (map_fun$ ?v0) ?v1)) (fun_app$ax (map_fun$a ?v2) ?v3)) (fun_app$ay (map_fun$b (fun_app$x (comp$c ?v2) ?v0)) (fun_app$x (comp$c ?v1) ?v3))) ))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 T$) (?v3 Dtree$)) (! (= (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inl$ ?v2)) (inr$ ?v3)) false) :pattern ((fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inl$ ?v2)) (inr$ ?v3))))))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 Dtree$) (?v3 T$)) (! (= (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inr$ ?v2)) (inl$ ?v3)) false) :pattern ((fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inr$ ?v2)) (inl$ ?v3))))))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 Dtree$) (?v3 Dtree$)) (! (= (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inr$ ?v2)) (inr$ ?v3)) (fun_app$e (fun_app$bb ?v1 ?v2) ?v3)) :pattern ((fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inr$ ?v2)) (inr$ ?v3))))))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 T$) (?v3 T$)) (! (= (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inl$ ?v2)) (inl$ ?v3)) (fun_app$g (fun_app$bc ?v0 ?v2) ?v3)) :pattern ((fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) (inl$ ?v2)) (inl$ ?v3))))))
(assert (forall ((?v0 Dtree_dtree_bool_fun_fun$) (?v1 Dtree$) (?v2 Dtree$) (?v3 T_T_bool_fun_fun$)) (=> (fun_app$e (fun_app$bb ?v0 ?v1) ?v2) (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v3) ?v0) (inr$ ?v1)) (inr$ ?v2))) ))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 T$) (?v2 T$) (?v3 Dtree_dtree_bool_fun_fun$)) (=> (fun_app$g (fun_app$bc ?v0 ?v1) ?v2) (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v3) (inl$ ?v1)) (inl$ ?v2))) ))
(assert (forall ((?v0 Dtree_T_dtree_sum_fset_fun$) (?v1 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v2 T_dtree_sum_fset_T_dtree_sum_set_fun$) (?v3 Dtree_T_dtree_sum_fset_fun$) (?v4 T_dtree_sum_set_dtree_fun$)) (= (fun_app$at (fun_app$aw (map_fun$ ?v0) ?v1) (fun_app$au (fun_app$ax (map_fun$a ?v2) ?v3) ?v4)) (fun_app$ar (fun_app$ay (map_fun$b (fun_app$x (comp$c ?v2) ?v0)) (fun_app$x (comp$c ?v1) ?v3)) ?v4)) ))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum$)) (=> (and (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) ?v2) ?v3) (and (forall ((?v4 T$) (?v5 T$)) (=> (and (= ?v2 (inl$ ?v4)) (and (= ?v3 (inl$ ?v5)) (fun_app$g (fun_app$bc ?v0 ?v4) ?v5))) false) ) (forall ((?v4 Dtree$) (?v5 Dtree$)) (=> (and (= ?v2 (inr$ ?v4)) (and (= ?v3 (inr$ ?v5)) (fun_app$e (fun_app$bb ?v1 ?v4) ?v5))) false) ))) false) ))
(assert (forall ((?v0 T_T_bool_fun_fun$) (?v1 Dtree_dtree_bool_fun_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum$)) (= (fun_app$a (fun_app$az (fun_app$ba (rel_sum$ ?v0) ?v1) ?v2) ?v3) (or (exists ((?v4 T$) (?v5 T$)) (and (= ?v2 (inl$ ?v4)) (and (= ?v3 (inl$ ?v5)) (fun_app$g (fun_app$bc ?v0 ?v4) ?v5))) ) (exists ((?v4 Dtree$) (?v5 Dtree$)) (and (= ?v2 (inr$ ?v4)) (and (= ?v3 (inr$ ?v5)) (fun_app$e (fun_app$bb ?v1 ?v4) ?v5))) ))) ))
(assert (= cont$ (fun_app$x (comp$c fset$) ccont$)))
(assert (forall ((?v0 T_dtree_sum$)) (=> (and (=> (= ?v0 (inl$ (projl$ ?v0))) false) (=> (= ?v0 (inr$ (projr$ ?v0))) false)) false) ))
(assert (forall ((?v0 Dtree$)) (! (= (projr$ (inr$ ?v0)) ?v0) :pattern ((inr$ ?v0)))))
(assert (forall ((?v0 T$)) (! (= (projl$ (inl$ ?v0)) ?v0) :pattern ((inl$ ?v0)))))
(assert (forall ((?v0 T_dtree_sum_fset$)) (finite$ (fun_app$ao fset$ ?v0)) ))
(assert (forall ((?v0 T_dtree_sum$)) (=> (isl$ ?v0) (= (inl$ (projl$ ?v0)) ?v0)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$)) (= (finite$ (fun_app$aq (insert$ ?v0) ?v1)) (finite$ ?v1)) ))
(assert (forall ((?v0 T_dtree_sum$)) (=> (not (isl$ ?v0)) (= (inr$ (projr$ ?v0)) ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum$)) (=> (finite$ ?v0) (finite$ (fun_app$aq (insert$ ?v1) ?v0))) ))
(assert (forall ((?v0 Dtree$)) (not (isl$ (inr$ ?v0))) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) (not (isl$ ?v0))) ))
(assert (forall ((?v0 T$)) (isl$ (inl$ ?v0)) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T$)) (=> (= ?v0 (inl$ ?v1)) (isl$ ?v0)) ))
(assert (forall ((?v0 T_dtree_sum$)) (= (isl$ ?v0) (exists ((?v1 T$)) (= ?v0 (inl$ ?v1)) )) ))
(assert (forall ((?v0 N$) (?v1 T_dtree_sum_set$)) (! (= (fun_app$k (node$ ?v0) ?v1) (fun_app$m (nNode$ ?v0) (fun_app$bd (fun_app$be (the_inv_into$ top$) fset$) ?v1))) :pattern ((fun_app$k (node$ ?v0) ?v1)))))
(assert (= (plus$j top$ top$) top$a))
(assert (= (finite$c top$b) (and (finite$ top$c) (finite$ top$c))))
(assert (= (finite$ top$c) (and (finite$a top$d) (finite$b top$e))))
(assert (= (finite$o top$f) (and (finite$ top$c) (finite$n top$))))
(assert (= (finite$p top$g) (and (finite$n top$) (finite$ top$c))))
(assert (= (finite$m top$a) (and (finite$n top$) (finite$n top$))))
(assert (forall ((?v0 T_dtree_sum_set$)) (=> (finite$ ?v0) (= (fun_app$ao fset$ (fun_app$bd (fun_app$be (the_inv_into$ top$) fset$) ?v0)) ?v0)) ))
(assert (forall ((?v0 N_set$)) (=> (and (not (finite$f top$h)) (finite$f ?v0)) (exists ((?v1 N$)) (not (fun_app$i (member$f ?v1) ?v0)) )) ))
(assert (forall ((?v0 T_dtree_sum_set$)) (=> (and (not (finite$ top$c)) (finite$ ?v0)) (exists ((?v1 T_dtree_sum$)) (not (fun_app$b (member$ ?v1) ?v0)) )) ))
(assert (forall ((?v0 T_dtree_sum_fset_set$)) (=> (and (not (finite$n top$)) (finite$n ?v0)) (exists ((?v1 T_dtree_sum_fset$)) (not (member$d ?v1 ?v0)) )) ))
(assert (finite$ bot$))
(assert (= (finite$q top$i) (and (finite$ top$c) (finite$ top$c))))
(assert (= (finite$r top$j) (and (finite$ top$c) (finite$n top$))))
(assert (= (finite$s top$k) (and (finite$n top$) (finite$ top$c))))
(assert (= (finite$t top$l) (and (finite$n top$) (finite$n top$))))
(assert (= (finite$u top$m) (finite$ top$c)))
(assert (= (finite$v top$n) (finite$n top$)))
(assert (=> (and (finite$ top$c) (finite$ top$c)) (finite$q top$i)))
(assert (=> (and (finite$ top$c) (finite$n top$)) (finite$r top$j)))
(assert (=> (and (finite$n top$) (finite$ top$c)) (finite$s top$k)))
(assert (=> (and (finite$n top$) (finite$n top$)) (finite$t top$l)))
(assert (forall ((?v0 T_dtree_sum_set$)) (= (finite$ ?v0) (or (= ?v0 bot$) (exists ((?v1 T_dtree_sum_set$) (?v2 T_dtree_sum$)) (and (= ?v0 (fun_app$aq (insert$ ?v2) ?v1)) (finite$ ?v1)) ))) ))
(assert (forall ((?v0 N_set_bool_fun$) (?v1 N_set$)) (=> (and (forall ((?v2 N_set$)) (=> (not (finite$f ?v2)) (fun_app$i ?v0 ?v2)) ) (and (fun_app$i ?v0 bot$a) (forall ((?v2 N$) (?v3 N_set$)) (=> (and (finite$f ?v3) (and (not (fun_app$i (member$f ?v2) ?v3)) (fun_app$i ?v0 ?v3))) (fun_app$i ?v0 (insert$a ?v2 ?v3))) ))) (fun_app$i ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum_set_bool_fun$) (?v1 T_dtree_sum_set$)) (=> (and (forall ((?v2 T_dtree_sum_set$)) (=> (not (finite$ ?v2)) (fun_app$b ?v0 ?v2)) ) (and (fun_app$b ?v0 bot$) (forall ((?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (finite$ ?v3) (and (not (fun_app$b (member$ ?v2) ?v3)) (fun_app$b ?v0 ?v3))) (fun_app$b ?v0 (fun_app$aq (insert$ ?v2) ?v3))) ))) (fun_app$b ?v0 ?v1)) ))
(assert (forall ((?v0 T_dtree_sum_set$)) (=> (and (finite$ ?v0) (and (=> (= ?v0 bot$) false) (forall ((?v1 T_dtree_sum_set$) (?v2 T_dtree_sum$)) (=> (and (= ?v0 (fun_app$aq (insert$ ?v2) ?v1)) (finite$ ?v1)) false) ))) false) ))
(assert (forall ((?v0 N_set$) (?v1 N_set_bool_fun$)) (=> (and (finite$f ?v0) (and (not (= ?v0 bot$a)) (and (forall ((?v2 N$)) (fun_app$i ?v1 (insert$a ?v2 bot$a)) ) (forall ((?v2 N$) (?v3 N_set$)) (=> (and (finite$f ?v3) (and (not (= ?v3 bot$a)) (and (not (fun_app$i (member$f ?v2) ?v3)) (fun_app$i ?v1 ?v3)))) (fun_app$i ?v1 (insert$a ?v2 ?v3))) )))) (fun_app$i ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_bool_fun$)) (=> (and (finite$ ?v0) (and (not (= ?v0 bot$)) (and (forall ((?v2 T_dtree_sum$)) (fun_app$b ?v1 (fun_app$aq (insert$ ?v2) bot$)) ) (forall ((?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (finite$ ?v3) (and (not (= ?v3 bot$)) (and (not (fun_app$b (member$ ?v2) ?v3)) (fun_app$b ?v1 ?v3)))) (fun_app$b ?v1 (fun_app$aq (insert$ ?v2) ?v3))) )))) (fun_app$b ?v1 ?v0)) ))
(assert (forall ((?v0 N_set$) (?v1 N_set_bool_fun$)) (=> (and (finite$f ?v0) (and (fun_app$i ?v1 bot$a) (forall ((?v2 N$) (?v3 N_set$)) (=> (and (finite$f ?v3) (and (not (fun_app$i (member$f ?v2) ?v3)) (fun_app$i ?v1 ?v3))) (fun_app$i ?v1 (insert$a ?v2 ?v3))) ))) (fun_app$i ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_bool_fun$)) (=> (and (finite$ ?v0) (and (fun_app$b ?v1 bot$) (forall ((?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (finite$ ?v3) (and (not (fun_app$b (member$ ?v2) ?v3)) (fun_app$b ?v1 ?v3))) (fun_app$b ?v1 (fun_app$aq (insert$ ?v2) ?v3))) ))) (fun_app$b ?v1 ?v0)) ))
(assert (= (finite$w top$o) (finite$ top$c)))
(assert (= (finite$x top$p) (finite$n top$)))
(assert (forall ((?v0 T_dtree_sum_set$)) (=> (not (finite$ ?v0)) (not (= ?v0 bot$))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (=> (finite$ ?v0) (finite$ (fun_app$aq (minus$ ?v0) ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (=> (finite$ ?v0) (= (finite$ (fun_app$aq (minus$ ?v1) ?v0)) (finite$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum$) (?v2 T_dtree_sum_set$)) (= (finite$ (fun_app$aq (minus$ ?v0) (fun_app$aq (insert$ ?v1) ?v2))) (finite$ (fun_app$aq (minus$ ?v0) ?v2))) ))
(assert (forall ((?v0 N_set_bool_fun$) (?v1 N_set$)) (=> (and (fun_app$i ?v0 ?v1) (forall ((?v2 N_set$)) (=> (fun_app$i ?v0 ?v2) (exists ((?v3 N$)) (and (fun_app$i (member$f ?v3) ?v2) (or (fun_app$i ?v0 (minus$a ?v2 (insert$a ?v3 bot$a))) (not (finite$f (minus$a ?v2 (insert$a ?v3 bot$a)))))) )) )) (not (finite$f ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set_bool_fun$) (?v1 T_dtree_sum_set$)) (=> (and (fun_app$b ?v0 ?v1) (forall ((?v2 T_dtree_sum_set$)) (=> (fun_app$b ?v0 ?v2) (exists ((?v3 T_dtree_sum$)) (and (fun_app$b (member$ ?v3) ?v2) (or (fun_app$b ?v0 (fun_app$aq (minus$ ?v2) (fun_app$aq (insert$ ?v3) bot$))) (not (finite$ (fun_app$aq (minus$ ?v2) (fun_app$aq (insert$ ?v3) bot$)))))) )) )) (not (finite$ ?v1))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum$)) (=> (not (finite$ ?v0)) (not (finite$ (fun_app$aq (minus$ ?v0) (fun_app$aq (insert$ ?v1) bot$))))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (=> (and (finite$ ?v0) (not (finite$ ?v1))) (not (finite$ (fun_app$aq (minus$ ?v1) ?v0)))) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$)) (! (=> (finite$ ?v0) (= (fun_app$aq (minus$ ?v1) ?v0) (fun_app$aq (fun_app$bf (fold$ remove$) ?v1) ?v0))) :pattern ((fun_app$aq (minus$ ?v1) ?v0)))))
(assert (forall ((?v0 N_set$) (?v1 N_set_bool_fun$)) (=> (and (finite$f ?v0) (and (fun_app$i ?v1 ?v0) (forall ((?v2 N$) (?v3 N_set$)) (=> (and (finite$f ?v3) (and (fun_app$i (member$f ?v2) ?v3) (fun_app$i ?v1 ?v3))) (fun_app$i ?v1 (minus$a ?v3 (insert$a ?v2 bot$a)))) ))) (fun_app$i ?v1 bot$a)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_bool_fun$)) (=> (and (finite$ ?v0) (and (fun_app$b ?v1 ?v0) (forall ((?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (finite$ ?v3) (and (fun_app$b (member$ ?v2) ?v3) (fun_app$b ?v1 ?v3))) (fun_app$b ?v1 (fun_app$aq (minus$ ?v3) (fun_app$aq (insert$ ?v2) bot$)))) ))) (fun_app$b ?v1 bot$)) ))
(assert (forall ((?v0 T$)) (! (= (setl$ (inl$ ?v0)) (insert$b ?v0 bot$b)) :pattern ((inl$ ?v0)))))
(assert (forall ((?v0 T$) (?v1 T_dtree_sum$)) (= (member$e ?v0 (setl$ ?v1)) (exists ((?v2 T$)) (and (= ?v0 ?v2) (= ?v1 (inl$ ?v2))) )) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 T$)) (=> (= ?v0 (inl$ ?v1)) (member$e ?v1 (setl$ ?v0))) ))
(assert (forall ((?v0 T$) (?v1 T_dtree_sum$)) (=> (and (member$e ?v0 (setl$ ?v1)) (forall ((?v2 T$)) (=> (and (= ?v0 ?v2) (= ?v1 (inl$ ?v2))) false) )) false) ))
(assert (forall ((?v0 Dtree$)) (! (= (setl$ (inr$ ?v0)) bot$b) :pattern ((inr$ ?v0)))))
(assert (forall ((?v0 Dtree$)) (! (= (setr$ (inr$ ?v0)) (insert$c ?v0 bot$c)) :pattern ((inr$ ?v0)))))
(assert (forall ((?v0 N_set$) (?v1 N_set_bool_fun$)) (=> (and (finite$f ?v0) (and (fun_app$i ?v1 bot$a) (forall ((?v2 N_set$)) (=> (and (fun_app$i (less$ ?v2) ?v0) (fun_app$i ?v1 ?v2)) (exists ((?v3 N$)) (and (fun_app$i (member$f ?v3) (minus$a ?v0 ?v2)) (fun_app$i ?v1 (insert$a ?v3 ?v2))) )) ))) (fun_app$i ?v1 ?v0)) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_bool_fun$)) (=> (and (finite$ ?v0) (and (fun_app$b ?v1 bot$) (forall ((?v2 T_dtree_sum_set$)) (=> (and (fun_app$b (less$a ?v2) ?v0) (fun_app$b ?v1 ?v2)) (exists ((?v3 T_dtree_sum$)) (and (fun_app$b (member$ ?v3) (fun_app$aq (minus$ ?v0) ?v2)) (fun_app$b ?v1 (fun_app$aq (insert$ ?v3) ?v2))) )) ))) (fun_app$b ?v1 ?v0)) ))
(assert (forall ((?v0 Dtree$) (?v1 T_dtree_sum$)) (=> (and (member$c ?v0 (setr$ ?v1)) (forall ((?v2 Dtree$)) (=> (and (= ?v0 ?v2) (= ?v1 (inr$ ?v2))) false) )) false) ))
(assert (forall ((?v0 T_dtree_sum$) (?v1 Dtree$)) (=> (= ?v0 (inr$ ?v1)) (member$c ?v1 (setr$ ?v0))) ))
(assert (forall ((?v0 Dtree$) (?v1 T_dtree_sum$)) (= (member$c ?v0 (setr$ ?v1)) (exists ((?v2 Dtree$)) (and (= ?v0 ?v2) (= ?v1 (inr$ ?v2))) )) ))
(assert (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_bool_fun$)) (=> (and (finite$ ?v0) (forall ((?v2 T_dtree_sum_set$)) (=> (and (finite$ ?v2) (forall ((?v3 T_dtree_sum_set$)) (=> (fun_app$b (less$a ?v3) ?v2) (fun_app$b ?v1 ?v3)) )) (fun_app$b ?v1 ?v2)) )) (fun_app$b ?v1 ?v0)) ))
(assert (forall ((?v0 T$)) (! (= (setr$ (inl$ ?v0)) bot$c) :pattern ((inl$ ?v0)))))
(check-sat)
(exit)

