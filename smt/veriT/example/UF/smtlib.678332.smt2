(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-sort S16 0)
(declare-sort S17 0)
(declare-sort S18 0)
(declare-sort S19 0)
(declare-sort S20 0)
(declare-sort S21 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 () S3)
(declare-fun f5 (S4 S2) S1)
(declare-fun f6 () S4)
(declare-fun f7 () S4)
(declare-fun f8 () S2)
(declare-fun f9 (S3) S2)
(declare-fun f10 (S5 S6) S1)
(declare-fun f11 (S6 S5) S1)
(declare-fun f12 (S7 S8) S1)
(declare-fun f13 (S8 S7) S1)
(declare-fun f14 (S9 S10) S1)
(declare-fun f15 (S10 S9) S1)
(declare-fun f16 (S2 S4) S1)
(declare-fun f17 (S11 S4) S12)
(declare-fun f18 () S11)
(declare-fun f19 (S13 S5) S5)
(declare-fun f20 (S14 S12) S13)
(declare-fun f21 () S14)
(declare-fun f22 (S15 S5) S9)
(declare-fun f23 (S16 S4) S15)
(declare-fun f24 (S17 S4) S16)
(declare-fun f25 () S17)
(declare-fun f26 (S18 S5) S13)
(declare-fun f27 () S18)
(declare-fun f28 (S19 S4) S5)
(declare-fun f29 () S19)
(declare-fun f30 (S20 S12) S5)
(declare-fun f31 () S20)
(declare-fun f32 (S7) S10)
(declare-fun f33 () S8)
(declare-fun f34 (S6) S6)
(declare-fun f35 (S21 S7) S6)
(declare-fun f36 (S4) S21)
(declare-fun f37 (S6) S6)
(declare-fun f38 () S4)
(declare-fun f39 () S4)
(declare-fun f40 () S5)
(declare-fun f41 () S12)
(declare-fun f42 () S16)
(declare-fun f43 () S20)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2)) (= (= (f3 f4 ?v0) f1) (and (= (f5 f6 ?v0) f1) (not (= (f5 f7 ?v0) f1))))))
(assert (= f8 (f9 f4)))
(assert (forall ((?v0 S5) (?v1 S6)) (= (= (f10 ?v0 ?v1) f1) (= (f11 ?v1 ?v0) f1))))
(assert (forall ((?v0 S7) (?v1 S8)) (= (= (f12 ?v0 ?v1) f1) (= (f13 ?v1 ?v0) f1))))
(assert (forall ((?v0 S9) (?v1 S10)) (= (= (f14 ?v0 ?v1) f1) (= (f15 ?v1 ?v0) f1))))
(assert (forall ((?v0 S4) (?v1 S2)) (= (= (f5 ?v0 ?v1) f1) (= (f16 ?v1 ?v0) f1))))
(assert (forall ((?v0 S4) (?v1 S4)) (= (= (f17 f18 ?v0) (f17 f18 ?v1)) (= ?v0 ?v1))))
(assert (forall ((?v0 S12) (?v1 S5) (?v2 S12) (?v3 S5)) (= (= (f19 (f20 f21 ?v0) ?v1) (f19 (f20 f21 ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assert (forall ((?v0 S4) (?v1 S5) (?v2 S4) (?v3 S12) (?v4 S5) (?v5 S7) (?v6 S4) (?v7 S5) (?v8 S4) (?v9 S5)) (let ((?v_0 (f24 f25 f7)) (?v_1 (f26 f27 (f30 f31 ?v3))) (?v_2 (f32 ?v5))) (=> (= (f14 (f22 (f23 ?v_0 ?v0) (f19 (f20 f21 (f17 f18 ?v0)) (f19 (f26 f27 ?v1) (f19 (f26 f27 (f28 f29 ?v2)) (f19 ?v_1 ?v4))))) ?v_2) f1) (=> (= (f14 (f22 (f23 ?v_0 ?v6) (f19 (f20 f21 (f17 f18 ?v6)) (f19 (f26 f27 ?v7) (f19 (f26 f27 (f28 f29 ?v8)) (f19 ?v_1 ?v9))))) ?v_2) f1) (=> (= (f12 ?v5 f33) f1) (and (= ?v0 ?v6) (and (= ?v1 ?v7) (and (= ?v2 ?v8) (= ?v4 ?v9))))))))))
(assert (forall ((?v0 S4) (?v1 S5) (?v2 S4) (?v3 S12) (?v4 S5) (?v5 S7)) (let ((?v_0 (f19 (f20 f21 (f17 f18 ?v0)) (f19 (f26 f27 ?v1) (f19 (f26 f27 (f28 f29 ?v2)) (f19 (f26 f27 (f30 f31 ?v3)) ?v4)))))) (=> (= (f10 ?v_0 (f34 (f35 (f36 f6) ?v5))) f1) (=> (not (= (f5 ?v0 f8) f1)) (=> (= (f12 ?v5 f33) f1) (= (f14 (f22 (f23 (f24 f25 f7) ?v0) ?v_0) (f32 ?v5)) f1)))))))
(assert (forall ((?v0 S4) (?v1 S4) (?v2 S5) (?v3 S7)) (=> (= (f14 (f22 (f23 (f24 f25 ?v0) ?v1) ?v2) (f32 ?v3)) f1) (=> (=> (= (f10 ?v2 (f34 (f35 (f36 f6) ?v3))) f1) false) false))))
(assert (forall ((?v0 S4) (?v1 S5) (?v2 S7)) (let ((?v_0 (f37 (f35 (f36 f6) ?v2)))) (=> (= (f10 (f19 (f20 f21 (f17 f18 ?v0)) ?v1) ?v_0) f1) (=> (= (f5 ?v0 f8) f1) (= (f10 ?v1 ?v_0) f1))))))
(assert (forall ((?v0 S4) (?v1 S4) (?v2 S5) (?v3 S7)) (=> (= (f14 (f22 (f23 (f24 f25 ?v0) ?v1) ?v2) (f32 ?v3)) f1) (= (f10 ?v2 (f37 (f35 (f36 f6) ?v3))) f1))))
(assert (forall ((?v0 S5) (?v1 S5) (?v2 S6)) (let ((?v_0 (f37 ?v2))) (=> (= (f10 (f19 (f26 f27 ?v0) ?v1) ?v_0) f1) (=> (=> (= (f10 ?v0 ?v_0) f1) (=> (= (f10 ?v1 ?v_0) f1) false)) false)))))
(assert (forall ((?v0 S5) (?v1 S5) (?v2 S6)) (let ((?v_0 (f37 ?v2))) (=> (= (f10 (f19 (f26 f27 ?v0) ?v1) ?v_0) f1) (= (f10 ?v0 ?v_0) f1)))))
(assert (not (forall ((?v0 S7) (?v1 S4) (?v2 S4) (?v3 S12) (?v4 S4) (?v5 S12) (?v6 S5)) (let ((?v_1 (f30 f31 f41))) (let ((?v_0 (f26 f27 ?v_1)) (?v_3 (f32 ?v0))) (let ((?v_8 (= (f14 (f22 (f23 (f24 f25 f7) f38) (f19 (f20 f21 (f17 f18 f38)) (f19 (f26 f27 f40) (f19 (f26 f27 (f28 f29 f39)) (f19 ?v_0 (f19 (f20 f21 (f17 f18 f39)) (f19 ?v_0 (f28 f29 f38)))))))) ?v_3) f1)) (?v_6 (f30 f43 ?v3)) (?v_5 (f26 f27 (f28 f29 ?v4))) (?v_2 (f26 f27 (f30 f31 ?v5))) (?v_4 (f28 f29 ?v1))) (let ((?v_7 (f19 (f20 f21 (f17 f18 ?v4)) (f19 ?v_2 ?v_4))) (?v_9 (= (f5 ?v4 f8) f1))) (=> (not (= (f5 f38 f8) f1)) (=> (not (= (f5 f39 f8) f1)) (=> (= (f12 ?v0 f33) f1) (=> (=> ?v_8 (=> (forall ((?v7 S5)) (not (= (f14 (f22 (f23 f42 f6) (f19 (f26 f27 f40) (f19 (f26 f27 ?v7) ?v_1))) ?v_3) f1))) (not (= (f10 ?v_1 (f37 (f35 (f36 f6) ?v0))) f1)))) (=> (not (= ?v1 f7)) (=> (= (f14 (f22 (f23 (f24 f25 ?v2) ?v1) (f19 (f20 f21 (f17 f18 ?v1)) (f19 (f26 f27 ?v_6) (f19 ?v_5 (f19 ?v_2 ?v_7))))) ?v_3) f1) (=> (= (f14 (f22 (f23 (f24 f25 ?v1) f7) (f19 (f26 f27 ?v_4) (f19 ?v_5 ?v_6))) ?v_3) f1) (=> (and (forall ((?v7 S4)) (not (= ?v5 (f17 f18 ?v7)))) (= ?v6 ?v_7)) (=> ?v_8 (=> (forall ((?v7 S5)) (not (= (f14 (f22 (f23 f42 f6) (f19 (f26 f27 f40) (f19 (f26 f27 ?v7) ?v_1))) ?v_3) f1))) (or (and ?v_9 (not (= f41 ?v5))) (not ?v_9)))))))))))))))))))
(check-sat)
(exit)
