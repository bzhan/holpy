{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum",
            "prop": "(nsum::'a set ⇒ ('a ⇒ nat) ⇒ nat) = iterate plus",
            "ty": "def",
            "type": "'a set ⇒ ('a ⇒ nat) ⇒ nat"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "neutral_nat_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "theI, {P: λx::nat. ∀y::nat. x = 0 ∧ x = 0, a: (0::nat)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀y::nat. (0::nat) = 0 ∧ (0::nat) = 0) ⟶ (∀x::nat. (∀y::nat. x = 0 ∧ x = 0) ⟶ x = 0) ⟶ (∀y::nat. (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0 ∧ (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀y::nat. (0::nat) = 0 ∧ (0::nat) = 0"
                },
                {
                    "args": "y, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "conjI",
                    "id": "1.2",
                    "prevs": [
                        "1.1",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (0::nat) = 0 ∧ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀y::nat. (0::nat) = 0 ∧ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀x::nat. (∀y::nat. x = 0 ∧ x = 0) ⟶ x = 0) ⟶ (∀y::nat. (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0 ∧ (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x::nat. (∀y::nat. x = 0 ∧ x = 0) ⟶ x = 0"
                },
                {
                    "args": "x, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "∀y::nat. x = 0 ∧ x = 0",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y::nat. x = 0 ∧ x = 0 ⊢ ∀y::nat. x = 0 ∧ x = 0"
                },
                {
                    "args": "x",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀y::nat. x = 0 ∧ x = 0 ⊢ x = 0 ∧ x = 0"
                },
                {
                    "args": "conjD1",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀y::nat. x = 0 ∧ x = 0 ⊢ x = 0"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x::nat. (∀y::nat. x = 0 ∧ x = 0) ⟶ x = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∀y::nat. (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0 ∧ (THE x::nat. ∀y1::nat. x = 0 ∧ x = 0) = 0"
                },
                {
                    "args": "THE x::nat. ∀y::nat. x = 0 ∧ x = 0",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ (THE x::nat. ∀y::nat. x = 0 ∧ x = 0) = 0"
                },
                {
                    "args": "eq_add_lcancel_0, (THE x::nat. ∀y. y + x = y ∧ x = 0) = 0",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (THE x::nat. ∀y. y + x = y ∧ x = 0) = 0"
                },
                {
                    "args": "add_comm, (THE x::nat. ∀y. x + y = y ∧ x = 0) = 0",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (THE x::nat. ∀y. x + y = y ∧ x = 0) = 0"
                },
                {
                    "args": "eq_add_lcancel_0, (THE x::nat. ∀y. x + y = y ∧ y + x = y) = 0",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (THE x::nat. ∀y. x + y = y ∧ y + x = y) = 0"
                },
                {
                    "args": "neutral_def, neutral plus = (0::nat)",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ neutral plus = (0::nat)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ neutral plus = (0::nat)"
                }
            ],
            "prop": "neutral plus = (0::nat)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_add_lcancel_0"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_add_lcancel_0"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_P": "(%x::nat. ∀y::nat. x = 0 ∧ x = 0)",
                    "param_a": "(0::nat)",
                    "theorem": "theI"
                },
                {
                    "goal": "(∀y::nat. (0::nat) = 0 ∧ (0::nat) = 0)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "y"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀x::nat. (∀y::nat. x = 0 ∧ x = 0) ⟶ x = 0)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "monoidal_nat_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x::nat. ∀y. x + y = y + x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. ∀y. x + y = y + x"
                },
                {
                    "args": "∀x::nat. ∀y. ∀z. x + (y + z) = x + y + z",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. ∀y. ∀z. x + (y + z) = x + y + z"
                },
                {
                    "args": "∀x::nat. 0 + x = x",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. 0 + x = x"
                },
                {
                    "args": "neutral_nat_add, ∀x::nat. neutral plus + x = x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x::nat. neutral plus + x = x"
                },
                {
                    "args": "conjI",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀x::nat. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::nat. neutral plus + x = x)"
                },
                {
                    "args": "conjI",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀x::nat. ∀y. x + y = y + x) ∧ (∀x::nat. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::nat. neutral plus + x = x)"
                },
                {
                    "args": "monoidal_def, monoidal (plus::nat ⇒ nat ⇒ nat)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                }
            ],
            "prop": "monoidal (plus::nat ⇒ nat ⇒ nat)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "monoidal_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_degenerate",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))"
                },
                {
                    "args": "if_not_P, (if finite ({x. x ∈ s ∧ ¬(f x = 0)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = 0)}) 0 else 0) = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite ({x. x ∈ s ∧ ¬(f x = 0)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = 0)}) 0 else 0) = 0"
                },
                {
                    "args": "neutral_nat_add, (if finite ({x. x ∈ s ∧ ¬(f x = neutral plus)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = neutral plus)}) (neutral plus) else neutral plus) = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite ({x. x ∈ s ∧ ¬(f x = neutral plus)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = neutral plus)}) (neutral plus) else neutral plus) = 0"
                },
                {
                    "args": "support_def, (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus) = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus) = 0"
                },
                {
                    "args": "iterate_def, iterate plus s f = 0",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ iterate plus s f = 0"
                },
                {
                    "args": "nsum_def, nsum s f = 0",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ nsum s f = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ nsum s f = 0"
                }
            ],
            "prop": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ nsum s f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_empty, {f: f, op: (plus::nat ⇒ nat ⇒ nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ∅ f = neutral plus"
                },
                {
                    "args": "neutral_nat_add, iterate plus ∅ f = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus ∅ f = 0"
                },
                {
                    "args": "nsum_def, nsum ∅ f = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ∅ f = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ∅ f = 0"
                }
            ],
            "prop": "nsum ∅ f = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_empty"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_insert",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_insert, {f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s, x: x}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus (insert x s) f = (if x ∈ s then iterate plus s f else f x + iterate plus s f)"
                },
                {
                    "args": "nsum_def, nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)"
                }
            ],
            "prop": "finite s ⟶ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_insert"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set",
                "x": "'a"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_union",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "disjoint s t",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "disjoint s t ⊢ disjoint s t"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_union, {f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s, t: t}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, disjoint s t ⊢ iterate plus (s ∪ t) f = iterate plus s f + iterate plus t f"
                },
                {
                    "args": "nsum_def, nsum (s ∪ t) f = nsum s f + nsum t f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, disjoint s t ⊢ nsum (s ∪ t) f = nsum s f + nsum t f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ disjoint s t ⟶ nsum (s ∪ t) f = nsum s f + nsum t f"
                }
            ],
            "prop": "finite s ⟶ finite t ⟶ disjoint s t ⟶ nsum (s ∪ t) f = nsum s f + nsum t f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_union"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_diff",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "t ⊆ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "t ⊆ s ⊢ t ⊆ s"
                },
                {
                    "args": "∀x::nat. ∀y. ∀z. x + z = y ⟶ x = y - z",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. ∀y. ∀z. x + z = y ⟶ x = y - z"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_diff, {f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s, t: t}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, t ⊆ s ⊢ iterate plus (diff s t) f + iterate plus t f = iterate plus s f"
                },
                {
                    "args": "iterate plus (diff s t) f, iterate plus s f, iterate plus t f",
                    "id": "5",
                    "prevs": [
                        "2",
                        "4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, t ⊆ s ⊢ iterate plus (diff s t) f = iterate plus s f - iterate plus t f"
                },
                {
                    "args": "nsum_def, nsum (diff s t) f = nsum s f - nsum t f",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, t ⊆ s ⊢ nsum (diff s t) f = nsum s f - nsum t f"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ t ⊆ s ⟶ nsum (diff s t) f = nsum s f - nsum t f"
                }
            ],
            "prop": "finite s ⟶ t ⊆ s ⟶ nsum (diff s t) f = nsum s f - nsum t f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal": "!x. !y. !z::nat. (x + z = y) --> (x = y - z)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_diff"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_incl_excl",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_incl_excl, {f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s, t: t}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t ⊢ iterate plus s f + iterate plus t f = iterate plus (s ∪ t) f + iterate plus (s ∩ t) f"
                },
                {
                    "args": "nsum_def, nsum s f + nsum t f = nsum (s ∪ t) f + nsum (s ∩ t) f",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ nsum s f + nsum t f = nsum (s ∪ t) f + nsum (s ∩ t) f"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ nsum s f + nsum t f = nsum (s ∪ t) f + nsum (s ∩ t) f"
                }
            ],
            "prop": "finite s ⟶ finite t ⟶ nsum s f + nsum t f = nsum (s ∪ t) f + nsum (s ∩ t) f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "fact_ids": [
                        "2",
                        "0",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_incl_excl"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_support",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "iterate_support, iterate plus (support plus f s) f = iterate plus s f",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ iterate plus (support plus f s) f = iterate plus s f"
                },
                {
                    "args": "nsum_def, nsum (support plus f s) f = nsum s f",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum (support plus f s) f = nsum s f"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum (support plus f s) f = nsum s f"
                }
            ],
            "prop": "nsum (support plus f s) f = nsum s f",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_support"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_op, {f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s (λx. f x + g x) = iterate plus s f + iterate plus s g"
                },
                {
                    "args": "nsum_def, nsum s (λx. f x + g x) = nsum s f + nsum s g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ nsum s (λx. f x + g x) = nsum s f + nsum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s (λx. f x + g x) = nsum s f + nsum s g"
                }
            ],
            "prop": "finite s ⟶ nsum s (λx. f x + g x) = nsum s f + nsum s g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_op"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_add_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(f x = 0)})",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)})"
                },
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(g x = 0)})",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(g x = 0)})"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, finite ({x. x ∈ s ∧ ¬(f x = neutral plus)})",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = neutral plus)})"
                },
                {
                    "args": "support_def, finite (support plus f s)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite (support plus f s)"
                },
                {
                    "args": "neutral_nat_add, finite ({x. x ∈ s ∧ ¬(g x = neutral plus)})",
                    "id": "5",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(g x = neutral plus)})"
                },
                {
                    "args": "support_def, finite (support plus g s)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite (support plus g s)"
                },
                {
                    "args": "iterate_op_gen",
                    "id": "7",
                    "prevs": [
                        "2",
                        "4",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ iterate plus s (λx. f x + g x) = iterate plus s f + iterate plus s g"
                },
                {
                    "args": "nsum_def, nsum s (λx. f x + g x) = nsum s f + nsum s g",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum s (λx. f x + g x) = nsum s f + nsum s g"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ nsum s (λx. f x + g x) = nsum s f + nsum s g"
                }
            ],
            "prop": [
                "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ",
                "⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ nsum s (λx. f x + g x) = nsum s f + nsum s g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_op_gen"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ f x = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, ∀x. x ∈ s ⟶ f x = neutral plus",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_eq_neutral",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ iterate plus s f = neutral plus"
                },
                {
                    "args": "neutral_nat_add, iterate plus s f = 0",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ iterate plus s f = 0"
                },
                {
                    "args": "nsum_def, nsum s f = 0",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ nsum s f = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ f x = 0) ⟶ nsum s f = 0"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ f x = 0) ⟶ nsum s f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_eq_neutral"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ s ⟶ (0::nat) = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ s ⟶ (0::nat) = 0"
                },
                {
                    "args": "nsum_eq_0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ nsum s (λx. 0) = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum s (λn. 0) = 0"
                }
            ],
            "prop": "nsum s (λn. 0) = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_0"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_lmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ c = 0 ⟶ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "c = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c = 0 ⊢ c = 0"
                },
                {
                    "args": "nsum_0, nsum s (λx. 0) = 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum s (λx. 0) = 0"
                },
                {
                    "args": "nat_times_def_1, nsum s (λx. 0 * f x) = 0 * nsum s f",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "c = 0 ⊢ nsum s (λx. 0 * f x) = 0 * nsum s f"
                },
                {
                    "args": "nsum s (λx. c * f x) = c * nsum s f",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "c = 0 ⊢ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ c = 0 ⟶ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(c = 0) ⟶ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "¬(c = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(c = 0) ⊢ ¬(c = 0)"
                },
                {
                    "args": "{x. x ∈ s ∧ ¬(c * f x = 0)} = {x. x ∈ s ∧ ¬(f x = 0)}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "¬(c = 0) ⊢ {x. x ∈ s ∧ ¬(c * f x = 0)} = {x. x ∈ s ∧ ¬(f x = 0)}"
                },
                {
                    "args": "neutral_nat_add, {x. x ∈ s ∧ ¬(c * f x = neutral plus)} = {x. x ∈ s ∧ ¬(f x = neutral plus)}",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ {x. x ∈ s ∧ ¬(c * f x = neutral plus)} = {x. x ∈ s ∧ ¬(f x = neutral plus)}"
                },
                {
                    "args": "support_def, support plus (λx. c * f x) s = support plus f s",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ support plus (λx. c * f x) s = support plus f s"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ finite (support plus f s) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "finite (support plus f s)",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite (support plus f s) ⊢ finite (support plus f s)"
                },
                {
                    "args": "finite_induct_strong, {P: λs. nsum s (λx. c * f x) = c * nsum s f}",
                    "id": "1.4.1",
                    "prevs": [
                        "1.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite (support plus f s) ⊢ nsum ∅ (λx. c * f x) = c * nsum ∅ f ⟶ (∀x. ∀s1. nsum s1 (λx1. c * f x1) = c * nsum s1 f ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ nsum (insert x s1) (λx1. c * f x1) = c * nsum (insert x s1) f) ⟶ nsum (support plus f s) (λx. c * f x) = c * nsum (support plus f s) f"
                },
                {
                    "args": "mult_0_right, 0 = c * 0",
                    "id": "1.4.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = c * 0"
                },
                {
                    "args": "nsum_empty, nsum ∅ (λx. c * f x) = c * nsum ∅ f",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ nsum ∅ (λx. c * f x) = c * nsum ∅ f"
                },
                {
                    "args": "",
                    "id": "1.4.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ ∀x. ∀s1. nsum s1 (λx1. c * f x1) = c * nsum s1 f ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ nsum (insert x s1) (λx1. c * f x1) = c * nsum (insert x s1) f"
                },
                {
                    "args": "a, 'a",
                    "id": "1.4.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "s1, 'a set",
                    "id": "1.4.4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s1"
                },
                {
                    "args": "nsum s1 (λx. c * f x) = c * nsum s1 f",
                    "id": "1.4.4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s1 (λx. c * f x) = c * nsum s1 f ⊢ nsum s1 (λx. c * f x) = c * nsum s1 f"
                },
                {
                    "args": "¬(a ∈ s1)",
                    "id": "1.4.4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s1) ⊢ ¬(a ∈ s1)"
                },
                {
                    "args": "finite s1",
                    "id": "1.4.4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s1 ⊢ finite s1"
                },
                {
                    "args": "nsum_insert, {f: f, x: a}",
                    "id": "1.4.4.5",
                    "prevs": [
                        "1.4.4.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s1 ⊢ nsum (insert a s1) f = (if a ∈ s1 then nsum s1 f else f a + nsum s1 f)"
                },
                {
                    "args": "if_not_P",
                    "id": "1.4.4.6",
                    "prevs": [
                        "1.4.4.5",
                        "1.4.4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s1, ¬(a ∈ s1) ⊢ nsum (insert a s1) f = f a + nsum s1 f"
                },
                {
                    "args": "nsum_insert, {f: λx. c * f x, x: a}",
                    "id": "1.4.4.7",
                    "prevs": [
                        "1.4.4.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s1 ⊢ nsum (insert a s1) (λx. c * f x) = (if a ∈ s1 then nsum s1 (λx. c * f x) else c * f a + nsum s1 (λx. c * f x))"
                },
                {
                    "args": "if_not_P",
                    "id": "1.4.4.8",
                    "prevs": [
                        "1.4.4.7",
                        "1.4.4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s1, ¬(a ∈ s1) ⊢ nsum (insert a s1) (λx. c * f x) = c * f a + nsum s1 (λx. c * f x)"
                },
                {
                    "args": "distrib_l, c * f a + c * nsum s1 f = c * (f a + nsum s1 f)",
                    "id": "1.4.4.9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ c * f a + c * nsum s1 f = c * (f a + nsum s1 f)"
                },
                {
                    "args": "c * f a + nsum s1 (λx. c * f x) = c * (f a + nsum s1 f)",
                    "id": "1.4.4.10",
                    "prevs": [
                        "1.4.4.2",
                        "1.4.4.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), nsum s1 (λx. c * f x) = c * nsum s1 f ⊢ c * f a + nsum s1 (λx. c * f x) = c * (f a + nsum s1 f)"
                },
                {
                    "args": "nsum (insert a s1) (λx. c * f x) = c * (f a + nsum s1 f)",
                    "id": "1.4.4.11",
                    "prevs": [
                        "1.4.4.8",
                        "1.4.4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), nsum s1 (λx. c * f x) = c * nsum s1 f ⊢ nsum (insert a s1) (λx. c * f x) = c * (f a + nsum s1 f)"
                },
                {
                    "args": "nsum (insert a s1) (λx. c * f x) = c * nsum (insert a s1) f",
                    "id": "1.4.4.12",
                    "prevs": [
                        "1.4.4.6",
                        "1.4.4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), nsum s1 (λx. c * f x) = c * nsum s1 f ⊢ nsum (insert a s1) (λx. c * f x) = c * nsum (insert a s1) f"
                },
                {
                    "args": "",
                    "id": "1.4.4.13",
                    "prevs": [
                        "1.4.4.0",
                        "1.4.4.1",
                        "1.4.4.2",
                        "1.4.4.3",
                        "1.4.4.4",
                        "1.4.4.12"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ ∀a. ∀s1. nsum s1 (λx. c * f x) = c * nsum s1 f ⟶ ¬(a ∈ s1) ⟶ finite s1 ⟶ nsum (insert a s1) (λx. c * f x) = c * nsum (insert a s1) f"
                },
                {
                    "args": "",
                    "id": "1.4.5",
                    "prevs": [
                        "1.4.1",
                        "1.4.3",
                        "1.4.4"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ nsum (support plus f s) (λx. c * f x) = c * nsum (support plus f s) f"
                },
                {
                    "args": "nsum_def, iterate plus (support plus f s) (λx. c * f x) = c * iterate plus (support plus f s) f",
                    "id": "1.4.6",
                    "prevs": [
                        "1.4.5"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ iterate plus (support plus f s) (λx. c * f x) = c * iterate plus (support plus f s) f"
                },
                {
                    "args": "if_P, (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.4.7",
                    "prevs": [
                        "1.4.6",
                        "1.4.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.4.8",
                    "prevs": [
                        "1.4.0",
                        "1.4.7"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ finite (support plus f s) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ ¬(finite (support plus f s)) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "¬(finite (support plus f s))",
                    "id": "1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite (support plus f s)) ⊢ ¬(finite (support plus f s))"
                },
                {
                    "args": "mult_0_right, 0 = c * 0",
                    "id": "1.5.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = c * 0"
                },
                {
                    "args": "neutral_nat_add, neutral plus = c * neutral plus",
                    "id": "1.5.2",
                    "prevs": [
                        "1.5.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), ¬(finite (support plus f s)) ⊢ neutral plus = c * neutral plus"
                },
                {
                    "args": "if_not_P, (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.5.3",
                    "prevs": [
                        "1.5.2",
                        "1.5.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), ¬(finite (support plus f s)) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.5.4",
                    "prevs": [
                        "1.5.0",
                        "1.5.3"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ ¬(finite (support plus f s)) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.6",
                    "prevs": [
                        "1.4",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "(if finite (support plus (λx. c * f x) s) then iterate plus (support plus (λx. c * f x) s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.7",
                    "prevs": [
                        "1.3",
                        "1.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(c = 0) ⊢ (if finite (support plus (λx. c * f x) s) then iterate plus (support plus (λx. c * f x) s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "iterate_expand_cases, iterate plus s (λx. c * f x) = c * iterate plus s f",
                    "id": "1.8",
                    "prevs": [
                        "1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ iterate plus s (λx. c * f x) = c * iterate plus s f"
                },
                {
                    "args": "nsum_def, nsum s (λx. c * f x) = c * nsum s f",
                    "id": "1.9",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(c = 0) ⟶ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum s (λx. c * f x) = c * nsum s f"
                }
            ],
            "prop": "nsum s (λx. c * f x) = c * nsum s f",
            "steps": [
                {
                    "case": "c=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_times_def_1"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_expand_cases"
                },
                {
                    "goal": "support plus (λx. c * f x) s = support plus f s",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "case": "finite (support plus f s)",
                    "goal_id": "1.4",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_def"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_forward_step",
                    "param_P": "(%s. nsum s (λx. c * f x) = c * nsum s f)",
                    "theorem": "finite_induct_strong"
                },
                {
                    "fact_ids": [
                        "1.4.1"
                    ],
                    "goal_id": "1.4.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "introduction",
                    "names": "a,s1"
                },
                {
                    "fact_ids": [
                        "1.4.4.4"
                    ],
                    "goal_id": "1.4.4.5",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "1.4.4.5",
                        "1.4.4.3"
                    ],
                    "goal_id": "1.4.4.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.4.4.6"
                    ],
                    "goal_id": "1.4.4.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.4.4.4"
                    ],
                    "goal_id": "1.4.4.7",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx. c * f x)",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "1.4.4.7",
                        "1.4.4.3"
                    ],
                    "goal_id": "1.4.4.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.4.4.8"
                    ],
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.4.4.2"
                    ],
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "distrib_l"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_rmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "nsum_lmul, nsum s (λx. c * f x) = c * nsum s f",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum s (λx. c * f x) = c * nsum s f"
                },
                {
                    "args": "mult_comm, nsum s (λx. f x * c) = nsum s f * c",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum s (λx. f x * c) = nsum s f * c"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum s (λx. f x * c) = nsum s f * c"
                }
            ],
            "prop": "nsum s (λx. f x * c) = nsum s f * c",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ (0::nat) ≤ 0"
                },
                {
                    "args": "∀x. x ∈ ∅ ⟶ f x ≤ g x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ ∅ ⟶ f x ≤ g x ⊢ ∀x. x ∈ ∅ ⟶ f x ≤ g x"
                },
                {
                    "args": "less_eq_refl, {n: (0::nat)}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) ≤ 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ (0::nat) ≤ 0"
                },
                {
                    "args": "nsum_empty, (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ nsum ∅ f ≤ nsum ∅ g",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ nsum ∅ f ≤ nsum ∅ g"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. ∀s1. ((∀x1. x1 ∈ s1 ⟶ f x1 ≤ g x1) ⟶ nsum s1 f ≤ nsum s1 g) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ (∀x1. x1 ∈ insert x s1 ⟶ f x1 ≤ g x1) ⟶ nsum (insert x s1) f ≤ nsum (insert x s1) g"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "(∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1 ⊢ ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1"
                },
                {
                    "args": "nsum_insert, {f: f, x: x}",
                    "id": "3.5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "3.6",
                    "prevs": [
                        "3.5",
                        "3.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ nsum (insert x s) f = f x + nsum s f"
                },
                {
                    "args": "nsum_insert, {f: g, x: x}",
                    "id": "3.7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert x s) g = (if x ∈ s then nsum s g else g x + nsum s g)"
                },
                {
                    "args": "if_not_P",
                    "id": "3.8",
                    "prevs": [
                        "3.7",
                        "3.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ nsum (insert x s) g = g x + nsum s g"
                },
                {
                    "args": "eq_refl, {x: x}",
                    "id": "3.9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x = x"
                },
                {
                    "args": "disjI1, {A: x = x, B: x ∈ s}",
                    "id": "3.10",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ x = x ∨ x ∈ s"
                },
                {
                    "args": "member_insert, x ∈ insert x s",
                    "id": "3.11",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ x ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "3.12",
                    "prevs": [
                        "3.4",
                        "3.11"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "3.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "x1, 'a",
                    "id": "3.13.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ s",
                    "id": "3.13.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "disjI2, {A: x1 = x, B: x1 ∈ s}",
                    "id": "3.13.2",
                    "prevs": [
                        "3.13.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ x1 = x ∨ x1 ∈ s"
                },
                {
                    "args": "member_insert, x1 ∈ insert x s",
                    "id": "3.13.3",
                    "prevs": [
                        "3.13.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ x1 ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "3.13.4",
                    "prevs": [
                        "3.4",
                        "3.13.3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ f x1 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "3.13.5",
                    "prevs": [
                        "3.13.0",
                        "3.13.1",
                        "3.13.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ ∀x1. x1 ∈ s ⟶ f x1 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "3.14",
                    "prevs": [
                        "3.2",
                        "3.13"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ nsum s f ≤ nsum s g"
                },
                {
                    "args": "le_add2",
                    "id": "3.15",
                    "prevs": [
                        "3.12",
                        "3.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ f x + nsum s f ≤ g x + nsum s g"
                },
                {
                    "args": "nsum (insert x s) f ≤ g x + nsum s g",
                    "id": "3.16",
                    "prevs": [
                        "3.6",
                        "3.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ nsum (insert x s) f ≤ g x + nsum s g"
                },
                {
                    "args": "nsum (insert x s) f ≤ nsum (insert x s) g",
                    "id": "3.17",
                    "prevs": [
                        "3.8",
                        "3.16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g ⊢ nsum (insert x s) f ≤ nsum (insert x s) g"
                },
                {
                    "args": "",
                    "id": "3.18",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.3",
                        "0",
                        "3.4",
                        "3.17"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀s. ((∀x1. x1 ∈ s ⟶ f x1 ≤ g x1) ⟶ nsum s f ≤ nsum s g) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ (∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1) ⟶ nsum (insert x s) f ≤ nsum (insert x s) g"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "4",
                    "prevs": [
                        "0",
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ nsum s f ≤ nsum s g",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "3.5",
                        "3.3"
                    ],
                    "goal_id": "3.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.7",
                    "method_name": "apply_forward_step",
                    "param_f": "g",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "3.7",
                        "3.3"
                    ],
                    "goal_id": "3.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3.8"
                    ],
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add2"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.9",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.13",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.13",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.13.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.13.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "3.13.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ g x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ∧ f x < g x ⊢ ∃x. x ∈ s ∧ f x < g x"
                },
                {
                    "args": "a, 'a",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "a ∈ s ∧ f a < g a",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ∧ f a < g a ⊢ a ∈ s ∧ f a < g a"
                },
                {
                    "args": "conjD1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a ∈ s ∧ f a < g a ⊢ a ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "6",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a ∈ s ∧ f a < g a ⊢ f a < g a"
                },
                {
                    "args": "insert_delete",
                    "id": "7",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "a ∈ s ∧ f a < g a ⊢ insert a (delete s a) = s"
                },
                {
                    "args": "eq_sym_eq, s = insert a (delete s a)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ s = insert a (delete s a)"
                },
                {
                    "args": "{y. ¬(y = a) ∧ y ∈ s} ⊆ s",
                    "id": "9",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ {y. ¬(y = a) ∧ y ∈ s} ⊆ s"
                },
                {
                    "args": "delete_def, delete s a ⊆ s",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ delete s a ⊆ s"
                },
                {
                    "args": "finite_subset",
                    "id": "11",
                    "prevs": [
                        "0",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ finite (delete s a)"
                },
                {
                    "args": "nsum_insert, {f: f, x: a}",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) f = (if a ∈ delete s a then nsum (delete s a) f else f a + nsum (delete s a) f)"
                },
                {
                    "args": "¬(¬(a = a) ∧ a ∈ s)",
                    "id": "13",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬(¬(a = a) ∧ a ∈ s)"
                },
                {
                    "args": "member_delete, ¬(a ∈ delete s a)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ¬(a ∈ delete s a)"
                },
                {
                    "args": "if_not_P",
                    "id": "15",
                    "prevs": [
                        "12",
                        "14"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) f = f a + nsum (delete s a) f"
                },
                {
                    "args": "nsum_insert, {f: g, x: a}",
                    "id": "16",
                    "prevs": [
                        "11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) g = (if a ∈ delete s a then nsum (delete s a) g else g a + nsum (delete s a) g)"
                },
                {
                    "args": "if_not_P",
                    "id": "17",
                    "prevs": [
                        "16",
                        "14"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) g = g a + nsum (delete s a) g"
                },
                {
                    "args": "",
                    "id": "18",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ∀x. x ∈ delete s a ⟶ f x ≤ g x"
                },
                {
                    "args": "x, 'a",
                    "id": "18.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ delete s a",
                    "id": "18.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ delete s a ⊢ x ∈ delete s a"
                },
                {
                    "args": "member_delete",
                    "id": "18.2",
                    "prevs": [
                        "18.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ delete s a ⊢ ¬(x = a) ∧ x ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "18.3",
                    "prevs": [
                        "18.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ delete s a ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "18.4",
                    "prevs": [
                        "1",
                        "18.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ delete s a, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "18.5",
                    "prevs": [
                        "18.0",
                        "18.1",
                        "18.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ∀x. x ∈ delete s a ⟶ f x ≤ g x"
                },
                {
                    "args": "nsum_le",
                    "id": "19",
                    "prevs": [
                        "11",
                        "18"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (delete s a) f ≤ nsum (delete s a) g"
                },
                {
                    "args": "let_add2",
                    "id": "20",
                    "prevs": [
                        "19",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (delete s a) f + f a < nsum (delete s a) g + g a"
                },
                {
                    "args": "add_comm, f a + nsum (delete s a) f < g a + nsum (delete s a) g",
                    "id": "21",
                    "prevs": [
                        "20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ f a + nsum (delete s a) f < g a + nsum (delete s a) g"
                },
                {
                    "args": "nsum (insert a (delete s a)) f < g a + nsum (delete s a) g",
                    "id": "22",
                    "prevs": [
                        "15",
                        "21"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) f < g a + nsum (delete s a) g"
                },
                {
                    "args": "nsum (insert a (delete s a)) f < nsum (insert a (delete s a)) g",
                    "id": "23",
                    "prevs": [
                        "17",
                        "22"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum (insert a (delete s a)) f < nsum (insert a (delete s a)) g"
                },
                {
                    "args": "nsum s f < nsum s g",
                    "id": "24",
                    "prevs": [
                        "8",
                        "23"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ nsum s f < nsum s g"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < g x",
                    "id": "25",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "2",
                        "3",
                        "4",
                        "24"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ (∃x. x ∈ s ∧ f x < g x) ⟶ nsum s f < nsum s g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ (∃x. x ∈ s ∧ f x < g x) ⟶ nsum s f < nsum s g"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal": "s = insert a (delete s a)",
                    "goal_id": "7",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "insert_delete"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal": "finite (delete s a)",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "param_t": "s",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "delete_def"
                },
                {
                    "goal_id": "9",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "goal": "~(a ∈ delete s a) ",
                    "goal_id": "13",
                    "method_name": "cut"
                },
                {
                    "goal_id": "13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_delete"
                },
                {
                    "goal_id": "13",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "12",
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "16",
                    "method_name": "apply_forward_step",
                    "param_f": "g",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "16",
                        "14"
                    ],
                    "goal_id": "17",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "18",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "18",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "18",
                    "method_name": "apply_backward_step",
                    "theorem": "let_add2"
                },
                {
                    "goal_id": "18",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_le"
                },
                {
                    "goal_id": "18",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "18.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "18.1"
                    ],
                    "goal_id": "18.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_delete"
                },
                {
                    "fact_ids": [
                        "18.2"
                    ],
                    "goal_id": "18.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_lt_all",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x < g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x < g x"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "3.2",
                    "prevs": [
                        "2",
                        "3.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ f x < g x"
                },
                {
                    "args": "lt_imp_le",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "set_equal_iff",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(s = ∅) ⊢ ¬(∀x. x ∈ s ⟷ x ∈ ∅)"
                },
                {
                    "args": "not_all",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(s = ∅) ⊢ ∃x. ¬(x ∈ s ⟷ x ∈ ∅)"
                },
                {
                    "args": "a, 'a",
                    "id": "6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "¬(a ∈ s ⟷ a ∈ ∅)",
                    "id": "7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅) ⊢ ¬(a ∈ s ⟷ a ∈ ∅)"
                },
                {
                    "args": "a ∈ s",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "z3",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅) ⊢ a ∈ s"
                },
                {
                    "args": "a",
                    "id": "9",
                    "prevs": [
                        "2",
                        "8"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ f a < g a"
                },
                {
                    "args": "conjI",
                    "id": "10",
                    "prevs": [
                        "8",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ a ∈ s ∧ f a < g a"
                },
                {
                    "args": "exI, {P: λx. x ∈ s ∧ f x < g x, a: a}",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ ∃a1. a1 ∈ s ∧ f a1 < g a1"
                },
                {
                    "args": "nsum_lt",
                    "id": "12",
                    "prevs": [
                        "0",
                        "3",
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ nsum s f < nsum s g"
                },
                {
                    "args": "∃x. ¬(x ∈ s ⟷ x ∈ ∅)",
                    "id": "13",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5",
                        "6",
                        "7",
                        "12"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < g x) ⟶ nsum s f < nsum s g"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < g x) ⟶ nsum s f < nsum s g",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_lt"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "goal_id": "8",
                    "method_name": "inst_exists_goal",
                    "s": "a"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ f x = g x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ ∀x. x ∈ s ⟶ f x = g x"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_eq",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ iterate plus s f = iterate plus s g"
                },
                {
                    "args": "nsum_def, nsum s f = nsum s g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ nsum s f = nsum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ f x = g x) ⟶ nsum s f = nsum s g"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ f x = g x) ⟶ nsum s f = nsum s g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "g": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_const",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "nat_times_def_1, 0 = 0 * c",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = 0 * c"
                },
                {
                    "args": "card_empty, 0 = card (∅::'a set) * c",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ 0 = card (∅::'a set) * c"
                },
                {
                    "args": "nsum_empty, nsum ∅ (λn::'a. c) = card (∅::'a set) * c",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ nsum ∅ (λn::'a. c) = card (∅::'a set) * c"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x::'a. ∀s1. nsum s1 (λn. c) = card s1 * c ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ nsum (insert x s1) (λn. c) = card (insert x s1) * c"
                },
                {
                    "args": "a, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "s, 'a set",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "nsum s (λn. c) = card s * c",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s (λn. c) = card s * c ⊢ nsum s (λn. c) = card s * c"
                },
                {
                    "args": "¬(a ∈ s)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s) ⊢ ¬(a ∈ s)"
                },
                {
                    "args": "card_insert, {x: a}",
                    "id": "4.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ card (insert a s) = (if a ∈ s then card s else Suc (card s))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.5",
                    "prevs": [
                        "4.4",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(a ∈ s) ⊢ card (insert a s) = Suc (card s)"
                },
                {
                    "args": "nsum_insert, {f: λn::'a. c, x: a}",
                    "id": "4.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert a s) (λn. c) = (if a ∈ s then nsum s (λn. c) else c + nsum s (λn. c))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.7",
                    "prevs": [
                        "4.6",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(a ∈ s) ⊢ nsum (insert a s) (λn. c) = c + nsum s (λn. c)"
                },
                {
                    "args": "nat_times_def_2, c + card s * c = Suc (card s) * c",
                    "id": "4.8",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ c + card s * c = Suc (card s) * c"
                },
                {
                    "args": "c + nsum s (λn. c) = Suc (card s) * c",
                    "id": "4.9",
                    "prevs": [
                        "4.2",
                        "4.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(a ∈ s), nsum s (λn. c) = card s * c ⊢ c + nsum s (λn. c) = Suc (card s) * c"
                },
                {
                    "args": "nsum (insert a s) (λn. c) = Suc (card s) * c",
                    "id": "4.10",
                    "prevs": [
                        "4.7",
                        "4.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(a ∈ s), nsum s (λn. c) = card s * c ⊢ nsum (insert a s) (λn. c) = Suc (card s) * c"
                },
                {
                    "args": "nsum (insert a s) (λn. c) = card (insert a s) * c",
                    "id": "4.11",
                    "prevs": [
                        "4.5",
                        "4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(a ∈ s), nsum s (λn. c) = card s * c ⊢ nsum (insert a s) (λn. c) = card (insert a s) * c"
                },
                {
                    "args": "",
                    "id": "4.12",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "0",
                        "4.11"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀a::'a. ∀s. nsum s (λn. c) = card s * c ⟶ ¬(a ∈ s) ⟶ finite s ⟶ nsum (insert a s) (λn. c) = card (insert a s) * c"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s (λn. c) = card s * c"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s (λn. c) = card s * c"
                }
            ],
            "prop": "finite s ⟶ nsum s (λn. c) = card s * c",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "card_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_times_def_1"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "a,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "param_x": "a",
                    "theorem": "card_insert"
                },
                {
                    "fact_ids": [
                        "4.4",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "param_f": "(λn::'a. c)",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "4.6",
                        "4.3"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.7"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_times_def_2"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_pos_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ nsum ∅ f ≤ b ⟶ x ∈ ∅ ⟶ f x ≤ b"
                },
                {
                    "args": "nsum ∅ f ≤ b",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum ∅ f ≤ b ⊢ nsum ∅ f ≤ b"
                },
                {
                    "args": "x ∈ ∅",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ ∅ ⊢ x ∈ ∅"
                },
                {
                    "args": "member_empty, f x ≤ b",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x ∈ ∅ ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ nsum ∅ f ≤ b ⟶ x ∈ ∅ ⟶ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x1. ∀s1. (nsum s1 f ≤ b ⟶ x ∈ s1 ⟶ f x ≤ b) ⟶ ¬(x1 ∈ s1) ⟶ finite s1 ⟶ nsum (insert x1 s1) f ≤ b ⟶ x ∈ insert x1 s1 ⟶ f x ≤ b"
                },
                {
                    "args": "a, 'a",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "s, 'a set",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "¬(a ∈ s)",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s) ⊢ ¬(a ∈ s)"
                },
                {
                    "args": "nsum (insert a s) f ≤ b",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum (insert a s) f ≤ b ⊢ nsum (insert a s) f ≤ b"
                },
                {
                    "args": "x ∈ insert a s",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ insert a s ⊢ x ∈ insert a s"
                },
                {
                    "args": "member_insert",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ insert a s ⊢ x = a ∨ x ∈ s"
                },
                {
                    "args": "nsum_insert, {f: f, x: a}",
                    "id": "2.7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert a s) f = (if a ∈ s then nsum s f else f a + nsum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "2.8",
                    "prevs": [
                        "2.7",
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(a ∈ s) ⊢ nsum (insert a s) f = f a + nsum s f"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.8",
                        "2.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, ¬(a ∈ s), nsum (insert a s) f ≤ b ⊢ f a + nsum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ x = a ⟶ f x ≤ b"
                },
                {
                    "args": "x = a",
                    "id": "2.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = a ⊢ x = a"
                },
                {
                    "args": "le_add, {m: f a, n: nsum s f}",
                    "id": "2.10.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f a ≤ f a + nsum s f"
                },
                {
                    "args": "less_eq_trans",
                    "id": "2.10.2",
                    "prevs": [
                        "2.10.1",
                        "2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x = a, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ f a ≤ b"
                },
                {
                    "args": "f x ≤ b",
                    "id": "2.10.3",
                    "prevs": [
                        "2.10.0",
                        "2.10.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x = a, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2.10.4",
                    "prevs": [
                        "2.10.0",
                        "2.10.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ x = a ⟶ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "x ∈ s",
                    "id": "2.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "le_add, {m: nsum s f, n: f a}",
                    "id": "2.11.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum s f ≤ nsum s f + f a"
                },
                {
                    "args": "add_comm, nsum s f ≤ f a + nsum s f",
                    "id": "2.11.2",
                    "prevs": [
                        "2.11.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ nsum s f ≤ f a + nsum s f"
                },
                {
                    "args": "less_eq_trans",
                    "id": "2.11.3",
                    "prevs": [
                        "2.11.2",
                        "2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ nsum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "2.11.4",
                    "prevs": [
                        "2.2",
                        "2.11.3",
                        "2.11.0"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, x ∈ s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2.11.5",
                    "prevs": [
                        "2.11.0",
                        "2.11.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "disjE",
                    "id": "2.12",
                    "prevs": [
                        "2.6",
                        "2.10",
                        "2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(a ∈ s), x ∈ insert a s, nsum (insert a s) f ≤ b, nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2.13",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "0",
                        "2.4",
                        "2.5",
                        "2.12"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀a. ∀s. (nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b) ⟶ ¬(a ∈ s) ⟶ finite s ⟶ nsum (insert a s) f ≤ b ⟶ x ∈ insert a s ⟶ f x ≤ b"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b"
                }
            ],
            "prop": "finite s ⟶ nsum s f ≤ b ⟶ x ∈ s ⟶ f x ≤ b",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "a,s"
                },
                {
                    "fact_ids": [
                        "2.5"
                    ],
                    "goal_id": "2.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.7",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "2.7",
                        "2.3"
                    ],
                    "goal_id": "2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.8",
                        "2.4"
                    ],
                    "goal_id": "2.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.6"
                    ],
                    "goal_id": "2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.10.0"
                    ],
                    "goal_id": "2.10.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.10.1",
                    "method_name": "apply_backward_step",
                    "param_m": "f a + nsum s f",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "2.10.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.11.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.11.1",
                    "method_name": "apply_backward_step",
                    "param_m": "f a + nsum s f",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "2.11.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "2.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set",
                "x": "'a"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_eq_0_iff",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ nsum s f = 0 ⟶ (∀x. x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "nsum s f = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s f = 0 ⊢ nsum s f = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, nsum s f = 0 ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "∀n::nat. n = 0 ⟷ n ≤ 0",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀n::nat. n = 0 ⟷ n ≤ 0"
                },
                {
                    "args": "",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2",
                        "1.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "nsum s f = 0 ⊢ nsum s f ≤ 0"
                },
                {
                    "args": "nsum_pos_bound",
                    "id": "1.1.4",
                    "prevs": [
                        "0",
                        "1.1.3",
                        "1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, nsum s f = 0 ⊢ f x ≤ 0"
                },
                {
                    "args": "f x = 0",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.2",
                        "1.1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ s, nsum s f = 0 ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, nsum s f = 0 ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ nsum s f = 0 ⟶ (∀x. x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ (∀x. x ∈ s ⟶ f x = 0) ⟶ nsum s f = 0"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "nsum_eq_0",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x = 0 ⊢ nsum s f = 0"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ (∀x. x ∈ s ⟶ f x = 0) ⟶ nsum s f = 0"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s f = 0 ⟷ (∀x. x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s f = 0 ⟷ (∀x. x ∈ s ⟶ f x = 0)"
                }
            ],
            "prop": "finite s ⟶ nsum s f = 0 ⟷ (∀x. x ∈ s ⟶ f x = 0)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal": "!n::nat. n = 0 <--> n <= 0",
                    "goal_id": "1.1.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.2",
                        "1.0"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "apply_backward_step",
                    "param_s": "s",
                    "theorem": "nsum_pos_bound"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_pos_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∃x. x ∈ s ∧ 0 < f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ∧ 0 < f x ⊢ ∃x. x ∈ s ∧ 0 < f x"
                },
                {
                    "args": "nsum_eq_0_iff, {f: f}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum s f = 0 ⟷ (∀x. x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "∃x. x ∈ s ∧ ¬(f x = 0)",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "z3",
                    "th": "∃x. x ∈ s ∧ 0 < f x ⊢ ∃x. x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "not_imp, ∃x. ¬(x ∈ s ⟶ f x = 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∃x. x ∈ s ∧ 0 < f x ⊢ ∃x. ¬(x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ s ⟶ f x = 0)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∃x. x ∈ s ∧ 0 < f x ⊢ ¬(∀x. x ∈ s ⟶ f x = 0)"
                },
                {
                    "args": "¬(nsum s f = 0)",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∃x. x ∈ s ∧ 0 < f x ⊢ ¬(nsum s f = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∃x. x ∈ s ∧ 0 < f x ⊢ 0 < nsum s f"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∃x. x ∈ s ∧ 0 < f x) ⟶ 0 < nsum s f"
                }
            ],
            "prop": "finite s ⟶ (∃x. x ∈ s ∧ 0 < f x) ⟶ 0 < nsum s f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "theorem": "nsum_eq_0_iff"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_pos_lt_all",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀i. i ∈ s ⟶ 0 < f i",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. i ∈ s ⟶ 0 < f i ⊢ ∀i. i ∈ s ⟶ 0 < f i"
                },
                {
                    "args": "set_equal_iff",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(s = ∅) ⊢ ¬(∀x. x ∈ s ⟷ x ∈ ∅)"
                },
                {
                    "args": "not_all",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(s = ∅) ⊢ ∃x. ¬(x ∈ s ⟷ x ∈ ∅)"
                },
                {
                    "args": "a, 'a",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "¬(a ∈ s ⟷ a ∈ ∅)",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅) ⊢ ¬(a ∈ s ⟷ a ∈ ∅)"
                },
                {
                    "args": "a ∈ s",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "z3",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅) ⊢ a ∈ s"
                },
                {
                    "args": "a",
                    "id": "8",
                    "prevs": [
                        "2",
                        "7"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(a ∈ s ⟷ a ∈ ∅), ∀i. i ∈ s ⟶ 0 < f i ⊢ 0 < f a"
                },
                {
                    "args": "conjI",
                    "id": "9",
                    "prevs": [
                        "7",
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀i. i ∈ s ⟶ 0 < f i ⊢ a ∈ s ∧ 0 < f a"
                },
                {
                    "args": "exI, {P: λx. x ∈ s ∧ 0 < f x, a: a}",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀i. i ∈ s ⟶ 0 < f i ⊢ ∃a1. a1 ∈ s ∧ 0 < f a1"
                },
                {
                    "args": "nsum_pos_lt",
                    "id": "11",
                    "prevs": [
                        "0",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ¬(a ∈ s ⟷ a ∈ ∅), ∀i. i ∈ s ⟶ 0 < f i ⊢ 0 < nsum s f"
                },
                {
                    "args": "∃x. ¬(x ∈ s ⟷ x ∈ ∅)",
                    "id": "12",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4",
                        "5",
                        "6",
                        "11"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀i. i ∈ s ⟶ 0 < f i) ⟶ 0 < nsum s f"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀i. i ∈ s ⟶ 0 < f i) ⟶ 0 < nsum s f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_pos_lt"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "goal_id": "7",
                    "method_name": "inst_exists_goal",
                    "s": "a"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_delete",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "a ∈ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ⊢ a ∈ s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_delete, {a: a, f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ⊢ f a + iterate plus (delete s a) f = iterate plus s f"
                },
                {
                    "args": "nsum_def, f a + nsum (delete s a) f = nsum s f",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ⊢ f a + nsum (delete s a) f = nsum s f"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ a ∈ s ⟶ f a + nsum (delete s a) f = nsum s f"
                }
            ],
            "prop": "finite s ⟶ a ∈ s ⟶ f a + nsum (delete s a) f = nsum s f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "fact_ids": [
                        "2",
                        "0",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_delete"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_sing",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_empty, {}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite (∅::'a set)"
                },
                {
                    "args": "nsum_insert, {f: f, x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({x}) f = (if x ∈ ∅ then nsum ∅ f else f x + nsum ∅ f)"
                },
                {
                    "args": "member_empty, {x: x}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(x ∈ ∅)"
                },
                {
                    "args": "if_not_P",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ nsum ({x}) f = f x + nsum ∅ f"
                },
                {
                    "args": "nsum_empty",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ nsum ({x}) f = f x + 0"
                },
                {
                    "args": "add_0_right",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ nsum ({x}) f = f x"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({x}) f = f x"
                }
            ],
            "prop": "nsum ({x}) f = f x",
            "steps": [
                {
                    "goal": "finite({}::'a set)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_empty"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "goal": "~(x ∈ ∅)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "member_empty"
                },
                {
                    "fact_ids": [
                        "1",
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "add_0_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "x": "'a"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_delta",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_delta, {a: a, f: λx::'a. b, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus s (λx. if x = a then b else neutral plus) = (if a ∈ s then b else neutral plus)"
                },
                {
                    "args": "neutral_nat_add, iterate plus s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                },
                {
                    "args": "nsum_def, nsum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                }
            ],
            "prop": "nsum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_delta"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_swap",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "nsum_0, 0 = nsum t (λj. 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = nsum t (λj. 0)"
                },
                {
                    "args": "nsum_empty, nsum ∅ (λi. nsum t (f i)) = nsum t (λj. nsum ∅ (λi. f i j))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ nsum ∅ (λi. nsum t (f i)) = nsum t (λj. nsum ∅ (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t ⊢ ∀x. ∀s1. nsum s1 (λi. nsum t (f i)) = nsum t (λj. nsum s1 (λi. f i j)) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ nsum (insert x s1) (λi. nsum t (f i)) = nsum t (λj. nsum (insert x s1) (λi. f i j))"
                },
                {
                    "args": "a, 'b",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "s, 'b set",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j))",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j))"
                },
                {
                    "args": "¬(a ∈ s)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s) ⊢ ¬(a ∈ s)"
                },
                {
                    "args": "nsum_insert, {f: λi. f i j, x: a}",
                    "id": "4.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert a s) (λi. f i j) = (if a ∈ s then nsum s (λi. f i j) else f a j + nsum s (λi. f i j))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.5",
                    "prevs": [
                        "4.4",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(a ∈ s) ⊢ nsum (insert a s) (λi. f i j) = f a j + nsum s (λi. f i j)"
                },
                {
                    "args": "nsum_insert, {f: λi. nsum t (f i), x: a}",
                    "id": "4.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert a s) (λi. nsum t (f i)) = (if a ∈ s then nsum s (λi. nsum t (f i)) else nsum t (f a) + nsum s (λi. nsum t (f i)))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.7",
                    "prevs": [
                        "4.6",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(a ∈ s) ⊢ nsum (insert a s) (λi. nsum t (f i)) = nsum t (f a) + nsum s (λi. nsum t (f i))"
                },
                {
                    "args": "nsum_add, {f: f a, g: λx. nsum s (λi. f i x), s: t}",
                    "id": "4.8",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ¬(a ∈ s), nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum t (λx. f a x + nsum s (λi. f i x)) = nsum t (f a) + nsum t (λx. nsum s (λi. f i x))"
                },
                {
                    "args": "eq_sym_eq, nsum t (f a) + nsum t (λj. nsum s (λi. f i j)) = nsum t (λj. f a j + nsum s (λi. f i j))",
                    "id": "4.9",
                    "prevs": [
                        "4.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ¬(a ∈ s), nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum t (f a) + nsum t (λj. nsum s (λi. f i j)) = nsum t (λj. f a j + nsum s (λi. f i j))"
                },
                {
                    "args": "nsum t (f a) + nsum s (λi. nsum t (f i)) = nsum t (λj. f a j + nsum s (λi. f i j))",
                    "id": "4.10",
                    "prevs": [
                        "4.2",
                        "4.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(a ∈ s), nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum t (f a) + nsum s (λi. nsum t (f i)) = nsum t (λj. f a j + nsum s (λi. f i j))"
                },
                {
                    "args": "nsum (insert a s) (λi. nsum t (f i)) = nsum t (λj. f a j + nsum s (λi. f i j))",
                    "id": "4.11",
                    "prevs": [
                        "4.7",
                        "4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(a ∈ s), nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum (insert a s) (λi. nsum t (f i)) = nsum t (λj. f a j + nsum s (λi. f i j))"
                },
                {
                    "args": "nsum (insert a s) (λi. nsum t (f i)) = nsum t (λj. nsum (insert a s) (λi. f i j))",
                    "id": "4.12",
                    "prevs": [
                        "4.5",
                        "4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(a ∈ s), nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⊢ nsum (insert a s) (λi. nsum t (f i)) = nsum t (λj. nsum (insert a s) (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "4.13",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "0",
                        "4.12"
                    ],
                    "rule": "intros",
                    "th": "finite t ⊢ ∀a. ∀s. nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j)) ⟶ ¬(a ∈ s) ⟶ finite s ⟶ nsum (insert a s) (λi. nsum t (f i)) = nsum t (λj. nsum (insert a s) (λi. f i j))"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t ⊢ nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j))"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ⟶ nsum s (λi. nsum t (f i)) = nsum t (λj. nsum s (λi. f i j))"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_0"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "a,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. f i j)",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "4.4",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. nsum t (f i))",
                    "param_x": "a",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "4.6",
                        "4.3"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.7"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ 'c ⇒ nat",
                "s": "'b set",
                "t": "'c set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_image",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_image, {f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ iterate plus (image f s) g = iterate plus s (g ∘ f)"
                },
                {
                    "args": "nsum_def, nsum (image f s) g = nsum s (g ∘ f)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ nsum (image f s) g = nsum s (g ∘ f)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y) ⟶ nsum (image f s) g = nsum s (g ∘ f)"
                }
            ],
            "prop": [
                "(∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y) ",
                "⟶ nsum (image f s) g = nsum s (g ∘ f)"
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b",
                "g": "'b ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_superset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "u ⊆ v",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "u ⊆ v ⊢ u ⊆ v"
                },
                {
                    "args": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = neutral plus",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_superset",
                    "id": "4",
                    "prevs": [
                        "2",
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ iterate plus v f = iterate plus u f"
                },
                {
                    "args": "nsum_def, nsum v f = nsum u f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ nsum v f = nsum u f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ u ⊆ v ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum v f = nsum u f"
                }
            ],
            "prop": "u ⊆ v ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum v f = nsum u f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_superset"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "u": "'b set",
                "v": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_univ",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "support plus f univ ⊆ s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "support plus f univ ⊆ s ⊢ support plus f univ ⊆ s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_univ",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "support plus f univ ⊆ s ⊢ iterate plus s f = iterate plus univ f"
                },
                {
                    "args": "nsum_def, nsum s f = nsum univ f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "support plus f univ ⊆ s ⊢ nsum s f = nsum univ f"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ support plus f univ ⊆ s ⟶ nsum s f = nsum univ f"
                }
            ],
            "prop": "support plus f univ ⊆ s ⟶ nsum s f = nsum univ f",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_univ"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_union_rzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "u ∪ v = u ∪ {x. x ∈ v ∧ ¬(x ∈ u)}",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∪ v = u ∪ {x. x ∈ v ∧ ¬(x ∈ u)}"
                },
                {
                    "args": "diff_def, u ∪ v = u ∪ diff v u",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ u ∪ v = u ∪ diff v u"
                },
                {
                    "args": "subset_union_id, {A: u, B: diff v u}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ u ⊆ u ∪ diff v u"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ u ∪ diff v u ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "x, 'b",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ u ∪ diff v u",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∪ diff v u"
                },
                {
                    "args": "¬(x ∈ u)",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ u) ⊢ ¬(x ∈ u)"
                },
                {
                    "args": "diff_def",
                    "id": "5.3",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∪ {x1. x1 ∈ v ∧ ¬(x1 ∈ u)}"
                },
                {
                    "args": "member_union_iff",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∨ x ∈ {x1. x1 ∈ v ∧ ¬(x1 ∈ u)}"
                },
                {
                    "args": "member_collect",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∨ x ∈ v ∧ ¬(x ∈ u)"
                },
                {
                    "args": "",
                    "id": "5.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ x ∈ u ⟶ x ∈ v"
                },
                {
                    "args": "x ∈ u",
                    "id": "5.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ u ⊢ x ∈ u"
                },
                {
                    "args": "negE_gen, {A: x ∈ u, C: x ∈ v}",
                    "id": "5.6.1",
                    "prevs": [
                        "5.2",
                        "5.6.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ u, ¬(x ∈ u) ⊢ x ∈ v"
                },
                {
                    "args": "",
                    "id": "5.6.2",
                    "prevs": [
                        "5.6.0",
                        "5.6.1"
                    ],
                    "rule": "intros",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ x ∈ u ⟶ x ∈ v"
                },
                {
                    "args": "",
                    "id": "5.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ x ∈ v ∧ ¬(x ∈ u) ⟶ x ∈ v"
                },
                {
                    "args": "x ∈ v ∧ ¬(x ∈ u)",
                    "id": "5.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ v ∧ ¬(x ∈ u) ⊢ x ∈ v ∧ ¬(x ∈ u)"
                },
                {
                    "args": "conjD1",
                    "id": "5.7.1",
                    "prevs": [
                        "5.7.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ v ∧ ¬(x ∈ u) ⊢ x ∈ v"
                },
                {
                    "args": "",
                    "id": "5.7.2",
                    "prevs": [
                        "5.7.0",
                        "5.7.1"
                    ],
                    "rule": "intros",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ x ∈ v ∧ ¬(x ∈ u) ⟶ x ∈ v"
                },
                {
                    "args": "disjE",
                    "id": "5.8",
                    "prevs": [
                        "5.5",
                        "5.6",
                        "5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ x ∈ v"
                },
                {
                    "args": "x",
                    "id": "5.9",
                    "prevs": [
                        "1",
                        "5.8",
                        "5.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "5.10",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2",
                        "5.9"
                    ],
                    "rule": "intros",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ u ∪ diff v u ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "nsum_superset",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ nsum (u ∪ diff v u) f = nsum u f"
                },
                {
                    "args": "nsum (u ∪ v) f = nsum u f",
                    "id": "7",
                    "prevs": [
                        "3",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ nsum (u ∪ v) f = nsum u f"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum (u ∪ v) f = nsum u f"
                }
            ],
            "prop": "finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum (u ∪ v) f = nsum u f",
            "steps": [
                {
                    "goal": "u ∪ v = u ∪ (diff v u)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_superset"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "5.3",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "5.3"
                    ],
                    "goal_id": "5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_union_iff"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.5"
                    ],
                    "goal_id": "5.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.2",
                        "5.6.0"
                    ],
                    "goal_id": "5.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.7.0"
                    ],
                    "goal_id": "5.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "u": "'b set",
                "v": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_union_lzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "nsum_union_rzero",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ nsum (u ∪ v) f = nsum u f"
                },
                {
                    "args": "union_comm, nsum (v ∪ u) f = nsum u f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ nsum (v ∪ u) f = nsum u f"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum (v ∪ u) f = nsum u f"
                }
            ],
            "prop": "finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ nsum (v ∪ u) f = nsum u f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "union_comm"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_union_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "u": "'b set",
                "v": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_restrict",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "x, 'a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "if_P, (if x ∈ s then f x else 0) = f x",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ s ⊢ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "nsum_eq",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s (λx. if x ∈ s then f x else 0) = nsum s f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s (λx. if x ∈ s then f x else 0) = nsum s f"
                }
            ],
            "prop": "finite s ⟶ nsum s (λx. if x ∈ s then f x else 0) = nsum s f",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "nsum_const, {c: b}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum s (λn. b) = card s * b"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s ⊢ card s * b = nsum s (λn. b)"
                },
                {
                    "args": "nsum_le",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b ⊢ nsum s f ≤ nsum s (λx. b)"
                },
                {
                    "args": "nsum s f ≤ card s * b",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b ⊢ nsum s f ≤ card s * b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ nsum s f ≤ card s * b"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ nsum s f ≤ card s * b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_c": "b",
                    "theorem": "nsum_const"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_bound_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b DIV card s",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ ∀x. x ∈ s ⟶ f x ≤ b DIV card s"
                },
                {
                    "args": "card_eq_0",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ card s = 0 ⟷ s = ∅"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s ⊢ s = ∅ ⟷ card s = 0"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, ¬(s = ∅) ⊢ ¬(card s = 0)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ ∀x. x ∈ s ⟶ card s * f x ≤ b"
                },
                {
                    "args": "x, 'a",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "le_rdiv_eq, {b: b, n: f x}",
                    "id": "6.2",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅) ⊢ f x ≤ b DIV card s ⟷ card s * f x ≤ b"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(s = ∅) ⊢ card s * f x ≤ b ⟷ f x ≤ b DIV card s"
                },
                {
                    "args": "x",
                    "id": "6.4",
                    "prevs": [
                        "2",
                        "6.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ f x ≤ b DIV card s"
                },
                {
                    "args": "card s * f x ≤ b",
                    "id": "6.5",
                    "prevs": [
                        "6.3",
                        "6.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ card s * f x ≤ b"
                },
                {
                    "args": "",
                    "id": "6.6",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ ∀x. x ∈ s ⟶ card s * f x ≤ b"
                },
                {
                    "args": "nsum_bound",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ nsum s (λx. card s * f x) ≤ card s * b"
                },
                {
                    "args": "nsum_lmul",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ card s * nsum s f ≤ card s * b"
                },
                {
                    "args": "mult_comm",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ nsum s f * card s ≤ b * card s"
                },
                {
                    "args": "le_mult_rcancel",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ nsum s f ≤ b ∨ card s = 0"
                },
                {
                    "args": "nsum s f ≤ b ⟶ nsum s f ≤ b",
                    "id": "11",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ nsum s f ≤ b ⟶ nsum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ card s = 0 ⟶ nsum s f ≤ b"
                },
                {
                    "args": "card s = 0",
                    "id": "12.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "card s = 0 ⊢ card s = 0"
                },
                {
                    "args": "negE_gen, {A: card s = 0, C: nsum s f ≤ b}",
                    "id": "12.1",
                    "prevs": [
                        "5",
                        "12.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅), card s = 0 ⊢ nsum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "12.2",
                    "prevs": [
                        "12.0",
                        "12.1"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ card s = 0 ⟶ nsum s f ≤ b"
                },
                {
                    "args": "disjE",
                    "id": "13",
                    "prevs": [
                        "10",
                        "11",
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b DIV card s ⊢ nsum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "13"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x ≤ b DIV card s) ⟶ nsum s f ≤ b"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x ≤ b DIV card s) ⟶ nsum s f ≤ b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "card_eq_0"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4",
                        "1"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "nsum s (%x. card s * f x) <= card s * b",
                    "goal_id": "6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_bound"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6.2",
                    "method_name": "apply_forward_step",
                    "param_b": "b",
                    "param_n": "f x",
                    "theorem": "le_rdiv_eq"
                },
                {
                    "fact_ids": [
                        "6.2"
                    ],
                    "goal_id": "6.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "6.3"
                    ],
                    "goal_id": "6.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "6.4",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nsum_lmul"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_mult_rcancel"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "12",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5",
                        "12.0"
                    ],
                    "goal_id": "12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_bound_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < b",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ∧ f x < b ⊢ ∃x. x ∈ s ∧ f x < b"
                },
                {
                    "args": "nsum_lt",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ nsum s f < nsum s (λx. b)"
                },
                {
                    "args": "nsum_const, {c: b}",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum s (λn. b) = card s * b"
                },
                {
                    "args": "less_eq_refl, {n: card s * b}",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ card s * b ≤ card s * b"
                },
                {
                    "args": "nsum s (λx. b) ≤ card s * b",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ nsum s (λn. b) ≤ card s * b"
                },
                {
                    "args": "lte_trans",
                    "id": "7",
                    "prevs": [
                        "3",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ nsum s f < card s * b"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ (∃x. x ∈ s ∧ f x < b) ⟶ nsum s f < card s * b"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ (∃x. x ∈ s ∧ f x < b) ⟶ nsum s f < card s * b",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_m": "nsum s (%x::'a. b)",
                    "theorem": "lte_trans"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_lt"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_c": "b",
                    "theorem": "nsum_const"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "nat",
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_union_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "s ∩ t = ∅",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ∩ t = ∅ ⊢ s ∩ t = ∅"
                },
                {
                    "args": "s ∪ t = u",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ∪ t = u ⊢ s ∪ t = u"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "s ∪ t = u ⊢ u = s ∪ t"
                },
                {
                    "args": "subset_union_id, {A: s, B: t}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ s ⊆ s ∪ t"
                },
                {
                    "args": "s ⊆ u",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ s ⊆ u"
                },
                {
                    "args": "finite_subset",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ finite s"
                },
                {
                    "args": "subset_union_id, {A: t, B: s}",
                    "id": "7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ t ⊆ t ∪ s"
                },
                {
                    "args": "union_comm, t ⊆ s ∪ t",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ t ⊆ s ∪ t"
                },
                {
                    "args": "t ⊆ u",
                    "id": "9",
                    "prevs": [
                        "3",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ t ⊆ u"
                },
                {
                    "args": "finite_subset",
                    "id": "10",
                    "prevs": [
                        "0",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ finite t"
                },
                {
                    "args": "disjoint_def, disjoint s t",
                    "id": "11",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ disjoint s t"
                },
                {
                    "args": "nsum_union, {f: f, s: s, t: t}",
                    "id": "12",
                    "prevs": [
                        "6",
                        "10",
                        "11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ nsum (s ∪ t) f = nsum s f + nsum t f"
                },
                {
                    "args": "eq_sym_eq, nsum s f + nsum t f = nsum (s ∪ t) f",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ nsum s f + nsum t f = nsum (s ∪ t) f"
                },
                {
                    "args": "nsum s f + nsum t f = nsum u f",
                    "id": "14",
                    "prevs": [
                        "3",
                        "13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ nsum s f + nsum t f = nsum u f"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "14"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ s ∩ t = ∅ ⟶ s ∪ t = u ⟶ nsum s f + nsum t f = nsum u f"
                }
            ],
            "prop": "finite u ⟶ s ∩ t = ∅ ⟶ s ∪ t = u ⟶ nsum s f + nsum t f = nsum u f",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_union"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_t": "u",
                    "theorem": "finite_subset"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "param_t": "u",
                    "theorem": "finite_subset"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "union_comm"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "s": "'b set",
                "t": "'b set",
                "u": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_eq_superset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite t",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "t ⊆ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "t ⊆ s ⊢ t ⊆ s"
                },
                {
                    "args": "∀x. x ∈ t ⟶ f x = g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ t ⟶ f x = g x ⊢ ∀x. x ∈ t ⟶ f x = g x"
                },
                {
                    "args": "∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0"
                },
                {
                    "args": "nsum_superset",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "t ⊆ s, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ nsum s f = nsum t f"
                },
                {
                    "args": "nsum_eq",
                    "id": "5",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite t, t ⊆ s, ∀x. x ∈ t ⟶ f x = g x, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ nsum t f = nsum t g"
                },
                {
                    "args": "nsum s f = nsum t g",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite t, t ⊆ s, ∀x. x ∈ t ⟶ f x = g x, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ nsum s f = nsum t g"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite t ⟶ t ⊆ s ⟶ (∀x. x ∈ t ⟶ f x = g x) ⟶ (∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0) ⟶ nsum s f = nsum t g"
                }
            ],
            "prop": [
                "finite t ",
                "⟶ t ⊆ s ",
                "   ⟶ (∀x. x ∈ t ⟶ f x = g x) ⟶ (∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0) ⟶ nsum s f = nsum t g"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "nsum_superset"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "g": "'b ⇒ nat",
                "s": "'b set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_restrict_set",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_restrict_set, {P: P, f: f, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else neutral plus)"
                },
                {
                    "args": "neutral_nat_add, iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else 0)"
                },
                {
                    "args": "nsum_def, nsum ({x. x ∈ s ∧ P x}) f = nsum s (λx. if P x then f x else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({x. x ∈ s ∧ P x}) f = nsum s (λx. if P x then f x else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({x. x ∈ s ∧ P x}) f = nsum s (λx. if P x then f x else 0)"
                }
            ],
            "prop": "nsum ({x. x ∈ s ∧ P x}) f = nsum s (λx. if P x then f x else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_restrict_set"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'b ⇒ bool",
                "f": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_nsum_restrict",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "nsum_swap, {f: λi. λx1. if R i x1 then f i x1 else 0, s: s, t: t}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t ⊢ nsum s (λi. nsum t (λx1. if R i x1 then f i x1 else 0)) = nsum t (λj. nsum s (λi. if R i j then f i j else 0))"
                },
                {
                    "args": "nsum_restrict_set, nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) (λx. f x y))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = ",
                "      nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_restrict_set"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_swap"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "f": "'a ⇒ 'b ⇒ nat",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "card_eq_nsum",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "nsum_const, {c: (1::nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum s (λn. 1) = card s * 1"
                },
                {
                    "args": "mult_1_right, card s = card s * 1",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ card s = card s * 1"
                },
                {
                    "args": "card s = nsum s (λx. 1)",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s ⊢ card s = nsum s (λn. 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ card s = nsum s (λx. 1)"
                }
            ],
            "prop": "finite s ⟶ card s = nsum s (λx. 1)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_c": "(1::nat)",
                    "theorem": "nsum_const"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_multicount_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ s ⟶ card ({j. j ∈ t ∧ R x j}) = nsum ({j. j ∈ t ∧ R x j}) (λj. 1)"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ t ∧ R x x1 ⟶ x1 ∈ t"
                },
                {
                    "args": "x1, 'b",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ t ∧ R x x1",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ t ∧ R x x1 ⊢ x1 ∈ t ∧ R x x1"
                },
                {
                    "args": "conjD1",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ t ∧ R x x1 ⊢ x1 ∈ t"
                },
                {
                    "args": "",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.0",
                        "3.2.1",
                        "3.2.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ t ∧ R x x1 ⟶ x1 ∈ t"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {j. j ∈ t ∧ R x j} ⟶ x1 ∈ t",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ {j. j ∈ t ∧ R x j} ⟶ x1 ∈ t"
                },
                {
                    "args": "subsetI",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ {j. j ∈ t ∧ R x j} ⊆ t"
                },
                {
                    "args": "finite_subset",
                    "id": "3.5",
                    "prevs": [
                        "1",
                        "3.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ finite ({j. j ∈ t ∧ R x j})"
                },
                {
                    "args": "card_eq_nsum",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ card ({j. j ∈ t ∧ R x j}) = nsum ({j. j ∈ t ∧ R x j}) (λx1. 1)"
                },
                {
                    "args": "",
                    "id": "3.7",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ s ⟶ card ({j. j ∈ t ∧ R x j}) = nsum ({j. j ∈ t ∧ R x j}) (λj. 1)"
                },
                {
                    "args": "nsum_eq",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum s (λx. card ({j. j ∈ t ∧ R x j})) = nsum s (λx. nsum ({j. j ∈ t ∧ R x j}) (λj. 1))"
                },
                {
                    "args": "nsum_nsum_restrict, {R: R, f: λi::'a. λj::'b. (1::nat)}",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t ⊢ nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. 1)) = nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) (λx. 1))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ t ⟶ nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = k x"
                },
                {
                    "args": "x, 'b",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s"
                },
                {
                    "args": "x1, 'a",
                    "id": "6.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ s ∧ R x1 x",
                    "id": "6.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "conjD1",
                    "id": "6.2.2",
                    "prevs": [
                        "6.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s"
                },
                {
                    "args": "",
                    "id": "6.2.3",
                    "prevs": [
                        "6.2.0",
                        "6.2.1",
                        "6.2.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟶ x1 ∈ s",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟶ x1 ∈ s"
                },
                {
                    "args": "subsetI",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ {x1. x1 ∈ s ∧ R x1 x} ⊆ s"
                },
                {
                    "args": "finite_subset",
                    "id": "6.5",
                    "prevs": [
                        "0",
                        "6.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ finite ({x1. x1 ∈ s ∧ R x1 x})"
                },
                {
                    "args": "card_eq_nsum",
                    "id": "6.6",
                    "prevs": [
                        "6.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ card ({x1. x1 ∈ s ∧ R x1 x}) = nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "6.7",
                    "prevs": [
                        "6.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = card ({x1. x1 ∈ s ∧ R x1 x})"
                },
                {
                    "args": "x",
                    "id": "6.8",
                    "prevs": [
                        "2",
                        "6.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ card ({i. i ∈ s ∧ R i x}) = k x"
                },
                {
                    "args": "nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = k x",
                    "id": "6.9",
                    "prevs": [
                        "6.7",
                        "6.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = k x"
                },
                {
                    "args": "",
                    "id": "6.10",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.9"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ t ⟶ nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = k x"
                },
                {
                    "args": "nsum_eq",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum t (λx. nsum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1)) = nsum t k"
                },
                {
                    "args": "nsum s (λx. nsum ({j. j ∈ t ∧ R x j}) (λj. 1)) = nsum t (λi. k i)",
                    "id": "8",
                    "prevs": [
                        "5",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum s (λx. nsum ({y. y ∈ t ∧ R x y}) (λy. 1)) = nsum t (λi. k i)"
                },
                {
                    "args": "nsum s (λi. card ({j. j ∈ t ∧ R i j})) = nsum t (λi. k i)",
                    "id": "9",
                    "prevs": [
                        "4",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ nsum s (λx. card ({j. j ∈ t ∧ R x j})) = nsum t (λi. k i)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j) ⟶ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = nsum t (λi. k i)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j) ",
                "      ⟶ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = nsum t (λi. k i)"
            ],
            "steps": [
                {
                    "goal": "nsum s (λi. card ({j. j ∈ t ∧ R i j})) =nsum s (%i. nsum {j. j ∈ t ∧ R i j} (%j. 1))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "card_eq_nsum"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "param_t": "t",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "3.2.1"
                    ],
                    "goal_id": "3.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "(%i::'a. %j::'b. (1::nat))",
                    "theorem": "nsum_nsum_restrict"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal": "finite ({x1. x1 ∈ s ∧ R x1 x})",
                    "goal_id": "6.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "param_t": "s",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "6.2.1"
                    ],
                    "goal_id": "6.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.5"
                    ],
                    "goal_id": "6.6",
                    "method_name": "apply_forward_step",
                    "theorem": "card_eq_nsum"
                },
                {
                    "fact_ids": [
                        "6.6"
                    ],
                    "goal_id": "6.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "6.7"
                    ],
                    "goal_id": "6.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "6.8",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "f": "'a ⇒ 'b ⇒ nat",
                "k": "'b ⇒ nat",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_multicount",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k"
                },
                {
                    "args": "nsum_multicount_gen",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = nsum t (λi. k)"
                },
                {
                    "args": "nsum_const, {c: k, s: t}",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ nsum t (λn. k) = card t * k"
                },
                {
                    "args": "mult_comm, nsum t (λi. k) = k * card t",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ nsum t (λi. k) = k * card t"
                },
                {
                    "args": "nsum s (λi. card ({j. j ∈ t ∧ R i j})) = k * card t",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = k * card t"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k) ⟶ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = k * card t"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k) ",
                "      ⟶ nsum s (λi. card ({j. j ∈ t ∧ R i j})) = k * card t"
            ],
            "steps": [
                {
                    "goal": "nsum s (λi. card ({j. j ∈ t ∧ R i j})) = nsum t (%i. k)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_multicount_gen"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_const"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "f": "'a ⇒ 'b ⇒ nat",
                "k": "nat",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_image_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_image_gen, {f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s g = iterate plus (image f s) (λy. iterate plus ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "nsum_def, nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)"
                }
            ],
            "prop": "finite s ⟶ nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image_gen"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ 'a",
                "g": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_group",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "image f s ⊆ t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "image f s ⊆ t ⊢ image f s ⊆ t"
                },
                {
                    "args": "nsum_image_gen, {f: f, g: g, s: s}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite s ⟶ nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s ⊢ nsum s g = nsum (image f s) (λy. nsum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, image f s ⊆ t ⊢ ∀x. x ∈ t ⟶ ¬(x ∈ image f s) ⟶ nsum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "¬(x ∈ image f s)",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ image f s) ⊢ ¬(x ∈ image f s)"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ ∀x1. x1 ∈ s ∧ f x1 = x ⟶ g x1 = 0"
                },
                {
                    "args": "x1, 'b",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ s ∧ f x1 = x",
                    "id": "4.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ f x1 = x ⊢ x1 ∈ s ∧ f x1 = x"
                },
                {
                    "args": "in_image",
                    "id": "4.3.2",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(x ∈ image f s) ⊢ ¬(∃x1. x = f x1 ∧ x1 ∈ s)"
                },
                {
                    "args": "exI, {P: λa1. a1 ∈ s ∧ f a1 = x, a: x1}",
                    "id": "4.3.3",
                    "prevs": [
                        "4.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x1 ∈ s ∧ f x1 = x ⊢ ∃a1. a1 ∈ s ∧ f a1 = x"
                },
                {
                    "args": "eq_sym_eq, ∃x1. x1 ∈ s ∧ x = f x1",
                    "id": "4.3.4",
                    "prevs": [
                        "4.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ s ∧ f x1 = x ⊢ ∃x1. x1 ∈ s ∧ x = f x1"
                },
                {
                    "args": "conj_comm, ∃x1. x = f x1 ∧ x1 ∈ s",
                    "id": "4.3.5",
                    "prevs": [
                        "4.3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ s ∧ f x1 = x ⊢ ∃x1. x = f x1 ∧ x1 ∈ s"
                },
                {
                    "args": "negE_gen, {A: ∃x1. x = f x1 ∧ x1 ∈ s, C: g x1 = 0}",
                    "id": "4.3.6",
                    "prevs": [
                        "4.3.2",
                        "4.3.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ s ∧ f x1 = x ⊢ g x1 = 0"
                },
                {
                    "args": "",
                    "id": "4.3.7",
                    "prevs": [
                        "4.3.0",
                        "4.3.1",
                        "4.3.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ ∀x1. x1 ∈ s ∧ f x1 = x ⟶ g x1 = 0"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⟶ g x1 = 0",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⟶ g x1 = 0"
                },
                {
                    "args": "nsum_eq_0",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ nsum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "",
                    "id": "4.6",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, image f s ⊆ t ⊢ ∀x. x ∈ t ⟶ ¬(x ∈ image f s) ⟶ nsum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "nsum_superset",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, image f s ⊆ t ⊢ nsum t (λx. nsum ({x1. x1 ∈ s ∧ f x1 = x}) g) = nsum (image f s) (λx. nsum ({x1. x1 ∈ s ∧ f x1 = x}) g)"
                },
                {
                    "args": "nsum t (λy. nsum ({x. x ∈ s ∧ f x = y}) g) = nsum s g",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, image f s ⊆ t ⊢ nsum t (λy. nsum ({x. x ∈ s ∧ f x = y}) g) = nsum s g"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ image f s ⊆ t ⟶ nsum t (λy. nsum ({x. x ∈ s ∧ f x = y}) g) = nsum s g"
                }
            ],
            "prop": "finite s ⟶ image f s ⊆ t ⟶ nsum t (λy. nsum ({x. x ∈ s ∧ f x = y}) g) = nsum s g",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_g": "g",
                    "param_s": "s",
                    "theorem": "nsum_image_gen"
                },
                {
                    "fact_ids": [
                        "2",
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_superset"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_0"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "fact_ids": [
                        "4.3.2"
                    ],
                    "goal_id": "4.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4.3.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "4.3.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.3.1"
                    ],
                    "goal_id": "4.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ 'a",
                "g": "'b ⇒ nat",
                "s": "'b set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_group_relation",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)"
                },
                {
                    "args": "nsum_group, {f: λx. THE y. y ∈ t ∧ R x y, g: g, t: t}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t ⟶ nsum t (λy. nsum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g) = nsum s g"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. (∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s) ⟶ x ∈ t"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ ∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s"
                },
                {
                    "args": "x1, 'b",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s"
                },
                {
                    "args": "conjD1",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x = (THE y. y ∈ t ∧ R x1 y)"
                },
                {
                    "args": "conjD2",
                    "id": "3.5",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "1",
                        "3.5"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "theI'",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "conjD1",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t"
                },
                {
                    "args": "x ∈ t",
                    "id": "3.9",
                    "prevs": [
                        "3.4",
                        "3.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s, ∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x ∈ t"
                },
                {
                    "args": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.10",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.9"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. (∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s) ⟶ x ∈ t"
                },
                {
                    "args": "in_image, ∀x. x ∈ image (λx1. THE y. y ∈ t ∧ R x1 y) s ⟶ x ∈ t",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ image (λx1. THE y. y ∈ t ∧ R x1 y) s ⟶ x ∈ t"
                },
                {
                    "args": "subsetI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ nsum t (λy. nsum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g) = nsum s g"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ nsum s g = nsum t (λy. nsum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ t ⟶ nsum ({x1. x1 ∈ s ∧ R x1 x}) g = nsum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "x, 'a",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "8.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "",
                    "id": "8.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "x1, 'b",
                    "id": "8.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "",
                    "id": "8.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "x1 ∈ s ∧ R x1 x",
                    "id": "8.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.1.1",
                    "prevs": [
                        "8.2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.1.2",
                    "prevs": [
                        "8.2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ R x1 x"
                },
                {
                    "args": "",
                    "id": "8.2.1.3",
                    "prevs": [
                        "1",
                        "8.2.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "exists1_def",
                    "id": "8.2.1.4",
                    "prevs": [
                        "8.2.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∃x. (x ∈ t ∧ R x1 x) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x)"
                },
                {
                    "args": "x2, 'a",
                    "id": "8.2.1.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2)",
                    "id": "8.2.1.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2)"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.1.7",
                    "prevs": [
                        "8.2.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x2 ∈ t ∧ R x1 x2"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.1.8",
                    "prevs": [
                        "8.2.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ ∀y. y ∈ t ∧ R x1 y ⟶ y = x2"
                },
                {
                    "args": "theI'",
                    "id": "8.2.1.9",
                    "prevs": [
                        "8.2.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "",
                    "id": "8.2.1.10",
                    "prevs": [
                        "8.2.1.8",
                        "8.2.1.9"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (THE x. x ∈ t ∧ R x1 x) = x2"
                },
                {
                    "args": "conjI",
                    "id": "8.2.1.11",
                    "prevs": [
                        "8.1",
                        "8.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x ∈ t ∧ R x1 x"
                },
                {
                    "args": "x",
                    "id": "8.2.1.12",
                    "prevs": [
                        "8.2.1.8",
                        "8.2.1.11"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x = x2"
                },
                {
                    "args": "eq_sym_eq, x2 = x",
                    "id": "8.2.1.13",
                    "prevs": [
                        "8.2.1.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x2 = x"
                },
                {
                    "args": "(THE y. y ∈ t ∧ R x1 y) = x",
                    "id": "8.2.1.14",
                    "prevs": [
                        "8.2.1.10",
                        "8.2.1.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (THE x2. x2 ∈ t ∧ R x1 x2) = x"
                },
                {
                    "args": "conjI",
                    "id": "8.2.1.15",
                    "prevs": [
                        "8.2.1.1",
                        "8.2.1.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "∃x. (x ∈ t ∧ R x1 x) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x)",
                    "id": "8.2.1.16",
                    "prevs": [
                        "8.2.1.0",
                        "8.2.1.4",
                        "8.2.1.5",
                        "8.2.1.6",
                        "8.2.1.15"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⟶ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x",
                    "id": "8.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.2.1",
                    "prevs": [
                        "8.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.2.2",
                    "prevs": [
                        "8.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.2.3",
                    "prevs": [
                        "1",
                        "8.2.2.1"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "theI'",
                    "id": "8.2.2.4",
                    "prevs": [
                        "8.2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.2.5",
                    "prevs": [
                        "8.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "",
                    "id": "8.2.2.6",
                    "prevs": [
                        "8.2.2.2",
                        "8.2.2.5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ R x1 x"
                },
                {
                    "args": "conjI",
                    "id": "8.2.2.7",
                    "prevs": [
                        "8.2.2.1",
                        "8.2.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "",
                    "id": "8.2.2.8",
                    "prevs": [
                        "8.2.2.0",
                        "8.2.2.7"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⟶ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "iffI",
                    "id": "8.2.3",
                    "prevs": [
                        "8.2.1",
                        "8.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.4",
                    "prevs": [
                        "8.2.0",
                        "8.2.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟷ x1 ∈ {x11. x11 ∈ s ∧ (THE y. y ∈ t ∧ R x11 y) = x}",
                    "id": "8.3",
                    "prevs": [
                        "8.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟷ x1 ∈ {x11. x11 ∈ s ∧ (THE y. y ∈ t ∧ R x11 y) = x}"
                },
                {
                    "args": "member_ext",
                    "id": "8.4",
                    "prevs": [
                        "8.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ {x1. x1 ∈ s ∧ R x1 x} = {x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}"
                },
                {
                    "args": "nsum ({x1. x1 ∈ s ∧ R x1 x}) g = nsum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g",
                    "id": "8.5",
                    "prevs": [
                        "8.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ nsum ({x1. x1 ∈ s ∧ R x1 x}) g = nsum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "",
                    "id": "8.6",
                    "prevs": [
                        "8.0",
                        "8.1",
                        "8.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ t ⟶ nsum ({x1. x1 ∈ s ∧ R x1 x}) g = nsum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "nsum_eq",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ nsum t (λx. nsum ({x1. x1 ∈ s ∧ R x1 x}) g) = nsum t (λx. nsum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g)"
                },
                {
                    "args": "nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) g) = nsum s g",
                    "id": "10",
                    "prevs": [
                        "7",
                        "9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) g) = nsum s g"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)) ⟶ nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) g) = nsum s g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)) ",
                "   ⟶ nsum t (λy. nsum ({x. x ∈ s ∧ R x y}) g) = nsum s g"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "(%x. (THE y. y ∈ t ∧ R x y))",
                    "param_g": "g",
                    "param_t": "t",
                    "theorem": "nsum_group"
                },
                {
                    "goal": "image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "exists_elim",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.5"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal": "{x1. x1 ∈ s ∧ R x1 x} = {x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}",
                    "goal_id": "8.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.2.1.0"
                    ],
                    "goal_id": "8.2.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.1.0"
                    ],
                    "goal_id": "8.2.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "8.2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1",
                        "8.2.1.1"
                    ],
                    "goal_id": "8.2.1.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.1.3"
                    ],
                    "goal_id": "8.2.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "",
                    "theorem": "exists1_def"
                },
                {
                    "fact_ids": [
                        "8.2.1.4"
                    ],
                    "goal_id": "8.2.1.5",
                    "method_name": "exists_elim",
                    "names": "x2"
                },
                {
                    "fact_ids": [
                        "8.2.1.6"
                    ],
                    "goal_id": "8.2.1.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.1.6"
                    ],
                    "goal_id": "8.2.1.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8.2.1.3"
                    ],
                    "goal_id": "8.2.1.9",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "8.2.1.8",
                        "8.2.1.9"
                    ],
                    "goal_id": "8.2.1.10",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.1.10"
                    ],
                    "goal_id": "8.2.1.11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8.2.1.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "8.2.1.8"
                    ],
                    "goal_id": "8.2.1.11",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "8.2.1.11",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "8.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.2.2.0"
                    ],
                    "goal_id": "8.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.2.0"
                    ],
                    "goal_id": "8.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "8.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1",
                        "8.2.2.1"
                    ],
                    "goal_id": "8.2.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.2.3"
                    ],
                    "goal_id": "8.2.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "8.2.2.4"
                    ],
                    "goal_id": "8.2.2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8.2.2.2",
                        "8.2.2.5"
                    ],
                    "goal_id": "8.2.2.6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "8.4"
                    ],
                    "goal_id": "8.5",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'b ⇒ 'a ⇒ bool",
                "g": "'b ⇒ nat",
                "s": "'b set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_subset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "finite v",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite v ⊢ finite v"
                },
                {
                    "args": "∀x. x ∈ diff u v ⟶ f x = 0",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀x. x ∈ diff u v ⟶ f x = 0"
                },
                {
                    "args": "nsum_union, {f: f, s: u ∩ v}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∀t. finite (u ∩ v) ⟶ finite t ⟶ disjoint (u ∩ v) t ⟶ nsum (u ∩ v ∪ t) f = nsum (u ∩ v) f + nsum t f"
                },
                {
                    "args": "inter_subset_id, {A: u, B: v}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ u ∩ v ⊆ u"
                },
                {
                    "args": "finite_subset",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ finite (u ∩ v)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀t. finite t ⟶ disjoint (u ∩ v) t ⟶ nsum (u ∩ v ∪ t) f = nsum (u ∩ v) f + nsum t f"
                },
                {
                    "args": "diff u v",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ finite (diff u v) ⟶ disjoint (u ∩ v) (diff u v) ⟶ nsum (u ∩ v ∪ diff u v) f = nsum (u ∩ v) f + nsum (diff u v) f"
                },
                {
                    "args": "diff v u",
                    "id": "8",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ finite (diff v u) ⟶ disjoint (u ∩ v) (diff v u) ⟶ nsum (u ∩ v ∪ diff v u) f = nsum (u ∩ v) f + nsum (diff v u) f"
                },
                {
                    "args": "finite_diff, {s: u, t: v}",
                    "id": "9",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ finite (diff u v)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "7",
                        "9"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ disjoint (u ∩ v) (diff u v) ⟶ nsum (u ∩ v ∪ diff u v) f = nsum (u ∩ v) f + nsum (diff u v) f"
                },
                {
                    "args": "finite_diff, {s: v, t: u}",
                    "id": "11",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ finite (diff v u)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ disjoint (u ∩ v) (diff v u) ⟶ nsum (u ∩ v ∪ diff v u) f = nsum (u ∩ v) f + nsum (diff v u) f"
                },
                {
                    "args": "∀s. ∀t. s ∩ t ∩ {x::'a. x ∈ s ∧ ¬(x ∈ t)} = ∅",
                    "id": "13",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀s. ∀t. s ∩ t ∩ {x::'a. x ∈ s ∧ ¬(x ∈ t)} = ∅"
                },
                {
                    "args": "diff_def, ∀s::'a set. ∀t. s ∩ t ∩ diff s t = ∅",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀s::'a set. ∀t. s ∩ t ∩ diff s t = ∅"
                },
                {
                    "args": "disjoint_def, ∀s::'a set. ∀t. disjoint (s ∩ t) (diff s t)",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀s::'a set. ∀t. disjoint (s ∩ t) (diff s t)"
                },
                {
                    "args": "u",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀t. disjoint (u ∩ t) (diff u t)"
                },
                {
                    "args": "v",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ disjoint (u ∩ v) (diff u v)"
                },
                {
                    "args": "",
                    "id": "18",
                    "prevs": [
                        "10",
                        "17"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum (u ∩ v ∪ diff u v) f = nsum (u ∩ v) f + nsum (diff u v) f"
                },
                {
                    "args": "v",
                    "id": "19",
                    "prevs": [
                        "15"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀t. disjoint (v ∩ t) (diff v t)"
                },
                {
                    "args": "u",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ disjoint (v ∩ u) (diff v u)"
                },
                {
                    "args": "inter_comm",
                    "id": "21",
                    "prevs": [
                        "20"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ disjoint (u ∩ v) (diff v u)"
                },
                {
                    "args": "",
                    "id": "22",
                    "prevs": [
                        "12",
                        "21"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum (u ∩ v ∪ diff v u) f = nsum (u ∩ v) f + nsum (diff v u) f"
                },
                {
                    "args": "∀s. ∀t. s ∩ t ∪ {x::'a. x ∈ s ∧ ¬(x ∈ t)} = s",
                    "id": "23",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀s. ∀t. s ∩ t ∪ {x::'a. x ∈ s ∧ ¬(x ∈ t)} = s"
                },
                {
                    "args": "diff_def, ∀s::'a set. ∀t. s ∩ t ∪ diff s t = s",
                    "id": "24",
                    "prevs": [
                        "23"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀s::'a set. ∀t. s ∩ t ∪ diff s t = s"
                },
                {
                    "args": "u",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀t. u ∩ t ∪ diff u t = u"
                },
                {
                    "args": "v",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ u ∩ v ∪ diff u v = u"
                },
                {
                    "args": "",
                    "id": "27",
                    "prevs": [
                        "26",
                        "18"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum u f = nsum (u ∩ v) f + nsum (diff u v) f"
                },
                {
                    "args": "v",
                    "id": "28",
                    "prevs": [
                        "24"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ ∀t. v ∩ t ∪ diff v t = v"
                },
                {
                    "args": "u",
                    "id": "29",
                    "prevs": [
                        "28"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ v ∩ u ∪ diff v u = v"
                },
                {
                    "args": "inter_comm",
                    "id": "30",
                    "prevs": [
                        "29"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ u ∩ v ∪ diff v u = v"
                },
                {
                    "args": "",
                    "id": "31",
                    "prevs": [
                        "30",
                        "22"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum v f = nsum (u ∩ v) f + nsum (diff v u) f"
                },
                {
                    "args": "nsum_eq_0",
                    "id": "32",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum (diff u v) f = 0"
                },
                {
                    "args": "",
                    "id": "33",
                    "prevs": [
                        "32",
                        "27"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum u f = nsum (u ∩ v) f + 0"
                },
                {
                    "args": "add_0_right",
                    "id": "34",
                    "prevs": [
                        "33"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum u f = nsum (u ∩ v) f"
                },
                {
                    "args": "le_add, {m: nsum (u ∩ v) f, n: nsum (diff v u) f}",
                    "id": "35",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum (u ∩ v) f ≤ nsum (u ∩ v) f + nsum (diff v u) f"
                },
                {
                    "args": "nsum (u ∩ v) f ≤ nsum v f",
                    "id": "36",
                    "prevs": [
                        "31",
                        "35"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum (u ∩ v) f ≤ nsum v f"
                },
                {
                    "args": "nsum u f ≤ nsum v f",
                    "id": "37",
                    "prevs": [
                        "34",
                        "36"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x = 0 ⊢ nsum u f ≤ nsum v f"
                },
                {
                    "args": "",
                    "id": "38",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "37"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ finite v ⟶ (∀x. x ∈ diff u v ⟶ f x = 0) ⟶ nsum u f ≤ nsum v f"
                }
            ],
            "prop": "finite u ⟶ finite v ⟶ (∀x. x ∈ diff u v ⟶ f x = 0) ⟶ nsum u f ≤ nsum v f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_s": "inter u v",
                    "param_t": "",
                    "theorem": "nsum_union"
                },
                {
                    "goal": "finite (u ∩ v)",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_t": "u",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "inter_subset_id"
                },
                {
                    "fact_ids": [
                        "3",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "forall_elim",
                    "s": "diff u v"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "8",
                    "method_name": "forall_elim",
                    "s": "diff v u"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal": "finite (diff u v)",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_diff"
                },
                {
                    "fact_ids": [
                        "7",
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "finite (diff v u)",
                    "goal_id": "11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_diff"
                },
                {
                    "fact_ids": [
                        "8",
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "!s::'a set. !t. disjoint (s ∩ t) (diff s t)",
                    "goal_id": "13",
                    "method_name": "cut"
                },
                {
                    "goal_id": "13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_def"
                },
                {
                    "goal_id": "13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "13",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "16",
                    "method_name": "forall_elim",
                    "s": "u"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "forall_elim",
                    "s": "v"
                },
                {
                    "fact_ids": [
                        "10",
                        "17"
                    ],
                    "goal_id": "18",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "19",
                    "method_name": "forall_elim",
                    "s": "v"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "20",
                    "method_name": "forall_elim",
                    "s": "u"
                },
                {
                    "fact_ids": [
                        "20"
                    ],
                    "goal_id": "21",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "inter_comm"
                },
                {
                    "fact_ids": [
                        "12",
                        "21"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "!s::'a set. !t. s ∩ t ∪ diff s t = s",
                    "goal_id": "23",
                    "method_name": "cut"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "23",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "25",
                    "method_name": "forall_elim",
                    "s": "u"
                },
                {
                    "fact_ids": [
                        "25"
                    ],
                    "goal_id": "26",
                    "method_name": "forall_elim",
                    "s": "v"
                },
                {
                    "fact_ids": [
                        "26",
                        "18"
                    ],
                    "goal_id": "27",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "28",
                    "method_name": "forall_elim",
                    "s": "v"
                },
                {
                    "fact_ids": [
                        "28"
                    ],
                    "goal_id": "29",
                    "method_name": "forall_elim",
                    "s": "u"
                },
                {
                    "fact_ids": [
                        "29"
                    ],
                    "goal_id": "30",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "inter_comm"
                },
                {
                    "fact_ids": [
                        "30",
                        "22"
                    ],
                    "goal_id": "31",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "nsum (diff u v) f = 0",
                    "goal_id": "32",
                    "method_name": "cut"
                },
                {
                    "goal_id": "32",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_0"
                },
                {
                    "fact_ids": [
                        "32",
                        "27"
                    ],
                    "goal_id": "33",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "33"
                    ],
                    "goal_id": "34",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "add_0_right"
                },
                {
                    "fact_ids": [
                        "34"
                    ],
                    "goal_id": "35",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "31"
                    ],
                    "goal_id": "35",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "35",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_subset_simple",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite v",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite v ⊢ finite v"
                },
                {
                    "args": "u ⊆ v",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "u ⊆ v ⊢ u ⊆ v"
                },
                {
                    "args": "finite_subset",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite v, u ⊆ v ⊢ finite u"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite v, u ⊆ v ⊢ ∀x. x ∈ diff u v ⟶ f x = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ diff u v",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ diff u v ⊢ x ∈ diff u v"
                },
                {
                    "args": "diff_def",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff u v ⊢ x ∈ {x1. x1 ∈ u ∧ ¬(x1 ∈ v)}"
                },
                {
                    "args": "f x = 0",
                    "id": "3.3",
                    "prevs": [
                        "3.2",
                        "1"
                    ],
                    "rule": "z3",
                    "th": "u ⊆ v, x ∈ diff u v ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "finite v, u ⊆ v ⊢ ∀x. x ∈ diff u v ⟶ f x = 0"
                },
                {
                    "args": "nsum_subset",
                    "id": "4",
                    "prevs": [
                        "2",
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite v, u ⊆ v ⊢ nsum u f ≤ nsum v f"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite v ⟶ u ⊆ v ⟶ nsum u f ≤ nsum v f"
                }
            ],
            "prop": "finite v ⟶ u ⊆ v ⟶ nsum u f ≤ nsum v f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_subset"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_t": "v",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "3.2",
                        "1"
                    ],
                    "goal_id": "3.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_le_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ g x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(g x = 0)})",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(g x = 0)})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ s ∧ ¬(f x = 0) ⟶ x ∈ s ∧ ¬(g x = 0)"
                },
                {
                    "args": "x, 'b",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s ∧ ¬(f x = 0)",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ ¬(f x = 0)"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "0",
                        "2.2"
                    ],
                    "rule": "apply_fact",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ g x = 0 ⟶ f x = 0"
                },
                {
                    "args": "g x = 0",
                    "id": "2.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "g x = 0 ⊢ g x = 0"
                },
                {
                    "args": "",
                    "id": "2.5.1",
                    "prevs": [
                        "2.5.0",
                        "2.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "g x = 0, x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x ⊢ f x ≤ 0"
                },
                {
                    "args": "nat_le_zero",
                    "id": "2.5.2",
                    "prevs": [
                        "2.5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "g x = 0, x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "2.5.3",
                    "prevs": [
                        "2.5.0",
                        "2.5.2"
                    ],
                    "rule": "intros",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ g x = 0 ⟶ f x = 0"
                },
                {
                    "args": "double_neg, ¬¬(g x = 0) ⟶ ¬¬(f x = 0)",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ¬¬(g x = 0) ⟶ ¬¬(f x = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.7",
                    "prevs": [
                        "2.3",
                        "2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ¬(g x = 0)"
                },
                {
                    "args": "conjI",
                    "id": "2.8",
                    "prevs": [
                        "2.2",
                        "2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ x ∈ s ∧ ¬(g x = 0)"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.8"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ s ∧ ¬(f x = 0) ⟶ x ∈ s ∧ ¬(g x = 0)"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ x ∈ {x1. x1 ∈ s ∧ ¬(g x1 = 0)}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ x ∈ {x1. x1 ∈ s ∧ ¬(g x1 = 0)}"
                },
                {
                    "args": "subsetI",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ {x. x ∈ s ∧ ¬(f x = 0)} ⊆ {x. x ∈ s ∧ ¬(g x = 0)}"
                },
                {
                    "args": "finite_subset",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)})"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⟶ f x = 0"
                },
                {
                    "args": "x, 'b",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)})",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)})"
                },
                {
                    "args": "diff_def",
                    "id": "6.2",
                    "prevs": [
                        "6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ {x1. x1 ∈ {x2. x2 ∈ s ∧ ¬(f x2 = 0)} ∧ ¬(x1 ∈ {x2. x2 ∈ s ∧ ¬(g x2 = 0)})}"
                },
                {
                    "args": "member_collect",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ∧ ¬(x ∈ {x1. x1 ∈ s ∧ ¬(g x1 = 0)})"
                },
                {
                    "args": "member_collect",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ (x ∈ s ∧ ¬(f x = 0)) ∧ ¬(x ∈ s ∧ ¬(g x = 0))"
                },
                {
                    "args": "conjD1",
                    "id": "6.5",
                    "prevs": [
                        "6.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD2",
                    "id": "6.6",
                    "prevs": [
                        "6.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ ¬(x ∈ s ∧ ¬(g x = 0))"
                },
                {
                    "args": "conjD1",
                    "id": "6.7",
                    "prevs": [
                        "6.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "6.8",
                    "prevs": [
                        "6.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ ¬(f x = 0)"
                },
                {
                    "args": "",
                    "id": "6.9",
                    "prevs": [
                        "0",
                        "6.7"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "6.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ g x = 0 ⟶ f x = 0"
                },
                {
                    "args": "g x = 0",
                    "id": "6.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "g x = 0 ⊢ g x = 0"
                },
                {
                    "args": "",
                    "id": "6.10.1",
                    "prevs": [
                        "6.10.0",
                        "6.9"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "g x = 0, ∀x. x ∈ s ⟶ f x ≤ g x, x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ f x ≤ 0"
                },
                {
                    "args": "nat_less_eq_def_1",
                    "id": "6.10.2",
                    "prevs": [
                        "6.10.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "g x = 0, ∀x. x ∈ s ⟶ f x ≤ g x, x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "6.10.3",
                    "prevs": [
                        "6.10.0",
                        "6.10.2"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ g x = 0 ⟶ f x = 0"
                },
                {
                    "args": "double_neg, ¬¬(g x = 0) ⟶ ¬¬(f x = 0)",
                    "id": "6.11",
                    "prevs": [
                        "6.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ ¬¬(g x = 0) ⟶ ¬¬(f x = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "6.12",
                    "prevs": [
                        "6.8",
                        "6.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ ¬(g x = 0)"
                },
                {
                    "args": "conjI",
                    "id": "6.13",
                    "prevs": [
                        "6.7",
                        "6.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ x ∈ s ∧ ¬(g x = 0)"
                },
                {
                    "args": "negE_gen, {A: x ∈ s ∧ ¬(g x = 0), C: f x = 0}",
                    "id": "6.14",
                    "prevs": [
                        "6.6",
                        "6.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}), x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "6.15",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.14"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ diff ({x1. x1 ∈ s ∧ ¬(f x1 = 0)}) ({x1. x1 ∈ s ∧ ¬(g x1 = 0)}) ⟶ f x = 0"
                },
                {
                    "args": "nsum_subset",
                    "id": "7",
                    "prevs": [
                        "5",
                        "1",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f ≤ nsum ({x. x ∈ s ∧ ¬(g x = 0)}) f"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ s ∧ ¬(g x = 0) ⟶ f x ≤ g x"
                },
                {
                    "args": "x, 'b",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s ∧ ¬(g x = 0)",
                    "id": "8.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(g x = 0) ⊢ x ∈ s ∧ ¬(g x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "8.2",
                    "prevs": [
                        "8.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(g x = 0) ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "8.3",
                    "prevs": [
                        "0",
                        "8.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "x ∈ s ∧ ¬(g x = 0), ∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "8.4",
                    "prevs": [
                        "8.0",
                        "8.1",
                        "8.3"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ s ∧ ¬(g x = 0) ⟶ f x ≤ g x"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(g x1 = 0)} ⟶ f x ≤ g x",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(g x1 = 0)} ⟶ f x ≤ g x"
                },
                {
                    "args": "nsum_le",
                    "id": "10",
                    "prevs": [
                        "1",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum ({x. x ∈ s ∧ ¬(g x = 0)}) f ≤ nsum ({x. x ∈ s ∧ ¬(g x = 0)}) g"
                },
                {
                    "args": "less_eq_trans",
                    "id": "11",
                    "prevs": [
                        "7",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f ≤ nsum ({x. x ∈ s ∧ ¬(g x = 0)}) g"
                },
                {
                    "args": "neutral_nat_add, nsum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f ≤ nsum ({x. x ∈ s ∧ ¬(g x = neutral plus)}) g",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f ≤ nsum ({x. x ∈ s ∧ ¬(g x = neutral plus)}) g"
                },
                {
                    "args": "support_def, nsum (support plus f s) f ≤ nsum (support plus g s) g",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum (support plus f s) f ≤ nsum (support plus g s) g"
                },
                {
                    "args": "nsum_support, nsum s f ≤ nsum s g",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x, finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ nsum s f ≤ nsum s g"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [
                        "0",
                        "1",
                        "14"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ nsum s f ≤ nsum s g"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ f x ≤ g x) ⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ nsum s f ≤ nsum s g",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_support"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_m": "nsum ({x. x ∈ s ∧ ¬(g x = 0)}) f",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_subset"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0",
                        "2.2"
                    ],
                    "goal_id": "2.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.5.0",
                        "2.4"
                    ],
                    "goal_id": "2.5.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.5.1"
                    ],
                    "goal_id": "2.5.2",
                    "method_name": "apply_forward_step",
                    "theorem": "nat_le_zero"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "6.1"
                    ],
                    "goal_id": "6.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "6.2"
                    ],
                    "goal_id": "6.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "6.3"
                    ],
                    "goal_id": "6.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "6.4"
                    ],
                    "goal_id": "6.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.4"
                    ],
                    "goal_id": "6.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "6.5"
                    ],
                    "goal_id": "6.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.5"
                    ],
                    "goal_id": "6.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0",
                        "6.7"
                    ],
                    "goal_id": "6.9",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6.6"
                    ],
                    "goal_id": "6.10",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "6.10",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "6.8"
                    ],
                    "goal_id": "6.10",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "6.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "6.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.10.0",
                        "6.9"
                    ],
                    "goal_id": "6.10.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "6.10.1"
                    ],
                    "goal_id": "6.10.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_le"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "8.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "8.1"
                    ],
                    "goal_id": "8.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "g": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_mul_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ a x * b x ≤ nsum s a * b x"
                },
                {
                    "args": "x, 'a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "nsum_sing, a x = nsum ({x}) a",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ a x = nsum ({x}) a"
                },
                {
                    "args": "{x} ⊆ s",
                    "id": "1.3",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "z3",
                    "th": "x ∈ s ⊢ {x} ⊆ s"
                },
                {
                    "args": "nsum_subset_simple, {f: a, u: {x}, v: s}",
                    "id": "1.4",
                    "prevs": [
                        "0",
                        "1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x ∈ s ⊢ nsum ({x}) a ≤ nsum s a"
                },
                {
                    "args": "a x ≤ nsum s a",
                    "id": "1.5",
                    "prevs": [
                        "1.2",
                        "1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ s ⊢ a x ≤ nsum s a"
                },
                {
                    "args": "less_eq_refl, {n: b x}",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ b x ≤ b x"
                },
                {
                    "args": "le_mult2",
                    "id": "1.7",
                    "prevs": [
                        "1.5",
                        "1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s ⊢ a x * b x ≤ nsum s a * b x"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ a x * b x ≤ nsum s a * b x"
                },
                {
                    "args": "nsum_le",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s (λx. a x * b x) ≤ nsum s (λx. nsum s a * b x)"
                },
                {
                    "args": "nsum_lmul, nsum s (λi. a i * b i) ≤ nsum s a * nsum s b",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s ⊢ nsum s (λi. a i * b i) ≤ nsum s a * nsum s b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s (λi. a i * b i) ≤ nsum s a * nsum s b"
                }
            ],
            "prop": "finite s ⟶ nsum s (λi. a i * b i) ≤ nsum s a * nsum s b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_lmul"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_mult2"
                },
                {
                    "goal": "a x = nsum {x} a",
                    "goal_id": "1.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_sing"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_subset_simple"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a ⇒ nat",
                "b": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_image_nonzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = neutral plus",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = neutral plus"
                },
                {
                    "args": "iterate_image_nonzero, {f: i, g: d, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ iterate plus (image i s) d = iterate plus s (d ∘ i)"
                },
                {
                    "args": "nsum_def, nsum (image i s) d = nsum s (d ∘ i)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ nsum (image i s) d = nsum s (d ∘ i)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0) ⟶ nsum (image i s) d = nsum s (d ∘ i)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0) ",
                "   ⟶ nsum (image i s) d = nsum s (d ∘ i)"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image_nonzero"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "d": "'a ⇒ nat",
                "i": "'b ⇒ 'a",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_bijection",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ p x ∈ s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s ⊢ ∀x. x ∈ s ⟶ p x ∈ s"
                },
                {
                    "args": "∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_bijection, {f: f, op: (plus::nat ⇒ nat ⇒ nat), p: p, s: s}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s, ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ iterate plus s f = iterate plus s (f ∘ p)"
                },
                {
                    "args": "nsum_def, nsum s f = nsum s (f ∘ p)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s, ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ nsum s f = nsum s (f ∘ p)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ p x ∈ s) ⟶ (∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)) ⟶ nsum s f = nsum s (f ∘ p)"
                }
            ],
            "prop": [
                "(∀x. x ∈ s ⟶ p x ∈ s) ",
                "⟶ (∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)) ⟶ nsum s f = nsum s (f ∘ p)"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_bijection"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "p": "'b ⇒ 'b",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_eq_general",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y) ⊢ ∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_eq_general, {f: f, g: g, h: h, op: (plus::nat ⇒ nat ⇒ nat), s: s, t: t}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y), ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ iterate plus s f = iterate plus t g"
                },
                {
                    "args": "nsum_def, nsum s f = nsum t g",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y), ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ nsum s f = nsum t g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)) ⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x) ⟶ nsum s f = nsum t g"
                }
            ],
            "prop": [
                "(∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)) ",
                "⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x) ⟶ nsum s f = nsum t g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_h": "h",
                    "theorem": "iterate_eq_general"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "g": "'a ⇒ nat",
                "h": "'b ⇒ 'a",
                "s": "'b set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_eq_general_inverse",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y ⊢ ∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y"
                },
                {
                    "args": "∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_eq_general_inverses, {f: f, g: g, h: h, k: k, op: (plus::nat ⇒ nat ⇒ nat), s: s, t: t}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y, ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ iterate plus s f = iterate plus t g"
                },
                {
                    "args": "nsum_def, nsum s f = nsum t g",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y, ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ nsum s f = nsum t g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y) ⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x) ⟶ nsum s f = nsum t g"
                }
            ],
            "prop": [
                "(∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y) ",
                "⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x) ⟶ nsum s f = nsum t g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_h": "h",
                    "param_k": "k",
                    "theorem": "iterate_eq_general_inverses"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "g": "'a ⇒ nat",
                "h": "'b ⇒ 'a",
                "k": "'a ⇒ 'b",
                "s": "'b set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_injection",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ p x ∈ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s ⊢ ∀x. x ∈ s ⟶ p x ∈ s"
                },
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_injection, {f: f, op: (plus::nat ⇒ nat ⇒ nat), p: p, s: s}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. x ∈ s ⟶ p x ∈ s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ iterate plus s (f ∘ p) = iterate plus s f"
                },
                {
                    "args": "nsum_def, nsum s (f ∘ p) = nsum s f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ p x ∈ s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ nsum s (f ∘ p) = nsum s f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ p x ∈ s) ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y) ⟶ nsum s (f ∘ p) = nsum s f"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ p x ∈ s) ",
                "   ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y) ⟶ nsum s (f ∘ p) = nsum s f"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_injection"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "p": "'b ⇒ 'b",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_union_nonzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀x. x ∈ s ∩ t ⟶ f x = 0",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ ∀x. x ∈ s ∩ t ⟶ f x = 0"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, ∀x. x ∈ s ∩ t ⟶ f x = neutral plus",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ ∀x. x ∈ s ∩ t ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_union_nonzero",
                    "id": "5",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ iterate plus (s ∪ t) f = iterate plus s f + iterate plus t f"
                },
                {
                    "args": "nsum_def, nsum (s ∪ t) f = nsum s f + nsum t f",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ nsum (s ∪ t) f = nsum s f + nsum t f"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀x. x ∈ s ∩ t ⟶ f x = 0) ⟶ nsum (s ∪ t) f = nsum s f + nsum t f"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ⟶ (∀x. x ∈ s ∩ t ⟶ f x = 0) ⟶ nsum (s ∪ t) f = nsum s f + nsum t f"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_union_nonzero"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'b ⇒ nat",
                "s": "'b set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_cases, {P: P, f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s (λx. if P x then f x else g x) = iterate plus ({x. x ∈ s ∧ P x}) f + iterate plus ({x. x ∈ s ∧ ¬(P x)}) g"
                },
                {
                    "args": "nsum_def, nsum s (λx. if P x then f x else g x) = nsum ({x. x ∈ s ∧ P x}) f + nsum ({x. x ∈ s ∧ ¬(P x)}) g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ nsum s (λx. if P x then f x else g x) = nsum ({x. x ∈ s ∧ P x}) f + nsum ({x. x ∈ s ∧ ¬(P x)}) g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s (λx. if P x then f x else g x) = nsum ({x. x ∈ s ∧ P x}) f + nsum ({x. x ∈ s ∧ ¬(P x)}) g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ nsum s (λx. if P x then f x else g x) = ",
                "   nsum ({x. x ∈ s ∧ P x}) f + nsum ({x. x ∈ s ∧ ¬(P x)}) g"
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'b ⇒ bool",
                "f": "'b ⇒ nat",
                "g": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_closed",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. ∀y. P x ⟶ P y ⟶ P (x + y)"
                },
                {
                    "args": "∀a. a ∈ s ⟶ P (f a)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. a ∈ s ⟶ P (f a) ⊢ ∀a. a ∈ s ⟶ P (f a)"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, P (neutral plus)",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (neutral plus)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. x ∈ s ∧ ¬(f x = neutral plus) ⟶ P (f x)"
                },
                {
                    "args": "x, 'b",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s ∧ ¬(f x = neutral plus)",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(f x = neutral plus) ⊢ x ∈ s ∧ ¬(f x = neutral plus)"
                },
                {
                    "args": "conjD1",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = neutral plus) ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "5.3",
                    "prevs": [
                        "2",
                        "5.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), x ∈ s ∧ ¬(f x = neutral plus), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (f x)"
                },
                {
                    "args": "",
                    "id": "5.4",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.3"
                    ],
                    "rule": "intros",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. x ∈ s ∧ ¬(f x = neutral plus) ⟶ P (f x)"
                },
                {
                    "args": "iterate_closed",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "1",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (iterate plus s f)"
                },
                {
                    "args": "nsum_def, P (nsum s f)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (nsum s f)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (nsum s f)"
                }
            ],
            "prop": "P 0 ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (nsum s f)",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_closed"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "f": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_related",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "R 0 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R 0 0 ⊢ R 0 0"
                },
                {
                    "args": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)"
                },
                {
                    "args": "finite s",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ R (f x) (g x)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ R (f x) (g x) ⊢ ∀x. x ∈ s ⟶ R (f x) (g x)"
                },
                {
                    "args": "iterate_related, {R: R, f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat) ⟶ R (neutral plus) (neutral plus) ⟶ (∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)) ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "neutral_nat_add, R (neutral plus) (neutral plus)",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (neutral plus) (neutral plus)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "x1, nat",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "y1, nat",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y1"
                },
                {
                    "args": "x2, nat",
                    "id": "7.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "y2, nat",
                    "id": "7.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y2"
                },
                {
                    "args": "R x1 x2",
                    "id": "7.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R x1 x2 ⊢ R x1 x2"
                },
                {
                    "args": "R y1 y2",
                    "id": "7.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R y1 y2 ⊢ R y1 y2"
                },
                {
                    "args": "x1, x2, y1, y2",
                    "id": "7.6",
                    "prevs": [
                        "1",
                        "7.4",
                        "7.5"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, R x1 x2, R y1 y2, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "",
                    "id": "7.7",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.2",
                        "7.3",
                        "7.4",
                        "7.5",
                        "7.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "7",
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "nsum_def, R (nsum s f) (nsum s g)",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (nsum s f) (nsum s g)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ R 0 0 ⟶ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (nsum s f) (nsum s g)"
                }
            ],
            "prop": [
                "R 0 0 ",
                "⟶ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ",
                "   ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (nsum s f) (nsum s g)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "f",
                    "param_g": "g",
                    "param_op": "(plus::nat=>nat=>nat)",
                    "param_s": "s",
                    "theorem": "iterate_related"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "x1,y1,x2,y2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "7.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "nat ⇒ nat ⇒ bool",
                "f": "'b ⇒ nat",
                "g": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_closed_nonempty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. ∀y. P x ⟶ P y ⟶ P (x + y)"
                },
                {
                    "args": "∀a. a ∈ s ⟶ P (f a)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. a ∈ s ⟶ P (f a) ⊢ ∀a. a ∈ s ⟶ P (f a)"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_closed_nonempty",
                    "id": "5",
                    "prevs": [
                        "4",
                        "2",
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (iterate plus s f)"
                },
                {
                    "args": "nsum_def, P (nsum s f)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (nsum s f)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (nsum s f)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ ¬(s = ∅) ",
                "   ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (nsum s f)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_closed_nonempty"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "f": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_related_nonempty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)"
                },
                {
                    "args": "finite s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ R (f x) (g x)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ R (f x) (g x) ⊢ ∀x. x ∈ s ⟶ R (f x) (g x)"
                },
                {
                    "args": "iterate_related_nonempty, {R: R, f: f, g: g, op: (plus::nat ⇒ nat ⇒ nat), s: s}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat) ⟶ (∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)) ⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "x1, nat",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "y1, nat",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y1"
                },
                {
                    "args": "x2, nat",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "y2, nat",
                    "id": "6.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y2"
                },
                {
                    "args": "R x1 x2",
                    "id": "6.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R x1 x2 ⊢ R x1 x2"
                },
                {
                    "args": "R y1 y2",
                    "id": "6.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R y1 y2 ⊢ R y1 y2"
                },
                {
                    "args": "x1, x2, y1, y2",
                    "id": "6.6",
                    "prevs": [
                        "0",
                        "6.4",
                        "6.5"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, R x1 x2, R y1 y2, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "",
                    "id": "6.7",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.2",
                        "6.3",
                        "6.4",
                        "6.5",
                        "6.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "nsum_def, R (nsum s f) (nsum s g)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (nsum s f) (nsum s g)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (nsum s f) (nsum s g)"
                }
            ],
            "prop": [
                "(∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ",
                "⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (nsum s f) (nsum s g)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "f",
                    "param_g": "g",
                    "param_op": "(plus::nat=>nat=>nat)",
                    "param_s": "s",
                    "theorem": "iterate_related_nonempty"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "x1,y1,x2,y2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "nat ⇒ nat ⇒ bool",
                "f": "'b ⇒ nat",
                "g": "'b ⇒ nat",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_add_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "nsum_add, {f: f, g: g, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({m..n}) (λx. f x + g x) = nsum ({m..n}) f + nsum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..n}) (λi. f i + g i) = nsum ({m..n}) f + nsum ({m..n}) g"
                }
            ],
            "prop": "nsum ({m..n}) (λi. f i + g i) = nsum ({m..n}) f + nsum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "g": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_le_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i"
                },
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀x. m ≤ x ∧ x ≤ n ⟶ f x ≤ g x"
                },
                {
                    "args": "i, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i ∧ i ≤ n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "2.4",
                    "prevs": [
                        "0",
                        "2.2",
                        "2.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "m ≤ i ∧ i ≤ n, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ f i ≤ g i"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.4"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀i. m ≤ i ∧ i ≤ n ⟶ f i ≤ g i"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n} ⟶ f x ≤ g x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀x. x ∈ {m..n} ⟶ f x ≤ g x"
                },
                {
                    "args": "nsum_le",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ nsum ({m..n}) f ≤ nsum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i) ⟶ nsum ({m..n}) f ≤ nsum ({m..n}) g"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i) ⟶ nsum ({m..n}) f ≤ nsum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "g": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_eq_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀x. m ≤ x ∧ x ≤ n ⟶ f x = g x"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i ∧ i ≤ n",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "1.3",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "1.4",
                    "prevs": [
                        "0",
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "m ≤ i ∧ i ≤ n, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ f i = g i"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀i. m ≤ i ∧ i ≤ n ⟶ f i = g i"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n} ⟶ f x = g x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀x. x ∈ {m..n} ⟶ f x = g x"
                },
                {
                    "args": "nsum_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ nsum ({m..n}) f = nsum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i) ⟶ nsum ({m..n}) f = nsum ({m..n}) g"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i) ⟶ nsum ({m..n}) f = nsum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "g": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_const_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "nsum_const, {c: c, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({m..n}) (λn1. c) = card ({m..n}) * c"
                },
                {
                    "args": "card_natseg, nsum ({m..n}) (λn1. c) = (n + 1 - m) * c",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ nsum ({m..n}) (λn1. c) = (n + 1 - m) * c"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..n}) (λn1. c) = (n + 1 - m) * c"
                }
            ],
            "prop": "nsum ({m..n}) (λn1. c) = (n + 1 - m) * c",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "card_natseg"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_const"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_eq_0_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀x. m ≤ x ∧ x ≤ n ⟶ f x = 0"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i ∧ i ≤ n",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "1.3",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "1.4",
                    "prevs": [
                        "0",
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "m ≤ i ∧ i ≤ n, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ f i = 0"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀i. m ≤ i ∧ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n} ⟶ f x = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀x. x ∈ {m..n} ⟶ f x = 0"
                },
                {
                    "args": "nsum_eq_0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ nsum ({m..n}) f = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0) ⟶ nsum ({m..n}) f = 0"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0) ⟶ nsum ({m..n}) f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_eq_0_iff_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "nsum_eq_0_iff, {f: f}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({m..n}) f = 0 ⟷ (∀x. x ∈ {m..n} ⟶ f x = 0)"
                },
                {
                    "args": "(∀x. m ≤ x ∧ x ≤ n ⟶ f x = 0) ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∀x. m ≤ x ∧ x ≤ n ⟶ f x = 0) ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)"
                },
                {
                    "args": "member_natseg, (∀x. x ∈ {m..n} ⟶ f x = 0) ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∀x. x ∈ {m..n} ⟶ f x = 0) ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)"
                },
                {
                    "args": "nsum ({m..n}) f = 0 ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ nsum ({m..n}) f = 0 ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..n}) f = 0 ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)"
                }
            ],
            "prop": "nsum ({m..n}) f = 0 ⟷ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0)",
            "steps": [
                {
                    "goal": "finite {m..n}",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "theorem": "nsum_eq_0_iff"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_triv_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "n < m",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n < m ⊢ n < m"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n < m ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ⊢ m ≤ i"
                },
                {
                    "args": "i ≤ n",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "f i = 0",
                    "id": "1.3",
                    "prevs": [
                        "0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "n < m, i ≤ n, m ≤ i ⊢ f i = 0"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "n < m ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "nsum_eq_0_iff_natseg, nsum ({m..n}) f = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n < m ⊢ nsum ({m..n}) f = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ n < m ⟶ nsum ({m..n}) f = 0"
                }
            ],
            "prop": "n < m ⟶ nsum ({m..n}) f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_eq_0_iff_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0",
                        "1.1",
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_sing_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "nsum_sing, nsum ({n}) f = f n",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({n}) f = f n"
                },
                {
                    "args": "natseg_sing, nsum ({n..n}) f = f n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({n..n}) f = f n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({n..n}) f = f n"
                }
            ],
            "prop": "nsum ({n..n}) f = f n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_sing"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_sing"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_0_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_natseg_0, {f: f, m: m}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({m..0}) f = (if m = 0 then f 0 else neutral plus)"
                },
                {
                    "args": "neutral_nat_add",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ iterate plus ({m..0}) f = (if m = 0 then f 0 else 0)"
                },
                {
                    "args": "nsum_def, nsum ({m..0}) f = (if m = 0 then f 0 else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({m..0}) f = (if m = 0 then f 0 else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..0}) f = (if m = 0 then f 0 else 0)"
                }
            ],
            "prop": "nsum ({m..0}) f = (if m = 0 then f 0 else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_m": "m",
                    "theorem": "iterate_natseg_0"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_Suc_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_natseg_Suc, {f: f, m: m, n: n, op: (plus::nat ⇒ nat ⇒ nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({m..Suc n}) f = (if m ≤ Suc n then iterate plus ({m..n}) f + f (Suc n) else iterate plus ({m..n}) f)"
                },
                {
                    "args": "nsum_def, nsum ({m..Suc n}) f = (if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({m..Suc n}) f = (if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..Suc n}) f = (if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f)"
                }
            ],
            "prop": [
                "nsum ({m..Suc n}) f = ",
                "(if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_0_natseg_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "nsum_empty, nsum ∅ f = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ∅ f = 0"
                },
                {
                    "args": "natseg_clauses_lt_1, nsum ({i. i < 0}) f = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({i. i < 0}) f = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({i. i < 0}) f = 0"
                }
            ],
            "prop": "nsum ({i. i < 0}) f = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_clauses_lt_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_Suc_natseg_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_natseg_Suc_lt, {f: f, k: k, op: (plus::nat ⇒ nat ⇒ nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({i. i < Suc k}) f = iterate plus ({i. i < k}) f + f k"
                },
                {
                    "args": "nsum_def, nsum ({i. i < Suc k}) f = nsum ({i. i < k}) f + f k",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({i. i < Suc k}) f = nsum ({i. i < k}) f + f k"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({i. i < Suc k}) f = nsum ({i. i < k}) f + f k"
                }
            ],
            "prop": "nsum ({i. i < Suc k}) f = nsum ({i. i < k}) f + f k",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc_lt"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "k": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_0_natseg_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "nsum_sing, nsum ({0}) f = f 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({0}) f = f 0"
                },
                {
                    "args": "natseg_clauses_le_1, nsum ({i. i ≤ 0}) f = f 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({i. i ≤ 0}) f = f 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({i. i ≤ 0}) f = f 0"
                }
            ],
            "prop": "nsum ({i. i ≤ 0}) f = f 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_clauses_le_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_sing"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_Suc_natseg_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_natseg_Suc_le, {f: f, k: k, op: (plus::nat ⇒ nat ⇒ nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({i. i ≤ Suc k}) f = iterate plus ({i. i ≤ k}) f + f (Suc k)"
                },
                {
                    "args": "nsum_def, nsum ({i. i ≤ Suc k}) f = nsum ({i. i ≤ k}) f + f (Suc k)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({i. i ≤ Suc k}) f = nsum ({i. i ≤ k}) f + f (Suc k)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({i. i ≤ Suc k}) f = nsum ({i. i ≤ k}) f + f (Suc k)"
                }
            ],
            "prop": "nsum ({i. i ≤ Suc k}) f = nsum ({i. i ≤ k}) f + f (Suc k)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc_le"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "k": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_swap_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: a, n: b}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({a..b})"
                },
                {
                    "args": "finite_natseg, {m: c, n: d}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({c..d})"
                },
                {
                    "args": "nsum_swap, {f: f, s: {a..b}, t: {c..d}}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({a..b}) (λi. nsum ({c..d}) (f i)) = nsum ({c..d}) (λj. nsum ({a..b}) (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({a..b}) (λi. nsum ({c..d}) (f i)) = nsum ({c..d}) (λj. nsum ({a..b}) (λi. f i j))"
                }
            ],
            "prop": [
                "nsum ({a..b}) (λi. nsum ({c..d}) (f i)) = ",
                "nsum ({c..d}) (λj. nsum ({a..b}) (λi. f i j))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_swap"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat",
                "d": "nat",
                "f": "nat ⇒ nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_add_split",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n + 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n + 1 ⊢ m ≤ n + 1"
                },
                {
                    "args": "natseg_add_split, {p: p}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ {m..n + p} = {m..n} ∪ {n + 1..n + p}"
                },
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "finite_natseg, {m: n + 1, n: n + p}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({n + 1..n + p})"
                },
                {
                    "args": "n < n + 1",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n < n + 1"
                },
                {
                    "args": "disjI1, {A: n < n + 1, B: n + p < m ∨ n < m ∨ n + p < n + 1}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ n < n + 1 ∨ n + p < m ∨ n < m ∨ n + p < n + 1"
                },
                {
                    "args": "disjoint_natseg, disjoint ({m..n}) ({n + 1..n + p})",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n + 1 ⊢ disjoint ({m..n}) ({n + 1..n + p})"
                },
                {
                    "args": "nsum_union, {f: f, s: {m..n}, t: {n + 1..n + p}}",
                    "id": "7",
                    "prevs": [
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ nsum ({m..n} ∪ {n + 1..n + p}) f = nsum ({m..n}) f + nsum ({n + 1..n + p}) f"
                },
                {
                    "args": "nsum ({m..n + p}) f = nsum ({m..n}) f + nsum ({n + 1..n + p}) f",
                    "id": "8",
                    "prevs": [
                        "1",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n + 1 ⊢ nsum ({m..n + p}) f = nsum ({m..n}) f + nsum ({n + 1..n + p}) f"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n + 1 ⟶ nsum ({m..n + p}) f = nsum ({m..n}) f + nsum ({n + 1..n + p}) f"
                }
            ],
            "prop": "m ≤ n + 1 ⟶ nsum ({m..n + p}) f = nsum ({m..n}) f + nsum ({n + 1..n + p}) f",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_p": "p",
                    "theorem": "natseg_add_split"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_union"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_offset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "comp_fun_def, (λi. f (i + p)) = f ∘ (λi. i + p)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (λi. f (i + p)) = f ∘ (λi. i + p)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y"
                },
                {
                    "args": "x, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, nat",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "x ∈ {m..n}",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {m..n} ⊢ x ∈ {m..n}"
                },
                {
                    "args": "y ∈ {m..n}",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ {m..n} ⊢ y ∈ {m..n}"
                },
                {
                    "args": "x + p = y + p",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + p = y + p ⊢ x + p = y + p"
                },
                {
                    "args": "add_cancel_right",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x + p = y + p ⊢ x = y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.4",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y"
                },
                {
                    "args": "nsum_image, {f: λi. i + p, g: f, s: {m..n}}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum (image (λi. i + p) ({m..n})) f = nsum ({m..n}) (f ∘ (λi. i + p))"
                },
                {
                    "args": "nsum (image (λi. i + p) ({m..n})) f = nsum ({m..n}) (λi. f (i + p))",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ nsum (image (λi. i + p) ({m..n})) f = nsum ({m..n}) (λi. f (i + p))"
                },
                {
                    "args": "natseg_offset_image, nsum ({m + p..n + p}) f = nsum ({m..n}) (λi. f (i + p))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({m + p..n + p}) f = nsum ({m..n}) (λi. f (i + p))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m + p..n + p}) f = nsum ({m..n}) (λi. f (i + p))"
                }
            ],
            "prop": "nsum ({m + p..n + p}) f = nsum ({m..n}) (λi. f (i + p))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_offset_image"
                },
                {
                    "goal": "(λi. f (i + p)) = f O (λi. i + p)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "comp_fun_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_image"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x,y"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "add_cancel_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_offset_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "sub_add",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ⊢ n - m + m = n"
                },
                {
                    "args": "nsum ({m..n}) f = nsum ({m..n - m + m}) f",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n ⊢ nsum ({m..n}) f = nsum ({m..n - m + m}) f"
                },
                {
                    "args": "nat_plus_def_1, nsum ({m..n}) f = nsum ({0 + m..n - m + m}) f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ nsum ({m..n}) f = nsum ({0 + m..n - m + m}) f"
                },
                {
                    "args": "nsum_offset, nsum ({m..n}) f = nsum ({0..n - m}) (λi. f (i + m))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "m ≤ n ⊢ nsum ({m..n}) f = nsum ({0..n - m}) (λi. f (i + m))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n ⟶ nsum ({m..n}) f = nsum ({0..n - m}) (λi. f (i + m))"
                }
            ],
            "prop": "m ≤ n ⟶ nsum ({m..n}) f = nsum ({0..n - m}) (λi. f (i + m))",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_offset"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "sub_add"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "nsum_clauses_left",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "natseg_lrec",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ⊢ {m..n} = insert m ({m + 1..n})"
                },
                {
                    "args": "finite_natseg, {m: m + 1, n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m + 1..n})"
                },
                {
                    "args": "nsum_insert, {f: f, x: m}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum (insert m ({m + 1..n})) f = (if m ∈ {m + 1..n} then nsum ({m + 1..n}) f else f m + nsum ({m + 1..n}) f)"
                },
                {
                    "args": "m < m + 1",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ m < m + 1"
                },
                {
                    "args": "not_le, ¬(m + 1 ≤ m)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ ¬(m + 1 ≤ m)"
                },
                {
                    "args": "disjI1, {A: ¬(m + 1 ≤ m), B: ¬(m ≤ n)}",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n ⊢ ¬(m + 1 ≤ m) ∨ ¬(m ≤ n)"
                },
                {
                    "args": "de_morgan_thm1, ¬(m + 1 ≤ m ∧ m ≤ n)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ ¬(m + 1 ≤ m ∧ m ≤ n)"
                },
                {
                    "args": "member_natseg, ¬(m ∈ {m + 1..n})",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ ¬(m ∈ {m + 1..n})"
                },
                {
                    "args": "if_not_P",
                    "id": "9",
                    "prevs": [
                        "3",
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ≤ n ⊢ nsum (insert m ({m + 1..n})) f = f m + nsum ({m + 1..n}) f"
                },
                {
                    "args": "nsum ({m..n}) f = f m + nsum ({m + 1..n}) f",
                    "id": "10",
                    "prevs": [
                        "1",
                        "9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n ⊢ nsum ({m..n}) f = f m + nsum ({m + 1..n}) f"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n ⟶ nsum ({m..n}) f = f m + nsum ({m + 1..n}) f"
                }
            ],
            "prop": "m ≤ n ⟶ nsum ({m..n}) f = f m + nsum ({m + 1..n}) f",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "natseg_lrec"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "finite {m + 1..n}",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "m",
                    "theorem": "nsum_insert"
                },
                {
                    "goal": "~(m ∈ {m + 1..n})",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3",
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "nsum_clauses_right",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (0::nat) < 0 ⟶ m ≤ 0 ⟶ nsum ({m..0}) f = nsum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "(0::nat) < 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) < 0 ⊢ (0::nat) < 0"
                },
                {
                    "args": "m ≤ 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ 0 ⊢ m ≤ 0"
                },
                {
                    "args": "nsum ({m..0}) f = nsum ({m..0 - 1}) f + f 0",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "(0::nat) < 0 ⊢ nsum ({m..0}) f = nsum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (0::nat) < 0 ⟶ m ≤ 0 ⟶ nsum ({m..0}) f = nsum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n) ⟶ 0 < Suc n ⟶ m ≤ Suc n ⟶ nsum ({m..Suc n}) f = nsum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n ⊢ 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n"
                },
                {
                    "args": "0 < Suc n",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < Suc n ⊢ 0 < Suc n"
                },
                {
                    "args": "m ≤ Suc n",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ Suc n ⊢ m ≤ Suc n"
                },
                {
                    "args": "if_P, (if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f) = nsum ({m..n}) f + f (Suc n)",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ Suc n ⊢ (if m ≤ Suc n then nsum ({m..n}) f + f (Suc n) else nsum ({m..n}) f) = nsum ({m..n}) f + f (Suc n)"
                },
                {
                    "args": "nsum_Suc_natseg, nsum ({m..Suc n}) f = nsum ({m..n}) f + f (Suc n)",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < Suc n, m ≤ Suc n, 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n ⊢ nsum ({m..Suc n}) f = nsum ({m..n}) f + f (Suc n)"
                },
                {
                    "args": "suc_sub1, nsum ({m..Suc n}) f = nsum ({m..Suc n - 1}) f + f (Suc n)",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < Suc n, m ≤ Suc n, 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n ⊢ nsum ({m..Suc n}) f = nsum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n) ⟶ 0 < Suc n ⟶ m ≤ Suc n ⟶ nsum ({m..Suc n}) f = nsum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "nat_induct, {P: λn. 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n, x: n}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n"
                }
            ],
            "prop": "0 < n ⟶ m ≤ n ⟶ nsum ({m..n}) f = nsum ({m..n - 1}) f + f n",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "revert_intro"
                },
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "suc_sub1"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_Suc_natseg"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_pair",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_nat_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "iterate_pair, {f: f, m: m, n: n, op: (plus::nat ⇒ nat ⇒ nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({2 * m..2 * n + 1}) f = iterate plus ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "nsum_def, nsum ({2 * m..2 * n + 1}) f = nsum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({2 * m..2 * n + 1}) f = nsum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({2 * m..2 * n + 1}) f = nsum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                }
            ],
            "prop": "nsum ({2 * m..2 * n + 1}) f = nsum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_pair"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "nsum_reflect",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "iterate_reflect, {m: m, n: n, op: (plus::nat ⇒ nat ⇒ nat), x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat) ⟶ iterate plus ({m..n}) x = (if n < m then neutral plus else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "monoidal_nat_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::nat ⇒ nat ⇒ nat)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ iterate plus ({m..n}) x = (if n < m then neutral plus else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "neutral_nat_add",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ iterate plus ({m..n}) x = (if n < m then 0 else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "nsum_def, nsum ({m..n}) x = (if n < m then 0 else nsum ({0..n - m}) (λi. x (n - i)))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ({m..n}) x = (if n < m then 0 else nsum ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({m..n}) x = (if n < m then 0 else nsum ({0..n - m}) (λi. x (n - i)))"
                }
            ],
            "prop": "nsum ({m..n}) x = (if n < m then 0 else nsum ({0..n - m}) (λi. x (n - i)))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_m": "m",
                    "param_n": "n",
                    "param_op": "(plus::nat=>nat=>nat)",
                    "param_x": "x",
                    "theorem": "iterate_reflect"
                },
                {
                    "goal": "monoidal (plus::nat ⇒ nat ⇒ nat)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_nat_add"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "mod_nsum_mod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ n = 0 ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "n = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "eta_conversion, nsum s f = nsum s (λi. f i)",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum s f = nsum s (λi. f i)"
                },
                {
                    "args": "mod_zero, nsum s f = nsum s (λi. f i MOD 0)",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, n = 0 ⊢ nsum s f = nsum s (λi. f i MOD 0)"
                },
                {
                    "args": "mod_zero, nsum s f MOD 0 = nsum s (λi. f i MOD 0) MOD 0",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, n = 0 ⊢ nsum s f MOD 0 = nsum s (λi. f i MOD 0) MOD 0"
                },
                {
                    "args": "nsum s f MOD n = nsum s (λi. f i MOD n) MOD n",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, n = 0 ⊢ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ n = 0 ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ¬(n = 0) ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "nsum_empty, nsum ∅ f MOD n = nsum ∅ (λi. f i MOD n) MOD n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ nsum ∅ f MOD n = nsum ∅ (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(n = 0) ⊢ ∀x. ∀s1. nsum s1 f MOD n = nsum s1 (λi. f i MOD n) MOD n ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ nsum (insert x s1) f MOD n = nsum (insert x s1) (λi. f i MOD n) MOD n"
                },
                {
                    "args": "x, 'a",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "nsum s f MOD n = nsum s (λi. f i MOD n) MOD n",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "2.2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "nsum_insert, {f: λi. f i MOD n, x: x}",
                    "id": "2.2.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert x s) (λi. f i MOD n) = (if x ∈ s then nsum s (λi. f i MOD n) else f x MOD n + nsum s (λi. f i MOD n))"
                },
                {
                    "args": "if_not_P",
                    "id": "2.2.5",
                    "prevs": [
                        "2.2.4",
                        "2.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ nsum (insert x s) (λi. f i MOD n) = f x MOD n + nsum s (λi. f i MOD n)"
                },
                {
                    "args": "nsum_insert, {f: f, x: x}",
                    "id": "2.2.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "2.2.7",
                    "prevs": [
                        "2.2.6",
                        "2.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ nsum (insert x s) f = f x + nsum s f"
                },
                {
                    "args": "(f x MOD n + nsum s f MOD n) MOD n = (f x MOD n + nsum s (λi. f i MOD n) MOD n) MOD n",
                    "id": "2.2.8",
                    "prevs": [
                        "2.2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ (f x MOD n + nsum s f MOD n) MOD n = (f x MOD n + nsum s (λi. f i MOD n) MOD n) MOD n"
                },
                {
                    "args": "mod_mod_refl, (f x MOD n + nsum s f MOD n) MOD n = (f x MOD n MOD n + nsum s (λi. f i MOD n) MOD n) MOD n",
                    "id": "2.2.9",
                    "prevs": [
                        "2.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(n = 0), ¬(x ∈ s), nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ (f x MOD n + nsum s f MOD n) MOD n = (f x MOD n MOD n + nsum s (λi. f i MOD n) MOD n) MOD n"
                },
                {
                    "args": "mod_add_mod, (f x + nsum s f) MOD n = (f x MOD n + nsum s (λi. f i MOD n)) MOD n",
                    "id": "2.2.10",
                    "prevs": [
                        "2.2.9"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, ¬(n = 0), ¬(x ∈ s), nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ (f x + nsum s f) MOD n = (f x MOD n + nsum s (λi. f i MOD n)) MOD n"
                },
                {
                    "args": "nsum (insert x s) f MOD n = (f x MOD n + nsum s (λi. f i MOD n)) MOD n",
                    "id": "2.2.11",
                    "prevs": [
                        "2.2.7",
                        "2.2.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(n = 0), ¬(x ∈ s), nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ nsum (insert x s) f MOD n = (f x MOD n + nsum s (λi. f i MOD n)) MOD n"
                },
                {
                    "args": "nsum (insert x s) f MOD n = nsum (insert x s) (λi. f i MOD n) MOD n",
                    "id": "2.2.12",
                    "prevs": [
                        "2.2.5",
                        "2.2.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(n = 0), ¬(x ∈ s), nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⊢ nsum (insert x s) f MOD n = nsum (insert x s) (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "2.2.13",
                    "prevs": [
                        "2.2.0",
                        "2.2.1",
                        "2.2.2",
                        "2.2.3",
                        "0",
                        "2.2.12"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ∀x. ∀s. nsum s f MOD n = nsum s (λi. f i MOD n) MOD n ⟶ ¬(x ∈ s) ⟶ finite s ⟶ nsum (insert x s) f MOD n = nsum (insert x s) (λi. f i MOD n) MOD n"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "2.3",
                    "prevs": [
                        "0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(n = 0) ⊢ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ ¬(n = 0) ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n"
                }
            ],
            "prop": "finite s ⟶ nsum s f MOD n = nsum s (λi. f i MOD n) MOD n",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mod_zero"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mod_zero"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eta_conversion"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. f i MOD n)",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "2.2.4",
                        "2.2.3"
                    ],
                    "goal_id": "2.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.2.5"
                    ],
                    "goal_id": "2.2.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2.6",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "2.2.6",
                        "2.2.3"
                    ],
                    "goal_id": "2.2.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.2.7"
                    ],
                    "goal_id": "2.2.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "mod_add_mod"
                },
                {
                    "goal_id": "2.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mod_mod_refl"
                },
                {
                    "fact_ids": [
                        "2.2.2"
                    ],
                    "goal_id": "2.2.8",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "n": "nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "mod_nsum_mod_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: a, n: b}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({a..b})"
                },
                {
                    "args": "mod_nsum_mod, {f: f, n: n, s: {a..b}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({a..b}) f MOD n = nsum ({a..b}) (λi. f i MOD n) MOD n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ nsum ({a..b}) f MOD n = nsum ({a..b}) (λi. f i MOD n) MOD n"
                }
            ],
            "prop": "nsum ({a..b}) f MOD n = nsum ({a..b}) (λi. f i MOD n) MOD n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "mod_nsum_mod"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "f": "nat ⇒ nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum",
            "prop": "(sum::'a set ⇒ ('a ⇒ real) ⇒ real) = iterate plus",
            "ty": "def",
            "type": "'a set ⇒ ('a ⇒ real) ⇒ real"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "neutral_real_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "theI, {P: λx::real. ∀y. x + y = y ∧ y + x = y, a: (0::real)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀y::real. 0 + y = y ∧ y + 0 = y) ⟶ (∀x::real. (∀y. x + y = y ∧ y + x = y) ⟶ x = 0) ⟶ (∀y::real. (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) + y = y ∧ y + (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) = y)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀y::real. 0 + y = y ∧ y + 0 = y"
                },
                {
                    "args": "y, real",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "real_add_lid, 0 + y = y",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 + y = y"
                },
                {
                    "args": "real_add_rid, y + 0 = y",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ y + 0 = y"
                },
                {
                    "args": "conjI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ 0 + y = y ∧ y + 0 = y"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀y::real. 0 + y = y ∧ y + 0 = y"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀x::real. (∀y. x + y = y ∧ y + x = y) ⟶ x = 0) ⟶ (∀y::real. (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) + y = y ∧ y + (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) = y)"
                },
                {
                    "args": "∀x::real. (∀y. x + y = y ∧ y + x = y) ⟶ x = 0",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. (∀y. x + y = y ∧ y + x = y) ⟶ x = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∀y::real. (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) + y = y ∧ y + (THE x. ∀y1. x + y1 = y1 ∧ y1 + x = y1) = y"
                },
                {
                    "args": "THE x::real. ∀y. x + y = y ∧ y + x = y",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ (THE x::real. ∀y. x + y = y ∧ y + x = y) = 0"
                },
                {
                    "args": "neutral_def, neutral plus = (0::real)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ neutral plus = (0::real)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ neutral plus = (0::real)"
                }
            ],
            "prop": "neutral plus = (0::real)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_P": "(%x::real. ∀y. x + y = y ∧ y + x = y)",
                    "param_a": "(0::real)",
                    "theorem": "theI"
                },
                {
                    "goal": "(∀y::real. 0 + y = y ∧ y + 0 = y)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "y"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_lid"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal": "(∀x::real. (∀y. x + y = y ∧ y + x = y) ⟶ x = 0)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "neutral_real_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "theI, {P: λx::real. ∀y. x * y = y ∧ y * x = y, a: (1::real)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀y::real. 1 * y = y ∧ y * 1 = y) ⟶ (∀x::real. (∀y. x * y = y ∧ y * x = y) ⟶ x = 1) ⟶ (∀y::real. (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) * y = y ∧ y * (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) = y)"
                },
                {
                    "args": "∀y::real. 1 * y = y ∧ y * 1 = y",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀y::real. 1 * y = y ∧ y * 1 = y"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀x::real. (∀y. x * y = y ∧ y * x = y) ⟶ x = 1) ⟶ (∀y::real. (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) * y = y ∧ y * (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) = y)"
                },
                {
                    "args": "∀x::real. (∀y. x * y = y ∧ y * x = y) ⟶ x = 1",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. (∀y. x * y = y ∧ y * x = y) ⟶ x = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∀y::real. (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) * y = y ∧ y * (THE x. ∀y1. x * y1 = y1 ∧ y1 * x = y1) = y"
                },
                {
                    "args": "THE x::real. ∀y. x * y = y ∧ y * x = y",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ (THE x::real. ∀y. x * y = y ∧ y * x = y) = 1"
                },
                {
                    "args": "neutral_def, neutral times = (1::real)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ neutral times = (1::real)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ neutral times = (1::real)"
                }
            ],
            "prop": "neutral times = (1::real)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_P": "(%x::real. ∀y. x * y = y ∧ y * x = y)",
                    "param_a": "(1::real)",
                    "theorem": "theI"
                },
                {
                    "goal": "(∀y::real. 1 * y = y ∧ y * 1 = y)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀x::real. (∀y. x * y = y ∧ y * x = y) ⟶ x = 1)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "monoidal_real_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(∀x::real. ∀y. x + y = y + x) ∧ (∀x::real. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::real. 0 + x = x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∀x::real. ∀y. x + y = y + x) ∧ (∀x::real. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::real. 0 + x = x)"
                },
                {
                    "args": "neutral_real_add, (∀x::real. ∀y. x + y = y + x) ∧ (∀x::real. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::real. neutral plus + x = x)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∀x::real. ∀y. x + y = y + x) ∧ (∀x::real. ∀y. ∀z. x + (y + z) = x + y + z) ∧ (∀x::real. neutral plus + x = x)"
                },
                {
                    "args": "monoidal_def, monoidal (plus::real ⇒ real ⇒ real)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                }
            ],
            "prop": "monoidal (plus::real ⇒ real ⇒ real)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "monoidal_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "monoidal_real_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(∀x::real. ∀y. x * y = y * x) ∧ (∀x::real. ∀y. ∀z. x * (y * z) = x * y * z) ∧ (∀x::real. 1 * x = x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∀x::real. ∀y. x * y = y * x) ∧ (∀x::real. ∀y. ∀z. x * (y * z) = x * y * z) ∧ (∀x::real. 1 * x = x)"
                },
                {
                    "args": "neutral_real_mul, (∀x::real. ∀y. x * y = y * x) ∧ (∀x::real. ∀y. ∀z. x * (y * z) = x * y * z) ∧ (∀x::real. neutral times * x = x)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∀x::real. ∀y. x * y = y * x) ∧ (∀x::real. ∀y. ∀z. x * (y * z) = x * y * z) ∧ (∀x::real. neutral times * x = x)"
                },
                {
                    "args": "monoidal_def, monoidal (times::real ⇒ real ⇒ real)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ monoidal (times::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ monoidal (times::real ⇒ real ⇒ real)"
                }
            ],
            "prop": "monoidal (times::real ⇒ real ⇒ real)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "monoidal_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_mul"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "sum_degenerate",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))"
                },
                {
                    "args": "if_not_P, (if finite ({x. x ∈ s ∧ ¬(f x = 0)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = 0)}) 0 else 0) = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite ({x. x ∈ s ∧ ¬(f x = 0)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = 0)}) 0 else 0) = 0"
                },
                {
                    "args": "neutral_real_add, (if finite ({x. x ∈ s ∧ ¬(f x = neutral plus)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = neutral plus)}) (neutral plus) else neutral plus) = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite ({x. x ∈ s ∧ ¬(f x = neutral plus)}) then itset (λx. λa. f x + a) ({x. x ∈ s ∧ ¬(f x = neutral plus)}) (neutral plus) else neutral plus) = 0"
                },
                {
                    "args": "support_def, (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus) = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus) = 0"
                },
                {
                    "args": "iterate_def, iterate plus s f = 0",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ iterate plus s f = 0"
                },
                {
                    "args": "sum_def, sum s f = 0",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ sum s f = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ sum s f = 0"
                }
            ],
            "prop": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ sum s f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_empty, {f: f, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ∅ f = neutral plus"
                },
                {
                    "args": "neutral_real_add, iterate plus ∅ f = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus ∅ f = 0"
                },
                {
                    "args": "sum_def, sum ∅ f = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ∅ f = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ∅ f = 0"
                }
            ],
            "prop": "sum ∅ f = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_empty"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "sum_insert",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_insert, {f: f, op: (plus::real ⇒ real ⇒ real), s: s, x: x}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus (insert x s) f = (if x ∈ s then iterate plus s f else f x + iterate plus s f)"
                },
                {
                    "args": "sum_def, sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)"
                }
            ],
            "prop": "finite s ⟶ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_insert"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "x": "'a"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_union",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "disjoint s t",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "disjoint s t ⊢ disjoint s t"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_union, {f: f, op: (plus::real ⇒ real ⇒ real), s: s, t: t}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, disjoint s t ⊢ iterate plus (s ∪ t) f = iterate plus s f + iterate plus t f"
                },
                {
                    "args": "sum_def, sum (s ∪ t) f = sum s f + sum t f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, disjoint s t ⊢ sum (s ∪ t) f = sum s f + sum t f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ disjoint s t ⟶ sum (s ∪ t) f = sum s f + sum t f"
                }
            ],
            "prop": "finite s ⟶ finite t ⟶ disjoint s t ⟶ sum (s ∪ t) f = sum s f + sum t f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_union"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_diff",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "t ⊆ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "t ⊆ s ⊢ t ⊆ s"
                },
                {
                    "args": "∀x::real. ∀y. ∀z. x = y - z ⟷ x + z = y",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. ∀y. ∀z. x = y - z ⟷ x + z = y"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_diff, {f: f, op: (plus::real ⇒ real ⇒ real), s: s, t: t}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, t ⊆ s ⊢ iterate plus (diff s t) f + iterate plus t f = iterate plus s f"
                },
                {
                    "args": "sum_def, sum (diff s t) f + sum t f = sum s f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, t ⊆ s ⊢ sum (diff s t) f + sum t f = sum s f"
                },
                {
                    "args": "sum (diff s t) f = sum s f - sum t f",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, t ⊆ s ⊢ sum (diff s t) f = sum s f - sum t f"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ t ⊆ s ⟶ sum (diff s t) f = sum s f - sum t f"
                }
            ],
            "prop": "finite s ⟶ t ⊆ s ⟶ sum (diff s t) f = sum s f - sum t f",
            "steps": [
                {
                    "goal": "!x::real. !y. !z. (x = y - z) <--> (x + z = y)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_diff"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_incl_excl",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "iterate_incl_excl, {f: f, op: (plus::real ⇒ real ⇒ real), s: s, t: t}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ finite s ⟶ finite t ⟶ iterate plus s f + iterate plus t f = iterate plus (s ∪ t) f + iterate plus (s ∩ t) f"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3",
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, finite t ⊢ iterate plus s f + iterate plus t f = iterate plus (s ∪ t) f + iterate plus (s ∩ t) f"
                },
                {
                    "args": "sum_def, sum s f + sum t f = sum (s ∪ t) f + sum (s ∩ t) f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ sum s f + sum t f = sum (s ∪ t) f + sum (s ∩ t) f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ sum s f + sum t f = sum (s ∪ t) f + sum (s ∩ t) f"
                }
            ],
            "prop": "finite s ⟶ finite t ⟶ sum s f + sum t f = sum (s ∪ t) f + sum (s ∩ t) f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_op": "(plus::real=>real=>real)",
                    "param_s": "s",
                    "param_t": "t",
                    "theorem": "iterate_incl_excl"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_support",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "support_support, (if finite (support plus f (support plus f s)) then itset (λx. λa. f x + a) (support plus f (support plus f s)) (neutral plus) else neutral plus) = (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if finite (support plus f (support plus f s)) then itset (λx. λa. f x + a) (support plus f (support plus f s)) (neutral plus) else neutral plus) = (if finite (support plus f s) then itset (λx. λa. f x + a) (support plus f s) (neutral plus) else neutral plus)"
                },
                {
                    "args": "iterate_def, iterate plus (support plus f s) f = iterate plus s f",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ iterate plus (support plus f s) f = iterate plus s f"
                },
                {
                    "args": "sum_def, sum (support plus f s) f = sum s f",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum (support plus f s) f = sum s f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum (support plus f s) f = sum s f"
                }
            ],
            "prop": "sum (support plus f s) f = sum s f",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_support"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "sum_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_op, {f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s (λx. f x + g x) = iterate plus s f + iterate plus s g"
                },
                {
                    "args": "sum_def, sum s (λx. f x + g x) = sum s f + sum s g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum s (λx. f x + g x) = sum s f + sum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s (λx. f x + g x) = sum s f + sum s g"
                }
            ],
            "prop": "finite s ⟶ sum s (λx. f x + g x) = sum s f + sum s g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_op"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_add_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(f x = 0)})",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)})"
                },
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(g x = 0)})",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(g x = 0)})"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, finite ({x. x ∈ s ∧ ¬(f x = neutral plus)})",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = neutral plus)})"
                },
                {
                    "args": "support_def, finite (support plus f s)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite (support plus f s)"
                },
                {
                    "args": "neutral_real_add, finite ({x. x ∈ s ∧ ¬(g x = neutral plus)})",
                    "id": "5",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(g x = neutral plus)})"
                },
                {
                    "args": "support_def, finite (support plus g s)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ finite (support plus g s)"
                },
                {
                    "args": "iterate_op_gen",
                    "id": "7",
                    "prevs": [
                        "2",
                        "4",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ iterate plus s (λx. f x + g x) = iterate plus s f + iterate plus s g"
                },
                {
                    "args": "sum_def, sum s (λx. f x + g x) = sum s f + sum s g",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}), finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⊢ sum s (λx. f x + g x) = sum s f + sum s g"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ sum s (λx. f x + g x) = sum s f + sum s g"
                }
            ],
            "prop": [
                "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ",
                "⟶ finite ({x. x ∈ s ∧ ¬(g x = 0)}) ⟶ sum s (λx. f x + g x) = sum s f + sum s g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_op_gen"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "sum_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ f x = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, ∀x. x ∈ s ⟶ f x = neutral plus",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_eq_neutral",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ iterate plus s f = neutral plus"
                },
                {
                    "args": "neutral_real_add, iterate plus s f = 0",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ iterate plus s f = 0"
                },
                {
                    "args": "sum_def, sum s f = 0",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = 0 ⊢ sum s f = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ f x = 0) ⟶ sum s f = 0"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ f x = 0) ⟶ sum s f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_eq_neutral"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ (0::real) = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. x ∈ s ⟶ (0::real) = 0"
                },
                {
                    "args": "sum_eq_0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ sum s (λx. 0) = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum s (λx. 0) = 0"
                }
            ],
            "prop": "sum s (λx. 0) = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq_0"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_lmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ c = 0 ⟶ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "c = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c = 0 ⊢ c = 0"
                },
                {
                    "args": "sum_0, sum s (λx. 0) = 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum s (λx. 0) = 0"
                },
                {
                    "args": "real_mul_lzero, sum s (λx. 0 * f x) = 0 * sum s f",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "c = 0 ⊢ sum s (λx. 0 * f x) = 0 * sum s f"
                },
                {
                    "args": "sum s (λx. c * f x) = c * sum s f",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "c = 0 ⊢ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ c = 0 ⟶ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(c = 0) ⟶ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "¬(c = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(c = 0) ⊢ ¬(c = 0)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ ∀x. x ∈ s ∧ ¬(c * f x = neutral plus) ⟷ x ∈ s ∧ ¬(f x = neutral plus)"
                },
                {
                    "args": "x, 'a",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(c * f x = 0) ⟶ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "x ∈ s ∧ ¬(c * f x = 0)",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ x ∈ s ∧ ¬(c * f x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.1.1",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ x ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.1.2",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ ¬(c * f x = 0)"
                },
                {
                    "args": "real_entire",
                    "id": "1.1.1.3",
                    "prevs": [
                        "1.1.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ ¬(c = 0 ∨ f x = 0)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.1.1.4",
                    "prevs": [
                        "1.1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ ¬(c = 0) ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.1.5",
                    "prevs": [
                        "1.1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(c * f x = 0) ⊢ ¬(f x = 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.1.6",
                    "prevs": [
                        "1.1.1.1",
                        "1.1.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0), x ∈ s ∧ ¬(c * f x = 0) ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.1.7",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.6"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(c * f x = 0) ⟶ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(f x = 0) ⟶ x ∈ s ∧ ¬(c * f x = 0)"
                },
                {
                    "args": "x ∈ s ∧ ¬(f x = 0)",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.2.1",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.2.2",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ ¬(f x = 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.0",
                        "1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0), x ∈ s ∧ ¬(f x = 0) ⊢ ¬(c = 0) ∧ ¬(f x = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(c = 0 ∨ f x = 0)",
                    "id": "1.1.2.4",
                    "prevs": [
                        "1.1.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), x ∈ s ∧ ¬(f x = 0) ⊢ ¬(c = 0 ∨ f x = 0)"
                },
                {
                    "args": "real_entire, ¬(c * f x = 0)",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), x ∈ s ∧ ¬(f x = 0) ⊢ ¬(c * f x = 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.6",
                    "prevs": [
                        "1.1.2.1",
                        "1.1.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0), x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s ∧ ¬(c * f x = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.2.7",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(f x = 0) ⟶ x ∈ s ∧ ¬(c * f x = 0)"
                },
                {
                    "args": "iffI",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(c * f x = 0) ⟷ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "neutral_real_add, x ∈ s ∧ ¬(c * f x = neutral plus) ⟷ x ∈ s ∧ ¬(f x = neutral plus)",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ x ∈ s ∧ ¬(c * f x = neutral plus) ⟷ x ∈ s ∧ ¬(f x = neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ ∀x. x ∈ s ∧ ¬(c * f x = neutral plus) ⟷ x ∈ s ∧ ¬(f x = neutral plus)"
                },
                {
                    "args": "in_support, ∀x. x ∈ support plus (λx1. c * f x1) s ⟷ x ∈ support plus f s",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ ∀x. x ∈ support plus (λx1. c * f x1) s ⟷ x ∈ support plus f s"
                },
                {
                    "args": "member_ext",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0) ⊢ support plus (λx. c * f x) s = support plus f s"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ finite (support plus f s) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "finite (support plus f s)",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite (support plus f s) ⊢ finite (support plus f s)"
                },
                {
                    "args": "finite_induct_strong, {P: λs. sum s (λx. c * f x) = c * sum s f}",
                    "id": "1.4.1",
                    "prevs": [
                        "1.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite (support plus f s) ⊢ sum ∅ (λx. c * f x) = c * sum ∅ f ⟶ (∀x. ∀s1. sum s1 (λx1. c * f x1) = c * sum s1 f ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ sum (insert x s1) (λx1. c * f x1) = c * sum (insert x s1) f) ⟶ sum (support plus f s) (λx. c * f x) = c * sum (support plus f s) f"
                },
                {
                    "args": "real_mul_rzero, 0 = c * 0",
                    "id": "1.4.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = c * 0"
                },
                {
                    "args": "sum_empty, sum ∅ (λx. c * f x) = c * sum ∅ f",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ sum ∅ (λx. c * f x) = c * sum ∅ f"
                },
                {
                    "args": "",
                    "id": "1.4.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ ∀x. ∀s1. sum s1 (λx1. c * f x1) = c * sum s1 f ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ sum (insert x s1) (λx1. c * f x1) = c * sum (insert x s1) f"
                },
                {
                    "args": "a, 'a",
                    "id": "1.4.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "s1, 'a set",
                    "id": "1.4.4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s1"
                },
                {
                    "args": "sum s1 (λx. c * f x) = c * sum s1 f",
                    "id": "1.4.4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum s1 (λx. c * f x) = c * sum s1 f ⊢ sum s1 (λx. c * f x) = c * sum s1 f"
                },
                {
                    "args": "¬(a ∈ s1)",
                    "id": "1.4.4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s1) ⊢ ¬(a ∈ s1)"
                },
                {
                    "args": "finite s1",
                    "id": "1.4.4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s1 ⊢ finite s1"
                },
                {
                    "args": "sum_insert, {f: f, x: a}",
                    "id": "1.4.4.5",
                    "prevs": [
                        "1.4.4.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s1 ⊢ sum (insert a s1) f = (if a ∈ s1 then sum s1 f else f a + sum s1 f)"
                },
                {
                    "args": "if_not_P",
                    "id": "1.4.4.6",
                    "prevs": [
                        "1.4.4.5",
                        "1.4.4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s1, ¬(a ∈ s1) ⊢ sum (insert a s1) f = f a + sum s1 f"
                },
                {
                    "args": "sum_insert, {f: λx. c * f x, x: a}",
                    "id": "1.4.4.7",
                    "prevs": [
                        "1.4.4.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s1 ⊢ sum (insert a s1) (λx. c * f x) = (if a ∈ s1 then sum s1 (λx. c * f x) else c * f a + sum s1 (λx. c * f x))"
                },
                {
                    "args": "if_not_P",
                    "id": "1.4.4.8",
                    "prevs": [
                        "1.4.4.7",
                        "1.4.4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s1, ¬(a ∈ s1) ⊢ sum (insert a s1) (λx. c * f x) = c * f a + sum s1 (λx. c * f x)"
                },
                {
                    "args": "real_eq_add_lcancel, c * f a + sum s1 (λx. c * f x) = c * f a + c * sum s1 f",
                    "id": "1.4.4.9",
                    "prevs": [
                        "1.4.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), sum s1 (λx. c * f x) = c * sum s1 f ⊢ c * f a + sum s1 (λx. c * f x) = c * f a + c * sum s1 f"
                },
                {
                    "args": "real_add_ldistrib, c * f a + sum s1 (λx. c * f x) = c * (f a + sum s1 f)",
                    "id": "1.4.4.10",
                    "prevs": [
                        "1.4.4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), sum s1 (λx. c * f x) = c * sum s1 f ⊢ c * f a + sum s1 (λx. c * f x) = c * (f a + sum s1 f)"
                },
                {
                    "args": "c * f a + sum s1 (λx. c * f x) = c * sum (insert a s1) f",
                    "id": "1.4.4.11",
                    "prevs": [
                        "1.4.4.6",
                        "1.4.4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), sum s1 (λx. c * f x) = c * sum s1 f ⊢ c * f a + sum s1 (λx. c * f x) = c * sum (insert a s1) f"
                },
                {
                    "args": "sum (insert a s1) (λx. c * f x) = c * sum (insert a s1) f",
                    "id": "1.4.4.12",
                    "prevs": [
                        "1.4.4.8",
                        "1.4.4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s1, ¬(c = 0), ¬(a ∈ s1), finite (support plus f s), sum s1 (λx. c * f x) = c * sum s1 f ⊢ sum (insert a s1) (λx. c * f x) = c * sum (insert a s1) f"
                },
                {
                    "args": "",
                    "id": "1.4.4.13",
                    "prevs": [
                        "1.4.4.0",
                        "1.4.4.1",
                        "1.4.4.2",
                        "1.4.4.3",
                        "1.4.4.4",
                        "1.4.4.12"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ ∀a. ∀s1. sum s1 (λx. c * f x) = c * sum s1 f ⟶ ¬(a ∈ s1) ⟶ finite s1 ⟶ sum (insert a s1) (λx. c * f x) = c * sum (insert a s1) f"
                },
                {
                    "args": "",
                    "id": "1.4.5",
                    "prevs": [
                        "1.4.1",
                        "1.4.3",
                        "1.4.4"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ sum (support plus f s) (λx. c * f x) = c * sum (support plus f s) f"
                },
                {
                    "args": "sum_def, iterate plus (support plus f s) (λx. c * f x) = c * iterate plus (support plus f s) f",
                    "id": "1.4.6",
                    "prevs": [
                        "1.4.5"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ iterate plus (support plus f s) (λx. c * f x) = c * iterate plus (support plus f s) f"
                },
                {
                    "args": "if_P, (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.4.7",
                    "prevs": [
                        "1.4.6",
                        "1.4.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), finite (support plus f s) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.4.8",
                    "prevs": [
                        "1.4.0",
                        "1.4.7"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ finite (support plus f s) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(c = 0) ⊢ ¬(finite (support plus f s)) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "¬(finite (support plus f s))",
                    "id": "1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite (support plus f s)) ⊢ ¬(finite (support plus f s))"
                },
                {
                    "args": "real_mul_rzero, 0 = c * 0",
                    "id": "1.5.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = c * 0"
                },
                {
                    "args": "neutral_real_add, neutral plus = c * neutral plus",
                    "id": "1.5.2",
                    "prevs": [
                        "1.5.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), ¬(finite (support plus f s)) ⊢ neutral plus = c * neutral plus"
                },
                {
                    "args": "if_not_P, (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.5.3",
                    "prevs": [
                        "1.5.2",
                        "1.5.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0), ¬(finite (support plus f s)) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "",
                    "id": "1.5.4",
                    "prevs": [
                        "1.5.0",
                        "1.5.3"
                    ],
                    "rule": "intros",
                    "th": "¬(c = 0) ⊢ ¬(finite (support plus f s)) ⟶ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.6",
                    "prevs": [
                        "1.4",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(c = 0) ⊢ (if finite (support plus f s) then iterate plus (support plus f s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "(if finite (support plus (λx. c * f x) s) then iterate plus (support plus (λx. c * f x) s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)",
                    "id": "1.7",
                    "prevs": [
                        "1.3",
                        "1.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(c = 0) ⊢ (if finite (support plus (λx. c * f x) s) then iterate plus (support plus (λx. c * f x) s) (λx. c * f x) else neutral plus) = c * (if finite (support plus f s) then iterate plus (support plus f s) f else neutral plus)"
                },
                {
                    "args": "iterate_expand_cases, iterate plus s (λx. c * f x) = c * iterate plus s f",
                    "id": "1.8",
                    "prevs": [
                        "1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ iterate plus s (λx. c * f x) = c * iterate plus s f"
                },
                {
                    "args": "sum_def, sum s (λx. c * f x) = c * sum s f",
                    "id": "1.9",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(c = 0) ⊢ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(c = 0) ⟶ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum s (λx. c * f x) = c * sum s f"
                }
            ],
            "prop": "sum s (λx. c * f x) = c * sum s f",
            "steps": [
                {
                    "case": "c=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "iterate_expand_cases"
                },
                {
                    "goal": "support plus (λx. c * f x) s = support plus f s",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_support"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.1.2"
                    ],
                    "goal_id": "1.1.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "fact_ids": [
                        "1.1.1.3"
                    ],
                    "goal_id": "1.1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.1.1.4"
                    ],
                    "goal_id": "1.1.1.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.1.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "goal_id": "1.1.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.1.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "case": "finite (support plus f s)",
                    "goal_id": "1.4",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_def"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_forward_step",
                    "param_P": "(%s. sum s (λx. c * f x) = c * sum s f)",
                    "theorem": "finite_induct_strong"
                },
                {
                    "fact_ids": [
                        "1.4.1"
                    ],
                    "goal_id": "1.4.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "introduction",
                    "names": "a,s1"
                },
                {
                    "fact_ids": [
                        "1.4.4.4"
                    ],
                    "goal_id": "1.4.4.5",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "a",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "1.4.4.5",
                        "1.4.4.3"
                    ],
                    "goal_id": "1.4.4.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.4.4.4"
                    ],
                    "goal_id": "1.4.4.7",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx. c * f x)",
                    "param_x": "a",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "1.4.4.7",
                        "1.4.4.3"
                    ],
                    "goal_id": "1.4.4.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.4.4.8"
                    ],
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.4.4.6"
                    ],
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_ldistrib"
                },
                {
                    "goal_id": "1.4.4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_eq_add_lcancel"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_rmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_lmul, sum s (λx. c * f x) = c * sum s f",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum s (λx. c * f x) = c * sum s f"
                },
                {
                    "args": "real_mult_comm, sum s (λx. f x * c) = sum s f * c",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum s (λx. f x * c) = sum s f * c"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum s (λx. f x * c) = sum s f * c"
                }
            ],
            "prop": "sum s (λx. f x * c) = sum s f * c",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_neg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x::real. -x = -1 * x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. -x = -1 * x"
                },
                {
                    "args": "sum s f",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "⊢ -(sum s f) = -1 * sum s f"
                },
                {
                    "args": "∀x. -(f x) = -1 * f x",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "⊢ ∀x. -(f x) = -1 * f x"
                },
                {
                    "args": "extension",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (λx. -(f x)) = (λx. -1 * f x)"
                },
                {
                    "args": "sum_lmul, sum s (λx. -1 * f x) = -1 * sum s f",
                    "id": "4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum s (λx. -1 * f x) = -1 * sum s f"
                },
                {
                    "args": "sum s (λx. -(f x)) = -1 * sum s f",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sum s (λx. -(f x)) = -1 * sum s f"
                },
                {
                    "args": "sum s (λx. -(f x)) = -(sum s f)",
                    "id": "6",
                    "prevs": [
                        "1",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sum s (λx. -(f x)) = -(sum s f)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum s (λx. -(f x)) = -(sum s f)"
                }
            ],
            "prop": "sum s (λx. -(f x)) = -(sum s f)",
            "steps": [
                {
                    "goal": "!x::real. -x = -1 * x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "forall_elim",
                    "s": "(sum s f)"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "(λx. -(f x)) = (λx. -1 * (f x))",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "extension"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "sum_sub",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "sum_add, {f: f, g: λx. -(g x), s: s}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum s (λx. f x + -(g x)) = sum s f + sum s (λx. -(g x))"
                },
                {
                    "args": "sum_neg",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s ⊢ sum s (λx. f x + -(g x)) = sum s f + -(sum s g)"
                },
                {
                    "args": "real_minus_def, sum s (λx. f x - g x) = sum s f - sum s g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum s (λx. f x - g x) = sum s f - sum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s (λx. f x - g x) = sum s f - sum s g"
                }
            ],
            "prop": "finite s ⟶ sum s (λx. f x - g x) = sum s f - sum s g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_minus_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_g": "(%x. -g x)",
                    "theorem": "sum_add"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ sum ∅ f ≤ sum ∅ g"
                },
                {
                    "args": "∀x. x ∈ ∅ ⟶ f x ≤ g x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ ∅ ⟶ f x ≤ g x ⊢ ∀x. x ∈ ∅ ⟶ f x ≤ g x"
                },
                {
                    "args": "real_le_refl, {x: (0::real)}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ 0"
                },
                {
                    "args": "sum_empty, sum ∅ f ≤ sum ∅ g",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ ∅ ⟶ f x ≤ g x ⊢ sum ∅ f ≤ sum ∅ g"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ f x ≤ g x) ⟶ sum ∅ f ≤ sum ∅ g"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. ∀s1. ((∀x1. x1 ∈ s1 ⟶ f x1 ≤ g x1) ⟶ sum s1 f ≤ sum s1 g) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ (∀x1. x1 ∈ insert x s1 ⟶ f x1 ≤ g x1) ⟶ sum (insert x s1) f ≤ sum (insert x s1) g"
                },
                {
                    "args": "x, 'a",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "(∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1 ⊢ ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1"
                },
                {
                    "args": "sum_insert, {f: f, x: x}",
                    "id": "2.5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "2.6",
                    "prevs": [
                        "2.5",
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) f = f x + sum s f"
                },
                {
                    "args": "sum_insert, {f: g, x: x}",
                    "id": "2.7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) g = (if x ∈ s then sum s g else g x + sum s g)"
                },
                {
                    "args": "if_not_P",
                    "id": "2.8",
                    "prevs": [
                        "2.7",
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) g = g x + sum s g"
                },
                {
                    "args": "eq_refl, {x: x}",
                    "id": "2.9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x = x"
                },
                {
                    "args": "disjI1, {A: x = x, B: x ∈ s}",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ x = x ∨ x ∈ s"
                },
                {
                    "args": "member_insert, x ∈ insert x s",
                    "id": "2.11",
                    "prevs": [
                        "2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ x ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "2.12",
                    "prevs": [
                        "2.4",
                        "2.11"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "2.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "x1, 'a",
                    "id": "2.13.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ s",
                    "id": "2.13.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "disjI2, {A: x1 = x, B: x1 ∈ s}",
                    "id": "2.13.2",
                    "prevs": [
                        "2.13.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ x1 = x ∨ x1 ∈ s"
                },
                {
                    "args": "member_insert, x1 ∈ insert x s",
                    "id": "2.13.3",
                    "prevs": [
                        "2.13.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ x1 ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "2.13.4",
                    "prevs": [
                        "2.4",
                        "2.13.3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ f x1 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "2.13.5",
                    "prevs": [
                        "2.13.0",
                        "2.13.1",
                        "2.13.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ ∀x1. x1 ∈ s ⟶ f x1 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "2.14",
                    "prevs": [
                        "2.2",
                        "2.13"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ sum s f ≤ sum s g"
                },
                {
                    "args": "real_le_ladd_imp, {x: f x, y: sum s f, z: sum s g}",
                    "id": "2.15",
                    "prevs": [
                        "2.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ f x + sum s f ≤ f x + sum s g"
                },
                {
                    "args": "real_le_ladd_imp, {x: sum s g, y: f x, z: g x}",
                    "id": "2.16",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ sum s g + f x ≤ sum s g + g x"
                },
                {
                    "args": "real_add_comm, f x + sum s g ≤ g x + sum s g",
                    "id": "2.17",
                    "prevs": [
                        "2.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ f x + sum s g ≤ g x + sum s g"
                },
                {
                    "args": "real_le_trans",
                    "id": "2.18",
                    "prevs": [
                        "2.15",
                        "2.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ f x + sum s f ≤ g x + sum s g"
                },
                {
                    "args": "sum (insert x s) f ≤ g x + sum s g",
                    "id": "2.19",
                    "prevs": [
                        "2.6",
                        "2.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ sum (insert x s) f ≤ g x + sum s g"
                },
                {
                    "args": "sum (insert x s) f ≤ sum (insert x s) g",
                    "id": "2.20",
                    "prevs": [
                        "2.8",
                        "2.19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1, (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g ⊢ sum (insert x s) f ≤ sum (insert x s) g"
                },
                {
                    "args": "",
                    "id": "2.21",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "0",
                        "2.4",
                        "2.20"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀s. ((∀x1. x1 ∈ s ⟶ f x1 ≤ g x1) ⟶ sum s f ≤ sum s g) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ (∀x1. x1 ∈ insert x s ⟶ f x1 ≤ g x1) ⟶ sum (insert x s) f ≤ sum (insert x s) g"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ sum s f ≤ sum s g",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "2.5",
                        "2.3"
                    ],
                    "goal_id": "2.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.7",
                    "method_name": "apply_forward_step",
                    "param_f": "g",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "2.7",
                        "2.3"
                    ],
                    "goal_id": "2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.6"
                    ],
                    "goal_id": "2.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "f x <= g x",
                    "goal_id": "2.9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.9",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal": "sum s f ≤ sum s g",
                    "goal_id": "2.13",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.13",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.13",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.13.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.13.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "2.13.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.15",
                    "method_name": "apply_backward_step",
                    "param_y": "f x + sum s g",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "2.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "goal_id": "2.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "2.16",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_ladd_imp"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ g x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ∧ f x < g x ⊢ ∃x. x ∈ s ∧ f x < g x"
                },
                {
                    "args": "a, 'a",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "a ∈ s ∧ f a < g a",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ∧ f a < g a ⊢ a ∈ s ∧ f a < g a"
                },
                {
                    "args": "conjD1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a ∈ s ∧ f a < g a ⊢ a ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "6",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a ∈ s ∧ f a < g a ⊢ f a < g a"
                },
                {
                    "args": "insert_delete",
                    "id": "7",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ insert a (delete s a) = s"
                },
                {
                    "args": "eq_sym_eq, s = insert a (delete s a)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ s = insert a (delete s a)"
                },
                {
                    "args": "finite_delete, finite (delete s a)",
                    "id": "9",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ finite (delete s a)"
                },
                {
                    "args": "sum_insert, {f: f, x: a}",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) f = (if a ∈ delete s a then sum (delete s a) f else f a + sum (delete s a) f)"
                },
                {
                    "args": "¬(¬(a = a) ∧ a ∈ s)",
                    "id": "11",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬(¬(a = a) ∧ a ∈ s)"
                },
                {
                    "args": "member_delete, ¬(a ∈ delete s a)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ¬(a ∈ delete s a)"
                },
                {
                    "args": "if_not_P",
                    "id": "13",
                    "prevs": [
                        "10",
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) f = f a + sum (delete s a) f"
                },
                {
                    "args": "sum_insert, {f: g, x: a}",
                    "id": "14",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) g = (if a ∈ delete s a then sum (delete s a) g else g a + sum (delete s a) g)"
                },
                {
                    "args": "if_not_P",
                    "id": "15",
                    "prevs": [
                        "14",
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) g = g a + sum (delete s a) g"
                },
                {
                    "args": "∀a::real. ∀b. ∀c. ∀d. a < b ⟶ c ≤ d ⟶ a + c < b + d",
                    "id": "16",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. ∀c. ∀d. a < b ⟶ c ≤ d ⟶ a + c < b + d"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ∀x. x ∈ delete s a ⟶ f x ≤ g x"
                },
                {
                    "args": "x1, 'a",
                    "id": "17.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ delete s a",
                    "id": "17.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ delete s a ⊢ x1 ∈ delete s a"
                },
                {
                    "args": "member_delete",
                    "id": "17.2",
                    "prevs": [
                        "17.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ delete s a ⊢ ¬(x1 = a) ∧ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "17.3",
                    "prevs": [
                        "17.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ delete s a ⊢ x1 ∈ s"
                },
                {
                    "args": "x1",
                    "id": "17.4",
                    "prevs": [
                        "1",
                        "17.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x1 ∈ delete s a, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ f x1 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "17.5",
                    "prevs": [
                        "17.0",
                        "17.1",
                        "17.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ ∀x1. x1 ∈ delete s a ⟶ f x1 ≤ g x1"
                },
                {
                    "args": "sum_le",
                    "id": "18",
                    "prevs": [
                        "9",
                        "17"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (delete s a) f ≤ sum (delete s a) g"
                },
                {
                    "args": "f a, g a, sum (delete s a) f, sum (delete s a) g",
                    "id": "19",
                    "prevs": [
                        "16",
                        "6",
                        "18"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ f a + sum (delete s a) f < g a + sum (delete s a) g"
                },
                {
                    "args": "sum (insert a (delete s a)) f < g a + sum (delete s a) g",
                    "id": "20",
                    "prevs": [
                        "13",
                        "19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) f < g a + sum (delete s a) g"
                },
                {
                    "args": "sum (insert a (delete s a)) f < sum (insert a (delete s a)) g",
                    "id": "21",
                    "prevs": [
                        "15",
                        "20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum (insert a (delete s a)) f < sum (insert a (delete s a)) g"
                },
                {
                    "args": "sum s f < sum s g",
                    "id": "22",
                    "prevs": [
                        "8",
                        "21"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ∧ f a < g a, ∀x. x ∈ s ⟶ f x ≤ g x, ∃x. x ∈ s ∧ f x < g x ⊢ sum s f < sum s g"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < g x",
                    "id": "23",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "2",
                        "3",
                        "4",
                        "22"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ (∃x. x ∈ s ∧ f x < g x) ⟶ sum s f < sum s g"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ g x) ⟶ (∃x. x ∈ s ∧ f x < g x) ⟶ sum s f < sum s g",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "goal": "s= insert a (delete s a)",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "insert_delete"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "finite(delete s a)",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "finite_delete"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "a",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal": "~(a ∈ delete s a)",
                    "goal_id": "11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_delete"
                },
                {
                    "goal_id": "11",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "10",
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "14",
                    "method_name": "apply_forward_step",
                    "param_f": "g",
                    "param_x": "a",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "14",
                        "12"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. !c. !d. a < b --> c <= d --> a + c < b + d",
                    "goal_id": "16",
                    "method_name": "cut"
                },
                {
                    "goal_id": "16",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "17",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                },
                {
                    "goal_id": "17",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "17.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "17.1"
                    ],
                    "goal_id": "17.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_delete"
                },
                {
                    "fact_ids": [
                        "17.2"
                    ],
                    "goal_id": "17.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_lt_all",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x < g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x < g x"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "3.2",
                    "prevs": [
                        "2",
                        "3.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀x. x ∈ s ⟶ f x < g x, finite s, ¬(s = ∅), x ∈ s ⊢ f x < g x"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x, x ∈ s ⊢ f x ≤ g x"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ ∀x. x ∈ s ⟶ f x ≤ g x"
                },
                {
                    "args": "∃x. x ∈ s ⟶ f x < g x",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "z3",
                    "th": "∀x. x ∈ s ⟶ f x < g x ⊢ ∃x. x ∈ s ⟶ f x < g x"
                },
                {
                    "args": "sum_lt",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < g x ⊢ sum s f < sum s g"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < g x) ⟶ sum s f < sum s g"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < g x) ⟶ sum s f < sum s g",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_lt"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_pos_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ 0 ≤ f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ 0 ≤ f x"
                },
                {
                    "args": "∃x. x ∈ s ⟶ 0 < f x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ⟶ 0 < f x ⊢ ∃x. x ∈ s ⟶ 0 < f x"
                },
                {
                    "args": "real_le_refl, {x: (0::real)}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ 0"
                },
                {
                    "args": "sum_0, 0 ≤ sum s (λx. 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ f x, ∃x. x ∈ s ⟶ 0 < f x ⊢ 0 ≤ sum s (λx. 0)"
                },
                {
                    "args": "sum_lt",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ f x, ∃x. x ∈ s ⟶ 0 < f x ⊢ sum s (λx. 0) < sum s f"
                },
                {
                    "args": "real_let_trans",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ f x, ∃x. x ∈ s ⟶ 0 < f x ⊢ 0 < sum s f"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ (∃x. x ∈ s ⟶ 0 < f x) ⟶ 0 < sum s f"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ (∃x. x ∈ s ⟶ 0 < f x) ⟶ 0 < sum s f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_y": "sum s (%x. 0)",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_0"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_pos_lt_all",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ 0 < f x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ 0 < f x ⊢ ∀x. x ∈ s ⟶ 0 < f x"
                },
                {
                    "args": "∀x. x ∈ s ⟶ 0 ≤ f x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "z3",
                    "th": "∀x. x ∈ s ⟶ 0 < f x ⊢ ∀x. x ∈ s ⟶ 0 ≤ f x"
                },
                {
                    "args": "∃x. x ∈ s ⟶ 0 < f x",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "z3",
                    "th": "∀x. x ∈ s ⟶ 0 < f x ⊢ ∃x. x ∈ s ⟶ 0 < f x"
                },
                {
                    "args": "sum_pos_lt",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ 0 < f x ⊢ 0 < sum s f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ 0 < f x) ⟶ 0 < sum s f"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ 0 < f x) ⟶ 0 < sum s f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_lt"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "sum_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ f x = g x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ ∀x. x ∈ s ⟶ f x = g x"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_eq",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ iterate plus s f = iterate plus s g"
                },
                {
                    "args": "sum_def, sum s f = sum s g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ f x = g x ⊢ sum s f = sum s g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ f x = g x) ⟶ sum s f = sum s g"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ f x = g x) ⟶ sum s f = sum s g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_abs",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "real_le_refl, {x: (0::real)}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ 0"
                },
                {
                    "args": "real_abs_0, abs (0::real) ≤ 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ abs (0::real) ≤ 0"
                },
                {
                    "args": "sum_empty, abs (sum ∅ f) ≤ sum ∅ (λx. abs (f x))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ abs (sum ∅ f) ≤ sum ∅ (λx. abs (f x))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. ∀s1. abs (sum s1 f) ≤ sum s1 (λx1. abs (f x1)) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ abs (sum (insert x s1) f) ≤ sum (insert x s1) (λx1. abs (f x1))"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "abs (sum s f) ≤ sum s (λx. abs (f x))",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (sum s f) ≤ sum s (λx. abs (f x)) ⊢ abs (sum s f) ≤ sum s (λx. abs (f x))"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "sum_insert, {f: f, x: x}",
                    "id": "4.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "4.5",
                    "prevs": [
                        "4.4",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) f = f x + sum s f"
                },
                {
                    "args": "sum_insert, {f: λx1. abs (f x1), x: x}",
                    "id": "4.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) (λx1. abs (f x1)) = (if x ∈ s then sum s (λx1. abs (f x1)) else abs (f x) + sum s (λx1. abs (f x1)))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.7",
                    "prevs": [
                        "4.6",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) (λx1. abs (f x1)) = abs (f x) + sum s (λx1. abs (f x1))"
                },
                {
                    "args": "∀a. ∀b. abs a ≤ b ⟶ abs (f x + a) ≤ abs (f x) + b",
                    "id": "4.8",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a. ∀b. abs a ≤ b ⟶ abs (f x + a) ≤ abs (f x) + b"
                },
                {
                    "args": "sum s f, sum s (λx1. abs (f x1))",
                    "id": "4.9",
                    "prevs": [
                        "4.8",
                        "4.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, ¬(x ∈ s), abs (sum s f) ≤ sum s (λx. abs (f x)) ⊢ abs (f x + sum s f) ≤ abs (f x) + sum s (λx1. abs (f x1))"
                },
                {
                    "args": "abs (sum (insert x s) f) ≤ abs (f x) + sum s (λx1. abs (f x1))",
                    "id": "4.10",
                    "prevs": [
                        "4.5",
                        "4.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), abs (sum s f) ≤ sum s (λx. abs (f x)) ⊢ abs (sum (insert x s) f) ≤ abs (f x) + sum s (λx1. abs (f x1))"
                },
                {
                    "args": "abs (sum (insert x s) f) ≤ sum (insert x s) (λx1. abs (f x1))",
                    "id": "4.11",
                    "prevs": [
                        "4.7",
                        "4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), abs (sum s f) ≤ sum s (λx. abs (f x)) ⊢ abs (sum (insert x s) f) ≤ sum (insert x s) (λx1. abs (f x1))"
                },
                {
                    "args": "",
                    "id": "4.12",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "0",
                        "4.11"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀s. abs (sum s f) ≤ sum s (λx1. abs (f x1)) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ abs (sum (insert x s) f) ≤ sum (insert x s) (λx1. abs (f x1))"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ abs (sum s f) ≤ sum s (λx. abs (f x))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ abs (sum s f) ≤ sum s (λx. abs (f x))"
                }
            ],
            "prop": "finite s ⟶ abs (sum s f) ≤ sum s (λx. abs (f x))",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "4.4",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. abs (f x1))",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "4.6",
                        "4.3"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.7"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. abs(a) <= b --> abs(f x + a) <= abs(f x) + b",
                    "goal_id": "4.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.8"
                    ],
                    "goal_id": "4.9",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_abs_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ abs (f x) ≤ g x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ abs (f x) ≤ g x ⊢ ∀x. x ∈ s ⟶ abs (f x) ≤ g x"
                },
                {
                    "args": "sub_abs, {f: f, s: s}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ g x ⊢ abs (sum s f) ≤ sum s (λx. abs (f x))"
                },
                {
                    "args": "sum_le",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ g x ⊢ sum s (λx. abs (f x)) ≤ sum s g"
                },
                {
                    "args": "real_le_trans",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ g x ⊢ abs (sum s f) ≤ sum s g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ abs (f x) ≤ g x) ⟶ abs (sum s f) ≤ sum s g"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ abs (f x) ≤ g x) ⟶ abs (sum s f) ≤ sum s g",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_y": "sum s (%x. abs(f x))",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_abs"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_const",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "real_mul_lzero, 0 = 0 * c",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = 0 * c"
                },
                {
                    "args": "real_zero_def, 0 = of_nat 0 * c",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s ⊢ 0 = of_nat 0 * c"
                },
                {
                    "args": "card_empty, 0 = of_nat (card (∅::'a set)) * c",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ 0 = of_nat (card (∅::'a set)) * c"
                },
                {
                    "args": "sum_empty, sum ∅ (λn::'a. c) = of_nat (card (∅::'a set)) * c",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum ∅ (λn::'a. c) = of_nat (card (∅::'a set)) * c"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x::'a. ∀s1. sum s1 (λn. c) = of_nat (card s1) * c ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ sum (insert x s1) (λn. c) = of_nat (card (insert x s1)) * c"
                },
                {
                    "args": "x, 'a",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "sum s (λn. c) = of_nat (card s) * c",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum s (λn. c) = of_nat (card s) * c ⊢ sum s (λn. c) = of_nat (card s) * c"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "5.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "sum_insert, {f: λn::'a. c, x: x}",
                    "id": "5.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) (λn. c) = (if x ∈ s then sum s (λn. c) else c + sum s (λn. c))"
                },
                {
                    "args": "if_not_P",
                    "id": "5.5",
                    "prevs": [
                        "5.4",
                        "5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) (λn. c) = c + sum s (λn. c)"
                },
                {
                    "args": "card_insert, {x: x}",
                    "id": "5.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ card (insert x s) = (if x ∈ s then card s else Suc (card s))"
                },
                {
                    "args": "if_not_P",
                    "id": "5.7",
                    "prevs": [
                        "5.6",
                        "5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ card (insert x s) = Suc (card s)"
                },
                {
                    "args": "c + of_nat (card s) * c = of_nat (card s) * c + c",
                    "id": "5.8",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ c + of_nat (card s) * c = of_nat (card s) * c + c"
                },
                {
                    "args": "c + sum s (λn. c) = of_nat (card s) * c + c",
                    "id": "5.9",
                    "prevs": [
                        "5.2",
                        "5.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (card s) * c + c"
                },
                {
                    "args": "real_mul_lid, c + sum s (λn. c) = of_nat (card s) * c + 1 * c",
                    "id": "5.10",
                    "prevs": [
                        "5.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (card s) * c + 1 * c"
                },
                {
                    "args": "real_one_def, c + sum s (λn. c) = of_nat (card s) * c + of_nat 1 * c",
                    "id": "5.11",
                    "prevs": [
                        "5.10"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (card s) * c + of_nat 1 * c"
                },
                {
                    "args": "real_add_rdistrib, c + sum s (λn. c) = (of_nat (card s) + of_nat 1) * c",
                    "id": "5.12",
                    "prevs": [
                        "5.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = (of_nat (card s) + of_nat 1) * c"
                },
                {
                    "args": "real_of_nat_add, c + sum s (λn. c) = of_nat (card s + 1) * c",
                    "id": "5.13",
                    "prevs": [
                        "5.12"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (card s + 1) * c"
                },
                {
                    "args": "add_1_right, c + sum s (λn. c) = of_nat (Suc (card s)) * c",
                    "id": "5.14",
                    "prevs": [
                        "5.13"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (Suc (card s)) * c"
                },
                {
                    "args": "c + sum s (λn. c) = of_nat (card (insert x s)) * c",
                    "id": "5.15",
                    "prevs": [
                        "5.7",
                        "5.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ c + sum s (λn. c) = of_nat (card (insert x s)) * c"
                },
                {
                    "args": "sum (insert x s) (λn. c) = of_nat (card (insert x s)) * c",
                    "id": "5.16",
                    "prevs": [
                        "5.5",
                        "5.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), sum s (λn. c) = of_nat (card s) * c ⊢ sum (insert x s) (λn. c) = of_nat (card (insert x s)) * c"
                },
                {
                    "args": "",
                    "id": "5.17",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2",
                        "5.3",
                        "0",
                        "5.16"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x::'a. ∀s. sum s (λn. c) = of_nat (card s) * c ⟶ ¬(x ∈ s) ⟶ finite s ⟶ sum (insert x s) (λn. c) = of_nat (card (insert x s)) * c"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "6",
                    "prevs": [
                        "0",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ sum s (λn. c) = of_nat (card s) * c"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s (λn. c) = of_nat (card s) * c"
                }
            ],
            "prop": "finite s ⟶ sum s (λn. c) = of_nat (card s) * c",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "card_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λn::'a. c)",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "5.4",
                        "5.3"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "5.5"
                    ],
                    "goal_id": "5.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5.6",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "card_insert"
                },
                {
                    "fact_ids": [
                        "5.6",
                        "5.3"
                    ],
                    "goal_id": "5.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "5.7"
                    ],
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_of_nat_add"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rdistrib"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "fact_ids": [
                        "5.2"
                    ],
                    "goal_id": "5.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5.8",
                    "method_name": "real_norm"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_pos_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ 0 ≤ f x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ 0 ≤ f x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⟶ 0 ≤ sum s f"
                },
                {
                    "args": "finite ({x. x ∈ s ∧ ¬(f x = 0)})",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)})"
                },
                {
                    "args": "sum_le, {f: λx::'a. (0::real), g: f}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ (∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ 0 ≤ f x) ⟶ sum ({x. x ∈ s ∧ ¬(f x = 0)}) (λx. 0) ≤ sum ({x. x ∈ s ∧ ¬(f x = 0)}) f"
                },
                {
                    "args": "sum_0",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ (∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ 0 ≤ f x) ⟶ 0 ≤ sum ({x. x ∈ s ∧ ¬(f x = 0)}) f"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ 0 ≤ f x"
                },
                {
                    "args": "x, 'a",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)}",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⊢ x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)}"
                },
                {
                    "args": "member_collect",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "1.3.4",
                    "prevs": [
                        "0",
                        "1.3.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}), x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⊢ 0 ≤ f x"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [
                        "1.3.0",
                        "1.3.1",
                        "1.3.4"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ ∀x. x ∈ {x1. x1 ∈ s ∧ ¬(f x1 = 0)} ⟶ 0 ≤ f x"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ 0 ≤ sum ({x. x ∈ s ∧ ¬(f x = 0)}) f"
                },
                {
                    "args": "neutral_real_add, 0 ≤ sum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ 0 ≤ sum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f"
                },
                {
                    "args": "support_def, 0 ≤ sum (support plus f s) f",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ 0 ≤ sum (support plus f s) f"
                },
                {
                    "args": "sum_support, 0 ≤ sum s f",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⊢ 0 ≤ sum s f"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ finite ({x. x ∈ s ∧ ¬(f x = 0)}) ⟶ 0 ≤ sum s f"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ 0 ≤ sum s f"
                },
                {
                    "args": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)}))"
                },
                {
                    "args": "sum_degenerate",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ sum s f = 0"
                },
                {
                    "args": "real_le_refl, {x: (0::real)}",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ 0"
                },
                {
                    "args": "0 ≤ sum s f",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x, ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⊢ 0 ≤ sum s f"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ¬(finite ({x. x ∈ s ∧ ¬(f x = 0)})) ⟶ 0 ≤ sum s f"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ 0 ≤ sum s f"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ 0 ≤ sum s f"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ 0 ≤ sum s f",
            "steps": [
                {
                    "case": "finite {x. x ∈ s & ~(f x = 0)}",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_support"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_f": "(%x::'a. (0::real))",
                    "param_g": "f",
                    "theorem": "sum_le"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_0"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.3.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.3.1"
                    ],
                    "goal_id": "1.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.3.2"
                    ],
                    "goal_id": "1.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "sum_degenerate"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "name": "sum_pos_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ 0 ≤ f x) ⟶ sum ∅ f ≤ b ⟶ (∀x. x ∈ ∅ ⟶ f x ≤ b)"
                },
                {
                    "args": "∀x. x ∈ ∅ ⟶ 0 ≤ f x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ ∅ ⟶ 0 ≤ f x ⊢ ∀x. x ∈ ∅ ⟶ 0 ≤ f x"
                },
                {
                    "args": "sum ∅ f ≤ b",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum ∅ f ≤ b ⊢ sum ∅ f ≤ b"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum ∅ f ≤ b, ∀x. x ∈ ∅ ⟶ 0 ≤ f x ⊢ ∀x. x ∈ ∅ ⟶ f x ≤ b"
                },
                {
                    "args": "x, 'a",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ ∅",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ ∅ ⊢ x ∈ ∅"
                },
                {
                    "args": "member_empty, f x ≤ b",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x ∈ ∅ ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum ∅ f ≤ b, ∀x. x ∈ ∅ ⟶ 0 ≤ f x ⊢ ∀x. x ∈ ∅ ⟶ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ (∀x. x ∈ ∅ ⟶ 0 ≤ f x) ⟶ sum ∅ f ≤ b ⟶ (∀x. x ∈ ∅ ⟶ f x ≤ b)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. ∀s1. ((∀x1. x1 ∈ s1 ⟶ 0 ≤ f x1) ⟶ sum s1 f ≤ b ⟶ (∀x1. x1 ∈ s1 ⟶ f x1 ≤ b)) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ (∀x1. x1 ∈ insert x s1 ⟶ 0 ≤ f x1) ⟶ sum (insert x s1) f ≤ b ⟶ (∀x1. x1 ∈ insert x s1 ⟶ f x1 ≤ b)"
                },
                {
                    "args": "x, 'a",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "(∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b)",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b)"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1 ⊢ ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1"
                },
                {
                    "args": "sum (insert x s) f ≤ b",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum (insert x s) f ≤ b ⊢ sum (insert x s) f ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ b"
                },
                {
                    "args": "x1, 'a",
                    "id": "2.6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ insert x s",
                    "id": "2.6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ insert x s ⊢ x1 ∈ insert x s"
                },
                {
                    "args": "member_insert",
                    "id": "2.6.2",
                    "prevs": [
                        "2.6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ insert x s ⊢ x1 = x ∨ x1 ∈ s"
                },
                {
                    "args": "sum_insert, {f: f, x: x}",
                    "id": "2.6.3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) f = (if x ∈ s then sum s f else f x + sum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "2.6.4",
                    "prevs": [
                        "2.6.3",
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) f = f x + sum s f"
                },
                {
                    "args": "",
                    "id": "2.6.5",
                    "prevs": [
                        "2.6.4",
                        "2.5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, ¬(x ∈ s), sum (insert x s) f ≤ b ⊢ f x + sum s f ≤ b"
                },
                {
                    "args": "∀x. ∀y. 0 ≤ x ⟶ 0 ≤ y ⟶ x + y ≤ b ⟶ x ≤ b ∧ y ≤ b",
                    "id": "2.6.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. ∀y. 0 ≤ x ⟶ 0 ≤ y ⟶ x + y ≤ b ⟶ x ≤ b ∧ y ≤ b"
                },
                {
                    "args": "eq_refl, {x: x}",
                    "id": "2.6.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x = x"
                },
                {
                    "args": "disjI1, {A: x = x, B: x ∈ s}",
                    "id": "2.6.8",
                    "prevs": [
                        "2.6.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x = x ∨ x ∈ s"
                },
                {
                    "args": "member_insert, x ∈ insert x s",
                    "id": "2.6.9",
                    "prevs": [
                        "2.6.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "2.6.10",
                    "prevs": [
                        "2.4",
                        "2.6.9"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ 0 ≤ f x"
                },
                {
                    "args": "",
                    "id": "2.6.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ ∀x. x ∈ s ⟶ 0 ≤ f x"
                },
                {
                    "args": "x2, 'a",
                    "id": "2.6.11.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "x2 ∈ s",
                    "id": "2.6.11.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x2 ∈ s ⊢ x2 ∈ s"
                },
                {
                    "args": "disjI2, {A: x2 = x, B: x2 ∈ s}",
                    "id": "2.6.11.2",
                    "prevs": [
                        "2.6.11.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x2 ∈ s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x2 = x ∨ x2 ∈ s"
                },
                {
                    "args": "member_insert, x2 ∈ insert x s",
                    "id": "2.6.11.3",
                    "prevs": [
                        "2.6.11.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x2 ∈ s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x2 ∈ insert x s"
                },
                {
                    "args": "",
                    "id": "2.6.11.4",
                    "prevs": [
                        "2.4",
                        "2.6.11.3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, x2 ∈ s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ 0 ≤ f x2"
                },
                {
                    "args": "",
                    "id": "2.6.11.5",
                    "prevs": [
                        "2.6.11.0",
                        "2.6.11.1",
                        "2.6.11.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ ∀x2. x2 ∈ s ⟶ 0 ≤ f x2"
                },
                {
                    "args": "sum_pos_le",
                    "id": "2.6.12",
                    "prevs": [
                        "2.6.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ 0 ≤ sum s f"
                },
                {
                    "args": "",
                    "id": "2.6.13",
                    "prevs": [
                        "2.6.6",
                        "2.6.10",
                        "2.6.12",
                        "2.6.5"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ f x ≤ b ∧ sum s f ≤ b"
                },
                {
                    "args": "conjD2",
                    "id": "2.6.14",
                    "prevs": [
                        "2.6.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ sum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.15",
                    "prevs": [
                        "2.2",
                        "2.6.11",
                        "2.6.14"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x1 = x ⟶ f x1 ≤ b"
                },
                {
                    "args": "x1 = x",
                    "id": "2.6.16.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 = x ⊢ x1 = x"
                },
                {
                    "args": "conjD1",
                    "id": "2.6.16.1",
                    "prevs": [
                        "2.6.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ f x ≤ b"
                },
                {
                    "args": "f x1 ≤ b",
                    "id": "2.6.16.2",
                    "prevs": [
                        "2.6.16.0",
                        "2.6.16.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x1 = x, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ f x1 ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.16.3",
                    "prevs": [
                        "2.6.16.0",
                        "2.6.16.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x1 = x ⟶ f x1 ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.17",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x1 ∈ s ⟶ f x1 ≤ b"
                },
                {
                    "args": "x1 ∈ s",
                    "id": "2.6.17.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "x1",
                    "id": "2.6.17.1",
                    "prevs": [
                        "2.6.15",
                        "2.6.17.0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x1 ∈ s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ f x1 ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.17.2",
                    "prevs": [
                        "2.6.17.0",
                        "2.6.17.1"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ x1 ∈ s ⟶ f x1 ≤ b"
                },
                {
                    "args": "disjE",
                    "id": "2.6.18",
                    "prevs": [
                        "2.6.2",
                        "2.6.16",
                        "2.6.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(x ∈ s), x1 ∈ insert x s, sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ f x1 ≤ b"
                },
                {
                    "args": "",
                    "id": "2.6.19",
                    "prevs": [
                        "2.6.0",
                        "2.6.1",
                        "2.6.18"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(x ∈ s), sum (insert x s) f ≤ b, ∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1, (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⊢ ∀x1. x1 ∈ insert x s ⟶ f x1 ≤ b"
                },
                {
                    "args": "",
                    "id": "2.7",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "0",
                        "2.4",
                        "2.5",
                        "2.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀s. ((∀x1. x1 ∈ s ⟶ 0 ≤ f x1) ⟶ sum s f ≤ b ⟶ (∀x1. x1 ∈ s ⟶ f x1 ≤ b)) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ (∀x1. x1 ∈ insert x s ⟶ 0 ≤ f x1) ⟶ sum (insert x s) f ≤ b ⟶ (∀x1. x1 ∈ insert x s ⟶ f x1 ≤ b)"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b)"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f ≤ b ⟶ (∀x. x ∈ s ⟶ f x ≤ b)",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "2.6.1"
                    ],
                    "goal_id": "2.6.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.6.3",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "2.6.3",
                        "2.3"
                    ],
                    "goal_id": "2.6.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.6.4",
                        "2.5"
                    ],
                    "goal_id": "2.6.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "!x. !y. 0 <= x --> 0 <= y --> x + y <= b --> x <= b & y <= b",
                    "goal_id": "2.6.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.6.6",
                    "method_name": "z3"
                },
                {
                    "goal": "0 <= f x",
                    "goal_id": "2.6.7",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.6.7",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.6.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "2.6.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.6.7",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "2.6.5"
                    ],
                    "goal": "0 <= sum s f",
                    "goal_id": "2.6.11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.6.11",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_le"
                },
                {
                    "goal_id": "2.6.11",
                    "method_name": "introduction",
                    "names": "x2"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.6.11.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.6.11.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "2.6.11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "2.6.6",
                        "2.6.10",
                        "2.6.12",
                        "2.6.5"
                    ],
                    "goal_id": "2.6.13",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.6.13"
                    ],
                    "goal_id": "2.6.14",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.2",
                        "2.6.11",
                        "2.6.14"
                    ],
                    "goal_id": "2.6.15",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.6.2"
                    ],
                    "goal_id": "2.6.16",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.6.16",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.6.16.0"
                    ],
                    "goal_id": "2.6.16.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.6.13"
                    ],
                    "goal_id": "2.6.16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2.6.17",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.6.15"
                    ],
                    "goal_id": "2.6.17.1",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_pos_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ 0 ≤ f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ 0 ≤ f x"
                },
                {
                    "args": "sum s f = 0",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum s f = 0 ⊢ sum s f = 0"
                },
                {
                    "args": "real_le_antisym",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "sum s f = 0 ⊢ sum s f ≤ 0 ∧ 0 ≤ sum s f"
                },
                {
                    "args": "conjD1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "sum s f = 0 ⊢ sum s f ≤ 0"
                },
                {
                    "args": "conjD2",
                    "id": "5",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "sum s f = 0 ⊢ 0 ≤ sum s f"
                },
                {
                    "args": "sum_pos_bound",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ f x ≤ 0"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "7.2",
                    "prevs": [
                        "6",
                        "7.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ f x ≤ 0"
                },
                {
                    "args": "x",
                    "id": "7.3",
                    "prevs": [
                        "1",
                        "7.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ 0 ≤ f x"
                },
                {
                    "args": "conjI",
                    "id": "7.4",
                    "prevs": [
                        "7.2",
                        "7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ f x ≤ 0 ∧ 0 ≤ f x"
                },
                {
                    "args": "real_le_antisym, f x = 0",
                    "id": "7.5",
                    "prevs": [
                        "7.4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, x ∈ s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "7.6",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum s f = 0, ∀x. x ∈ s ⟶ 0 ≤ f x ⊢ ∀x. x ∈ s ⟶ f x = 0"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f = 0 ⟶ (∀x. x ∈ s ⟶ f x = 0)"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ f x) ⟶ sum s f = 0 ⟶ (∀x. x ∈ s ⟶ f x = 0)",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_le_antisym"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0",
                        "1",
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "sum_pos_bound"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "7.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_le_antisym"
                },
                {
                    "goal_id": "7.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "7.3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_zero_exists",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "sum s u = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum s u = 0 ⊢ sum s u = 0"
                },
                {
                    "args": "∀u::real. 0 ≤ -u ⟷ ¬(u > 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀u::real. 0 ≤ -u ⟷ ¬(u > 0)"
                },
                {
                    "args": "∀u::real. 0 ≤ u ⟷ ¬(u < 0)",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀u::real. 0 ≤ u ⟷ ¬(u < 0)"
                },
                {
                    "args": "(∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0) ∨ (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i))",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0) ∨ (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum s u = 0 ⊢ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0) ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0 ⊢ ∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0"
                },
                {
                    "args": "disjI2, {A: ∀i. i ∈ s ⟶ u i = 0, B: ∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0}",
                    "id": "5.1",
                    "prevs": [
                        "5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, sum s u = 0, ∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0 ⊢ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [
                        "5.0",
                        "5.1"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum s u = 0 ⊢ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0) ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum s u = 0 ⊢ (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "(∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i))",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i))"
                },
                {
                    "args": "",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ 0 ≤ u i) ⟶ (∀i. i ∈ s ⟶ u i = 0)"
                },
                {
                    "args": "∀i. i ∈ s ⟶ 0 ≤ u i",
                    "id": "6.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. i ∈ s ⟶ 0 ≤ u i ⊢ ∀i. i ∈ s ⟶ 0 ≤ u i"
                },
                {
                    "args": "sum_pos_eq_0",
                    "id": "6.1.1",
                    "prevs": [
                        "0",
                        "6.1.0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, sum s u = 0, ∀i. i ∈ s ⟶ 0 ≤ u i, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ ∀x. x ∈ s ⟶ u x = 0"
                },
                {
                    "args": "",
                    "id": "6.1.2",
                    "prevs": [
                        "6.1.0",
                        "6.1.1"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ 0 ≤ u i) ⟶ (∀i. i ∈ s ⟶ u i = 0)"
                },
                {
                    "args": "",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⟶ (∀i. i ∈ s ⟶ u i = 0)"
                },
                {
                    "args": "∀i. i ∈ s ⟶ 0 ≤ -(u i)",
                    "id": "6.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. i ∈ s ⟶ 0 ≤ -(u i) ⊢ ∀i. i ∈ s ⟶ 0 ≤ -(u i)"
                },
                {
                    "args": "∀x::real. x = 0 ⟷ -x = 0",
                    "id": "6.2.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. x = 0 ⟷ -x = 0"
                },
                {
                    "args": "",
                    "id": "6.2.2",
                    "prevs": [
                        "6.2.1",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "sum s u = 0 ⊢ -(sum s u) = 0"
                },
                {
                    "args": "sum_neg, sum s (λx. -(u x)) = 0",
                    "id": "6.2.3",
                    "prevs": [
                        "6.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, sum s u = 0, ∀i. i ∈ s ⟶ 0 ≤ -(u i), (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ sum s (λx. -(u x)) = 0"
                },
                {
                    "args": "sum_pos_eq_0",
                    "id": "6.2.4",
                    "prevs": [
                        "0",
                        "6.2.0",
                        "6.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, sum s u = 0, ∀i. i ∈ s ⟶ 0 ≤ -(u i), (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ ∀x. x ∈ s ⟶ -(u x) = 0"
                },
                {
                    "args": "∀i. i ∈ s ⟶ u i = 0",
                    "id": "6.2.5",
                    "prevs": [
                        "6.2.1",
                        "6.2.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, sum s u = 0, ∀i. i ∈ s ⟶ 0 ≤ -(u i), (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ ∀i. i ∈ s ⟶ u i = 0"
                },
                {
                    "args": "",
                    "id": "6.2.6",
                    "prevs": [
                        "6.2.0",
                        "6.2.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⟶ (∀i. i ∈ s ⟶ u i = 0)"
                },
                {
                    "args": "disjE",
                    "id": "6.3",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ ∀i. i ∈ s ⟶ u i = 0"
                },
                {
                    "args": "disjI1, {A: ∀i. i ∈ s ⟶ u i = 0, B: ∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0}",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, sum s u = 0, (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⊢ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "",
                    "id": "6.5",
                    "prevs": [
                        "6.0",
                        "6.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, sum s u = 0 ⊢ (∀i. i ∈ s ⟶ 0 ≤ u i) ∨ (∀i. i ∈ s ⟶ 0 ≤ -(u i)) ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "disjE",
                    "id": "7",
                    "prevs": [
                        "4",
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, sum s u = 0 ⊢ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s u = 0 ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ sum s u = 0 ",
                "   ⟶ (∀i. i ∈ s ⟶ u i = 0) ∨ (∃j. ∃k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0)"
            ],
            "steps": [
                {
                    "goal": "!u::real. 0 <= -u <--> ~(u > 0)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "goal": "∀u::real. 0 <= u <--> ~(u < 0)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "goal": "(?j. ?k. j ∈ s ∧ u j < 0 ∧ k ∈ s ∧ u k > 0) |\n      (!i. i ∈ s ⟶ 0 <= u i) | (!i. i ∈ s ⟶ 0 <= -(u i))",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "6.0"
                    ],
                    "goal_id": "6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_eq_0"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "introduction"
                },
                {
                    "goal": "!x::real. x = 0 <--> -x = 0",
                    "goal_id": "6.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6.2.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "6.2.1"
                    ],
                    "goal_id": "6.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_eq_0"
                },
                {
                    "goal_id": "6.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_neg"
                },
                {
                    "fact_ids": [
                        "6.2.1",
                        "1"
                    ],
                    "goal_id": "6.2.2",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "'a set",
                "u": "'a ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_delete",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "a ∈ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ⊢ a ∈ s"
                },
                {
                    "args": "∀x::real. ∀y. ∀z. y = z - x ⟷ x + y = z",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. ∀y. ∀z. y = z - x ⟷ x + y = z"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_delete, {a: a, f: f, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ⊢ f a + iterate plus (delete s a) f = iterate plus s f"
                },
                {
                    "args": "sum_def, f a + sum (delete s a) f = sum s f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ⊢ f a + sum (delete s a) f = sum s f"
                },
                {
                    "args": "sum (delete s a) f = sum s f - f a",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ⊢ sum (delete s a) f = sum s f - f a"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ a ∈ s ⟶ sum (delete s a) f = sum s f - f a"
                }
            ],
            "prop": "finite s ⟶ a ∈ s ⟶ sum (delete s a) f = sum s f - f a",
            "steps": [
                {
                    "goal": "!x. !y. !z::real. y = z - x <--> x + y = z",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_delete"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_sing",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_empty, {}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite (∅::'a set)"
                },
                {
                    "args": "sum_insert, {f: f, x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({x}) f = (if x ∈ ∅ then sum ∅ f else f x + sum ∅ f)"
                },
                {
                    "args": "member_empty, {x: x}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(x ∈ ∅)"
                },
                {
                    "args": "if_not_P",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({x}) f = f x + sum ∅ f"
                },
                {
                    "args": "sum_empty",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({x}) f = f x + 0"
                },
                {
                    "args": "real_add_rid",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({x}) f = f x"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({x}) f = f x"
                }
            ],
            "prop": "sum ({x}) f = f x",
            "steps": [
                {
                    "goal": "finite ({}::'a set)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_empty"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal": "~(x ∈ ∅ )",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "member_empty"
                },
                {
                    "fact_ids": [
                        "1",
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "x": "'a"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_delete_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ a ∈ s ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "a ∈ s",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ⊢ a ∈ s"
                },
                {
                    "args": "sum_delete, {a: a, f: f, s: s}",
                    "id": "1.1",
                    "prevs": [
                        "0",
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ⊢ sum (delete s a) f = sum s f - f a"
                },
                {
                    "args": "if_P, sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)",
                    "id": "1.2",
                    "prevs": [
                        "1.1",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ⊢ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ a ∈ s ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ¬(a ∈ s) ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "¬(a ∈ s)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ∈ s) ⊢ ¬(a ∈ s)"
                },
                {
                    "args": "∀x. ¬(x = a) ∧ x ∈ s ⟷ x ∈ s",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(a ∈ s) ⊢ ∀x. ¬(x = a) ∧ x ∈ s ⟷ x ∈ s"
                },
                {
                    "args": "member_delete, ∀x. x ∈ delete s a ⟷ x ∈ s",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(a ∈ s) ⊢ ∀x. x ∈ delete s a ⟷ x ∈ s"
                },
                {
                    "args": "member_ext",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(a ∈ s) ⊢ delete s a = s"
                },
                {
                    "args": "sum (delete s a) f = sum s f",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(a ∈ s) ⊢ sum (delete s a) f = sum s f"
                },
                {
                    "args": "if_not_P, sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)",
                    "id": "2.5",
                    "prevs": [
                        "2.4",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(a ∈ s) ⊢ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ ¬(a ∈ s) ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)"
                }
            ],
            "prop": "finite s ⟶ sum (delete s a) f = (if a ∈ s then sum s f - f a else sum s f)",
            "steps": [
                {
                    "case": "a ∈ s",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_delete"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal": "delete s a = s",
                    "goal_id": "2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_delete"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_delta",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_delta, {a: a, f: λx::'a. b, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus s (λx. if x = a then b else neutral plus) = (if a ∈ s then b else neutral plus)"
                },
                {
                    "args": "neutral_real_add, iterate plus s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                },
                {
                    "args": "sum_def, sum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)"
                }
            ],
            "prop": "sum s (λx. if x = a then b else 0) = (if a ∈ s then b else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_delta"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_swap",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "sum_0, 0 = sum t (λj. 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = sum t (λj. 0)"
                },
                {
                    "args": "sum_empty, sum ∅ (λi. sum t (f i)) = sum t (λj. sum ∅ (λi. f i j))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ sum ∅ (λi. sum t (f i)) = sum t (λj. sum ∅ (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t ⊢ ∀x. ∀s1. sum s1 (λi. sum t (f i)) = sum t (λj. sum s1 (λi. f i j)) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ sum (insert x s1) (λi. sum t (f i)) = sum t (λj. sum (insert x s1) (λi. f i j))"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j))",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j))"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "sum_insert, {f: λi. sum t (f i), x: x}",
                    "id": "4.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) (λi. sum t (f i)) = (if x ∈ s then sum s (λi. sum t (f i)) else sum t (f x) + sum s (λi. sum t (f i)))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.5",
                    "prevs": [
                        "4.4",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) (λi. sum t (f i)) = sum t (f x) + sum s (λi. sum t (f i))"
                },
                {
                    "args": "sum_insert, {f: λi. f i j, x: x}",
                    "id": "4.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) (λi. f i j) = (if x ∈ s then sum s (λi. f i j) else f x j + sum s (λi. f i j))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.7",
                    "prevs": [
                        "4.6",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) (λi. f i j) = f x j + sum s (λi. f i j)"
                },
                {
                    "args": "sum_add, {f: f x, g: λx1. sum s (λi. f i x1), s: t}",
                    "id": "4.8",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ¬(x ∈ s), sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum t (λx1. f x x1 + sum s (λi. f i x1)) = sum t (f x) + sum t (λx1. sum s (λi. f i x1))"
                },
                {
                    "args": "sum t (λj. f x j + sum s (λi. f i j)) = sum t (f x) + sum s (λi. sum t (f i))",
                    "id": "4.9",
                    "prevs": [
                        "4.2",
                        "4.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(x ∈ s), sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum t (λj. f x j + sum s (λi. f i j)) = sum t (f x) + sum s (λi. sum t (f i))"
                },
                {
                    "args": "eq_sym_eq, sum t (f x) + sum s (λi. sum t (f i)) = sum t (λj. f x j + sum s (λi. f i j))",
                    "id": "4.10",
                    "prevs": [
                        "4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ¬(x ∈ s), sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum t (f x) + sum s (λi. sum t (f i)) = sum t (λj. f x j + sum s (λi. f i j))"
                },
                {
                    "args": "sum (insert x s) (λi. sum t (f i)) = sum t (λj. f x j + sum s (λi. f i j))",
                    "id": "4.11",
                    "prevs": [
                        "4.5",
                        "4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(x ∈ s), sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum (insert x s) (λi. sum t (f i)) = sum t (λj. f x j + sum s (λi. f i j))"
                },
                {
                    "args": "sum (insert x s) (λi. sum t (f i)) = sum t (λj. sum (insert x s) (λi. f i j))",
                    "id": "4.12",
                    "prevs": [
                        "4.7",
                        "4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ¬(x ∈ s), sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⊢ sum (insert x s) (λi. sum t (f i)) = sum t (λj. sum (insert x s) (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "4.13",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "0",
                        "4.12"
                    ],
                    "rule": "intros",
                    "th": "finite t ⊢ ∀x. ∀s. sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j)) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ sum (insert x s) (λi. sum t (f i)) = sum t (λj. sum (insert x s) (λi. f i j))"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t ⊢ sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j))"
                }
            ],
            "prop": "finite s ⟶ finite t ⟶ sum s (λi. sum t (f i)) = sum t (λj. sum s (λi. f i j))",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_0"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. sum t (f i))",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "4.4",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. f i j)",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "4.6",
                        "4.3"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.7"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b ⇒ real",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_image",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_image, {f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ iterate plus (image f s) g = iterate plus s (g ∘ f)"
                },
                {
                    "args": "sum_def, sum (image f s) g = sum s (g ∘ f)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y ⊢ sum (image f s) g = sum s (g ∘ f)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y) ⟶ sum (image f s) g = sum s (g ∘ f)"
                }
            ],
            "prop": "(∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ f x = f y ⟶ x = y) ⟶ sum (image f s) g = sum s (g ∘ f)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b",
                "g": "'b ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_superset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "u ⊆ v",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "u ⊆ v ⊢ u ⊆ v"
                },
                {
                    "args": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = neutral plus",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_superset",
                    "id": "4",
                    "prevs": [
                        "2",
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ iterate plus v f = iterate plus u f"
                },
                {
                    "args": "sum_def, sum v f = sum u f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "u ⊆ v, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ sum v f = sum u f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ u ⊆ v ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ sum v f = sum u f"
                }
            ],
            "prop": "u ⊆ v ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ sum v f = sum u f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_superset"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_univ",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "support plus f univ ⊆ s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "support plus f univ ⊆ s ⊢ support plus f univ ⊆ s"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_univ",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "support plus f univ ⊆ s ⊢ iterate plus s f = iterate plus univ f"
                },
                {
                    "args": "sum_def, sum s f = sum univ f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "support plus f univ ⊆ s ⊢ sum s f = sum univ f"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ support plus f univ ⊆ s ⟶ sum s f = sum univ f"
                }
            ],
            "prop": "support plus f univ ⊆ s ⟶ sum s f = sum univ f",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_univ"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_union_rzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "u ∪ v = u ∪ {x. x ∈ v ∧ ¬(x ∈ u)}",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∪ v = u ∪ {x. x ∈ v ∧ ¬(x ∈ u)}"
                },
                {
                    "args": "diff_def, u ∪ v = u ∪ diff v u",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ u ∪ v = u ∪ diff v u"
                },
                {
                    "args": "subset_union_id, {A: u, B: diff v u}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ u ⊆ u ∪ diff v u"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ u ∪ diff v u ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "x, 'a",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ u ∪ diff v u",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∪ diff v u"
                },
                {
                    "args": "¬(x ∈ u)",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ u) ⊢ ¬(x ∈ u)"
                },
                {
                    "args": "member_union_iff",
                    "id": "5.3",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∨ x ∈ diff v u"
                },
                {
                    "args": "diff_def",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∨ x ∈ {x1. x1 ∈ v ∧ ¬(x1 ∈ u)}"
                },
                {
                    "args": "member_collect",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ u ∪ diff v u ⊢ x ∈ u ∨ x ∈ v ∧ ¬(x ∈ u)"
                },
                {
                    "args": "x ∈ v",
                    "id": "5.6",
                    "prevs": [
                        "5.5",
                        "5.2"
                    ],
                    "rule": "z3",
                    "th": "¬(x ∈ u), x ∈ u ∪ diff v u ⊢ x ∈ v"
                },
                {
                    "args": "x",
                    "id": "5.7",
                    "prevs": [
                        "1",
                        "5.6",
                        "5.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite u, ¬(x ∈ u), x ∈ u ∪ diff v u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ f x = 0"
                },
                {
                    "args": "",
                    "id": "5.8",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2",
                        "5.7"
                    ],
                    "rule": "intros",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ ∀x. x ∈ u ∪ diff v u ⟶ ¬(x ∈ u) ⟶ f x = 0"
                },
                {
                    "args": "sum_superset",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ sum (u ∪ diff v u) f = sum u f"
                },
                {
                    "args": "sum (u ∪ v) f = sum u f",
                    "id": "7",
                    "prevs": [
                        "3",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, ∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0 ⊢ sum (u ∪ v) f = sum u f"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ sum (u ∪ v) f = sum u f"
                }
            ],
            "prop": "finite u ⟶ (∀x. x ∈ v ⟶ ¬(x ∈ u) ⟶ f x = 0) ⟶ sum (u ∪ v) f = sum u f",
            "steps": [
                {
                    "goal": "u ∪ v = u ∪ (diff v u)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_superset"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "5.3",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_union_iff"
                },
                {
                    "fact_ids": [
                        "5.3"
                    ],
                    "goal_id": "5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.5",
                        "5.2"
                    ],
                    "goal_id": "5.6",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_union_lzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite v",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite v ⊢ finite v"
                },
                {
                    "args": "∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0 ⊢ ∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0"
                },
                {
                    "args": "sum_union_rzero",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite v, ∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0 ⊢ sum (v ∪ u) f = sum v f"
                },
                {
                    "args": "union_comm, sum (u ∪ v) f = sum v f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite v, ∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0 ⊢ sum (u ∪ v) f = sum v f"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite v ⟶ (∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0) ⟶ sum (u ∪ v) f = sum v f"
                }
            ],
            "prop": "finite v ⟶ (∀x. x ∈ u ⟶ ¬(x ∈ v) ⟶ f x = 0) ⟶ sum (u ∪ v) f = sum v f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "union_comm"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_union_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_restrict",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "x, 'a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "if_P, (if x ∈ s then f x else 0) = f x",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ s ⊢ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "finite s ⊢ ∀x. x ∈ s ⟶ (if x ∈ s then f x else 0) = f x"
                },
                {
                    "args": "sum_eq",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ sum s (λx. if x ∈ s then f x else 0) = sum s f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s (λx. if x ∈ s then f x else 0) = sum s f"
                }
            ],
            "prop": "finite s ⟶ sum s (λx. if x ∈ s then f x else 0) = sum s f",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "sum_const, {c: b}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum s (λn. b) = of_nat (card s) * b"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s ⊢ of_nat (card s) * b = sum s (λn. b)"
                },
                {
                    "args": "sum_le",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b ⊢ sum s f ≤ sum s (λx. b)"
                },
                {
                    "args": "sum s f ≤ of_nat (card s) * b",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b ⊢ sum s f ≤ of_nat (card s) * b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ sum s f ≤ of_nat (card s) * b"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ sum s f ≤ of_nat (card s) * b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_c": "b",
                    "theorem": "sum_const"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bound_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s)"
                },
                {
                    "args": "sum_bound",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ sum s f ≤ of_nat (card s) * (b / of_nat (card s))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ card s = 0 ⟶ s = ∅"
                },
                {
                    "args": "card s = 0",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "card s = 0 ⊢ card s = 0"
                },
                {
                    "args": "card_eq_0",
                    "id": "4.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ card s = 0 ⟷ s = ∅"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.1",
                        "4.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, card s = 0 ⊢ s = ∅"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [
                        "4.0",
                        "4.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ card s = 0 ⟶ s = ∅"
                },
                {
                    "args": "real_of_nat_eq, (of_nat::nat ⇒ real) (card s) = of_nat 0 ⟶ s = ∅",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ (of_nat::nat ⇒ real) (card s) = of_nat 0 ⟶ s = ∅"
                },
                {
                    "args": "real_zero_def, of_nat (card s) = (0::real) ⟶ s = ∅",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ of_nat (card s) = (0::real) ⟶ s = ∅"
                },
                {
                    "args": "double_neg, ¬¬(of_nat (card s) = (0::real)) ⟶ ¬¬(s = ∅)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ ¬¬(of_nat (card s) = (0::real)) ⟶ ¬¬(s = ∅)"
                },
                {
                    "args": "contrapositive",
                    "id": "8",
                    "prevs": [
                        "1",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ ¬(of_nat (card s) = (0::real))"
                },
                {
                    "args": "real_div_lmul, {x: b, y: (of_nat::nat ⇒ real) (card s)}",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ of_nat (card s) * (b / of_nat (card s)) = b"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "9",
                        "3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s) ⊢ sum s f ≤ b"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s)) ⟶ sum s f ≤ b"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x ≤ b / of_nat (card s)) ⟶ sum s f ≤ b",
            "steps": [
                {
                    "fact_ids": [
                        "0",
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "sum_bound"
                },
                {
                    "goal": "of_nat (card s) * (b / of_nat (card s)) = b",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_div_lmul"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_forward_step",
                    "theorem": "card_eq_0"
                },
                {
                    "fact_ids": [
                        "4.1",
                        "4.0"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9",
                        "3"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_abs_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ abs (f x) ≤ b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ abs (f x) ≤ b ⊢ ∀x. x ∈ s ⟶ abs (f x) ≤ b"
                },
                {
                    "args": "sum_abs, {f: f, s: s}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ b ⊢ abs (sum s f) ≤ sum s (λx. abs (f x))"
                },
                {
                    "args": "sum_bound",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ b ⊢ sum s (λx. abs (f x)) ≤ of_nat (card s) * b"
                },
                {
                    "args": "real_le_trans",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ abs (f x) ≤ b ⊢ abs (sum s f) ≤ of_nat (card s) * b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ abs (f x) ≤ b) ⟶ abs (sum s f) ≤ of_nat (card s) * b"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ abs (f x) ≤ b) ⟶ abs (sum s f) ≤ of_nat (card s) * b",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_y": "sum s (%x. abs(f x))",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_abs"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_bound"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bound_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x ≤ b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x ≤ b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "∃x. x ∈ s ∧ f x < b",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. x ∈ s ∧ f x < b ⊢ ∃x. x ∈ s ∧ f x < b"
                },
                {
                    "args": "sum_lt",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ sum s f < sum s (λx. b)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ ∀x. x ∈ s ⟶ b ≤ b"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "real_le_refl, {x: b}",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ b ≤ b"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ ∀x. x ∈ s ⟶ b ≤ b"
                },
                {
                    "args": "sum_bound",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ sum s (λx. b) ≤ of_nat (card s) * b"
                },
                {
                    "args": "real_lte_trans",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ f x ≤ b, ∃x. x ∈ s ∧ f x < b ⊢ sum s f < of_nat (card s) * b"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ (∃x. x ∈ s ∧ f x < b) ⟶ sum s f < of_nat (card s) * b"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ f x ≤ b) ⟶ (∃x. x ∈ s ∧ f x < b) ⟶ sum s f < of_nat (card s) * b"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_y": "sum s (%x. b)",
                    "theorem": "real_lte_trans"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_lt"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_bound"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bound_lt_all",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x < b",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x < b ⊢ ∀x. x ∈ s ⟶ f x < b"
                },
                {
                    "args": "∃a. a ∈ s",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "z3",
                    "th": "¬(s = ∅) ⊢ ∃a. a ∈ s"
                },
                {
                    "args": "a, 'a",
                    "id": "4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "a ∈ s",
                    "id": "5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ⊢ a ∈ s"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "a ∈ s, ∀x. x ∈ s ⟶ f x < b ⊢ f a < b"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, a ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "x, 'a",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "7.2",
                    "prevs": [
                        "2",
                        "7.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, a ∈ s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ f x < b"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "7.3",
                    "prevs": [
                        "7.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s, x ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ f x ≤ b"
                },
                {
                    "args": "",
                    "id": "7.4",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, a ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ ∀x. x ∈ s ⟶ f x ≤ b"
                },
                {
                    "args": "conjI",
                    "id": "8",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ a ∈ s ∧ f a < b"
                },
                {
                    "args": "exI, {P: λx. x ∈ s ∧ f x < b, a: a}",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ ∃a1. a1 ∈ s ∧ f a1 < b"
                },
                {
                    "args": "sum_bound_lt",
                    "id": "10",
                    "prevs": [
                        "0",
                        "7",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, a ∈ s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b ⊢ sum s f < of_nat (card s) * b"
                },
                {
                    "args": "∃a. a ∈ s",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < b) ⟶ sum s f < of_nat (card s) * b"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < b) ⟶ sum s f < of_nat (card s) * b",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_bound_lt"
                },
                {
                    "goal": "?a. a ∈ s",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "fact_ids": [
                        "2",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "7.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "7.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "inst_exists_goal",
                    "s": "a"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bound_lt_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ f x < b / of_nat (card s)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ ∀x. x ∈ s ⟶ f x < b / of_nat (card s)"
                },
                {
                    "args": "card_eq_0",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ card s = 0 ⟷ s = ∅"
                },
                {
                    "args": "¬(card s = 0)",
                    "id": "4",
                    "prevs": [
                        "3",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ ¬(card s = 0)"
                },
                {
                    "args": "real_of_nat_eq, ¬((of_nat::nat ⇒ real) (card s) = of_nat 0)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ ¬((of_nat::nat ⇒ real) (card s) = of_nat 0)"
                },
                {
                    "args": "real_zero_def, ¬(of_nat (card s) = (0::real))",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ ¬(of_nat (card s) = (0::real))"
                },
                {
                    "args": "real_div_lmul, {x: b, y: (of_nat::nat ⇒ real) (card s)}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ of_nat (card s) * (b / of_nat (card s)) = b"
                },
                {
                    "args": "eq_sym_eq, b = of_nat (card s) * (b / of_nat (card s))",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ b = of_nat (card s) * (b / of_nat (card s))"
                },
                {
                    "args": "sum_bound_lt_all",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ sum s f < of_nat (card s) * (b / of_nat (card s))"
                },
                {
                    "args": "sum s f < b",
                    "id": "10",
                    "prevs": [
                        "8",
                        "9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ f x < b / of_nat (card s) ⊢ sum s f < b"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < b / of_nat (card s)) ⟶ sum s f < b"
                }
            ],
            "prop": "finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ f x < b / of_nat (card s)) ⟶ sum s f < b",
            "steps": [
                {
                    "goal": "b = of_nat (card s) * (b / of_nat (card s))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_div_lmul"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "card_eq_0"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_bound_lt_all"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_union_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "s ∩ t = ∅",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ∩ t = ∅ ⊢ s ∩ t = ∅"
                },
                {
                    "args": "s ∪ t = u",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ∪ t = u ⊢ s ∪ t = u"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "s ∪ t = u ⊢ u = s ∪ t"
                },
                {
                    "args": "subset_union_id, {A: s, B: t}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ s ⊆ s ∪ t"
                },
                {
                    "args": "s ⊆ u",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ s ⊆ u"
                },
                {
                    "args": "finite_subset",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ finite s"
                },
                {
                    "args": "subset_union_id, {A: t, B: s}",
                    "id": "7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ t ⊆ t ∪ s"
                },
                {
                    "args": "union_comm, t ⊆ s ∪ t",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ t ⊆ s ∪ t"
                },
                {
                    "args": "t ⊆ u",
                    "id": "9",
                    "prevs": [
                        "3",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ t ⊆ u"
                },
                {
                    "args": "finite_subset",
                    "id": "10",
                    "prevs": [
                        "0",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ finite t"
                },
                {
                    "args": "disjoint_def, disjoint s t",
                    "id": "11",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ disjoint s t"
                },
                {
                    "args": "sum_union, {f: f, s: s, t: t}",
                    "id": "12",
                    "prevs": [
                        "6",
                        "10",
                        "11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ sum (s ∪ t) f = sum s f + sum t f"
                },
                {
                    "args": "eq_sym_eq, sum s f + sum t f = sum (s ∪ t) f",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ sum s f + sum t f = sum (s ∪ t) f"
                },
                {
                    "args": "sum s f + sum t f = sum u f",
                    "id": "14",
                    "prevs": [
                        "3",
                        "13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, s ∩ t = ∅, s ∪ t = u ⊢ sum s f + sum t f = sum u f"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "14"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ s ∩ t = ∅ ⟶ s ∪ t = u ⟶ sum s f + sum t f = sum u f"
                }
            ],
            "prop": "finite u ⟶ s ∩ t = ∅ ⟶ s ∪ t = u ⟶ sum s f + sum t f = sum u f",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_union"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_t": "u",
                    "theorem": "finite_subset"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "param_t": "u",
                    "theorem": "finite_subset"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "union_comm"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_union_id"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set",
                "u": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_eq_superset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite t",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "t ⊆ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "t ⊆ s ⊢ t ⊆ s"
                },
                {
                    "args": "∀x. x ∈ t ⟶ f x = g x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ t ⟶ f x = g x ⊢ ∀x. x ∈ t ⟶ f x = g x"
                },
                {
                    "args": "∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0"
                },
                {
                    "args": "sum_superset",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite t, t ⊆ s, ∀x. x ∈ t ⟶ f x = g x, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ sum s f = sum t f"
                },
                {
                    "args": "sum_eq",
                    "id": "5",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite t, t ⊆ s, ∀x. x ∈ t ⟶ f x = g x, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ sum t f = sum t g"
                },
                {
                    "args": "sum s f = sum t g",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite t, t ⊆ s, ∀x. x ∈ t ⟶ f x = g x, ∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0 ⊢ sum s f = sum t g"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite t ⟶ t ⊆ s ⟶ (∀x. x ∈ t ⟶ f x = g x) ⟶ (∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0) ⟶ sum s f = sum t g"
                }
            ],
            "prop": [
                "finite t ",
                "⟶ t ⊆ s ",
                "   ⟶ (∀x. x ∈ t ⟶ f x = g x) ⟶ (∀x. x ∈ s ⟶ ¬(x ∈ t) ⟶ f x = 0) ⟶ sum s f = sum t g"
            ],
            "steps": [
                {
                    "goal": "sum s f = sum t f",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_superset"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_restrict_set",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_restrict_set, {P: P, f: f, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else neutral plus)"
                },
                {
                    "args": "neutral_real_add, iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ iterate plus ({x. x ∈ s ∧ P x}) f = iterate plus s (λx. if P x then f x else 0)"
                },
                {
                    "args": "sum_def, sum ({x. x ∈ s ∧ P x}) f = sum s (λx. if P x then f x else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({x. x ∈ s ∧ P x}) f = sum s (λx. if P x then f x else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({x. x ∈ s ∧ P x}) f = sum s (λx. if P x then f x else 0)"
                }
            ],
            "prop": "sum ({x. x ∈ s ∧ P x}) f = sum s (λx. if P x then f x else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_restrict_set"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_sum_restrict",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "sum_swap, {f: λi. λx1. if R i x1 then f i x1 else 0, s: s, t: t}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t ⊢ sum s (λi. sum t (λx1. if R i x1 then f i x1 else 0)) = sum t (λj. sum s (λi. if R i j then f i j else 0))"
                },
                {
                    "args": "sum_restrict_set, sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = sum t (λy. sum ({x. x ∈ s ∧ R x y}) (λx. f x y))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t ⊢ sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = sum t (λy. sum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = sum t (λy. sum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. f x y)) = ",
                "      sum t (λy. sum ({x. x ∈ s ∧ R x y}) (λx. f x y))"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_restrict_set"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_swap"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "f": "'a ⇒ 'b ⇒ real",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "card_eq_sum",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "sum_const, {c: (1::real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum s (λn. 1) = of_nat (card s) * 1"
                },
                {
                    "args": "real_mul_rid, of_nat (card s) = of_nat (card s) * (1::real)",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ of_nat (card s) = of_nat (card s) * (1::real)"
                },
                {
                    "args": "of_nat (card s) = sum s (λx. 1)",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s ⊢ of_nat (card s) = sum s (λn. 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ of_nat (card s) = sum s (λx. 1)"
                }
            ],
            "prop": "finite s ⟶ of_nat (card s) = sum s (λx. 1)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_c": "(1::real)",
                    "theorem": "sum_const"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_multicount_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ s ⟶ of_nat (card ({j. j ∈ t ∧ R x j})) = sum ({j. j ∈ t ∧ R x j}) (λj. 1)"
                },
                {
                    "args": "x, 'a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "finite_restrict, {P: R x, s: t}",
                    "id": "3.2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ finite ({x1. x1 ∈ t ∧ R x x1})"
                },
                {
                    "args": "card_eq_sum",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ of_nat (card ({j. j ∈ t ∧ R x j})) = sum ({j. j ∈ t ∧ R x j}) (λx1. 1)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ s ⟶ of_nat (card ({j. j ∈ t ∧ R x j})) = sum ({j. j ∈ t ∧ R x j}) (λj. 1)"
                },
                {
                    "args": "sum_eq",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum s (λx. of_nat (card ({j. j ∈ t ∧ R x j}))) = sum s (λx. sum ({j. j ∈ t ∧ R x j}) (λj. 1))"
                },
                {
                    "args": "sum_sum_restrict, {R: R, f: λx::'a. λy::'b. (1::real)}",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t ⊢ sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. 1)) = sum t (λy. sum ({x. x ∈ s ∧ R x y}) (λx. 1))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ t ⟶ sum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = of_nat (k x)"
                },
                {
                    "args": "x, 'b",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "finite_restrict, {P: λx1. R x1 x, s: s}",
                    "id": "6.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ finite ({x1. x1 ∈ s ∧ R x1 x})"
                },
                {
                    "args": "sum_const, {c: (1::real)}",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum ({x1. x1 ∈ s ∧ R x1 x}) (λn. 1) = of_nat (card ({x1. x1 ∈ s ∧ R x1 x})) * 1"
                },
                {
                    "args": "x",
                    "id": "6.4",
                    "prevs": [
                        "2",
                        "6.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ card ({i. i ∈ s ∧ R i x}) = k x"
                },
                {
                    "args": "real_of_nat_eq, (of_nat::nat ⇒ real) (card ({x1. x1 ∈ s ∧ R x1 x})) = of_nat (k x)",
                    "id": "6.5",
                    "prevs": [
                        "6.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ (of_nat::nat ⇒ real) (card ({x1. x1 ∈ s ∧ R x1 x})) = of_nat (k x)"
                },
                {
                    "args": "real_mul_rid, of_nat (card ({x1. x1 ∈ s ∧ R x1 x})) * (1::real) = of_nat (k x)",
                    "id": "6.6",
                    "prevs": [
                        "6.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ of_nat (card ({x1. x1 ∈ s ∧ R x1 x})) * (1::real) = of_nat (k x)"
                },
                {
                    "args": "sum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = of_nat (k x)",
                    "id": "6.7",
                    "prevs": [
                        "6.3",
                        "6.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, x ∈ t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum ({x1. x1 ∈ s ∧ R x1 x}) (λn. 1) = of_nat (k x)"
                },
                {
                    "args": "",
                    "id": "6.8",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.7"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ ∀x. x ∈ t ⟶ sum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1) = of_nat (k x)"
                },
                {
                    "args": "sum_eq",
                    "id": "7",
                    "prevs": [
                        "1",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum t (λx. sum ({x1. x1 ∈ s ∧ R x1 x}) (λx1. 1)) = sum t (λx. of_nat (k x))"
                },
                {
                    "args": "sum s (λx. sum ({j. j ∈ t ∧ R x j}) (λj. 1)) = sum t (λi. of_nat (k i))",
                    "id": "8",
                    "prevs": [
                        "5",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum s (λx. sum ({y. y ∈ t ∧ R x y}) (λy. 1)) = sum t (λi. of_nat (k i))"
                },
                {
                    "args": "sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum t (λi. of_nat (k i))",
                    "id": "9",
                    "prevs": [
                        "4",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j ⊢ sum s (λx. of_nat (card ({j. j ∈ t ∧ R x j}))) = sum t (λi. of_nat (k i))"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j) ⟶ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum t (λi. of_nat (k i))"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k j) ",
                "      ⟶ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum t (λi. of_nat (k i))"
            ],
            "steps": [
                {
                    "goal": "sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum s (%i. sum {j. j ∈ t ∧ R i j} (%j. 1))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "card_eq_sum"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_restrict"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "(%x::'a. %y::'b. (1::real))",
                    "theorem": "sum_sum_restrict"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal": "finite {x1. x1 ∈ s ∧ R x1 x}",
                    "goal_id": "6.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_restrict"
                },
                {
                    "fact_ids": [
                        "6.2"
                    ],
                    "goal_id": "6.3",
                    "method_name": "apply_forward_step",
                    "param_c": "(1::real)",
                    "theorem": "sum_const"
                },
                {
                    "fact_ids": [
                        "6.3"
                    ],
                    "goal_id": "6.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "goal_id": "6.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "6.4",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "k": "'b ⇒ nat",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_multicount",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k"
                },
                {
                    "args": "sum_multicount_gen",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum t (λi. of_nat k)"
                },
                {
                    "args": "sum_const, {c: (of_nat::nat ⇒ real) k}",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite t ⊢ sum t (λn. of_nat k) = of_nat (card t) * of_nat k"
                },
                {
                    "args": "card t * k = k * card t",
                    "id": "5",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ card t * k = k * card t"
                },
                {
                    "args": "real_of_nat_eq, (of_nat::nat ⇒ real) (card t * k) = of_nat (k * card t)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ (of_nat::nat ⇒ real) (card t * k) = of_nat (k * card t)"
                },
                {
                    "args": "real_of_nat_mul, (of_nat::nat ⇒ real) (card t) * of_nat k = of_nat (k * card t)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ (of_nat::nat ⇒ real) (card t) * of_nat k = of_nat (k * card t)"
                },
                {
                    "args": "sum t (λi. of_nat k) = of_nat (k * card t)",
                    "id": "8",
                    "prevs": [
                        "4",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ sum t (λn. of_nat k) = of_nat (k * card t)"
                },
                {
                    "args": "sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = of_nat (k * card t)",
                    "id": "9",
                    "prevs": [
                        "3",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, ∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k ⊢ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = of_nat (k * card t)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k) ⟶ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = of_nat (k * card t)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ (∀j. j ∈ t ⟶ card ({i. i ∈ s ∧ R i j}) = k) ",
                "      ⟶ sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = of_nat (k * card t)"
            ],
            "steps": [
                {
                    "goal": "sum s (λi. of_nat (card ({j. j ∈ t ∧ R i j}))) = sum t (%i. of_nat k)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_multicount_gen"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_c": "(of_nat::nat=>real) k",
                    "theorem": "sum_const"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_mul"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "goal_id": "5",
                    "method_name": "nat_norm"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "k": "nat",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_image_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_image_gen, {f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s g = iterate plus (image f s) (λy. iterate plus ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "sum_def, sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)"
                }
            ],
            "prop": "finite s ⟶ sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image_gen"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_group",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "image f s ⊆ t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "image f s ⊆ t ⊢ image f s ⊆ t"
                },
                {
                    "args": "sum_image_gen, {f: f, g: g, s: s}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite s ⟶ sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s ⊢ sum s g = sum (image f s) (λy. sum ({x. x ∈ s ∧ f x = y}) g)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, image f s ⊆ t ⊢ ∀x. x ∈ t ⟶ ¬(x ∈ image f s) ⟶ sum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "x, 'b",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "¬(x ∈ image f s)",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ image f s) ⊢ ¬(x ∈ image f s)"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⟶ g x1 = 0"
                },
                {
                    "args": "x1, 'a",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x}",
                    "id": "4.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ x1 ∈ {x2. x2 ∈ s ∧ f x2 = x}"
                },
                {
                    "args": "member_collect",
                    "id": "4.3.2",
                    "prevs": [
                        "4.3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ x1 ∈ s ∧ f x1 = x"
                },
                {
                    "args": "conjD1",
                    "id": "4.3.3",
                    "prevs": [
                        "4.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "4.3.4",
                    "prevs": [
                        "4.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ f x1 = x"
                },
                {
                    "args": "in_image",
                    "id": "4.3.5",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(x ∈ image f s) ⊢ ¬(∃x1. x = f x1 ∧ x1 ∈ s)"
                },
                {
                    "args": "x = f x1",
                    "id": "4.3.6",
                    "prevs": [
                        "4.3.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ x = f x1"
                },
                {
                    "args": "conjI",
                    "id": "4.3.7",
                    "prevs": [
                        "4.3.6",
                        "4.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ x = f x1 ∧ x1 ∈ s"
                },
                {
                    "args": "exI, {P: λx1. x = f x1 ∧ x1 ∈ s, a: x1}",
                    "id": "4.3.8",
                    "prevs": [
                        "4.3.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ ∃a1. x = f a1 ∧ a1 ∈ s"
                },
                {
                    "args": "negE_gen, {A: ∃x1. x = f x1 ∧ x1 ∈ s, C: g x1 = 0}",
                    "id": "4.3.9",
                    "prevs": [
                        "4.3.5",
                        "4.3.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s), x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⊢ g x1 = 0"
                },
                {
                    "args": "",
                    "id": "4.3.10",
                    "prevs": [
                        "4.3.0",
                        "4.3.1",
                        "4.3.9"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ s ∧ f x2 = x} ⟶ g x1 = 0"
                },
                {
                    "args": "sum_eq_0",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, image f s ⊆ t, ¬(x ∈ image f s) ⊢ sum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, image f s ⊆ t ⊢ ∀x. x ∈ t ⟶ ¬(x ∈ image f s) ⟶ sum ({x1. x1 ∈ s ∧ f x1 = x}) g = 0"
                },
                {
                    "args": "sum_superset",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, image f s ⊆ t ⊢ sum t (λx. sum ({x1. x1 ∈ s ∧ f x1 = x}) g) = sum (image f s) (λx. sum ({x1. x1 ∈ s ∧ f x1 = x}) g)"
                },
                {
                    "args": "sum t (λy. sum ({x. x ∈ s ∧ f x = y}) g) = sum s g",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, image f s ⊆ t ⊢ sum t (λy. sum ({x. x ∈ s ∧ f x = y}) g) = sum s g"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ image f s ⊆ t ⟶ sum t (λy. sum ({x. x ∈ s ∧ f x = y}) g) = sum s g"
                }
            ],
            "prop": "finite s ⟶ image f s ⊆ t ⟶ sum t (λy. sum ({x. x ∈ s ∧ f x = y}) g) = sum s g",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_g": "g",
                    "param_s": "s",
                    "theorem": "sum_image_gen"
                },
                {
                    "fact_ids": [
                        "2",
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_superset"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq_0"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "4.3.1"
                    ],
                    "goal_id": "4.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "4.3.2"
                    ],
                    "goal_id": "4.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.3.2"
                    ],
                    "goal_id": "4.3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "fact_ids": [
                        "4.3.5"
                    ],
                    "goal_id": "4.3.6",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4.3.6",
                    "method_name": "inst_exists_goal",
                    "s": "x1"
                },
                {
                    "goal_id": "4.3.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.3.4"
                    ],
                    "goal_id": "4.3.6",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b",
                "g": "'a ⇒ real",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_group_relation",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)"
                },
                {
                    "args": "sum_group, {f: λx. THE y. y ∈ t ∧ R x y, g: g, t: t}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t ⟶ sum t (λy. sum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g) = sum s g"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. (∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s) ⟶ x ∈ t"
                },
                {
                    "args": "x, 'b",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ ∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s"
                },
                {
                    "args": "x1, 'a",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s"
                },
                {
                    "args": "conjD1",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x = (THE y. y ∈ t ∧ R x1 y)"
                },
                {
                    "args": "conjD2",
                    "id": "3.5",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "1",
                        "3.5"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "theI'",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "conjD1",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t"
                },
                {
                    "args": "x ∈ t",
                    "id": "3.9",
                    "prevs": [
                        "3.4",
                        "3.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s, ∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s ⊢ x ∈ t"
                },
                {
                    "args": "∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s",
                    "id": "3.10",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.9"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. (∃x1. x = (THE y. y ∈ t ∧ R x1 y) ∧ x1 ∈ s) ⟶ x ∈ t"
                },
                {
                    "args": "in_image, ∀x. x ∈ image (λx1. THE y. y ∈ t ∧ R x1 y) s ⟶ x ∈ t",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ image (λx1. THE y. y ∈ t ∧ R x1 y) s ⟶ x ∈ t"
                },
                {
                    "args": "subsetI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ sum t (λy. sum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g) = sum s g"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ sum s g = sum t (λy. sum ({x. x ∈ s ∧ (THE y1. y1 ∈ t ∧ R x y1) = y}) g)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ t ⟶ sum ({x1. x1 ∈ s ∧ R x1 x}) g = sum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "x, 'b",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ t",
                    "id": "8.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ t ⊢ x ∈ t"
                },
                {
                    "args": "",
                    "id": "8.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "x1, 'a",
                    "id": "8.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "",
                    "id": "8.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "x1 ∈ s ∧ R x1 x",
                    "id": "8.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.1.1",
                    "prevs": [
                        "8.2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.1.2",
                    "prevs": [
                        "8.2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x ⊢ R x1 x"
                },
                {
                    "args": "",
                    "id": "8.2.1.3",
                    "prevs": [
                        "1",
                        "8.2.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "exists1_def",
                    "id": "8.2.1.4",
                    "prevs": [
                        "8.2.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∃x. (x ∈ t ∧ R x1 x) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x)"
                },
                {
                    "args": "x2, 'b",
                    "id": "8.2.1.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2)",
                    "id": "8.2.1.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2)"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.1.7",
                    "prevs": [
                        "8.2.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x2 ∈ t ∧ R x1 x2"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.1.8",
                    "prevs": [
                        "8.2.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ ∀y. y ∈ t ∧ R x1 y ⟶ y = x2"
                },
                {
                    "args": "theI'",
                    "id": "8.2.1.9",
                    "prevs": [
                        "8.2.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "",
                    "id": "8.2.1.10",
                    "prevs": [
                        "8.2.1.8",
                        "8.2.1.9"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (THE x. x ∈ t ∧ R x1 x) = x2"
                },
                {
                    "args": "conjI",
                    "id": "8.2.1.11",
                    "prevs": [
                        "8.1",
                        "8.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x ∈ t ∧ R x1 x"
                },
                {
                    "args": "x",
                    "id": "8.2.1.12",
                    "prevs": [
                        "8.2.1.8",
                        "8.2.1.11"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x = x2"
                },
                {
                    "args": "eq_sym_eq, x2 = x",
                    "id": "8.2.1.13",
                    "prevs": [
                        "8.2.1.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x2 = x"
                },
                {
                    "args": "(THE y. y ∈ t ∧ R x1 y) = x",
                    "id": "8.2.1.14",
                    "prevs": [
                        "8.2.1.10",
                        "8.2.1.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ (THE x2. x2 ∈ t ∧ R x1 x2) = x"
                },
                {
                    "args": "conjI",
                    "id": "8.2.1.15",
                    "prevs": [
                        "8.2.1.1",
                        "8.2.1.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, x1 ∈ s ∧ R x1 x, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), (x2 ∈ t ∧ R x1 x2) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x2) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "∃x. (x ∈ t ∧ R x1 x) ∧ (∀y. y ∈ t ∧ R x1 y ⟶ y = x)",
                    "id": "8.2.1.16",
                    "prevs": [
                        "8.2.1.0",
                        "8.2.1.4",
                        "8.2.1.5",
                        "8.2.1.6",
                        "8.2.1.15"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟶ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⟶ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x",
                    "id": "8.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "conjD1",
                    "id": "8.2.2.1",
                    "prevs": [
                        "8.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.2.2",
                    "prevs": [
                        "8.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.2.3",
                    "prevs": [
                        "1",
                        "8.2.2.1"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ ∃!y. y ∈ t ∧ R x1 y"
                },
                {
                    "args": "theI'",
                    "id": "8.2.2.4",
                    "prevs": [
                        "8.2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ (THE x. x ∈ t ∧ R x1 x) ∈ t ∧ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "conjD2",
                    "id": "8.2.2.5",
                    "prevs": [
                        "8.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ R x1 (THE x. x ∈ t ∧ R x1 x)"
                },
                {
                    "args": "",
                    "id": "8.2.2.6",
                    "prevs": [
                        "8.2.2.2",
                        "8.2.2.5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ R x1 x"
                },
                {
                    "args": "conjI",
                    "id": "8.2.2.7",
                    "prevs": [
                        "8.2.2.1",
                        "8.2.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y), x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⊢ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "",
                    "id": "8.2.2.8",
                    "prevs": [
                        "8.2.2.0",
                        "8.2.2.7"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x ⟶ x1 ∈ s ∧ R x1 x"
                },
                {
                    "args": "iffI",
                    "id": "8.2.3",
                    "prevs": [
                        "8.2.1",
                        "8.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "",
                    "id": "8.2.4",
                    "prevs": [
                        "8.2.0",
                        "8.2.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ s ∧ R x1 x ⟷ x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟷ x1 ∈ {x11. x11 ∈ s ∧ (THE y. y ∈ t ∧ R x11 y) = x}",
                    "id": "8.3",
                    "prevs": [
                        "8.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x1. x1 ∈ {x11. x11 ∈ s ∧ R x11 x} ⟷ x1 ∈ {x11. x11 ∈ s ∧ (THE y. y ∈ t ∧ R x11 y) = x}"
                },
                {
                    "args": "member_ext",
                    "id": "8.4",
                    "prevs": [
                        "8.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ {x1. x1 ∈ s ∧ R x1 x} = {x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}"
                },
                {
                    "args": "sum ({x1. x1 ∈ s ∧ R x1 x}) g = sum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g",
                    "id": "8.5",
                    "prevs": [
                        "8.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ t, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ sum ({x1. x1 ∈ s ∧ R x1 x}) g = sum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "",
                    "id": "8.6",
                    "prevs": [
                        "8.0",
                        "8.1",
                        "8.5"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ ∀x. x ∈ t ⟶ sum ({x1. x1 ∈ s ∧ R x1 x}) g = sum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g"
                },
                {
                    "args": "sum_eq",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ sum t (λx. sum ({x1. x1 ∈ s ∧ R x1 x}) g) = sum t (λx. sum ({x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}) g)"
                },
                {
                    "args": "sum t (λy. sum ({x. x ∈ s ∧ R x y}) g) = sum s g",
                    "id": "10",
                    "prevs": [
                        "7",
                        "9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y) ⊢ sum t (λy. sum ({x. x ∈ s ∧ R x y}) g) = sum s g"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)) ⟶ sum t (λy. sum ({x. x ∈ s ∧ R x y}) g) = sum s g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ (∃!y. y ∈ t ∧ R x y)) ",
                "   ⟶ sum t (λy. sum ({x. x ∈ s ∧ R x y}) g) = sum s g"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_f": "(%x. THE y. y ∈ t ∧ R x y)",
                    "param_g": "g",
                    "param_t": "t",
                    "theorem": "sum_group"
                },
                {
                    "goal": "image (λx. THE y. y ∈ t ∧ R x y) s ⊆ t",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "exists_elim",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.5"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal": "{x1. x1 ∈ s ∧ R x1 x} = {x1. x1 ∈ s ∧ (THE y. y ∈ t ∧ R x1 y) = x}",
                    "goal_id": "8.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.2.1.0"
                    ],
                    "goal_id": "8.2.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.1.0"
                    ],
                    "goal_id": "8.2.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "8.2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1",
                        "8.2.1.1"
                    ],
                    "goal_id": "8.2.1.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.1.3"
                    ],
                    "goal_id": "8.2.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "",
                    "theorem": "exists1_def"
                },
                {
                    "fact_ids": [
                        "8.2.1.4"
                    ],
                    "goal_id": "8.2.1.5",
                    "method_name": "exists_elim",
                    "names": "x2"
                },
                {
                    "fact_ids": [
                        "8.2.1.6"
                    ],
                    "goal_id": "8.2.1.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.1.6"
                    ],
                    "goal_id": "8.2.1.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8.2.1.3"
                    ],
                    "goal_id": "8.2.1.9",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "8.2.1.8",
                        "8.2.1.9"
                    ],
                    "goal_id": "8.2.1.10",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.1.10"
                    ],
                    "goal_id": "8.2.1.11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8.2.1.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "8.2.1.8"
                    ],
                    "goal_id": "8.2.1.11",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "8.2.1.11",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "8.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.2.2.0"
                    ],
                    "goal_id": "8.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8.2.2.0"
                    ],
                    "goal_id": "8.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "8.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1",
                        "8.2.2.1"
                    ],
                    "goal_id": "8.2.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "8.2.2.3"
                    ],
                    "goal_id": "8.2.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "theI'"
                },
                {
                    "fact_ids": [
                        "8.2.2.4"
                    ],
                    "goal_id": "8.2.2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8.2.2.2",
                        "8.2.2.5"
                    ],
                    "goal_id": "8.2.2.6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "8.4"
                    ],
                    "goal_id": "8.5",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "'a ⇒ 'b ⇒ bool",
                "g": "'a ⇒ real",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_of_nat_sum",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "real_zero_def, of_nat 0 = (0::real)",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ of_nat 0 = (0::real)"
                },
                {
                    "args": "nsum_empty, of_nat (nsum ∅ f) = (0::real)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ of_nat (nsum ∅ f) = (0::real)"
                },
                {
                    "args": "sum_empty, of_nat (nsum ∅ f) = sum ∅ (λx. of_nat (f x))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ of_nat (nsum ∅ f) = sum ∅ (λx. of_nat (f x))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s ⊢ ∀x. ∀s1. of_nat (nsum s1 f) = sum s1 (λx1. of_nat (f x1)) ⟶ ¬(x ∈ s1) ⟶ finite s1 ⟶ of_nat (nsum (insert x s1) f) = sum (insert x s1) (λx1. of_nat (f x1))"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "s, 'a set",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "of_nat (nsum s f) = sum s (λx. of_nat (f x))",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ of_nat (nsum s f) = sum s (λx. of_nat (f x))"
                },
                {
                    "args": "¬(x ∈ s)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ s) ⊢ ¬(x ∈ s)"
                },
                {
                    "args": "sum_insert, {f: λx1. (of_nat::nat ⇒ real) (f x1), x: x}",
                    "id": "4.4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum (insert x s) (λx1. of_nat (f x1)) = (if x ∈ s then sum s (λx1. of_nat (f x1)) else of_nat (f x) + sum s (λx1. of_nat (f x1)))"
                },
                {
                    "args": "if_not_P",
                    "id": "4.5",
                    "prevs": [
                        "4.4",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ sum (insert x s) (λx1. of_nat (f x1)) = of_nat (f x) + sum s (λx1. of_nat (f x1))"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4.6",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ sum s (λx. of_nat (f x)) = of_nat (nsum s f)"
                },
                {
                    "args": "nsum_insert, {f: f, x: x}",
                    "id": "4.7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ nsum (insert x s) f = (if x ∈ s then nsum s f else f x + nsum s f)"
                },
                {
                    "args": "if_not_P",
                    "id": "4.8",
                    "prevs": [
                        "4.7",
                        "4.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, ¬(x ∈ s) ⊢ nsum (insert x s) f = f x + nsum s f"
                },
                {
                    "args": "real_of_nat_eq, (of_nat::nat ⇒ real) (nsum (insert x s) f) = of_nat (f x + nsum s f)",
                    "id": "4.9",
                    "prevs": [
                        "4.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ (of_nat::nat ⇒ real) (nsum (insert x s) f) = of_nat (f x + nsum s f)"
                },
                {
                    "args": "real_of_nat_add, (of_nat::nat ⇒ real) (nsum (insert x s) f) = of_nat (f x) + of_nat (nsum s f)",
                    "id": "4.10",
                    "prevs": [
                        "4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(x ∈ s), of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ (of_nat::nat ⇒ real) (nsum (insert x s) f) = of_nat (f x) + of_nat (nsum s f)"
                },
                {
                    "args": "of_nat (nsum (insert x s) f) = of_nat (f x) + sum s (λx1. of_nat (f x1))",
                    "id": "4.11",
                    "prevs": [
                        "4.6",
                        "4.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ of_nat (nsum (insert x s) f) = of_nat (f x) + sum s (λx1. of_nat (f x1))"
                },
                {
                    "args": "of_nat (nsum (insert x s) f) = sum (insert x s) (λx1. of_nat (f x1))",
                    "id": "4.12",
                    "prevs": [
                        "4.5",
                        "4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, ¬(x ∈ s), of_nat (nsum s f) = sum s (λx. of_nat (f x)) ⊢ of_nat (nsum (insert x s) f) = sum (insert x s) (λx1. of_nat (f x1))"
                },
                {
                    "args": "",
                    "id": "4.13",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "0",
                        "4.12"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀s. of_nat (nsum s f) = sum s (λx1. of_nat (f x1)) ⟶ ¬(x ∈ s) ⟶ finite s ⟶ of_nat (nsum (insert x s) f) = sum (insert x s) (λx1. of_nat (f x1))"
                },
                {
                    "args": "finite_induct_strong",
                    "id": "5",
                    "prevs": [
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s ⊢ of_nat (nsum s f) = sum s (λx. of_nat (f x))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ of_nat (nsum s f) = sum s (λx. of_nat (f x))"
                }
            ],
            "prop": "finite s ⟶ of_nat (nsum s f) = sum s (λx. of_nat (f x))",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_induct_strong"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_empty"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x,s"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. (of_nat::nat=>real) (f x1))",
                    "param_x": "x",
                    "theorem": "sum_insert"
                },
                {
                    "fact_ids": [
                        "4.4",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.6"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_add"
                },
                {
                    "goal_id": "4.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4.7",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "x",
                    "theorem": "nsum_insert"
                },
                {
                    "fact_ids": [
                        "4.7",
                        "4.3"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_subset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite u",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite u ⊢ finite u"
                },
                {
                    "args": "finite v",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite v ⊢ finite v"
                },
                {
                    "args": "∀x. x ∈ diff u v ⟶ f x ≤ 0",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ diff u v ⟶ f x ≤ 0 ⊢ ∀x. x ∈ diff u v ⟶ f x ≤ 0"
                },
                {
                    "args": "∀x. x ∈ diff v u ⟶ 0 ≤ f x",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ ∀x. x ∈ diff v u ⟶ 0 ≤ f x"
                },
                {
                    "args": "sum_union, {f: f, s: u ∩ v}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∀t. finite (u ∩ v) ⟶ finite t ⟶ disjoint (u ∩ v) t ⟶ sum (u ∩ v ∪ t) f = sum (u ∩ v) f + sum t f"
                },
                {
                    "args": "disjI1, {A: finite u, B: finite v}",
                    "id": "5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite u ∨ finite v"
                },
                {
                    "args": "finite_inter",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite (u ∩ v)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "4",
                        "6"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ ∀t. finite t ⟶ disjoint (u ∩ v) t ⟶ sum (u ∩ v ∪ t) f = sum (u ∩ v) f + sum t f"
                },
                {
                    "args": "diff v u",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite (diff v u) ⟶ disjoint (u ∩ v) (diff v u) ⟶ sum (u ∩ v ∪ diff v u) f = sum (u ∩ v) f + sum (diff v u) f"
                },
                {
                    "args": "diff u v",
                    "id": "9",
                    "prevs": [
                        "7"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite (diff u v) ⟶ disjoint (u ∩ v) (diff u v) ⟶ sum (u ∩ v ∪ diff u v) f = sum (u ∩ v) f + sum (diff u v) f"
                },
                {
                    "args": "finite_diff, {s: v, t: u}",
                    "id": "10",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite (diff v u)"
                },
                {
                    "args": "finite_diff, {s: u, t: v}",
                    "id": "11",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite (diff u v)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "8",
                        "10"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ disjoint (u ∩ v) (diff v u) ⟶ sum (u ∩ v ∪ diff v u) f = sum (u ∩ v) f + sum (diff v u) f"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "9",
                        "11"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ disjoint (u ∩ v) (diff u v) ⟶ sum (u ∩ v ∪ diff u v) f = sum (u ∩ v) f + sum (diff u v) f"
                },
                {
                    "args": "u ∩ v ∩ {x. x ∈ v ∧ ¬(x ∈ u)} = ∅",
                    "id": "14",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∩ v ∩ {x. x ∈ v ∧ ¬(x ∈ u)} = ∅"
                },
                {
                    "args": "diff_def, u ∩ v ∩ diff v u = ∅",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ u ∩ v ∩ diff v u = ∅"
                },
                {
                    "args": "disjoint_def, disjoint (u ∩ v) (diff v u)",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ disjoint (u ∩ v) (diff v u)"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "12",
                        "16"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (u ∩ v ∪ diff v u) f = sum (u ∩ v) f + sum (diff v u) f"
                },
                {
                    "args": "u ∩ v ∩ {x. x ∈ u ∧ ¬(x ∈ v)} = ∅",
                    "id": "18",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∩ v ∩ {x. x ∈ u ∧ ¬(x ∈ v)} = ∅"
                },
                {
                    "args": "diff_def, u ∩ v ∩ diff u v = ∅",
                    "id": "19",
                    "prevs": [
                        "18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ u ∩ v ∩ diff u v = ∅"
                },
                {
                    "args": "disjoint_def, disjoint (u ∩ v) (diff u v)",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ disjoint (u ∩ v) (diff u v)"
                },
                {
                    "args": "",
                    "id": "21",
                    "prevs": [
                        "13",
                        "20"
                    ],
                    "rule": "apply_fact",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (u ∩ v ∪ diff u v) f = sum (u ∩ v) f + sum (diff u v) f"
                },
                {
                    "args": "u ∩ v ∪ {x. x ∈ v ∧ ¬(x ∈ u)} = v",
                    "id": "22",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∩ v ∪ {x. x ∈ v ∧ ¬(x ∈ u)} = v"
                },
                {
                    "args": "diff_def, u ∩ v ∪ diff v u = v",
                    "id": "23",
                    "prevs": [
                        "22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ u ∩ v ∪ diff v u = v"
                },
                {
                    "args": "",
                    "id": "24",
                    "prevs": [
                        "23",
                        "17"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum v f = sum (u ∩ v) f + sum (diff v u) f"
                },
                {
                    "args": "u ∩ v ∪ {x. x ∈ u ∧ ¬(x ∈ v)} = u",
                    "id": "25",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ u ∩ v ∪ {x. x ∈ u ∧ ¬(x ∈ v)} = u"
                },
                {
                    "args": "diff_def, u ∩ v ∪ diff u v = u",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ u ∩ v ∪ diff u v = u"
                },
                {
                    "args": "",
                    "id": "27",
                    "prevs": [
                        "26",
                        "21"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum u f = sum (u ∩ v) f + sum (diff u v) f"
                },
                {
                    "args": "∀a::real. a ≤ 0 ⟷ 0 ≤ -a",
                    "id": "28",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. a ≤ 0 ⟷ 0 ≤ -a"
                },
                {
                    "args": "",
                    "id": "29",
                    "prevs": [
                        "28",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "∀x. x ∈ diff u v ⟶ f x ≤ 0 ⊢ ∀x. x ∈ diff u v ⟶ 0 ≤ -(f x)"
                },
                {
                    "args": "sum_pos_le",
                    "id": "30",
                    "prevs": [
                        "29"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ 0 ≤ sum (diff u v) (λx. -(f x))"
                },
                {
                    "args": "sum_neg, 0 ≤ -(sum (diff u v) f)",
                    "id": "31",
                    "prevs": [
                        "30"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ 0 ≤ -(sum (diff u v) f)"
                },
                {
                    "args": "sum (diff u v) f ≤ 0",
                    "id": "32",
                    "prevs": [
                        "28",
                        "31"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (diff u v) f ≤ 0"
                },
                {
                    "args": "sum_pos_le",
                    "id": "33",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ 0 ≤ sum (diff v u) f"
                },
                {
                    "args": "real_le_trans",
                    "id": "34",
                    "prevs": [
                        "32",
                        "33"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (diff u v) f ≤ sum (diff v u) f"
                },
                {
                    "args": "real_le_ladd_imp, {x: sum (u ∩ v) f, y: sum (diff u v) f, z: sum (diff v u) f}",
                    "id": "35",
                    "prevs": [
                        "34"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (u ∩ v) f + sum (diff u v) f ≤ sum (u ∩ v) f + sum (diff v u) f"
                },
                {
                    "args": "sum (u ∩ v) f + sum (diff u v) f ≤ sum v f",
                    "id": "36",
                    "prevs": [
                        "24",
                        "35"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum (u ∩ v) f + sum (diff u v) f ≤ sum v f"
                },
                {
                    "args": "sum u f ≤ sum v f",
                    "id": "37",
                    "prevs": [
                        "27",
                        "36"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite u, finite v, ∀x. x ∈ diff u v ⟶ f x ≤ 0, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum u f ≤ sum v f"
                },
                {
                    "args": "",
                    "id": "38",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "37"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite u ⟶ finite v ⟶ (∀x. x ∈ diff u v ⟶ f x ≤ 0) ⟶ (∀x. x ∈ diff v u ⟶ 0 ≤ f x) ⟶ sum u f ≤ sum v f"
                }
            ],
            "prop": [
                "finite u ",
                "⟶ finite v ",
                "   ⟶ (∀x. x ∈ diff u v ⟶ f x ≤ 0) ⟶ (∀x. x ∈ diff v u ⟶ 0 ≤ f x) ⟶ sum u f ≤ sum v f"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_s": "inter u v",
                    "param_t": "",
                    "theorem": "sum_union"
                },
                {
                    "goal": "finite (u ∩ v)",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_inter"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "4",
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "forall_elim",
                    "s": "diff v u"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "9",
                    "method_name": "forall_elim",
                    "s": "diff u v"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal": "finite (diff v u)",
                    "goal_id": "10",
                    "method_name": "cut"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_diff"
                },
                {
                    "goal": "finite (diff u v)",
                    "goal_id": "11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_diff"
                },
                {
                    "fact_ids": [
                        "8",
                        "10"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "9",
                        "11"
                    ],
                    "goal_id": "13",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "disjoint (u ∩ v) (diff v u)",
                    "goal_id": "14",
                    "method_name": "cut"
                },
                {
                    "goal_id": "14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_def"
                },
                {
                    "goal_id": "14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "14",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "12",
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "disjoint (u ∩ v) (diff u v)",
                    "goal_id": "18",
                    "method_name": "cut"
                },
                {
                    "goal_id": "18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_def"
                },
                {
                    "goal_id": "18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "18",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "13",
                        "20"
                    ],
                    "goal_id": "21",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal": "u ∩ v ∪ diff v u = v",
                    "goal_id": "22",
                    "method_name": "cut"
                },
                {
                    "goal_id": "22",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "22",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "23",
                        "17"
                    ],
                    "goal_id": "24",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "u ∩ v ∪ diff u v = u",
                    "goal_id": "25",
                    "method_name": "cut"
                },
                {
                    "goal_id": "25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "25",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "26",
                        "21"
                    ],
                    "goal_id": "27",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "27"
                    ],
                    "goal_id": "28",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "28",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "28",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "goal_id": "28",
                    "method_name": "apply_backward_step",
                    "param_y": "(0::real)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal": "!a::real. a <=0  <--> 0 <= -a",
                    "goal_id": "28",
                    "method_name": "cut"
                },
                {
                    "goal_id": "28",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "28"
                    ],
                    "goal_id": "29",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "29",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_neg"
                },
                {
                    "goal_id": "29",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_le"
                },
                {
                    "fact_ids": [
                        "28",
                        "2"
                    ],
                    "goal_id": "29",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "33",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_subset_simple",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite v",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite v ⊢ finite v"
                },
                {
                    "args": "u ⊆ v",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "u ⊆ v ⊢ u ⊆ v"
                },
                {
                    "args": "∀x. x ∈ diff v u ⟶ 0 ≤ f x",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ ∀x. x ∈ diff v u ⟶ 0 ≤ f x"
                },
                {
                    "args": "finite_subset",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite v, u ⊆ v, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ finite u"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite v, u ⊆ v, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ ∀x. x ∈ diff u v ⟶ f x ≤ 0"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ diff u v",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ diff u v ⊢ x ∈ diff u v"
                },
                {
                    "args": "diff_def",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff u v ⊢ x ∈ {x1. x1 ∈ u ∧ ¬(x1 ∈ v)}"
                },
                {
                    "args": "member_collect",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ diff u v ⊢ x ∈ u ∧ ¬(x ∈ v)"
                },
                {
                    "args": "f x ≤ 0",
                    "id": "4.4",
                    "prevs": [
                        "1",
                        "4.3"
                    ],
                    "rule": "z3",
                    "th": "u ⊆ v, x ∈ diff u v ⊢ f x ≤ 0"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "finite v, u ⊆ v, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ ∀x. x ∈ diff u v ⟶ f x ≤ 0"
                },
                {
                    "args": "sum_subset",
                    "id": "5",
                    "prevs": [
                        "3",
                        "0",
                        "4",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite v, u ⊆ v, ∀x. x ∈ diff v u ⟶ 0 ≤ f x ⊢ sum u f ≤ sum v f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite v ⟶ u ⊆ v ⟶ (∀x. x ∈ diff v u ⟶ 0 ≤ f x) ⟶ sum u f ≤ sum v f"
                }
            ],
            "prop": "finite v ⟶ u ⊆ v ⟶ (∀x. x ∈ diff v u ⟶ 0 ≤ f x) ⟶ sum u f ≤ sum v f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_subset"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_t": "v",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1",
                        "4.3"
                    ],
                    "goal_id": "4.4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "u": "'a set",
                "v": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_mul_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ ∀x. x ∈ s ⟶ a x * b x ≤ sum s a * b x"
                },
                {
                    "args": "x, 'a",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "1",
                        "2.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ 0 ≤ a x ∧ 0 ≤ b x"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ 0 ≤ b x"
                },
                {
                    "args": "sum_sing, a x = sum ({x}) a",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ a x = sum ({x}) a"
                },
                {
                    "args": "{x} ⊆ s",
                    "id": "2.5",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "z3",
                    "th": "x ∈ s ⊢ {x} ⊆ s"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ ∀x1. x1 ∈ diff s ({x}) ⟶ 0 ≤ a x1"
                },
                {
                    "args": "x1, 'a",
                    "id": "2.6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ diff s ({x})",
                    "id": "2.6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ diff s ({x}) ⊢ x1 ∈ diff s ({x})"
                },
                {
                    "args": "diff_def",
                    "id": "2.6.2",
                    "prevs": [
                        "2.6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ diff s ({x}) ⊢ x1 ∈ {x2. x2 ∈ s ∧ ¬(x2 ∈ {x})}"
                },
                {
                    "args": "member_collect",
                    "id": "2.6.3",
                    "prevs": [
                        "2.6.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 ∈ diff s ({x}) ⊢ x1 ∈ s ∧ ¬(x1 ∈ {x})"
                },
                {
                    "args": "conjD1",
                    "id": "2.6.4",
                    "prevs": [
                        "2.6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ diff s ({x}) ⊢ x1 ∈ s"
                },
                {
                    "args": "",
                    "id": "2.6.5",
                    "prevs": [
                        "1",
                        "2.6.4"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 ∈ diff s ({x}), ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ 0 ≤ a x1 ∧ 0 ≤ b x1"
                },
                {
                    "args": "conjD1",
                    "id": "2.6.6",
                    "prevs": [
                        "2.6.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ diff s ({x}), ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ 0 ≤ a x1"
                },
                {
                    "args": "",
                    "id": "2.6.7",
                    "prevs": [
                        "2.6.0",
                        "2.6.1",
                        "2.6.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ ∀x1. x1 ∈ diff s ({x}) ⟶ 0 ≤ a x1"
                },
                {
                    "args": "sum_subset_simple",
                    "id": "2.7",
                    "prevs": [
                        "0",
                        "2.5",
                        "2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ sum ({x}) a ≤ sum s a"
                },
                {
                    "args": "a x ≤ sum s a",
                    "id": "2.8",
                    "prevs": [
                        "2.4",
                        "2.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ a x ≤ sum s a"
                },
                {
                    "args": "real_le_lmul",
                    "id": "2.9",
                    "prevs": [
                        "2.3",
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ b x * a x ≤ b x * sum s a"
                },
                {
                    "args": "real_mult_comm, a x * b x ≤ sum s a * b x",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ a x * b x ≤ sum s a * b x"
                },
                {
                    "args": "",
                    "id": "2.11",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.10"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ ∀x. x ∈ s ⟶ a x * b x ≤ sum s a * b x"
                },
                {
                    "args": "sum_le",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ sum s (λx. a x * b x) ≤ sum s (λx. sum s a * b x)"
                },
                {
                    "args": "sum_lmul, sum s (λi. a i * b i) ≤ sum s a * sum s b",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite s, ∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i ⊢ sum s (λi. a i * b i) ≤ sum s a * sum s b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i) ⟶ sum s (λi. a i * b i) ≤ sum s a * sum s b"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀i. i ∈ s ⟶ 0 ≤ a i ∧ 0 ≤ b i) ⟶ sum s (λi. a i * b i) ≤ sum s a * sum s b"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_lmul"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "fact_ids": [
                        "1",
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal": "a x = sum {x} a",
                    "goal_id": "2.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_subset_simple"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "2.6.1"
                    ],
                    "goal_id": "2.6.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "fact_ids": [
                        "2.6.2"
                    ],
                    "goal_id": "2.6.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "2.6.3"
                    ],
                    "goal_id": "2.6.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1",
                        "2.6.4"
                    ],
                    "goal_id": "2.6.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.6.5"
                    ],
                    "goal_id": "2.6.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a ⇒ real",
                "b": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_image_nonzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = neutral plus",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = neutral plus"
                },
                {
                    "args": "iterate_image_nonzero, {f: i, g: d, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ iterate plus (image i s) d = iterate plus s (d ∘ i)"
                },
                {
                    "args": "sum_def, sum (image i s) d = sum s (d ∘ i)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0 ⊢ sum (image i s) d = sum s (d ∘ i)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0) ⟶ sum (image i s) d = sum s (d ∘ i)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ ¬(x = y) ⟶ i x = i y ⟶ d (i x) = 0) ",
                "   ⟶ sum (image i s) d = sum s (d ∘ i)"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_image_nonzero"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "d": "'b ⇒ real",
                "i": "'a ⇒ 'b",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_bijection",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ p x ∈ s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s ⊢ ∀x. x ∈ s ⟶ p x ∈ s"
                },
                {
                    "args": "∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_bijection, {f: f, op: (plus::real ⇒ real ⇒ real), p: p, s: s}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s, ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ iterate plus s f = iterate plus s (f ∘ p)"
                },
                {
                    "args": "sum_def, sum s f = sum s (f ∘ p)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s, ∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y) ⊢ sum s f = sum s (f ∘ p)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ p x ∈ s) ⟶ (∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)) ⟶ sum s f = sum s (f ∘ p)"
                }
            ],
            "prop": [
                "(∀x. x ∈ s ⟶ p x ∈ s) ",
                "⟶ (∀y. y ∈ s ⟶ (∃!x. x ∈ s ∧ p x = y)) ⟶ sum s f = sum s (f ∘ p)"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_bijection"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "p": "'a ⇒ 'a",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_eq_general",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y) ⊢ ∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_eq_general, {f: f, g: g, h: h, op: (plus::real ⇒ real ⇒ real), s: s, t: t}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y), ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ iterate plus s f = iterate plus t g"
                },
                {
                    "args": "sum_def, sum s f = sum t g",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y), ∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x ⊢ sum s f = sum t g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)) ⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x) ⟶ sum s f = sum t g"
                }
            ],
            "prop": [
                "(∀y. y ∈ t ⟶ (∃!x. x ∈ s ∧ h x = y)) ",
                "⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ g (h x) = f x) ⟶ sum s f = sum t g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_h": "h",
                    "theorem": "iterate_eq_general"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'b ⇒ real",
                "h": "'a ⇒ 'b",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_eq_general_inverses",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y ⊢ ∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y"
                },
                {
                    "args": "∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_eq_general_inverses, {f: f, g: g, h: h, k: k, op: (plus::real ⇒ real ⇒ real), s: s, t: t}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y, ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ iterate plus s f = iterate plus t g"
                },
                {
                    "args": "sum_def, sum s f = sum t g",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y, ∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x ⊢ sum s f = sum t g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y) ⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x) ⟶ sum s f = sum t g"
                }
            ],
            "prop": [
                "(∀y. y ∈ t ⟶ k y ∈ s ∧ h (k y) = y) ",
                "⟶ (∀x. x ∈ s ⟶ h x ∈ t ∧ k (h x) = x ∧ g (h x) = f x) ⟶ sum s f = sum t g"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_h": "h",
                    "param_k": "k",
                    "theorem": "iterate_eq_general_inverses"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'b ⇒ real",
                "h": "'a ⇒ 'b",
                "k": "'b ⇒ 'a",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_injection",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ p x ∈ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ p x ∈ s ⊢ ∀x. x ∈ s ⟶ p x ∈ s"
                },
                {
                    "args": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_injection, {f: f, op: (plus::real ⇒ real ⇒ real), p: p, s: s}",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. x ∈ s ⟶ p x ∈ s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ iterate plus s (f ∘ p) = iterate plus s f"
                },
                {
                    "args": "sum_def, sum s (f ∘ p) = sum s f",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ p x ∈ s, ∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y ⊢ sum s (f ∘ p) = sum s f"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ p x ∈ s) ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y) ⟶ sum s (f ∘ p) = sum s f"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ (∀x. x ∈ s ⟶ p x ∈ s) ",
                "   ⟶ (∀x. ∀y. x ∈ s ⟶ y ∈ s ⟶ p x = p y ⟶ x = y) ⟶ sum s (f ∘ p) = sum s f"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_injection"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "p": "'a ⇒ 'a",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_union_nonzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀x. x ∈ s ∩ t ⟶ f x = 0",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ ∀x. x ∈ s ∩ t ⟶ f x = 0"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, ∀x. x ∈ s ∩ t ⟶ f x = neutral plus",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ ∀x. x ∈ s ∩ t ⟶ f x = neutral plus"
                },
                {
                    "args": "iterate_union_nonzero",
                    "id": "5",
                    "prevs": [
                        "3",
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ iterate plus (s ∪ t) f = iterate plus s f + iterate plus t f"
                },
                {
                    "args": "sum_def, sum (s ∪ t) f = sum s f + sum t f",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀x. x ∈ s ∩ t ⟶ f x = 0 ⊢ sum (s ∪ t) f = sum s f + sum t f"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀x. x ∈ s ∩ t ⟶ f x = 0) ⟶ sum (s ∪ t) f = sum s f + sum t f"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ⟶ (∀x. x ∈ s ∩ t ⟶ f x = 0) ⟶ sum (s ∪ t) f = sum s f + sum t f"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_union_nonzero"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_cases, {P: P, f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ iterate plus s (λx. if P x then f x else g x) = iterate plus ({x. x ∈ s ∧ P x}) f + iterate plus ({x. x ∈ s ∧ ¬(P x)}) g"
                },
                {
                    "args": "sum_def, sum s (λx. if P x then f x else g x) = sum ({x. x ∈ s ∧ P x}) f + sum ({x. x ∈ s ∧ ¬(P x)}) g",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s ⊢ sum s (λx. if P x then f x else g x) = sum ({x. x ∈ s ∧ P x}) f + sum ({x. x ∈ s ∧ ¬(P x)}) g"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ sum s (λx. if P x then f x else g x) = sum ({x. x ∈ s ∧ P x}) f + sum ({x. x ∈ s ∧ ¬(P x)}) g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ sum s (λx. if P x then f x else g x) = ",
                "   sum ({x. x ∈ s ∧ P x}) f + sum ({x. x ∈ s ∧ ¬(P x)}) g"
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_cases_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "a ∈ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ⊢ a ∈ s"
                },
                {
                    "args": "sum_cases, {P: λx. x = a, f: λx::'a. y, g: f}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s ⊢ sum s (λx. if x = a then y else f x) = sum ({x. x ∈ s ∧ x = a}) (λx. y) + sum ({x. x ∈ s ∧ ¬(x = a)}) f"
                },
                {
                    "args": "{x. x ∈ s ∧ ¬(x = a)} = {y. ¬(y = a) ∧ y ∈ s}",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ {x. x ∈ s ∧ ¬(x = a)} = {y. ¬(y = a) ∧ y ∈ s}"
                },
                {
                    "args": "delete_def, {x. x ∈ s ∧ ¬(x = a)} = delete s a",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, a ∈ s ⊢ {x. x ∈ s ∧ ¬(x = a)} = delete s a"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, a ∈ s ⊢ sum s (λx. if x = a then y else f x) = sum ({x. x ∈ s ∧ x = a}) (λx. y) + sum (delete s a) f"
                },
                {
                    "args": "sum_delete, {f: f}",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, a ∈ s ⊢ sum (delete s a) f = sum s f - f a"
                },
                {
                    "args": "{x. x ∈ s ∧ x = a} = {a}",
                    "id": "7",
                    "prevs": [
                        "1"
                    ],
                    "rule": "z3",
                    "th": "a ∈ s ⊢ {x. x ∈ s ∧ x = a} = {a}"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "7",
                        "5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "finite s, a ∈ s ⊢ sum s (λx. if x = a then y else f x) = sum ({a}) (λx. y) + sum (delete s a) f"
                },
                {
                    "args": "sum_sing",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite s, a ∈ s ⊢ sum s (λx. if x = a then y else f x) = y + sum (delete s a) f"
                },
                {
                    "args": "y + (sum s f - f a) = sum s f + (y - f a)",
                    "id": "10",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ y + (sum s f - f a) = sum s f + (y - f a)"
                },
                {
                    "args": "y + sum (delete s a) f = sum s f + (y - f a)",
                    "id": "11",
                    "prevs": [
                        "6",
                        "10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ⊢ y + sum (delete s a) f = sum s f + (y - f a)"
                },
                {
                    "args": "sum s (λx. if x = a then y else f x) = sum s f + (y - f a)",
                    "id": "12",
                    "prevs": [
                        "9",
                        "11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, a ∈ s ⊢ sum s (λx. if x = a then y else f x) = sum s f + (y - f a)"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "0",
                        "1",
                        "12"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ a ∈ s ⟶ sum s (λx. if x = a then y else f x) = sum s f + (y - f a)"
                }
            ],
            "prop": "finite s ⟶ a ∈ s ⟶ sum s (λx. if x = a then y else f x) = sum s f + (y - f a)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_P": "(%x. x = a)",
                    "param_f": "(%x::'a. y)",
                    "param_g": "f",
                    "theorem": "sum_cases"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal": "{x. x ∈ s ∧ ¬(x = a)} = delete s a",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "delete_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4",
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "theorem": "sum_delete"
                },
                {
                    "goal": "{x. x ∈ s ∧ x = a} = {a}",
                    "goal_id": "7",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "7",
                        "5"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_sing"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "10",
                    "method_name": "real_norm"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "f": "'a ⇒ real",
                "s": "'a set",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_le_included",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "finite t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite t ⊢ finite t"
                },
                {
                    "args": "∀y. y ∈ t ⟶ 0 ≤ g y",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀y. y ∈ t ⟶ 0 ≤ g y ⊢ ∀y. y ∈ t ⟶ 0 ≤ g y"
                },
                {
                    "args": "∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ f x ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "x, 'a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "3",
                        "4.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x ∈ s, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y"
                },
                {
                    "args": "y, 'b",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "y ∈ t ∧ i y = x ∧ f x ≤ g y",
                    "id": "4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ y ∈ t ∧ i y = x ∧ f x ≤ g y"
                },
                {
                    "args": "conjD1",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ y ∈ t"
                },
                {
                    "args": "conjD2",
                    "id": "4.6",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ i y = x ∧ f x ≤ g y"
                },
                {
                    "args": "conjD1",
                    "id": "4.7",
                    "prevs": [
                        "4.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ i y = x"
                },
                {
                    "args": "conjD2",
                    "id": "4.8",
                    "prevs": [
                        "4.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ f x ≤ g y"
                },
                {
                    "args": "sum_sing, f x ≤ sum ({y}) g",
                    "id": "4.9",
                    "prevs": [
                        "4.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ f x ≤ sum ({y}) g"
                },
                {
                    "args": "finite_restrict, {P: λx1. i x1 = x, s: t}",
                    "id": "4.10",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ finite ({x1. x1 ∈ t ∧ i x1 = x})"
                },
                {
                    "args": "",
                    "id": "4.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 = y ∨ x1 ∈ ∅ ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "x1, 'b",
                    "id": "4.11.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 = y ∨ x1 ∈ ∅",
                    "id": "4.11.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 = y ∨ x1 ∈ ∅ ⊢ x1 = y ∨ x1 ∈ ∅"
                },
                {
                    "args": "",
                    "id": "4.11.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 = y ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "x1 = y",
                    "id": "4.11.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 = y ⊢ x1 = y"
                },
                {
                    "args": "x1 ∈ t",
                    "id": "4.11.2.1",
                    "prevs": [
                        "4.11.2.0",
                        "4.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, x1 = y, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 ∈ t"
                },
                {
                    "args": "i x1 = x",
                    "id": "4.11.2.2",
                    "prevs": [
                        "4.11.2.0",
                        "4.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, finite t, x1 = y, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ i x1 = x"
                },
                {
                    "args": "conjI",
                    "id": "4.11.2.3",
                    "prevs": [
                        "4.11.2.1",
                        "4.11.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x1 = y, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "",
                    "id": "4.11.2.4",
                    "prevs": [
                        "4.11.2.0",
                        "4.11.2.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 = y ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "",
                    "id": "4.11.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 ∈ ∅ ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "x1 ∈ ∅",
                    "id": "4.11.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ ∅ ⊢ x1 ∈ ∅"
                },
                {
                    "args": "member_empty, x1 ∈ t ∧ i x1 = x",
                    "id": "4.11.3.1",
                    "prevs": [
                        "4.11.3.0"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x1 ∈ ∅ ⊢ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "",
                    "id": "4.11.3.2",
                    "prevs": [
                        "4.11.3.0",
                        "4.11.3.1"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 ∈ ∅ ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "disjE",
                    "id": "4.11.4",
                    "prevs": [
                        "4.11.1",
                        "4.11.2",
                        "4.11.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, x1 = y ∨ x1 ∈ ∅, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "",
                    "id": "4.11.5",
                    "prevs": [
                        "4.11.0",
                        "4.11.1",
                        "4.11.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 = y ∨ x1 ∈ ∅ ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "member_insert, ∀x1. x1 ∈ {y} ⟶ x1 ∈ t ∧ i x1 = x",
                    "id": "4.12",
                    "prevs": [
                        "4.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ {y} ⟶ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {y} ⟶ x1 ∈ {x2. x2 ∈ t ∧ i x2 = x}",
                    "id": "4.13",
                    "prevs": [
                        "4.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ {y} ⟶ x1 ∈ {x2. x2 ∈ t ∧ i x2 = x}"
                },
                {
                    "args": "subsetI",
                    "id": "4.14",
                    "prevs": [
                        "4.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ {y} ⊆ {x1. x1 ∈ t ∧ i x1 = x}"
                },
                {
                    "args": "",
                    "id": "4.15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. (x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}) ⟶ 0 ≤ g x1"
                },
                {
                    "args": "x1, 'b",
                    "id": "4.15.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "(x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y})",
                    "id": "4.15.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}) ⊢ (x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y})"
                },
                {
                    "args": "conjD1",
                    "id": "4.15.2",
                    "prevs": [
                        "4.15.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}) ⊢ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "conjD1",
                    "id": "4.15.3",
                    "prevs": [
                        "4.15.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "(x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}) ⊢ x1 ∈ t"
                },
                {
                    "args": "x1",
                    "id": "4.15.4",
                    "prevs": [
                        "2",
                        "4.15.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, (x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}), ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ 0 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "4.15.5",
                    "prevs": [
                        "4.15.0",
                        "4.15.1",
                        "4.15.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. (x1 ∈ t ∧ i x1 = x) ∧ ¬(x1 ∈ {y}) ⟶ 0 ≤ g x1"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x2. x2 ∈ t ∧ i x2 = x} ∧ ¬(x1 ∈ {y}) ⟶ 0 ≤ g x1",
                    "id": "4.16",
                    "prevs": [
                        "4.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ t ∧ i x2 = x} ∧ ¬(x1 ∈ {y}) ⟶ 0 ≤ g x1"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x2. x2 ∈ {x3. x3 ∈ t ∧ i x3 = x} ∧ ¬(x2 ∈ {y})} ⟶ 0 ≤ g x1",
                    "id": "4.17",
                    "prevs": [
                        "4.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ {x3. x3 ∈ t ∧ i x3 = x} ∧ ¬(x2 ∈ {y})} ⟶ 0 ≤ g x1"
                },
                {
                    "args": "diff_def, ∀x1. x1 ∈ diff ({x2. x2 ∈ t ∧ i x2 = x}) ({y}) ⟶ 0 ≤ g x1",
                    "id": "4.18",
                    "prevs": [
                        "4.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ diff ({x2. x2 ∈ t ∧ i x2 = x}) ({y}) ⟶ 0 ≤ g x1"
                },
                {
                    "args": "sum_subset_simple",
                    "id": "4.19",
                    "prevs": [
                        "4.10",
                        "4.14",
                        "4.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum ({y}) g ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "real_le_trans",
                    "id": "4.20",
                    "prevs": [
                        "4.9",
                        "4.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ f x ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y",
                    "id": "4.21",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "4.4",
                        "4.20"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ f x ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "sum_le",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum s f ≤ sum s (λx. sum ({x1. x1 ∈ t ∧ i x1 = x}) g)"
                },
                {
                    "args": "finite_image, {f: i, s: t}",
                    "id": "6",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ finite (image i t)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ (∃x1. x = i x1 ∧ x1 ∈ t)"
                },
                {
                    "args": "x, 'a",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "",
                    "id": "7.2",
                    "prevs": [
                        "3",
                        "7.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x ∈ s, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y"
                },
                {
                    "args": "y, 'b",
                    "id": "7.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "y ∈ t ∧ i y = x ∧ f x ≤ g y",
                    "id": "7.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ y ∈ t ∧ i y = x ∧ f x ≤ g y"
                },
                {
                    "args": "conj_assoc",
                    "id": "7.5",
                    "prevs": [
                        "7.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ (y ∈ t ∧ i y = x) ∧ f x ≤ g y"
                },
                {
                    "args": "conjD1",
                    "id": "7.6",
                    "prevs": [
                        "7.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ∈ t ∧ i y = x ∧ f x ≤ g y ⊢ y ∈ t ∧ i y = x"
                },
                {
                    "args": "eq_sym_eq, y ∈ t ∧ x = i y",
                    "id": "7.7",
                    "prevs": [
                        "7.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ y ∈ t ∧ x = i y"
                },
                {
                    "args": "conj_comm, x = i y ∧ y ∈ t",
                    "id": "7.8",
                    "prevs": [
                        "7.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ x = i y ∧ y ∈ t"
                },
                {
                    "args": "exI, {P: λx1. x = i x1 ∧ x1 ∈ t, a: y}",
                    "id": "7.9",
                    "prevs": [
                        "7.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, x ∈ s, ∀y. y ∈ t ⟶ 0 ≤ g y, y ∈ t ∧ i y = x ∧ f x ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∃a1. x = i a1 ∧ a1 ∈ t"
                },
                {
                    "args": "∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y",
                    "id": "7.10",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.2",
                        "7.3",
                        "7.4",
                        "7.9"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ (∃x1. x = i x1 ∧ x1 ∈ t)"
                },
                {
                    "args": "in_image, ∀x. x ∈ s ⟶ x ∈ image i t",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ s ⟶ x ∈ image i t"
                },
                {
                    "args": "subsetI",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ s ⊆ image i t"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ diff (image i t) s ⟶ 0 ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "x, 'a",
                    "id": "10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ diff (image i t) s",
                    "id": "10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ diff (image i t) s ⊢ x ∈ diff (image i t) s"
                },
                {
                    "args": "",
                    "id": "10.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, finite t, x ∈ diff (image i t) s, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ t ∧ i x1 = x ⟶ 0 ≤ g x1"
                },
                {
                    "args": "x1, 'b",
                    "id": "10.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x1 ∈ t ∧ i x1 = x",
                    "id": "10.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 ∈ t ∧ i x1 = x ⊢ x1 ∈ t ∧ i x1 = x"
                },
                {
                    "args": "conjD1",
                    "id": "10.2.2",
                    "prevs": [
                        "10.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 ∈ t ∧ i x1 = x ⊢ x1 ∈ t"
                },
                {
                    "args": "x1",
                    "id": "10.2.3",
                    "prevs": [
                        "2",
                        "10.2.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, finite t, x ∈ diff (image i t) s, x1 ∈ t ∧ i x1 = x, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ 0 ≤ g x1"
                },
                {
                    "args": "",
                    "id": "10.2.4",
                    "prevs": [
                        "10.2.0",
                        "10.2.1",
                        "10.2.3"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, x ∈ diff (image i t) s, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ t ∧ i x1 = x ⟶ 0 ≤ g x1"
                },
                {
                    "args": "member_collect, ∀x1. x1 ∈ {x2. x2 ∈ t ∧ i x2 = x} ⟶ 0 ≤ g x1",
                    "id": "10.3",
                    "prevs": [
                        "10.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, x ∈ diff (image i t) s, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x1. x1 ∈ {x2. x2 ∈ t ∧ i x2 = x} ⟶ 0 ≤ g x1"
                },
                {
                    "args": "sum_pos_le",
                    "id": "10.4",
                    "prevs": [
                        "10.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, x ∈ diff (image i t) s, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ 0 ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "",
                    "id": "10.5",
                    "prevs": [
                        "10.0",
                        "10.1",
                        "10.4"
                    ],
                    "rule": "intros",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ ∀x. x ∈ diff (image i t) s ⟶ 0 ≤ sum ({x1. x1 ∈ t ∧ i x1 = x}) g"
                },
                {
                    "args": "sum_subset_simple",
                    "id": "11",
                    "prevs": [
                        "6",
                        "9",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum s (λx. sum ({x1. x1 ∈ t ∧ i x1 = x}) g) ≤ sum (image i t) (λx. sum ({x1. x1 ∈ t ∧ i x1 = x}) g)"
                },
                {
                    "args": "real_le_trans",
                    "id": "12",
                    "prevs": [
                        "5",
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum s f ≤ sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g)"
                },
                {
                    "args": "sum_image_gen, {f: i, g: g, s: t}",
                    "id": "13",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum t g = sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g)"
                },
                {
                    "args": "eq_sym_eq, sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) = sum t g",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) = sum t g"
                },
                {
                    "args": "disjI2, {A: sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) < sum t g, B: sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) = sum t g}",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) < sum t g ∨ sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) = sum t g"
                },
                {
                    "args": "real_le_lt, sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) ≤ sum t g",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum (image i t) (λy. sum ({x. x ∈ t ∧ i x = y}) g) ≤ sum t g"
                },
                {
                    "args": "real_le_trans",
                    "id": "17",
                    "prevs": [
                        "12",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, finite t, ∀y. y ∈ t ⟶ 0 ≤ g y, ∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y) ⊢ sum s f ≤ sum t g"
                },
                {
                    "args": "",
                    "id": "18",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "17"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ finite t ⟶ (∀y. y ∈ t ⟶ 0 ≤ g y) ⟶ (∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y)) ⟶ sum s f ≤ sum t g"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ finite t ",
                "   ⟶ (∀y. y ∈ t ⟶ 0 ≤ g y) ",
                "      ⟶ (∀x. x ∈ s ⟶ (∃y. y ∈ t ∧ i y = x ∧ f x ≤ g y)) ⟶ sum s f ≤ sum t g"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_y": "sum (image (i) t) (%y. sum {x. x ∈ t ∧ i x = y} g)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_y": "sum s (%y. sum {x. x ∈ t ∧ i x = y} g)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "exists_elim",
                    "names": "y"
                },
                {
                    "goal_id": "4.5",
                    "method_name": "apply_backward_step",
                    "param_y": "sum {y} g",
                    "theorem": "real_le_trans"
                },
                {
                    "fact_ids": [
                        "4.4"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.4"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.6"
                    ],
                    "goal_id": "4.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.6"
                    ],
                    "goal_id": "4.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing"
                },
                {
                    "goal_id": "4.10",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_subset_simple"
                },
                {
                    "goal_id": "4.10",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_restrict"
                },
                {
                    "goal_id": "4.11",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "4.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_insert"
                },
                {
                    "goal_id": "4.11",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "4.11.1"
                    ],
                    "goal_id": "4.11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.11.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.11.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.11.2.0"
                    ],
                    "goal_id": "4.11.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "4.11.2.0"
                    ],
                    "goal_id": "4.11.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.11.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.11.3.0"
                    ],
                    "goal_id": "4.11.3.1",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                },
                {
                    "goal_id": "4.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "4.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.15",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "4.15.1"
                    ],
                    "goal_id": "4.15.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.15.2"
                    ],
                    "goal_id": "4.15.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4.15.4",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_subset_simple"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_image"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3",
                        "7.1"
                    ],
                    "goal_id": "7.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "7.2"
                    ],
                    "goal_id": "7.3",
                    "method_name": "exists_elim",
                    "names": "y"
                },
                {
                    "goal_id": "7.5",
                    "method_name": "inst_exists_goal",
                    "s": "y"
                },
                {
                    "fact_ids": [
                        "7.4"
                    ],
                    "goal_id": "7.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "conj_assoc"
                },
                {
                    "fact_ids": [
                        "7.5"
                    ],
                    "goal_id": "7.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "7.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "7.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "10",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "10.2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_le"
                },
                {
                    "goal_id": "10.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "10.2",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "10.2.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "10.2.1"
                    ],
                    "goal_id": "10.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_lt"
                },
                {
                    "goal_id": "13",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "13",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_image_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'b ⇒ real",
                "i": "'b ⇒ 'a",
                "s": "'a set",
                "t": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_image_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ 0 ≤ g (f x)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ ∀x. x ∈ s ⟶ 0 ≤ g (f x)"
                },
                {
                    "args": "finite_image, {f: f, s: s}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ finite (image f s)"
                },
                {
                    "args": "comp_fun_eval, ∀y. y ∈ s ⟶ 0 ≤ (g ∘ f) y",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ ∀y. y ∈ s ⟶ 0 ≤ (g ∘ f) y"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ ∀x. x ∈ image f s ⟶ (∃y. y ∈ s ∧ f y = x ∧ g x ≤ (g ∘ f) y)"
                },
                {
                    "args": "x, 'b",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ image f s",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ image f s ⊢ x ∈ image f s"
                },
                {
                    "args": "in_image",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ image f s ⊢ ∃x1. x = f x1 ∧ x1 ∈ s"
                },
                {
                    "args": "x1, 'a",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "x = f x1 ∧ x1 ∈ s",
                    "id": "4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = f x1 ∧ x1 ∈ s ⊢ x = f x1 ∧ x1 ∈ s"
                },
                {
                    "args": "conjD1",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = f x1 ∧ x1 ∈ s ⊢ x = f x1"
                },
                {
                    "args": "conjD2",
                    "id": "4.6",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = f x1 ∧ x1 ∈ s ⊢ x1 ∈ s"
                },
                {
                    "args": "f x1 = x",
                    "id": "4.7",
                    "prevs": [
                        "4.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = f x1 ∧ x1 ∈ s ⊢ f x1 = x"
                },
                {
                    "args": "real_le_refl, {x: g x}",
                    "id": "4.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ g x ≤ g x"
                },
                {
                    "args": "g x ≤ g (f x1)",
                    "id": "4.9",
                    "prevs": [
                        "4.7",
                        "4.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "finite s, x ∈ image f s, x = f x1 ∧ x1 ∈ s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ g x ≤ g (f x1)"
                },
                {
                    "args": "comp_fun_eval, g x ≤ (g ∘ f) x1",
                    "id": "4.10",
                    "prevs": [
                        "4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, x ∈ image f s, x = f x1 ∧ x1 ∈ s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ g x ≤ (g ∘ f) x1"
                },
                {
                    "args": "conjI",
                    "id": "4.11",
                    "prevs": [
                        "4.7",
                        "4.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ image f s, x = f x1 ∧ x1 ∈ s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ f x1 = x ∧ g x ≤ (g ∘ f) x1"
                },
                {
                    "args": "conjI",
                    "id": "4.12",
                    "prevs": [
                        "4.6",
                        "4.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, x ∈ image f s, x = f x1 ∧ x1 ∈ s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ x1 ∈ s ∧ f x1 = x ∧ g x ≤ (g ∘ f) x1"
                },
                {
                    "args": "exI, {P: λy. y ∈ s ∧ f y = x ∧ g x ≤ (g ∘ f) y, a: x1}",
                    "id": "4.13",
                    "prevs": [
                        "4.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, x ∈ image f s, x = f x1 ∧ x1 ∈ s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ ∃a1. a1 ∈ s ∧ f a1 = x ∧ g x ≤ (g ∘ f) a1"
                },
                {
                    "args": "∃x1. x = f x1 ∧ x1 ∈ s",
                    "id": "4.14",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "4.4",
                        "4.13"
                    ],
                    "rule": "intros",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ ∀x. x ∈ image f s ⟶ (∃y. y ∈ s ∧ f y = x ∧ g x ≤ (g ∘ f) y)"
                },
                {
                    "args": "sum_le_included",
                    "id": "5",
                    "prevs": [
                        "2",
                        "0",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ∀x. x ∈ s ⟶ 0 ≤ g (f x) ⊢ sum (image f s) g ≤ sum s (g ∘ f)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ g (f x)) ⟶ sum (image f s) g ≤ sum s (g ∘ f)"
                }
            ],
            "prop": "finite s ⟶ (∀x. x ∈ s ⟶ 0 ≤ g (f x)) ⟶ sum (image f s) g ≤ sum s (g ∘ f)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_i": "f",
                    "theorem": "sum_le_included"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_image"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "comp_fun_eval"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "exists_elim",
                    "names": "x1"
                },
                {
                    "goal_id": "4.5",
                    "method_name": "inst_exists_goal",
                    "s": "x1"
                },
                {
                    "fact_ids": [
                        "4.4"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.4"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "comp_fun_eval"
                },
                {
                    "fact_ids": [
                        "4.7"
                    ],
                    "goal_id": "4.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.8",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ 'b",
                "g": "'b ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_closed",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. ∀y. P x ⟶ P y ⟶ P (x + y)"
                },
                {
                    "args": "∀a. a ∈ s ⟶ P (f a)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. a ∈ s ⟶ P (f a) ⊢ ∀a. a ∈ s ⟶ P (f a)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, P (neutral plus)",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (neutral plus)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. x ∈ s ∧ ¬(f x = 0) ⟶ P (f x)"
                },
                {
                    "args": "x, 'a",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s ∧ ¬(f x = 0)",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s ∧ ¬(f x = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ s ∧ ¬(f x = 0) ⊢ x ∈ s"
                },
                {
                    "args": "x",
                    "id": "5.3",
                    "prevs": [
                        "2",
                        "5.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), x ∈ s ∧ ¬(f x = 0), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (f x)"
                },
                {
                    "args": "",
                    "id": "5.4",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.3"
                    ],
                    "rule": "intros",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. x ∈ s ∧ ¬(f x = 0) ⟶ P (f x)"
                },
                {
                    "args": "neutral_real_add, ∀x. x ∈ s ∧ ¬(f x = neutral plus) ⟶ P (f x)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. x ∈ s ∧ ¬(f x = neutral plus) ⟶ P (f x)"
                },
                {
                    "args": "iterate_closed",
                    "id": "7",
                    "prevs": [
                        "3",
                        "4",
                        "1",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (iterate plus s f)"
                },
                {
                    "args": "sum_def, P (sum s f)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 0, ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (sum s f)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (sum s f)"
                }
            ],
            "prop": "P 0 ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (sum s f)",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_closed"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "real ⇒ bool",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_related",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "R 0 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R 0 0 ⊢ R 0 0"
                },
                {
                    "args": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)"
                },
                {
                    "args": "finite s",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "∀x. x ∈ s ⟶ R (f x) (g x)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ R (f x) (g x) ⊢ ∀x. x ∈ s ⟶ R (f x) (g x)"
                },
                {
                    "args": "iterate_related, {R: R, f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ R (neutral plus) (neutral plus) ⟶ (∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)) ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "neutral_real_add, R (neutral plus) (neutral plus)",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (neutral plus) (neutral plus)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "m, real",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n, real",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "m1, real",
                    "id": "7.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m1"
                },
                {
                    "args": "n1, real",
                    "id": "7.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "R m m1",
                    "id": "7.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R m m1 ⊢ R m m1"
                },
                {
                    "args": "R n n1",
                    "id": "7.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R n n1 ⊢ R n n1"
                },
                {
                    "args": "m, m1, n, n1",
                    "id": "7.6",
                    "prevs": [
                        "1",
                        "7.4",
                        "7.5"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, R m m1, R n n1, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (m + n) (m1 + n1)"
                },
                {
                    "args": "",
                    "id": "7.7",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.2",
                        "7.3",
                        "7.4",
                        "7.5",
                        "7.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m m1 ⟶ R n n1 ⟶ R (m + n) (m1 + n1)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "7",
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "sum_def, R (sum s f) (sum s g)",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, R 0 0, ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (sum s f) (sum s g)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ R 0 0 ⟶ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (sum s f) (sum s g)"
                }
            ],
            "prop": [
                "R 0 0 ",
                "⟶ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ",
                "   ⟶ finite s ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (sum s f) (sum s g)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "f",
                    "param_g": "g",
                    "param_op": "(plus::real=>real=>real)",
                    "param_s": "s",
                    "theorem": "iterate_related"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "m,n,m1,n1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "7.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "real ⇒ real ⇒ bool",
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_closed_nonempty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ ∀x. ∀y. P x ⟶ P y ⟶ P (x + y)"
                },
                {
                    "args": "∀a. a ∈ s ⟶ P (f a)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. a ∈ s ⟶ P (f a) ⊢ ∀a. a ∈ s ⟶ P (f a)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_closed_nonempty",
                    "id": "5",
                    "prevs": [
                        "4",
                        "2",
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite s, ¬(s = ∅), ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (iterate plus s f)"
                },
                {
                    "args": "sum_def, P (sum s f)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀a. a ∈ s ⟶ P (f a), ∀x. ∀y. P x ⟶ P y ⟶ P (x + y) ⊢ P (sum s f)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (sum s f)"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ ¬(s = ∅) ⟶ (∀x. ∀y. P x ⟶ P y ⟶ P (x + y)) ⟶ (∀a. a ∈ s ⟶ P (f a)) ⟶ P (sum s f)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_closed_nonempty"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "real ⇒ bool",
                "f": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_related_nonempty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)"
                },
                {
                    "args": "finite s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "∀x. x ∈ s ⟶ R (f x) (g x)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ R (f x) (g x) ⊢ ∀x. x ∈ s ⟶ R (f x) (g x)"
                },
                {
                    "args": "iterate_related_nonempty, {R: R, f: f, g: g, op: (plus::real ⇒ real ⇒ real), s: s}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ (∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)) ⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀x1. ∀y1. ∀x2. ∀y2. R x1 x2 ⟶ R y1 y2 ⟶ R (x1 + y1) (x2 + y2)"
                },
                {
                    "args": "m, real",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n, real",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "m1, real",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m1"
                },
                {
                    "args": "n1, real",
                    "id": "6.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "R m m1",
                    "id": "6.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R m m1 ⊢ R m m1"
                },
                {
                    "args": "R n n1",
                    "id": "6.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "R n n1 ⊢ R n n1"
                },
                {
                    "args": "m, m1, n, n1",
                    "id": "6.6",
                    "prevs": [
                        "0",
                        "6.4",
                        "6.5"
                    ],
                    "rule": "apply_fact_for",
                    "th": "finite s, R m m1, R n n1, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (m + n) (m1 + n1)"
                },
                {
                    "args": "",
                    "id": "6.7",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.2",
                        "6.3",
                        "6.4",
                        "6.5",
                        "6.6"
                    ],
                    "rule": "intros",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ ∀m. ∀n. ∀m1. ∀n1. R m m1 ⟶ R n n1 ⟶ R (m + n) (m1 + n1)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (iterate plus s f) (iterate plus s g)"
                },
                {
                    "args": "sum_def, R (sum s f) (sum s g)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅), ∀x. x ∈ s ⟶ R (f x) (g x), ∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1) ⊢ R (sum s f) (sum s g)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (sum s f) (sum s g)"
                }
            ],
            "prop": [
                "(∀m. ∀n. ∀m1. ∀n1. R m n ⟶ R m1 n1 ⟶ R (m + m1) (n + n1)) ",
                "⟶ finite s ⟶ ¬(s = ∅) ⟶ (∀x. x ∈ s ⟶ R (f x) (g x)) ⟶ R (sum s f) (sum s g)"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_R": "R",
                    "param_f": "f",
                    "param_g": "g",
                    "param_op": "(plus::real=>real=>real)",
                    "param_s": "s",
                    "theorem": "iterate_related_nonempty"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "m,n,m1,n1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "real ⇒ real ⇒ bool",
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_of_nat_sum_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite ({i. i ∈ s ∧ ¬(f i = 0)})",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ finite ({i. i ∈ s ∧ ¬(f i = 0)})"
                },
                {
                    "args": "real_of_nat_sum, {f: f, s: {x. x ∈ s ∧ ¬(f x = 0)}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬(f x = 0)}) (λx. of_nat (f x))"
                },
                {
                    "args": "real_of_nat_eq, of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = of_nat 0)}) (λx. of_nat (f x))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = of_nat 0)}) (λx. of_nat (f x))"
                },
                {
                    "args": "real_zero_def, of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬(of_nat (f x) = (0::real))}) (λx. of_nat (f x))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬(of_nat (f x) = (0::real))}) (λx. of_nat (f x))"
                },
                {
                    "args": "neutral_real_add, of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = neutral plus)}) (λx. of_nat (f x))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum ({x. x ∈ s ∧ ¬(f x = 0)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = neutral plus)}) (λx. of_nat (f x))"
                },
                {
                    "args": "neutral_nat_add, of_nat (nsum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = neutral plus)}) (λx. of_nat (f x))",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum ({x. x ∈ s ∧ ¬(f x = neutral plus)}) f) = sum ({x. x ∈ s ∧ ¬((of_nat::nat ⇒ real) (f x) = neutral plus)}) (λx. of_nat (f x))"
                },
                {
                    "args": "support_def, of_nat (nsum (support plus f s) f) = sum (support plus (λx. (of_nat::nat ⇒ real) (f x)) s) (λx. of_nat (f x))",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum (support plus f s) f) = sum (support plus (λx. (of_nat::nat ⇒ real) (f x)) s) (λx. of_nat (f x))"
                },
                {
                    "args": "nsum_support, of_nat (nsum s f) = sum (support plus (λx. (of_nat::nat ⇒ real) (f x)) s) (λx. of_nat (f x))",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum s f) = sum (support plus (λx. (of_nat::nat ⇒ real) (f x)) s) (λx. of_nat (f x))"
                },
                {
                    "args": "sum_support, of_nat (nsum s f) = sum s (λx. of_nat (f x))",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⊢ of_nat (nsum s f) = sum s (λx. of_nat (f x))"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⟶ of_nat (nsum s f) = sum s (λx. of_nat (f x))"
                }
            ],
            "prop": "finite ({i. i ∈ s ∧ ¬(f i = 0)}) ⟶ of_nat (nsum s f) = sum s (λx. of_nat (f x))",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_support"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_support"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "support_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_nat_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_of_nat_sum"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ nat",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_add_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "sum_add, {f: f, g: g, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({m..n}) (λx. f x + g x) = sum ({m..n}) f + sum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λi. f i + g i) = sum ({m..n}) f + sum ({m..n}) g"
                }
            ],
            "prop": "sum ({m..n}) (λi. f i + g i) = sum ({m..n}) f + sum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_sub_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "sum_sub, {f: f, g: g, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({m..n}) (λx. f x - g x) = sum ({m..n}) f - sum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λi. f i - g i) = sum ({m..n}) f - sum ({m..n}) g"
                }
            ],
            "prop": "sum ({m..n}) (λi. f i - g i) = sum ({m..n}) f - sum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_sub"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_le_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i"
                },
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀x. m ≤ x ∧ x ≤ n ⟶ f x ≤ g x"
                },
                {
                    "args": "i, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i ∧ i ≤ n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ i ∧ i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "2.4",
                    "prevs": [
                        "0",
                        "2.2",
                        "2.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "m ≤ i ∧ i ≤ n, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ f i ≤ g i"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.4"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀i. m ≤ i ∧ i ≤ n ⟶ f i ≤ g i"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n} ⟶ f x ≤ g x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ ∀x. x ∈ {m..n} ⟶ f x ≤ g x"
                },
                {
                    "args": "sum_le",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i ⊢ sum ({m..n}) f ≤ sum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i) ⟶ sum ({m..n}) f ≤ sum ({m..n}) g"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i ≤ g i) ⟶ sum ({m..n}) f ≤ sum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_eq_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀x. x ∈ {m..n} ⟶ f x = g x"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "i ∈ {m..n}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ∈ {m..n} ⊢ i ∈ {m..n}"
                },
                {
                    "args": "member_natseg",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "i ∈ {m..n} ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ∈ {m..n} ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "1.4",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ∈ {m..n} ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "1.5",
                    "prevs": [
                        "0",
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "i ∈ {m..n}, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ f i = g i"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ ∀i. i ∈ {m..n} ⟶ f i = g i"
                },
                {
                    "args": "sum_eq",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i ⊢ sum ({m..n}) f = sum ({m..n}) g"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i) ⟶ sum ({m..n}) f = sum ({m..n}) g"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i = g i) ⟶ sum ({m..n}) f = sum ({m..n}) g",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_abs_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "sum_abs, {f: f, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (sum ({m..n}) f) ≤ sum ({m..n}) (λx. abs (f x))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (sum ({m..n}) f) ≤ sum ({m..n}) (λi. abs (f i))"
                }
            ],
            "prop": "abs (sum ({m..n}) f) ≤ sum ({m..n}) (λi. abs (f i))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_abs"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_const_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "sum_const, {c: c}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({m..n}) (λn1. c) = of_nat (card ({m..n})) * c"
                },
                {
                    "args": "card_natseg",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({m..n}) (λn1. c) = of_nat (n + 1 - m) * c"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λn1. c) = of_nat (n + 1 - m) * c"
                }
            ],
            "prop": "sum ({m..n}) (λn1. c) = of_nat (n + 1 - m) * c",
            "steps": [
                {
                    "goal": "finite {m..n}",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_c": "c",
                    "theorem": "sum_const"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "card_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_eq_0_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀x. x ∈ {m..n} ⟶ f x = 0"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "i ∈ {m..n}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ∈ {m..n} ⊢ i ∈ {m..n}"
                },
                {
                    "args": "member_natseg",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "i ∈ {m..n} ⊢ m ≤ i ∧ i ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ∈ {m..n} ⊢ m ≤ i"
                },
                {
                    "args": "conjD2",
                    "id": "1.4",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ∈ {m..n} ⊢ i ≤ n"
                },
                {
                    "args": "i",
                    "id": "1.5",
                    "prevs": [
                        "0",
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "i ∈ {m..n}, ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ f i = 0"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ ∀i. i ∈ {m..n} ⟶ f i = 0"
                },
                {
                    "args": "sum_eq_0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0 ⊢ sum ({m..n}) f = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0) ⟶ sum ({m..n}) f = 0"
                }
            ],
            "prop": "(∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0) ⟶ sum ({m..n}) f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_triv_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "n < m",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n < m ⊢ n < m"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n < m ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "i, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "m ≤ i",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ i ⊢ m ≤ i"
                },
                {
                    "args": "i ≤ n",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n < m, i ≤ n, m ≤ i ⊢ ¬(f i = 0) ⟶ ¬(n < m)"
                },
                {
                    "args": "¬(f i = 0)",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(f i = 0) ⊢ ¬(f i = 0)"
                },
                {
                    "args": "less_eq_trans",
                    "id": "1.3.1",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ≤ n, m ≤ i ⊢ m ≤ n"
                },
                {
                    "args": "not_lt, ¬(n < m)",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n < m, i ≤ n, m ≤ i, ¬(f i = 0) ⊢ ¬(n < m)"
                },
                {
                    "args": "",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.2"
                    ],
                    "rule": "intros",
                    "th": "n < m, i ≤ n, m ≤ i ⊢ ¬(f i = 0) ⟶ ¬(n < m)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.4",
                    "prevs": [
                        "0",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "n < m, i ≤ n, m ≤ i ⊢ f i = 0"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "n < m ⊢ ∀i. m ≤ i ⟶ i ≤ n ⟶ f i = 0"
                },
                {
                    "args": "sum_eq_0_natseg",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "n < m ⊢ sum ({m..n}) f = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ n < m ⟶ sum ({m..n}) f = 0"
                }
            ],
            "prop": "n < m ⟶ sum ({m..n}) f = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_eq_0_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_lt"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.2"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_trans"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_pos_le_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀x. x ∈ {m..n} ⟶ 0 ≤ f x"
                },
                {
                    "args": "p, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "p ∈ {m..n}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ∈ {m..n} ⊢ p ∈ {m..n}"
                },
                {
                    "args": "member_natseg",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ∈ {m..n} ⊢ m ≤ p ∧ p ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ∈ {m..n} ⊢ m ≤ p"
                },
                {
                    "args": "conjD2",
                    "id": "1.4",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ∈ {m..n} ⊢ p ≤ n"
                },
                {
                    "args": "p",
                    "id": "1.5",
                    "prevs": [
                        "0",
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "p ∈ {m..n}, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ 0 ≤ f p"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. p ∈ {m..n} ⟶ 0 ≤ f p"
                },
                {
                    "args": "sum_pos_le",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ 0 ≤ sum ({m..n}) f"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p) ⟶ 0 ≤ sum ({m..n}) f"
                }
            ],
            "prop": "(∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p) ⟶ 0 ≤ sum ({m..n}) f",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_pos_eq_0_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p"
                },
                {
                    "args": "sum ({m..n}) f = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum ({m..n}) f = 0 ⊢ sum ({m..n}) f = 0"
                },
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀x. x ∈ {m..n} ⟶ 0 ≤ f x"
                },
                {
                    "args": "p, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "p ∈ {m..n}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ∈ {m..n} ⊢ p ∈ {m..n}"
                },
                {
                    "args": "member_natseg",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ∈ {m..n} ⊢ m ≤ p ∧ p ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ∈ {m..n} ⊢ m ≤ p"
                },
                {
                    "args": "conjD2",
                    "id": "3.4",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ∈ {m..n} ⊢ p ≤ n"
                },
                {
                    "args": "p",
                    "id": "3.5",
                    "prevs": [
                        "0",
                        "3.3",
                        "3.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "p ∈ {m..n}, sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ 0 ≤ f p"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. p ∈ {m..n} ⟶ 0 ≤ f p"
                },
                {
                    "args": "sum_pos_eq_0",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀x. x ∈ {m..n} ⟶ f x = 0"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. m ≤ p ⟶ p ≤ n ⟶ f p = 0"
                },
                {
                    "args": "p, nat",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "m ≤ p",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ p ⊢ m ≤ p"
                },
                {
                    "args": "p ≤ n",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ n ⊢ p ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "5.3",
                    "prevs": [
                        "5.1",
                        "5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ p, p ≤ n, sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ m ≤ p ∧ p ≤ n"
                },
                {
                    "args": "member_natseg, p ∈ {m..n}",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ p, p ≤ n, sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ p ∈ {m..n}"
                },
                {
                    "args": "p",
                    "id": "5.5",
                    "prevs": [
                        "4",
                        "5.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "m ≤ p, p ≤ n, sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ f p = 0"
                },
                {
                    "args": "",
                    "id": "5.6",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2",
                        "5.5"
                    ],
                    "rule": "intros",
                    "th": "sum ({m..n}) f = 0, ∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p ⊢ ∀p. m ≤ p ⟶ p ≤ n ⟶ f p = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p) ⟶ sum ({m..n}) f = 0 ⟶ (∀p. m ≤ p ⟶ p ≤ n ⟶ f p = 0)"
                }
            ],
            "prop": [
                "(∀p. m ≤ p ⟶ p ≤ n ⟶ 0 ≤ f p) ",
                "⟶ sum ({m..n}) f = 0 ⟶ (∀p. m ≤ p ⟶ p ≤ n ⟶ f p = 0)"
            ],
            "steps": [
                {
                    "goal": "(∀x. x ∈ {m..n} ⟶ f x = 0)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_pos_eq_0"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5.3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "5.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "5.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_sing_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_sing, sum ({n}) f = f n",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({n}) f = f n"
                },
                {
                    "args": "natseg_sing, sum ({n..n}) f = f n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({n..n}) f = f n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({n..n}) f = f n"
                }
            ],
            "prop": "sum ({n..n}) f = f n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_sing"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_0_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "iterate_natseg_0, {f: f, m: m, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ iterate plus ({m..0}) f = (if m = 0 then f 0 else neutral plus)"
                },
                {
                    "args": "neutral_real_add",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ iterate plus ({m..0}) f = (if m = 0 then f 0 else 0)"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ iterate plus ({m..0}) f = (if m = 0 then f 0 else 0)"
                },
                {
                    "args": "sum_def, sum ({m..0}) f = (if m = 0 then f 0 else 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m..0}) f = (if m = 0 then f 0 else 0)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..0}) f = (if m = 0 then f 0 else 0)"
                }
            ],
            "prop": "sum ({m..0}) f = (if m = 0 then f 0 else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_m": "m",
                    "param_op": "(plus::real=>real=>real)",
                    "theorem": "iterate_natseg_0"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_Suc_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_natseg_Suc, {f: f, m: m, n: n, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({m..Suc n}) f = (if m ≤ Suc n then iterate plus ({m..n}) f + f (Suc n) else iterate plus ({m..n}) f)"
                },
                {
                    "args": "sum_def, sum ({m..Suc n}) f = (if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m..Suc n}) f = (if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..Suc n}) f = (if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f)"
                }
            ],
            "prop": [
                "sum ({m..Suc n}) f = ",
                "(if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_0_natseg_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_empty, sum ∅ f = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ∅ f = 0"
                },
                {
                    "args": "natseg_clauses_lt_1, sum ({i. i < 0}) f = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({i. i < 0}) f = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({i. i < 0}) f = 0"
                }
            ],
            "prop": "sum ({i. i < 0}) f = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_clauses_lt_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_empty"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_Suc_natseg_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_natseg_Suc_lt, {f: f, k: k, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({i. i < Suc k}) f = iterate plus ({i. i < k}) f + f k"
                },
                {
                    "args": "sum_def, sum ({i. i < Suc k}) f = sum ({i. i < k}) f + f k",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({i. i < Suc k}) f = sum ({i. i < k}) f + f k"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({i. i < Suc k}) f = sum ({i. i < k}) f + f k"
                }
            ],
            "prop": "sum ({i. i < Suc k}) f = sum ({i. i < k}) f + f k",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc_lt"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "k": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_0_natseg_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_natseg_0_le, {f: f, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({i. i ≤ 0}) f = f 0"
                },
                {
                    "args": "sum_def, sum ({i. i ≤ 0}) f = f 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({i. i ≤ 0}) f = f 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({i. i ≤ 0}) f = f 0"
                }
            ],
            "prop": "sum ({i. i ≤ 0}) f = f 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_0_le"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_Suc_natseg_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_natseg_Suc_le, {f: f, k: k, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({i. i ≤ Suc k}) f = iterate plus ({i. i ≤ k}) f + f (Suc k)"
                },
                {
                    "args": "sum_def, sum ({i. i ≤ Suc k}) f = sum ({i. i ≤ k}) f + f (Suc k)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({i. i ≤ Suc k}) f = sum ({i. i ≤ k}) f + f (Suc k)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({i. i ≤ Suc k}) f = sum ({i. i ≤ k}) f + f (Suc k)"
                }
            ],
            "prop": "sum ({i. i ≤ Suc k}) f = sum ({i. i ≤ k}) f + f (Suc k)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_natseg_Suc_le"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "k": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_swap_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: a, n: b}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({a..b})"
                },
                {
                    "args": "finite_natseg, {m: c, n: d}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({c..d})"
                },
                {
                    "args": "sum_swap, {f: f, s: {a..b}, t: {c..d}}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({a..b}) (λi. sum ({c..d}) (f i)) = sum ({c..d}) (λj. sum ({a..b}) (λi. f i j))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({a..b}) (λi. sum ({c..d}) (f i)) = sum ({c..d}) (λj. sum ({a..b}) (λi. f i j))"
                }
            ],
            "prop": [
                "sum ({a..b}) (λi. sum ({c..d}) (f i)) = ",
                "sum ({c..d}) (λj. sum ({a..b}) (λi. f i j))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_swap"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat",
                "d": "nat",
                "f": "nat ⇒ nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_add_split",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n + 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n + 1 ⊢ m ≤ n + 1"
                },
                {
                    "args": "natseg_add_split, {p: p}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ {m..n + p} = {m..n} ∪ {n + 1..n + p}"
                },
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "finite_natseg, {m: n + 1, n: n + p}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({n + 1..n + p})"
                },
                {
                    "args": "n < n + 1",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n < n + 1"
                },
                {
                    "args": "disjI1, {A: n < n + 1, B: n + p < m ∨ n < m ∨ n + p < n + 1}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ n < n + 1 ∨ n + p < m ∨ n < m ∨ n + p < n + 1"
                },
                {
                    "args": "disjoint_natseg, disjoint ({m..n}) ({n + 1..n + p})",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n + 1 ⊢ disjoint ({m..n}) ({n + 1..n + p})"
                },
                {
                    "args": "sum_union, {f: f, s: {m..n}, t: {n + 1..n + p}}",
                    "id": "7",
                    "prevs": [
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n + 1 ⊢ sum ({m..n} ∪ {n + 1..n + p}) f = sum ({m..n}) f + sum ({n + 1..n + p}) f"
                },
                {
                    "args": "sum ({m..n + p}) f = sum ({m..n}) f + sum ({n + 1..n + p}) f",
                    "id": "8",
                    "prevs": [
                        "1",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n + 1 ⊢ sum ({m..n + p}) f = sum ({m..n}) f + sum ({n + 1..n + p}) f"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n + 1 ⟶ sum ({m..n + p}) f = sum ({m..n}) f + sum ({n + 1..n + p}) f"
                }
            ],
            "prop": "m ≤ n + 1 ⟶ sum ({m..n + p}) f = sum ({m..n}) f + sum ({n + 1..n + p}) f",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_p": "p",
                    "theorem": "natseg_add_split"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_union"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disjoint_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_offset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_image, {f: λi. i + p, g: f, s: {m..n}}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y) ⟶ sum (image (λi. i + p) ({m..n})) f = sum ({m..n}) (f ∘ (λi. i + p))"
                },
                {
                    "args": "comp_fun_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y) ⟶ sum (image (λi. i + p) ({m..n})) f = sum ({m..n}) (λx. f (x + p))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y"
                },
                {
                    "args": "x, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, nat",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "x ∈ {m..n}",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {m..n} ⊢ x ∈ {m..n}"
                },
                {
                    "args": "y ∈ {m..n}",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ {m..n} ⊢ y ∈ {m..n}"
                },
                {
                    "args": "x + p = y + p",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + p = y + p ⊢ x + p = y + p"
                },
                {
                    "args": "add_cancel_right",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x + p = y + p ⊢ x = y"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.4",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀y. x ∈ {m..n} ⟶ y ∈ {m..n} ⟶ x + p = y + p ⟶ x = y"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ sum (image (λi. i + p) ({m..n})) f = sum ({m..n}) (λx. f (x + p))"
                },
                {
                    "args": "natseg_offset_image, sum ({m + p..n + p}) f = sum ({m..n}) (λi. f (i + p))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m + p..n + p}) f = sum ({m..n}) (λi. f (i + p))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m + p..n + p}) f = sum ({m..n}) (λi. f (i + p))"
                }
            ],
            "prop": "sum ({m + p..n + p}) f = sum ({m..n}) (λi. f (i + p))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "natseg_offset_image"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. i + p)",
                    "param_g": "f",
                    "param_s": "{m..n}",
                    "theorem": "sum_image"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "comp_fun_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x,y"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "add_cancel_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_offset_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "sub_add",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ⊢ n - m + m = n"
                },
                {
                    "args": "sum ({m..n}) f = sum ({m..n - m + m}) f",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n ⊢ sum ({m..n}) f = sum ({m..n - m + m}) f"
                },
                {
                    "args": "nat_plus_def_1, sum ({m..n}) f = sum ({0 + m..n - m + m}) f",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ sum ({m..n}) f = sum ({0 + m..n - m + m}) f"
                },
                {
                    "args": "sum_offset, sum ({m..n}) f = sum ({0..n - m}) (λi. f (i + m))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "m ≤ n ⊢ sum ({m..n}) f = sum ({0..n - m}) (λi. f (i + m))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n ⟶ sum ({m..n}) f = sum ({0..n - m}) (λi. f (i + m))"
                }
            ],
            "prop": "m ≤ n ⟶ sum ({m..n}) f = sum ({0..n - m}) (λi. f (i + m))",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sum_offset"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "goal": "n - m + m = n",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_add"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sum_clauses_left",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "natseg_lrec",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ⊢ {m..n} = insert m ({m + 1..n})"
                },
                {
                    "args": "finite_natseg, {m: m + 1, n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m + 1..n})"
                },
                {
                    "args": "sum_insert, {f: f, x: m}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum (insert m ({m + 1..n})) f = (if m ∈ {m + 1..n} then sum ({m + 1..n}) f else f m + sum ({m + 1..n}) f)"
                },
                {
                    "args": "¬(m + 1 ≤ m)",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬(m + 1 ≤ m)"
                },
                {
                    "args": "disjI1, {A: ¬(m + 1 ≤ m), B: ¬(m ≤ n)}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m ≤ n ⊢ ¬(m + 1 ≤ m) ∨ ¬(m ≤ n)"
                },
                {
                    "args": "de_morgan_thm1, ¬(m + 1 ≤ m ∧ m ≤ n)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ ¬(m + 1 ≤ m ∧ m ≤ n)"
                },
                {
                    "args": "member_natseg, ¬(m ∈ {m + 1..n})",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ n ⊢ ¬(m ∈ {m + 1..n})"
                },
                {
                    "args": "if_not_P",
                    "id": "8",
                    "prevs": [
                        "3",
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ≤ n ⊢ sum (insert m ({m + 1..n})) f = f m + sum ({m + 1..n}) f"
                },
                {
                    "args": "sum ({m..n}) f = f m + sum ({m + 1..n}) f",
                    "id": "9",
                    "prevs": [
                        "1",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n ⊢ sum ({m..n}) f = f m + sum ({m + 1..n}) f"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n ⟶ sum ({m..n}) f = f m + sum ({m + 1..n}) f"
                }
            ],
            "prop": "m ≤ n ⟶ sum ({m..n}) f = f m + sum ({m + 1..n}) f",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "natseg_lrec"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "finite {m + 1..n}",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_x": "m",
                    "theorem": "sum_insert"
                },
                {
                    "goal": "~(m ∈ {m + 1..n})",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3",
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_clauses_right",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (0::nat) < 0 ⟶ m ≤ 0 ⟶ sum ({m..0}) f = sum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "(0::nat) < 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) < 0 ⊢ (0::nat) < 0"
                },
                {
                    "args": "m ≤ 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ 0 ⊢ m ≤ 0"
                },
                {
                    "args": "sum ({m..0}) f = sum ({m..0 - 1}) f + f 0",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "(0::nat) < 0 ⊢ sum ({m..0}) f = sum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (0::nat) < 0 ⟶ m ≤ 0 ⟶ sum ({m..0}) f = sum ({m..0 - 1}) f + f 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n) ⟶ 0 < Suc n ⟶ m ≤ Suc n ⟶ sum ({m..Suc n}) f = sum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n ⊢ 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n"
                },
                {
                    "args": "0 < Suc n",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < Suc n ⊢ 0 < Suc n"
                },
                {
                    "args": "m ≤ Suc n",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ Suc n ⊢ m ≤ Suc n"
                },
                {
                    "args": "if_P, (if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f) = sum ({m..n}) f + f (Suc n)",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ Suc n ⊢ (if m ≤ Suc n then sum ({m..n}) f + f (Suc n) else sum ({m..n}) f) = sum ({m..n}) f + f (Suc n)"
                },
                {
                    "args": "sum_Suc_natseg, sum ({m..Suc n}) f = sum ({m..n}) f + f (Suc n)",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < Suc n, m ≤ Suc n, 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n ⊢ sum ({m..Suc n}) f = sum ({m..n}) f + f (Suc n)"
                },
                {
                    "args": "suc_sub1, sum ({m..Suc n}) f = sum ({m..Suc n - 1}) f + f (Suc n)",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < Suc n, m ≤ Suc n, 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n ⊢ sum ({m..Suc n}) f = sum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n) ⟶ 0 < Suc n ⟶ m ≤ Suc n ⟶ sum ({m..Suc n}) f = sum ({m..Suc n - 1}) f + f (Suc n)"
                },
                {
                    "args": "nat_induct, {P: λn. 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n, x: n}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n"
                }
            ],
            "prop": "0 < n ⟶ m ≤ n ⟶ sum ({m..n}) f = sum ({m..n - 1}) f + f n",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "revert_intro"
                },
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "suc_sub1"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_Suc_natseg"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_pair",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "monoidal_real_add",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "iterate_pair, {f: f, m: m, n: n, op: (plus::real ⇒ real ⇒ real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ iterate plus ({2 * m..2 * n + 1}) f = iterate plus ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "sum_def, sum ({2 * m..2 * n + 1}) f = sum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({2 * m..2 * n + 1}) f = sum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({2 * m..2 * n + 1}) f = sum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))"
                }
            ],
            "prop": "sum ({2 * m..2 * n + 1}) f = sum ({m..n}) (λi. f (2 * i) + f (2 * i + 1))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iterate_pair"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_reflect",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "iterate_reflect, {m: m, n: n, op: (plus::real ⇒ real ⇒ real), x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ iterate plus ({m..n}) x = (if n < m then neutral plus else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "neutral_real_add",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real) ⟶ iterate plus ({m..n}) x = (if n < m then 0 else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "monoidal_real_add",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ monoidal (plus::real ⇒ real ⇒ real)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ iterate plus ({m..n}) x = (if n < m then 0 else iterate plus ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "sum_def, sum ({m..n}) x = (if n < m then 0 else sum ({0..n - m}) (λi. x (n - i)))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m..n}) x = (if n < m then 0 else sum ({0..n - m}) (λi. x (n - i)))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) x = (if n < m then 0 else sum ({0..n - m}) (λi. x (n - i)))"
                }
            ],
            "prop": "sum ({m..n}) x = (if n < m then 0 else sum ({0..n - m}) (λi. x (n - i)))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_m": "m",
                    "param_n": "n",
                    "param_op": "(plus::real=>real=>real)",
                    "param_x": "x",
                    "theorem": "iterate_reflect"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neutral_real_add"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "monoidal_real_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_sum_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "real_of_nat_sum, {f: f, s: {m..n}}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ of_nat (nsum ({m..n}) f) = sum ({m..n}) (λx. of_nat (f x))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ of_nat (nsum ({m..n}) f) = sum ({m..n}) (λi. of_nat (f i))"
                }
            ],
            "prop": "of_nat (nsum ({m..n}) f) = sum ({m..n}) (λi. of_nat (f i))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_of_nat_sum"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_partial_Suc",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ m ≤ 0 ⟶ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "m ≤ 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ 0 ⊢ m ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m ≤ 0 ⊢ m = 0 ⟶ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "m = 0",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ⊢ m = 0"
                },
                {
                    "args": "f 0 * (g 1 - g 0) = f 1 * g 1 - f 0 * g 0 - g 1 * (f 1 - f 0)",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ f 0 * (g 1 - g 0) = f 1 * g 1 - f 0 * g 0 - g 1 * (f 1 - f 0)"
                },
                {
                    "args": "f 0 * (g 1 - g 0) = f 1 * g 1 - f m * g m - g 1 * (f 1 - f 0)",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = 0, m ≤ 0 ⊢ f 0 * (g 1 - g 0) = f 1 * g 1 - f m * g m - g 1 * (f 1 - f 0)"
                },
                {
                    "args": "nat_plus_def_1, f 0 * (g (0 + 1) - g 0) = f (0 + 1) * g (0 + 1) - f m * g m - g (0 + 1) * (f (0 + 1) - f 0)",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = 0, m ≤ 0 ⊢ f 0 * (g (0 + 1) - g 0) = f (0 + 1) * g (0 + 1) - f m * g m - g (0 + 1) * (f (0 + 1) - f 0)"
                },
                {
                    "args": "if_P, (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3",
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = 0, m ≤ 0 ⊢ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "m ≤ 0 ⊢ m = 0 ⟶ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m ≤ 0 ⊢ ¬(m = 0) ⟶ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "¬(m = 0)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⊢ ¬(m = 0)"
                },
                {
                    "args": "(if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0",
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "m ≤ 0, ¬(m = 0) ⊢ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "m ≤ 0 ⊢ ¬(m = 0) ⟶ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ 0 ⊢ (if m = 0 then f 0 * (g (0 + 1) - g 0) else 0) = f (0 + 1) * g (0 + 1) - f m * g m - (if m = 0 then g (0 + 1) * (f (0 + 1) - f 0) else 0)"
                },
                {
                    "args": "sum_0_natseg, sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k))",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ 0 ⊢ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k))"
                },
                {
                    "args": "if_P, sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)",
                    "id": "0.5",
                    "prevs": [
                        "0.4",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ 0 ⊢ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ 0 ⟶ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(m ≤ 0) ⟶ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "¬(m ≤ 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m ≤ 0) ⊢ ¬(m ≤ 0)"
                },
                {
                    "args": "not_le",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(m ≤ 0) ⊢ 0 < m"
                },
                {
                    "args": "sum_triv_natseg, {f: λk. f k * (g (k + 1) - g k), m: m, n: (0::nat)}",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m ≤ 0) ⊢ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = 0"
                },
                {
                    "args": "if_not_P, sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)",
                    "id": "1.3",
                    "prevs": [
                        "1.2",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m ≤ 0) ⊢ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(m ≤ 0) ⟶ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ sum ({m..0}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ 0 then f (0 + 1) * g (0 + 1) - f m * g m - sum ({m..0}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m ≤ Suc n ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "m ≤ Suc n",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ Suc n ⊢ m ≤ Suc n"
                },
                {
                    "args": "nat_less_eq_def_2",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ≤ Suc n ⊢ m = Suc n ∨ m ≤ n"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m = Suc n ⟶ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "m = Suc n",
                    "id": "3.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = Suc n ⊢ m = Suc n"
                },
                {
                    "args": "eq_refl, {x: n}",
                    "id": "3.2.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n = n"
                },
                {
                    "args": "disjI1, {A: n = n, B: n < n}",
                    "id": "3.2.2.2",
                    "prevs": [
                        "3.2.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ n = n ∨ n < n"
                },
                {
                    "args": "nat_less_def_2, n < Suc n",
                    "id": "3.2.2.3",
                    "prevs": [
                        "3.2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ n < Suc n"
                },
                {
                    "args": "sum_triv_natseg, {f: λk. f k * (g (k + 1) - g k)}",
                    "id": "3.2.2.4",
                    "prevs": [
                        "3.2.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({Suc n..n}) (λk. f k * (g (k + 1) - g k)) = 0"
                },
                {
                    "args": "sum_triv_natseg, {f: λk. g (k + 1) * (f (k + 1) - f k)}",
                    "id": "3.2.2.5",
                    "prevs": [
                        "3.2.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({Suc n..n}) (λk. g (k + 1) * (f (k + 1) - f k)) = 0"
                },
                {
                    "args": "0 + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (0 + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.2.6",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ 0 + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (0 + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "0 + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (sum ({Suc n..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.2.7",
                    "prevs": [
                        "3.2.2.5",
                        "3.2.2.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ 0 + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (sum ({Suc n..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "sum ({Suc n..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (sum ({Suc n..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.2.8",
                    "prevs": [
                        "3.2.2.4",
                        "3.2.2.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({Suc n..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f (Suc n) * g (Suc n) - (sum ({Suc n..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.2.9",
                    "prevs": [
                        "3.2.2.0",
                        "3.2.2.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = Suc n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "",
                    "id": "3.2.2.10",
                    "prevs": [
                        "3.2.2.0",
                        "3.2.2.9"
                    ],
                    "rule": "intros",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m = Suc n ⟶ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "",
                    "id": "3.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m ≤ n ⟶ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "m ≤ n",
                    "id": "3.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "if_P",
                    "id": "3.2.3.1",
                    "prevs": [
                        "3.1",
                        "3.2.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ≤ n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k))"
                },
                {
                    "args": "f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + f (n + 1) * (g (n + 1 + 1) - g (n + 1)) = f (n + 1 + 1) * g (n + 1 + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (n + 1 + 1) * (f (n + 1 + 1) - f (n + 1)))",
                    "id": "3.2.3.2",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + f (n + 1) * (g (n + 1 + 1) - g (n + 1)) = f (n + 1 + 1) * g (n + 1 + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (n + 1 + 1) * (f (n + 1 + 1) - f (n + 1)))"
                },
                {
                    "args": "add_1_right, f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.3.3",
                    "prevs": [
                        "3.2.3.2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "m ≤ n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))",
                    "id": "3.2.3.4",
                    "prevs": [
                        "3.2.3.1",
                        "3.2.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m ≤ n, m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "",
                    "id": "3.2.3.5",
                    "prevs": [
                        "3.2.3.0",
                        "3.2.3.4"
                    ],
                    "rule": "intros",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m ≤ n ⟶ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "disjE",
                    "id": "3.2.4",
                    "prevs": [
                        "3.2.1",
                        "3.2.2",
                        "3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)))"
                },
                {
                    "args": "if_P, (if m ≤ Suc n then sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) else sum ({m..n}) (λk. f k * (g (k + 1) - g k))) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (if m ≤ Suc n then sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)) else sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)))",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.4",
                        "3.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ (if m ≤ Suc n then sum ({m..n}) (λk. f k * (g (k + 1) - g k)) + f (Suc n) * (g (Suc n + 1) - g (Suc n)) else sum ({m..n}) (λk. f k * (g (k + 1) - g k))) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - (if m ≤ Suc n then sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) + g (Suc n + 1) * (f (Suc n + 1) - f (Suc n)) else sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)))"
                },
                {
                    "args": "sum_Suc_natseg, sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k))",
                    "id": "3.2.6",
                    "prevs": [
                        "3.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k))"
                },
                {
                    "args": "if_P, sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)",
                    "id": "3.2.7",
                    "prevs": [
                        "3.2.6",
                        "3.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m ≤ Suc n, sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3.2.8",
                    "prevs": [
                        "3.2.0",
                        "3.2.7"
                    ],
                    "rule": "intros",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ m ≤ Suc n ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ ¬(m ≤ Suc n) ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "¬(m ≤ Suc n)",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m ≤ Suc n) ⊢ ¬(m ≤ Suc n)"
                },
                {
                    "args": "not_le",
                    "id": "3.3.1",
                    "prevs": [
                        "3.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(m ≤ Suc n) ⊢ Suc n < m"
                },
                {
                    "args": "sum_triv_natseg, {f: λk. f k * (g (k + 1) - g k), m: m, n: Suc n}",
                    "id": "3.3.2",
                    "prevs": [
                        "3.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m ≤ Suc n), sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = 0"
                },
                {
                    "args": "if_not_P, sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)",
                    "id": "3.3.3",
                    "prevs": [
                        "3.3.2",
                        "3.3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m ≤ Suc n), sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.0",
                        "3.3.3"
                    ],
                    "rule": "intros",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ ¬(m ≤ Suc n) ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "3.4",
                    "prevs": [
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⊢ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0) ⟶ sum ({m..Suc n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ Suc n then f (Suc n + 1) * g (Suc n + 1) - f m * g m - sum ({m..Suc n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "nat_induct, {P: λn. sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = (if m ≤ n then f (n + 1) * g (n + 1) - f m * g m - sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k)) else 0)"
                }
            ],
            "prop": [
                "sum ({m..n}) (λk. f k * (g (k + 1) - g k)) = ",
                "(if m ≤ n then ",
                "   f (n + 1) * g (n + 1) - f m * g m - ",
                "   sum ({m..n}) (λk. g (k + 1) * (f (k + 1) - f k))",
                " else ",
                "   0)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "case": "m ≤ 0 ",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_0_natseg"
                },
                {
                    "case": "m = 0",
                    "goal_id": "0.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0",
                        "0.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_triv_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "case": "m ≤ Suc n",
                    "goal_id": "3.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_Suc_natseg"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_2"
                },
                {
                    "fact_ids": [
                        "3.2.1"
                    ],
                    "goal_id": "3.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.2.0"
                    ],
                    "goal_id": "3.2.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "n < Suc n",
                    "goal_id": "3.2.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_def_2"
                },
                {
                    "goal_id": "3.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "3.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "3.2.2.3"
                    ],
                    "goal_id": "3.2.2.4",
                    "method_name": "apply_forward_step",
                    "param_f": "(λk. f k * (g (k + 1) - g k))",
                    "theorem": "sum_triv_natseg"
                },
                {
                    "fact_ids": [
                        "3.2.2.3"
                    ],
                    "goal_id": "3.2.2.5",
                    "method_name": "apply_forward_step",
                    "param_f": "(λk. g (k + 1) * (f (k + 1) - f k))",
                    "theorem": "sum_triv_natseg"
                },
                {
                    "fact_ids": [
                        "3.2.2.4"
                    ],
                    "goal_id": "3.2.2.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.2.2.5"
                    ],
                    "goal_id": "3.2.2.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.2.6",
                    "method_name": "real_norm"
                },
                {
                    "goal_id": "3.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1",
                        "3.2.3.0"
                    ],
                    "goal_id": "3.2.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "3.2.3.1"
                    ],
                    "goal_id": "3.2.3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.3.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "3.2.3.2",
                    "method_name": "real_norm"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_triv_natseg"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_partial_Pre",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_partial_Suc, {f: f, g: λk. g (k - 1), m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({m..n}) (λk. f k * (g (k + 1 - 1) - g (k - 1))) = (if m ≤ n then f (n + 1) * g (n + 1 - 1) - f m * g (m - 1) - sum ({m..n}) (λk. g (k + 1 - 1) * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "nat_plus_minus",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({m..n}) (λk. f k * (g k - g (k - 1))) = (if m ≤ n then f (n + 1) * g n - f m * g (m - 1) - sum ({m..n}) (λk. g k * (f (k + 1) - f k)) else 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λk. f k * (g k - g (k - 1))) = (if m ≤ n then f (n + 1) * g n - f m * g (m - 1) - sum ({m..n}) (λk. g k * (f (k + 1) - f k)) else 0)"
                }
            ],
            "prop": [
                "sum ({m..n}) (λk. f k * (g k - g (k - 1))) = ",
                "(if m ≤ n then ",
                "   f (n + 1) * g n - f m * g (m - 1) - sum ({m..n}) (λk. g k * (f (k + 1) - f k))",
                " else ",
                "   0)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_g": "(%k. g(k - 1))",
                    "param_m": "m",
                    "param_n": "n",
                    "theorem": "sum_partial_Suc"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_plus_minus"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "g": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_diffs",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀a::real. ∀b. a - b = -1 * (b - a)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. a - b = -1 * (b - a)"
                },
                {
                    "args": "(if m ≤ n then -1 * f (n + 1) - -1 * f m else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (if m ≤ n then -1 * f (n + 1) - -1 * f m else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "real_sub_rzero, (if m ≤ n then -1 * f (n + 1) - -1 * f m - 0 else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if m ≤ n then -1 * f (n + 1) - -1 * f m - 0 else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "sum_0, (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. 0) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. 0) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "real_mul_rzero, (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. f (k + 1) * 0) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. f (k + 1) * 0) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "real_sub_refl, (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. f (k + 1) * (-1 - -1)) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if m ≤ n then -1 * f (n + 1) - -1 * f m - sum ({m..n}) (λk. f (k + 1) * (-1 - -1)) else 0) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "sum_partial_Suc, sum ({m..n}) (λk. -1 * (f (k + 1) - f k)) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m..n}) (λk. -1 * (f (k + 1) - f k)) = (if m ≤ n then -1 * (f (n + 1) - f m) else 0)"
                },
                {
                    "args": "sum ({m..n}) (λk. f k - f (k + 1)) = (if m ≤ n then f m - f (n + 1) else 0)",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sum ({m..n}) (λk. f k - f (k + 1)) = (if m ≤ n then f m - f (n + 1) else 0)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λk. f k - f (k + 1)) = (if m ≤ n then f m - f (n + 1) else 0)"
                }
            ],
            "prop": "sum ({m..n}) (λk. f k - f (k + 1)) = (if m ≤ n then f m - f (n + 1) else 0)",
            "steps": [
                {
                    "goal": "!a::real. !b. a-b = -1 * (b-a)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_partial_Suc"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_sub_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_sub_rzero"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_diffs_alt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "-(if m ≤ n then f m - f (n + 1) else 0) = (if m ≤ n then -(f m - f (n + 1)) else 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ -(if m ≤ n then f m - f (n + 1) else 0) = (if m ≤ n then -(f m - f (n + 1)) else 0)"
                },
                {
                    "args": "sum_diffs, -(sum ({m..n}) (λx. f x - f (x + 1))) = (if m ≤ n then -(f m - f (n + 1)) else 0)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(sum ({m..n}) (λx. f x - f (x + 1))) = (if m ≤ n then -(f m - f (n + 1)) else 0)"
                },
                {
                    "args": "sum_neg, sum ({m..n}) (λk. -(f k - f (k + 1))) = (if m ≤ n then -(f m - f (n + 1)) else 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({m..n}) (λk. -(f k - f (k + 1))) = (if m ≤ n then -(f m - f (n + 1)) else 0)"
                },
                {
                    "args": "real_neg_sub, sum ({m..n}) (λk. f (k + 1) - f k) = (if m ≤ n then f (n + 1) - f m else 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ sum ({m..n}) (λk. f (k + 1) - f k) = (if m ≤ n then f (n + 1) - f m else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({m..n}) (λk. f (k + 1) - f k) = (if m ≤ n then f (n + 1) - f m else 0)"
                }
            ],
            "prop": "sum ({m..n}) (λk. f (k + 1) - f k) = (if m ≤ n then f (n + 1) - f m else 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_neg_sub"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_neg"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_diffs"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_combine_r",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "m ≤ n + 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n + 1 ⊢ m ≤ n + 1"
                },
                {
                    "args": "n ≤ p",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ p ⊢ n ≤ p"
                },
                {
                    "args": "finite_natseg, {m: m, n: p}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..p})"
                },
                {
                    "args": "∀x. (m ≤ x ∧ x ≤ n) ∧ n < x ∧ x ≤ p ⟷ x ∈ ∅",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. (m ≤ x ∧ x ≤ n) ∧ n < x ∧ x ≤ p ⟷ x ∈ ∅"
                },
                {
                    "args": "lesseq_Suc_less, ∀x. (m ≤ x ∧ x ≤ n) ∧ Suc n ≤ x ∧ x ≤ p ⟷ x ∈ ∅",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ ∀x. (m ≤ x ∧ x ≤ n) ∧ Suc n ≤ x ∧ x ≤ p ⟷ x ∈ ∅"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n} ∧ x ∈ {Suc n..p} ⟷ x ∈ ∅",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ ∀x. x ∈ {m..n} ∧ x ∈ {Suc n..p} ⟷ x ∈ ∅"
                },
                {
                    "args": "member_inter_iff, ∀x. x ∈ {m..n} ∩ {Suc n..p} ⟷ x ∈ ∅",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ ∀x. x ∈ {m..n} ∩ {Suc n..p} ⟷ x ∈ ∅"
                },
                {
                    "args": "member_ext",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ {m..n} ∩ {Suc n..p} = ∅"
                },
                {
                    "args": "add_1_right, {m..n} ∩ {n + 1..p} = ∅",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ {m..n} ∩ {n + 1..p} = ∅"
                },
                {
                    "args": "natseg_combine_r",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ {m..n} ∪ {n + 1..p} = {m..p}"
                },
                {
                    "args": "sum_union_eq, {f: f, s: {m..n}, t: {n + 1..p}, u: {m..p}}",
                    "id": "10",
                    "prevs": [
                        "2",
                        "8",
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n ≤ p, m ≤ n + 1 ⊢ sum ({m..n}) f + sum ({n + 1..p}) f = sum ({m..p}) f"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ≤ n + 1 ⟶ n ≤ p ⟶ sum ({m..n}) f + sum ({n + 1..p}) f = sum ({m..p}) f"
                }
            ],
            "prop": "m ≤ n + 1 ⟶ n ≤ p ⟶ sum ({m..n}) f + sum ({n + 1..p}) f = sum ({m..p}) f",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_union_eq"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "lesseq_Suc_less"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "natseg_combine_r"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sum_combine_l",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < n ⊢ 0 < n"
                },
                {
                    "args": "m ≤ n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "n ≤ p + 1",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ p + 1 ⊢ n ≤ p + 1"
                },
                {
                    "args": "finite_natseg, {m: m, n: p}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..p})"
                },
                {
                    "args": "∀x. (m ≤ x ∧ x ≤ n - 1) ∧ n ≤ x ∧ x ≤ p ⟷ x ∈ ∅",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < n ⊢ ∀x. (m ≤ x ∧ x ≤ n - 1) ∧ n ≤ x ∧ x ≤ p ⟷ x ∈ ∅"
                },
                {
                    "args": "member_natseg, ∀x. x ∈ {m..n - 1} ∧ x ∈ {n..p} ⟷ x ∈ ∅",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < n, m ≤ n, n ≤ p + 1 ⊢ ∀x. x ∈ {m..n - 1} ∧ x ∈ {n..p} ⟷ x ∈ ∅"
                },
                {
                    "args": "member_inter_iff, ∀x. x ∈ {m..n - 1} ∩ {n..p} ⟷ x ∈ ∅",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < n, m ≤ n, n ≤ p + 1 ⊢ ∀x. x ∈ {m..n - 1} ∩ {n..p} ⟷ x ∈ ∅"
                },
                {
                    "args": "member_ext",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < n, m ≤ n, n ≤ p + 1 ⊢ {m..n - 1} ∩ {n..p} = ∅"
                },
                {
                    "args": "natseg_combine_l",
                    "id": "8",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < n, m ≤ n, n ≤ p + 1 ⊢ {m..n - 1} ∪ {n..p} = {m..p}"
                },
                {
                    "args": "sum_union_eq, {f: f, s: {m..n - 1}, t: {n..p}, u: {m..p}}",
                    "id": "9",
                    "prevs": [
                        "3",
                        "7",
                        "8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < n, m ≤ n, n ≤ p + 1 ⊢ sum ({m..n - 1}) f + sum ({n..p}) f = sum ({m..p}) f"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < n ⟶ m ≤ n ⟶ n ≤ p + 1 ⟶ sum ({m..n - 1}) f + sum ({n..p}) f = sum ({m..p}) f"
                }
            ],
            "prop": "0 < n ⟶ m ≤ n ⟶ n ≤ p + 1 ⟶ sum ({m..n - 1}) f + sum ({n..p}) f = sum ({m..p}) f",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "sum_union_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "natseg_combine_l"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "name": "polynomial_function",
            "prop": "polynomial_function p ⟷ (∃m. ∃c. ∀x. p x = sum ({0..m}) (λi. c i * x ^ i))",
            "ty": "def",
            "type": "(real ⇒ real) ⇒ bool"
        }
    ],
    "description": "Sums of natural numbers and real numbers.",
    "imports": [
        "iterate"
    ],
    "name": "sums"
}