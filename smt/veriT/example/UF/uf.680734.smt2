(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 S2) S1)
(declare-fun f4 () S2)
(declare-fun f5 () S2)
(declare-fun f6 () S2)
(declare-fun f7 (S3 S2) S2)
(declare-fun f8 (S4 S2) S3)
(declare-fun f9 () S4)
(declare-fun f10 (S5 S6) S2)
(declare-fun f11 (S7 S2) S5)
(declare-fun f12 () S7)
(declare-fun f13 () S2)
(declare-fun f14 (S8 S2) S6)
(declare-fun f15 () S8)
(declare-fun f16 () S3)
(declare-fun f17 () S3)
(declare-fun f18 () S2)
(declare-fun f19 (S2 S2) S1)
(declare-fun f20 (S6 S6) S1)
(declare-fun f21 (S9 S6) S6)
(declare-fun f22 (S10 S6) S9)
(declare-fun f23 () S10)
(declare-fun f24 () S6)
(declare-fun f25 () S6)
(declare-fun f26 () S3)
(assert (not (= f1 f2)))
(assert (not false))
(assert (= (f3 f4 f5) f1))
(assert (=> (= f4 f6) (= (f7 (f8 f9 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f5) f6)))
(assert (=> (= (f3 f4 f6) f1) (= (f3 (f7 (f8 f9 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f5) f6) f1)))
(assert (= (f19 f6 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f1))
(assert (not (= (f19 f5 f4) f1)))
(assert (= (f19 f6 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f1))
(assert (= (f3 f4 f5) f1))
(assert (=> (= f4 f6) (= (f7 (f8 f9 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f5) f6)))
(assert (=> (= (f3 f4 f6) f1) (= (f3 (f7 (f8 f9 (f10 (f11 f12 f13) (f14 f15 (f7 f16 (f7 f17 f18))))) f5) f6) f1)))
(assert (forall ((?v0 S2)) (= (f19 f6 (f10 (f11 f12 ?v0) (f14 f15 (f7 f16 (f7 f17 f18))))) f1)))
(assert (forall ((?v0 S2) (?v1 S2)) (let ((?v_0 (f14 f15 (f7 f16 (f7 f17 f18))))) (=> (= (f19 (f10 (f11 f12 ?v0) ?v_0) (f10 (f11 f12 ?v1) ?v_0)) f1) (=> (= (f19 f6 ?v1) f1) (= (f19 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S6) (?v1 S6)) (let ((?v_0 (f14 f15 (f7 f16 (f7 f17 f18))))) (=> (= (f20 (f21 (f22 f23 ?v0) ?v_0) (f21 (f22 f23 ?v1) ?v_0)) f1) (=> (= (f20 f24 ?v1) f1) (= (f20 ?v0 ?v1) f1))))))
(assert (forall ((?v0 S2) (?v1 S2)) (let ((?v_0 (f14 f15 (f7 f16 (f7 f17 f18))))) (=> (= (f10 (f11 f12 ?v0) ?v_0) (f10 (f11 f12 ?v1) ?v_0)) (=> (= (f19 f6 ?v0) f1) (=> (= (f19 f6 ?v1) f1) (= ?v0 ?v1)))))))
(assert (forall ((?v0 S6) (?v1 S6)) (let ((?v_0 (f14 f15 (f7 f16 (f7 f17 f18))))) (=> (= (f21 (f22 f23 ?v0) ?v_0) (f21 (f22 f23 ?v1) ?v_0)) (=> (= (f20 f24 ?v0) f1) (=> (= (f20 f24 ?v1) f1) (= ?v0 ?v1)))))))
(assert (forall ((?v0 S2)) (= (f19 ?v0 (f10 (f11 f12 ?v0) (f14 f15 (f7 f16 (f7 f17 f18))))) f1)))
(assert (= (f10 (f11 f12 f5) (f14 f15 (f7 f16 (f7 f17 f18)))) f5))
(assert (= (f21 (f22 f23 f25) (f14 f15 (f7 f16 (f7 f17 f18)))) f25))
(assert (= (f10 (f11 f12 f6) (f14 f15 (f7 f16 (f7 f17 f18)))) f6))
(assert (= (f21 (f22 f23 f24) (f14 f15 (f7 f16 (f7 f17 f18)))) f24))
(assert (forall ((?v0 S2)) (= (= (f10 (f11 f12 ?v0) (f14 f15 (f7 f16 (f7 f17 f18)))) f6) (= ?v0 f6))))
(assert (forall ((?v0 S2)) (= (= (f19 f5 (f7 f26 ?v0)) f1) (= (f19 (f7 f17 f18) ?v0) f1))))
(assert (forall ((?v0 S2)) (= (= (f19 (f7 f26 ?v0) f5) f1) (= (f19 ?v0 (f7 f17 f18)) f1))))
(assert (forall ((?v0 S2)) (let ((?v_2 (f7 f16 (f7 f17 f18)))) (let ((?v_0 (f14 f15 ?v_2)) (?v_1 (f11 f12 ?v0))) (= (f10 (f11 f12 (f10 ?v_1 ?v_0)) ?v_0) (f10 ?v_1 (f14 f15 (f7 f16 ?v_2))))))))
(assert (forall ((?v0 S2)) (= (= (f19 f6 (f7 f26 ?v0)) f1) (= (f19 f18 ?v0) f1))))
(assert (forall ((?v0 S2)) (= (= (f19 (f7 f26 ?v0) f6) f1) (= (f19 ?v0 f18) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f7 (f8 f9 (f7 f26 ?v0)) (f7 f26 ?v1)) (f7 f26 (f7 (f8 f9 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f26 ?v0) (f7 f26 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (=> (= (f3 ?v0 ?v1) f1) (= (f3 (f7 (f8 f9 ?v0) ?v2) (f7 (f8 f9 ?v1) ?v2)) f1))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (let ((?v_0 (f8 f9 ?v0))) (= (f7 (f8 f9 (f7 ?v_0 ?v1)) ?v2) (f7 ?v_0 (f7 (f8 f9 ?v1) ?v2))))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (let ((?v_1 (f8 f9 ?v0)) (?v_0 (f8 f9 ?v1))) (= (f7 ?v_1 (f7 ?v_0 ?v2)) (f7 ?v_0 (f7 ?v_1 ?v2))))))
(assert (forall ((?v0 S2) (?v1 S2)) (or (= (f3 ?v0 ?v1) f1) (or (= ?v0 ?v1) (= (f3 ?v1 ?v0) f1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f7 (f8 f9 ?v0) ?v1) (f7 (f8 f9 ?v1) ?v0))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f19 (f7 f26 ?v0) (f7 f26 ?v1)) f1) (= (f19 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2)) (= (= (f3 (f7 (f8 f9 ?v0) ?v0) f6) f1) (= (f3 ?v0 f6) f1))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (= (f7 (f8 f9 (f7 f26 ?v0)) (f7 (f8 f9 (f7 f26 ?v1)) ?v2)) (f7 (f8 f9 (f7 f26 (f7 (f8 f9 ?v0) ?v1))) ?v2))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f7 (f8 f9 (f7 f26 ?v0)) (f7 f26 ?v1)) (f7 f26 (f7 (f8 f9 ?v0) ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f7 f26 (f7 (f8 f9 ?v0) ?v1)) (f7 (f8 f9 (f7 f26 ?v0)) (f7 f26 ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f26 ?v0) (f7 f26 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 ?v0 (f7 (f8 f9 ?v1) f5)) f1) (or (= (f3 ?v0 ?v1) f1) (= ?v0 ?v1)))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2) (?v3 S2)) (=> (= (f3 ?v0 ?v1) f1) (=> (= (f19 ?v2 ?v3) f1) (= (f3 (f7 (f8 f9 ?v0) ?v2) (f7 (f8 f9 ?v1) ?v3)) f1)))))
(assert (= f6 (f7 f26 f18)))
(assert (= (f14 f15 f18) f24))
(assert (= f24 (f14 f15 f18)))
(assert (forall ((?v0 S2)) (= (= (f7 (f8 f9 ?v0) ?v0) f6) (= ?v0 f6))))
(assert (forall ((?v0 S2)) (= (f7 (f8 f9 ?v0) f18) ?v0)))
(assert (forall ((?v0 S2)) (= (f7 (f8 f9 f18) ?v0) ?v0)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (f7 (f8 f9 (f7 f16 ?v0)) (f7 f16 ?v1)) (f7 f16 (f7 (f8 f9 ?v0) ?v1)))))
(assert (forall ((?v0 S2)) (= (f7 f16 ?v0) (f7 (f8 f9 ?v0) ?v0))))
(assert (forall ((?v0 S2)) (= (f7 (f8 f9 ?v0) f6) ?v0)))
(assert (forall ((?v0 S2)) (= (f7 (f8 f9 f6) ?v0) ?v0)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f17 ?v0) (f7 f17 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f17 ?v0) (f7 f17 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (= (= (f3 f18 f18) f1) false))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f16 ?v0) (f7 f16 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f7 f16 ?v0) (f7 f16 ?v1)) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2) (?v2 S2)) (let ((?v_0 (f8 f9 ?v2))) (=> (= (f19 ?v0 ?v1) f1) (= (f19 (f7 ?v_0 ?v0) (f7 ?v_0 ?v1)) f1)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 ?v0 ?v1) f1) (and (= (f19 ?v0 ?v1) f1) (not (= ?v0 ?v1))))))
(assert (= f5 (f7 f26 (f7 f17 f18))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f20 (f14 f15 ?v0) (f14 f15 ?v1)) f1) (ite (= (f19 ?v0 ?v1) f1) true (= (f19 ?v0 f18) f1)))))
(assert (= (f14 f15 (f7 f17 f18)) f25))
(assert (= f25 (f14 f15 (f7 f17 f18))))
(assert (forall ((?v0 S2)) (= (= (f14 f15 ?v0) f24) (= (f19 ?v0 f18) f1))))
(assert (forall ((?v0 S2)) (= (= f24 (f14 f15 ?v0)) (= (f19 ?v0 f18) f1))))
(assert (forall ((?v0 S2)) (= (= (f3 (f7 (f8 f9 (f7 (f8 f9 f5) ?v0)) ?v0) f6) f1) (= (f3 ?v0 f6) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (=> (= (f3 ?v0 ?v1) f1) (= (f19 (f7 (f8 f9 ?v0) f5) ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f19 (f7 (f8 f9 ?v0) f5) ?v1) f1) (= (f3 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 ?v0 (f7 (f8 f9 ?v1) f5)) f1) (= (f19 ?v0 ?v1) f1))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f7 f26 ?v0) (f7 f26 ?v1)) (= ?v0 ?v1))))
(assert (forall ((?v0 S2) (?v1 S6)) (let ((?v_0 (f14 f15 ?v0))) (= (= ?v_0 ?v1) (= ?v1 ?v_0)))))
(assert (forall ((?v0 S2) (?v1 S2)) (let ((?v_0 (f7 f26 ?v0))) (= (= ?v_0 ?v1) (= ?v1 ?v_0)))))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f7 f17 ?v0) (f7 f17 ?v1)) (= ?v0 ?v1))))
(assert (= (= f18 f18) true))
(check-sat)
(exit)
