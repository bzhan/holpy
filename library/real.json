{
    "content": [
        {
            "args": [],
            "name": "real",
            "ty": "type.ax"
        },
        {
            "name": "of_nat",
            "ty": "def.ax",
            "type": "nat => real"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "zero",
            "prop": "zero = of_nat (zero::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "one",
            "prop": "one = of_nat (one::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "plus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "uminus",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "ascii_op": "-",
            "attributes": [
                "hint_rewrite"
            ],
            "name": "minus",
            "prop": "x - y = x + -y",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "name": "times",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_inverse",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "ascii_op": "/",
            "name": "real_divide",
            "prop": "x / y = x * real_inverse y",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "ascii_op": "^",
            "name": "power",
            "rules": [
                {
                    "prop": "(x::real) ^ 0 = 1"
                },
                {
                    "prop": "x ^ Suc m = x * x ^ m"
                }
            ],
            "ty": "def.ind",
            "type": "real => nat => real"
        },
        {
            "name": "less_eq",
            "ty": "def.ax",
            "type": "real => real => bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "less",
            "prop": "x < y ⟷ ¬y ≤ x",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_assoc",
            "prop": "x + (y + z) = x + y + z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_resolve"
            ],
            "name": "real_add_comm",
            "prop": "x + y = y + x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_lid",
            "prop": "0 + x = x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_linv",
            "prop": "-x + x = 0",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mult_assoc",
            "prop": "x * (y * z) = x * y * z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lid",
            "prop": "1 * x = x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_ldistrib",
            "prop": "x * (y + z) = x * y + x * z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_rewrite",
                "hint_backward"
            ],
            "name": "real_le_refl",
            "prop": "x ≤ x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_antisym",
            "prop": "x <= y & y <= x <--> x = y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward",
                "hint_backward1"
            ],
            "name": "real_le_trans",
            "prop": "x ≤ y ∧ y ≤ z ⟶ x ≤ z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_backward"
            ],
            "name": "real_le_total",
            "prop": "x ≤ y ∨ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_le_ladd_imp",
            "prop": "y <= z --> x + y <= x + z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_forward"
            ],
            "name": "real_le_mul",
            "prop": "0 <= x & 0 <= y --> 0 <= x * y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [],
            "name": "real_inv_0",
            "prop": "real_inverse 0 = 0",
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_mul_linv",
            "prop": "¬x = 0 ⟶ real_inverse x * x = 1",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_eq",
            "prop": "(of_nat::nat=>real) m = (of_nat::nat=>real) n ⟷ m = n",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_le",
            "prop": "(of_nat::nat ⇒ real) m ≤ (of_nat::nat ⇒ real) n ⟷ m ≤ n",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_add",
            "prop": "(of_nat::nat ⇒ real) m + (of_nat::nat ⇒ real) n = (of_nat::nat ⇒ real) (m + n)",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_mul",
            "prop": "(of_nat::nat ⇒ real) m * (of_nat::nat ⇒ real) n = (of_nat::nat ⇒ real) (m * n)",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_ac3",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ z + (y + x) = z + (x + y)"
                },
                {
                    "args": "real_add_comm, x + y + z = y + x + z",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + y + z = y + x + z"
                },
                {
                    "args": "real_add_assoc, x + (y + z) = y + (x + z)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + (y + z) = y + (x + z)"
                }
            ],
            "prop": "x+(y+z)=y+(x+z)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_assoc"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_rinv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_linv, -x + x = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x + x = 0"
                },
                {
                    "args": "real_add_comm, x + -x = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + -x = 0"
                }
            ],
            "prop": "x + -x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_resolve",
                "hint_backward"
            ],
            "name": "real_eq_add_lcancel",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x + y = x + z ⟶ y = z"
                },
                {
                    "args": "x + y = x + z",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + y = x + z ⊢ x + y = x + z"
                },
                {
                    "args": "-x + (x + y) = -x + (x + z)",
                    "id": "0.1",
                    "prevs": [
                        "0.0",
                        "0.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x + y = x + z ⊢ -x + (x + y) = -x + (x + z)"
                },
                {
                    "args": "real_add_assoc",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ -x + x + y = -x + x + z"
                },
                {
                    "args": "real_add_linv",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ 0 + y = 0 + z"
                },
                {
                    "args": "real_add_lid",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ y = z"
                },
                {
                    "args": "y = z",
                    "id": "0.5",
                    "prevs": [
                        "0.4",
                        "0.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x + y = x + z ⊢ y = z"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + y = x + z ⟶ y = z"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y = z ⟶ x + y = x + z"
                },
                {
                    "args": "y = z",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = z ⊢ y = z"
                },
                {
                    "args": "x + y = x + z",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "1.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "y = z ⊢ x + y = x + z"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ y = z ⟶ x + y = x + z"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x + y = x + z ⟷ y = z"
                }
            ],
            "prop": "x + y = x + z ⟷ y = z",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal": "-x + (x + y) = -x + (x + z)",
                    "goal_id": "0.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_assoc"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_eq_add_rcancel",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_eq_add_lcancel, z + x = z + y ⟷ x = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ z + x = z + y ⟷ x = y"
                },
                {
                    "args": "real_add_comm, x + z = y + z ⟷ x = y",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + z = y + z ⟷ x = y"
                }
            ],
            "prop": "x + z = y + z ⟷ x = y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_eq_add_lcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_rzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_lid, x * (0 + 1) = 0 + x * 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * (0 + 1) = 0 + x * 1"
                },
                {
                    "args": "real_add_ldistrib",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * 0 + x * 1 = 0 + x * 1"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "x * 0 = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x * 0 = 0"
                }
            ],
            "prop": "x * 0 = 0",
            "steps": [
                {
                    "goal": "x * (0 + 1) = 0 + x * 1",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ldistrib"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rzero, x * 0 = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "real_mult_comm, 0 * x = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 * x = 0"
                }
            ],
            "prop": "0 * x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_neg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rinv, 0 = x + -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + -x"
                },
                {
                    "args": "real_add_linv, --x + -x = x + -x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ --x + -x = x + -x"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ --x = x"
                },
                {
                    "args": "--x = x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ --x = x"
                }
            ],
            "prop": "-(-x)=x",
            "steps": [
                {
                    "goal": "--x + -x = x + -x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_rneg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rzero, x * 0 = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "real_add_linv, x * (-y + y) = -(x * y) + x * y",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * (-y + y) = -(x * y) + x * y"
                },
                {
                    "args": "real_add_ldistrib",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * -y + x * y = -(x * y) + x * y"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * -y = -(x * y)"
                },
                {
                    "args": "x * -y = -(x * y)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x * -y = -(x * y)"
                }
            ],
            "prop": "x * -y = -(x * y)",
            "steps": [
                {
                    "goal": "x * (-y + y) = -(x * y) + (x * y)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rzero"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ldistrib"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lneg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rneg, y * -x = -(y * x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ y * -x = -(y * x)"
                },
                {
                    "args": "real_mult_comm, -x * y = -(x * y)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x * y = -(x * y)"
                }
            ],
            "prop": "(-x) * y = -(x * y)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rneg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_add",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "real_add_rinv, 0 = x + -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + -x"
                },
                {
                    "args": "real_add_lid, 0 = x + (0 + -x)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + (0 + -x)"
                },
                {
                    "args": "real_add_comm, 0 = -x + 0 + x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = -x + 0 + x"
                },
                {
                    "args": "real_add_linv, 0 = -x + (-y + y) + x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = -x + (-y + y) + x"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ 0 = -x + -y + x + y"
                },
                {
                    "args": "real_add_assoc, 0 = -x + -y + (x + y)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = -x + -y + (x + y)"
                },
                {
                    "args": "real_add_linv, -(x + y) + (x + y) = -x + -y + (x + y)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x + y) + (x + y) = -x + -y + (x + y)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ -(x + y) = -x + -y"
                }
            ],
            "prop": "-(x+y)= -x+-y",
            "steps": [
                {
                    "goal": "-(x+y) + (x +y) = -x + -y + (x + y)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal": "0 = -x + (-y + y) + x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_assoc"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_rid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_lid, 0 + x = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 + x = x"
                },
                {
                    "args": "real_add_comm, x + 0 = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + 0 = x"
                }
            ],
            "prop": "x + 0 = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rid, (0::real) = 0 + 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (0::real) = 0 + 0"
                },
                {
                    "args": "real_add_linv, -(0::real) + 0 = 0 + 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(0::real) + 0 = 0 + 0"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ -(0::real) = 0"
                },
                {
                    "args": "-(0::real) = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ -(0::real) = 0"
                }
            ],
            "prop": "-(0::real) = 0",
            "steps": [
                {
                    "goal": "-(0::real) + 0 = 0 + 0",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lneg",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ -x ≤ y ⟶ 0 ≤ x + y"
                },
                {
                    "args": "-x ≤ y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-x ≤ y ⊢ -x ≤ y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: x, y: -x, z: y}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "-x ≤ y ⊢ x + -x ≤ x + y"
                },
                {
                    "args": "real_add_rinv",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-x ≤ y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "real_zero_def",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-x ≤ y ⊢ of_nat 0 ≤ x + y"
                },
                {
                    "args": "real_zero_def, 0 ≤ x + y",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "-x ≤ y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ -x ≤ y ⟶ 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x + y ⟶ -x ≤ y"
                },
                {
                    "args": "0 ≤ x + y",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x + y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: -x, y: (0::real), z: x + y}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ -x + (x + y)"
                },
                {
                    "args": "real_add_assoc",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ -x + x + y"
                },
                {
                    "args": "real_add_linv",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ 0 + y"
                },
                {
                    "args": "real_add_lid",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ y"
                },
                {
                    "args": "real_add_rid",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x ≤ y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "0 ≤ x + y ⊢ -x ≤ y"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x + y ⟶ -x ≤ y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ -x ≤ y ⟷ 0 ≤ x + y"
                }
            ],
            "prop": "-x <= y <--> 0 <= x + y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "rewrite_goal",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "-x",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_assoc"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lneg2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x + -y ⟶ 0 ≤ -y + x"
                },
                {
                    "args": "0 ≤ x + -y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x + -y ⊢ 0 ≤ x + -y"
                },
                {
                    "args": "real_add_comm, 0 ≤ -y + x",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x + -y ⊢ 0 ≤ -y + x"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x + -y ⟶ 0 ≤ -y + x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ -y + x ⟶ 0 ≤ x + -y"
                },
                {
                    "args": "0 ≤ -y + x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ -y + x ⊢ 0 ≤ -y + x"
                },
                {
                    "args": "real_add_comm, 0 ≤ x + -y",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ -y + x ⊢ 0 ≤ x + -y"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ -y + x ⟶ 0 ≤ x + -y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ 0 ≤ x + -y ⟷ 0 ≤ -y + x"
                },
                {
                    "args": "real_le_lneg, -x ≤ -y ⟷ --y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x ≤ -y ⟷ --y ≤ x"
                },
                {
                    "args": "real_neg_neg, --y ≤ x ⟷ y ≤ x",
                    "id": "4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ --y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "-x ≤ -y ⟷ y ≤ x",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ -x ≤ -y ⟷ y ≤ x"
                }
            ],
            "prop": "-x ≤ -y ⟷ y ≤ x",
            "steps": [
                {
                    "goal": "-x <= -y <--> --y <= x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_rneg",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ -y ⟶ x + y ≤ 0"
                },
                {
                    "args": "x ≤ -y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ -y ⊢ x ≤ -y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: y, y: x, z: -y}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ -y ⊢ y + x ≤ y + -y"
                },
                {
                    "args": "real_add_rinv",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ -y ⊢ y + x ≤ 0"
                },
                {
                    "args": "real_add_comm, x + y ≤ 0",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ -y ⊢ x + y ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ -y ⟶ x + y ≤ 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x + y ≤ 0 ⟶ x ≤ -y"
                },
                {
                    "args": "x + y ≤ 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + y ≤ 0 ⊢ x + y ≤ 0"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: -y, y: x + y, z: (0::real)}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x + y ≤ 0 ⊢ -y + (x + y) ≤ -y + 0"
                },
                {
                    "args": "real_add_ac3",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x + (-y + y) ≤ -y + 0"
                },
                {
                    "args": "real_add_linv",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x + 0 ≤ -y + 0"
                },
                {
                    "args": "real_add_rid",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x ≤ -y"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "x + y ≤ 0 ⊢ x ≤ -y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + y ≤ 0 ⟶ x ≤ -y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x ≤ -y ⟷ x + y ≤ 0"
                }
            ],
            "prop": "x ≤ -y ⟷ x + y <= 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "param_x": "y",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rinv"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "-y",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ac3"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_one_def, (1::real) = of_nat 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = of_nat 1"
                },
                {
                    "args": "real_nat_power_def_1, (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat 1"
                },
                {
                    "args": "nat_nat_power_def_1, (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat (x ^ (0::nat))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat (x ^ (0::nat))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⟶ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)"
                },
                {
                    "args": "real_of_nat_mul, (of_nat::nat ⇒ real) x * of_nat (x ^ n) = of_nat (x * x ^ n)",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x * of_nat (x ^ n) = of_nat (x * x ^ n)"
                },
                {
                    "args": "(of_nat::nat ⇒ real) x * of_nat x ^ n = of_nat (x * x ^ n)",
                    "id": "3.3",
                    "prevs": [
                        "3.1",
                        "3.2",
                        "3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x * of_nat x ^ n = of_nat (x * x ^ n)"
                },
                {
                    "args": "real_nat_power_def_2, (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x * x ^ n)",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x * x ^ n)"
                },
                {
                    "args": "nat_nat_power_def_2, (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⟶ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)"
                }
            ],
            "prop": "(of_nat::nat=>real) x ^ n = of_nat (x ^ n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_of_nat_mul"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "nat"
            }
        },
        {
            "attributes": [],
            "name": "real_pow_neg",
            "num_gaps": 4,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ (1::real) = (if true then 1 else -1)"
                },
                {
                    "args": "even_def_1, (1::real) = (if even 0 then 1 else -1)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = (if even 0 then 1 else -1)"
                },
                {
                    "args": "real_nat_power_def_1, (-x) ^ (0::nat) = (if even 0 then x ^ (0::nat) else -x ^ (0::nat))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (-x) ^ (0::nat) = (if even 0 then x ^ (0::nat) else -x ^ (0::nat))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (-x) ^ n = (if even n then x ^ n else -x ^ n) ⟶ (-x) ^ Suc n = (if even (Suc n) then x ^ Suc n else -x ^ Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "(-x) ^ n = (if even n then x ^ n else -x ^ n)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ (-x) ^ n = (if even n then x ^ n else -x ^ n)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ even n ⟶ -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "even n",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n), even n ⊢ -x * x ^ n = x * x ^ n"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n), even n ⊢ ¬even n"
                },
                {
                    "args": "if_P, -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.1",
                        "3.2.0",
                        "3.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n), even n ⊢ -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.2.4",
                    "prevs": [
                        "3.2.0",
                        "3.2.3"
                    ],
                    "rule": "intros",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ even n ⟶ -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ ¬even n ⟶ -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "classical_cases",
                    "id": "3.4",
                    "prevs": [
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ -x * (if even n then x ^ n else -x ^ n) = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "-x * (-x) ^ n = (if ¬even n then x * x ^ n else -(x * x ^ n))",
                    "id": "3.5",
                    "prevs": [
                        "3.1",
                        "3.4",
                        "3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ -x * (-x) ^ n = (if ¬even n then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "real_nat_power_def_2, (-x) ^ Suc n = (if ¬even n then x ^ Suc n else -x ^ Suc n)",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ (-x) ^ Suc n = (if ¬even n then x ^ Suc n else -x ^ Suc n)"
                },
                {
                    "args": "even_def_2, (-x) ^ Suc n = (if even (Suc n) then x ^ Suc n else -x ^ Suc n)",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(-x) ^ n = (if even n then x ^ n else -x ^ n) ⊢ (-x) ^ Suc n = (if even (Suc n) then x ^ Suc n else -x ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "3.8",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (-x) ^ n = (if even n then x ^ n else -x ^ n) ⟶ (-x) ^ Suc n = (if even (Suc n) then x ^ Suc n else -x ^ Suc n)"
                },
                {
                    "args": "nat_induct, {}, {P: λn. (-x) ^ n = (if even n then x ^ n else -x ^ n), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (-x) ^ n = (if even n then x ^ n else -x ^ n)"
                }
            ],
            "prop": "(-x) ^ n = if even n then x ^ n else -x ^ n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "even_def_1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "case": "even n",
                    "goal_id": "3.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "name": "greater_eq",
            "prop": "greater_eq m n = less_eq n m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "name": "greater",
            "prop": "greater m n = less n m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "abs",
            "prop": "abs n = (if 0 ≤ n then n else -n)",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "attributes": [],
            "name": "real_abs_nat",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_0, {}, {n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "if_P, (if 0 ≤ n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 ≤ n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n"
                },
                {
                    "args": "real_of_nat_le, (if (of_nat::nat ⇒ real) 0 ≤ of_nat n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if (of_nat::nat ⇒ real) 0 ≤ of_nat n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n"
                },
                {
                    "args": "real_zero_def, (if (0::real) ≤ of_nat n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if (0::real) ≤ of_nat n then (of_nat::nat ⇒ real) n else -of_nat n) = of_nat n"
                },
                {
                    "args": "real_abs_def, abs ((of_nat::nat ⇒ real) n) = of_nat n",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs ((of_nat::nat ⇒ real) n) = of_nat n"
                }
            ],
            "prop": "abs ((of_nat::nat ⇒ real) n) = of_nat n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_neg",
            "num_gaps": 3,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ 0 ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "x ≤ 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 0 ⊢ x ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 0 ⊢ 0 ≤ x ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "0 ≤ x",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "conjI",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0",
                        "0.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 0, 0 ≤ x ⊢ x ≤ 0 ∧ 0 ≤ x"
                },
                {
                    "args": "real_le_antisym",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ 0, 0 ≤ x ⊢ x = 0"
                },
                {
                    "args": "real_neg_0, (if (0::real) ≤ 0 then -(0::real) else 0) = (if (0::real) ≤ 0 then 0 else -0)",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if (0::real) ≤ 0 then -(0::real) else 0) = (if (0::real) ≤ 0 then 0 else -0)"
                },
                {
                    "args": "(if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.2",
                        "0.1.3",
                        "0.0",
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ≤ 0, 0 ≤ x ⊢ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 0 ⊢ 0 ≤ x ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 0 ⊢ ¬0 ≤ x ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "¬0 ≤ x",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬0 ≤ x ⊢ ¬0 ≤ x"
                },
                {
                    "args": "",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "x ≤ 0, ¬0 ≤ x ⊢ x = -x"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "x ≤ 0, ¬0 ≤ x ⊢ ¬x ≤ 0"
                },
                {
                    "args": "if_not_P, (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.1",
                        "0.2.2",
                        "0.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 0, ¬0 ≤ x ⊢ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.0",
                        "0.2.3"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 0 ⊢ ¬0 ≤ x ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 0 ⊢ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ 0 ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ¬x ≤ 0 ⟶ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "real_add_lid, (if 0 + x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 + x ≤ 0 then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "real_le_rneg, (if 0 ≤ -x then -x else x) = (if 0 ≤ x then x else -x)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 ≤ -x then -x else x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "real_neg_neg, (if 0 ≤ -x then -x else --x) = (if 0 ≤ x then x else -x)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 ≤ -x then -x else --x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "real_abs_def, abs (-x) = abs x",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (-x) = abs x"
                }
            ],
            "prop": "abs (-x) = abs x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_rneg"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                },
                {
                    "case": "x <= 0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "case": "0 <= x",
                    "goal_id": "0.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal": "x <= 0 & 0 <= x",
                    "goal_id": "0.1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.1.1"
                    ],
                    "goal_id": "0.1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_antisym"
                },
                {
                    "fact_ids": [
                        "0.1.2"
                    ],
                    "goal_id": "0.1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_0"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_eqI_from_lt_gt",
            "prop": "(x < y --> false) --> (y < x --> false) --> x = y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "max",
            "prop": "max m n = if m <= n then n else m",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "name": "min",
            "prop": "min m n = if m <= n then m else n",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "attributes": [
                "hint_resolve"
            ],
            "name": "real_lte_total",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "0.1",
                    "prevs": [
                        "1",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬y ≤ x"
                },
                {
                    "args": "disjI1, {}, {A: ¬y ≤ x, B: y ≤ x}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬y ≤ x ∨ y ≤ x"
                },
                {
                    "args": "real_less_def, x < y ∨ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x < y ∨ y ≤ x"
                }
            ],
            "prop": "x < y | y <= x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_lt_imp_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ⊢ x < y"
                },
                {
                    "args": "real_less_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x < y ⊢ ¬y ≤ x"
                },
                {
                    "args": "real_le_total, {}, {x: x, y: y}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ≤ y ∨ y ≤ x"
                },
                {
                    "args": "x ≤ y ⟶ x ≤ y",
                    "id": "3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x < y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "y ≤ x",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE_gen, {}, {A: y ≤ x, C: x ≤ y}",
                    "id": "4.1",
                    "prevs": [
                        "1",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y, y ≤ x ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "x < y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ⟶ x ≤ y"
                }
            ],
            "prop": "x <y --> x <= y",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "goal": "x <=y | y <= x",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_total"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_lte_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y ∧ y ≤ z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ∧ y ≤ z ⊢ x < y ∧ y ≤ z"
                },
                {
                    "args": "conjD1, {}, {A: x < y, B: y ≤ z}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y ∧ y ≤ z ⊢ x < y"
                },
                {
                    "args": "real_less_def",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x < y ∧ y ≤ z ⊢ ¬y ≤ x"
                },
                {
                    "args": "conjD2, {}, {A: x < y, B: y ≤ z}",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y ∧ y ≤ z ⊢ y ≤ z"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x < y ∧ y ≤ z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "z ≤ x",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "z ≤ x ⊢ z ≤ x"
                },
                {
                    "args": "conjI",
                    "id": "4.1",
                    "prevs": [
                        "3",
                        "4.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ y ≤ z ∧ z ≤ x"
                },
                {
                    "args": "real_le_trans",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "4.3",
                    "prevs": [
                        "2",
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "x < y ∧ y ≤ z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z ⊢ ¬z ≤ x"
                },
                {
                    "args": "real_less_def, x < z",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x < y ∧ y ≤ z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ∧ y ≤ z ⟶ x < z"
                }
            ],
            "prop": "x < y & y <= z --> x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "param_A": "y <= x",
                    "theorem": "negE"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "param_y": "z",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_let_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ y ∧ y < z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ∧ y < z ⊢ x ≤ y ∧ y < z"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ y < z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "z ≤ x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "z ≤ x ⊢ z ≤ x"
                },
                {
                    "args": "conjD1, {}, {A: x ≤ y, B: y < z}",
                    "id": "1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ y < z ⊢ x ≤ y"
                },
                {
                    "args": "conjD2, {}, {A: x ≤ y, B: y < z}",
                    "id": "1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ y < z ⊢ y < z"
                },
                {
                    "args": "real_less_def",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ y ∧ y < z ⊢ ¬z ≤ y"
                },
                {
                    "args": "conjI",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ z ≤ x ∧ x ≤ y"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ z ≤ y"
                },
                {
                    "args": "negE",
                    "id": "1.6",
                    "prevs": [
                        "1.3",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ y < z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z ⊢ ¬z ≤ x"
                },
                {
                    "args": "real_less_def, x < z",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ y < z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ∧ y < z ⟶ x < z"
                }
            ],
            "prop": "x ≤ y ∧ y < z ⟶ x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "param_A": "z <= y",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "param_y": "x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_lt_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y ∧ y < z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ∧ y < z ⊢ x < y ∧ y < z"
                },
                {
                    "args": "conjD1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < y"
                },
                {
                    "args": "conjD2",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ y < z"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ y ≤ z"
                },
                {
                    "args": "conjI",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < y ∧ y ≤ z"
                },
                {
                    "args": "real_lte_trans",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ∧ y < z ⟶ x < z"
                }
            ],
            "prop": "x < y ∧ y < z ⟶ x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_y": "y",
                    "theorem": "real_lte_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_le_add",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "0 ≤ x ∧ 0 ≤ y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x ∧ 0 ≤ y"
                },
                {
                    "args": "conjD1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x"
                },
                {
                    "args": "conjD2",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: x, y: (0::real), z: y}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x + 0 ≤ x + y"
                },
                {
                    "args": "real_add_rid",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x ≤ x + y"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x ≤ x + y"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "1",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x ∧ x ≤ x + y"
                },
                {
                    "args": "real_le_trans",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ∧ 0 ≤ y ⟶ 0 ≤ x + y"
                }
            ],
            "prop": "0 <= x & 0 <= y --> 0 <= x + y",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_y": "x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal": "x + 0 <= x + y",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_resolve"
            ],
            "name": "real_lte_antisym",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬y ≤ x ∧ y ≤ x ⟶ false"
                },
                {
                    "args": "¬y ≤ x ∧ y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ ¬y ≤ x ∧ y ≤ x"
                },
                {
                    "args": "conjD1, {}, {A: ¬y ≤ x, B: y ≤ x}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "conjD2, {}, {A: ¬y ≤ x, B: y ≤ x}",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬y ≤ x ∧ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(¬y ≤ x ∧ y ≤ x)"
                },
                {
                    "args": "real_less_def, ¬(x < y ∧ y ≤ x)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(x < y ∧ y ≤ x)"
                }
            ],
            "prop": "~(x <y & y <=x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_neg_neg, --y ≤ x ⟷ y ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ --y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "real_le_lneg",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ 0 ≤ -y + x ⟷ y ≤ x"
                },
                {
                    "args": "real_add_comm, 0 ≤ x + -y ⟷ y ≤ x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 ≤ x + -y ⟷ y ≤ x"
                },
                {
                    "args": "real_minus_def, 0 ≤ x - y ⟷ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 ≤ x - y ⟷ y ≤ x"
                }
            ],
            "prop": "0 <= x - y <--> y <= x",
            "steps": [
                {
                    "goal": "--y <= x <--> y <= x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_sub",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ -x + y = y + -x"
                },
                {
                    "args": "real_neg_neg, -x + --y = y + -x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x + --y = y + -x"
                },
                {
                    "args": "real_neg_add, -(x + -y) = y + -x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x + -y) = y + -x"
                },
                {
                    "args": "real_minus_def, -(x - y) = y - x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x - y) = y - x"
                }
            ],
            "prop": "-(x-y)= y-x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_le_total, {}, {x: x, y: y}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ≤ y ∨ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ y ⟶ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "x ≤ y",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ⊢ x ≤ y ⟶ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "",
                    "id": "1.1.0",
                    "prevs": [
                        "1.1",
                        "1.0"
                    ],
                    "rule": "apply_fact",
                    "th": "x ≤ y ⊢ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [
                        "1.0",
                        "1.1.0"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ⟶ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ⊢ ¬y ≤ x ∨ x = y ⟶ x ≤ y"
                },
                {
                    "args": "¬y ≤ x ∨ x = y",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ∨ x = y ⊢ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ⊢ ¬y ≤ x ∨ x = y ⟶ x ≤ y"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ⊢ x ≤ y ⟷ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "real_less_def, x ≤ y ⟷ x < y ∨ x = y",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ⊢ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ⟶ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y ≤ x ⟶ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "y ≤ x",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x ⊢ x ≤ y ⟶ x < y ∨ x = y"
                },
                {
                    "args": "x ≤ y",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x, x ≤ y ⊢ x < y ⟶ false"
                },
                {
                    "args": "x < y",
                    "id": "2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ⊢ x < y"
                },
                {
                    "args": "real_less_def",
                    "id": "2.1.1.1",
                    "prevs": [
                        "2.1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x < y ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "2.1.1.2",
                    "prevs": [
                        "2.1.1.1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.1.1.3",
                    "prevs": [
                        "2.1.1.0",
                        "2.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x, x ≤ y ⊢ x < y ⟶ false"
                },
                {
                    "args": "",
                    "id": "2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x, x ≤ y ⊢ y < x ⟶ false"
                },
                {
                    "args": "y < x",
                    "id": "2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y < x ⊢ y < x"
                },
                {
                    "args": "",
                    "id": "2.1.2.1",
                    "prevs": [
                        "2.1.2",
                        "2.1.2.0"
                    ],
                    "rule": "apply_fact",
                    "th": "y ≤ x, x ≤ y, y < x ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.1.2.2",
                    "prevs": [
                        "2.1.2.0",
                        "2.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x, x ≤ y ⊢ y < x ⟶ false"
                },
                {
                    "args": "real_eqI_from_lt_gt",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.1",
                        "2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x, x ≤ y ⊢ x = y"
                },
                {
                    "args": "disjI2, {}, {A: ¬y ≤ x, B: x = y}",
                    "id": "2.1.4",
                    "prevs": [
                        "2.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "y ≤ x, x ≤ y ⊢ ¬y ≤ x ∨ x = y"
                },
                {
                    "args": "real_less_def, x < y ∨ x = y",
                    "id": "2.1.5",
                    "prevs": [
                        "2.1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "y ≤ x, x ≤ y ⊢ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "2.1.6",
                    "prevs": [
                        "2.1.0",
                        "2.1.5"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x ⊢ x ≤ y ⟶ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x ⊢ x < y ∨ x = y ⟶ x ≤ y"
                },
                {
                    "args": "x < y ∨ x = y",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ∨ x = y ⊢ x < y ∨ x = y"
                },
                {
                    "args": "x ≤ y ⟶ x ≤ y",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x, x < y ∨ x = y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "",
                    "id": "2.2.2.0",
                    "prevs": [
                        "2.2.2",
                        "2.0"
                    ],
                    "rule": "apply_fact",
                    "th": "y ≤ x, x < y ∨ x = y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "2.2.2.1",
                    "prevs": [
                        "2.0",
                        "2.2.2.0"
                    ],
                    "rule": "intros",
                    "th": "x < y ∨ x = y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "disjE",
                    "id": "2.2.3",
                    "prevs": [
                        "0",
                        "2.2.1",
                        "2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x, x < y ∨ x = y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.0",
                        "2.2.3"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x ⊢ x < y ∨ x = y ⟶ x ≤ y"
                },
                {
                    "args": "iffI",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x ⊢ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ y ≤ x ⟶ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "disjE",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x ≤ y ⟷ x < y ∨ x = y"
                }
            ],
            "prop": "x <= y <--> x <y | x = y",
            "steps": [
                {
                    "goal": "x <= y | y <= x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_total"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.1.0",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_eqI_from_lt_gt"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.1.0"
                    ],
                    "goal_id": "2.1.1.1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "2.1.1.1",
                        "2.0"
                    ],
                    "goal_id": "2.1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "2.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.2"
                    ],
                    "goal_id": "2.1.2.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.2"
                    ],
                    "goal_id": "2.2.2.0",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_lt",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "real_neg_sub, x - y = -(y - x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y = -(y - x)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ¬0 ≤ y - x + 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "real_le_lneg, ¬-(y - x) ≤ 0 ⟷ ¬x ≤ y",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬-(y - x) ≤ 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "¬x - y ≤ 0 ⟷ ¬x ≤ y",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ ¬x - y ≤ 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "real_less_def, 0 < x - y ⟷ y < x",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 < x - y ⟷ y < x"
                }
            ],
            "prop": "0<x-y <--> y < x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal": "x - y = -(y - x)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_sub"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lneg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_not_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬¬y ≤ x ⟶ y ≤ x"
                },
                {
                    "args": "¬¬y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬y ≤ x ⊢ ¬¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "y ≤ x",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "",
                    "id": "0.1.1.0",
                    "prevs": [
                        "0.1.1",
                        "0.1.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.1.1.1",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.0"
                    ],
                    "rule": "intros",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "0.1.3",
                    "prevs": [
                        "0.0",
                        "0.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.0",
                        "0.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE_gen, {}, {A: ¬y ≤ x, C: y ≤ x}",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬¬y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬¬y ≤ x ⟶ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y ≤ x ⟶ ¬¬y ≤ x"
                },
                {
                    "args": "y ≤ x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x ⊢ ¬y ≤ x ⟶ false"
                },
                {
                    "args": "¬y ≤ x",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x ⊢ ¬y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x ⊢ ¬¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ y ≤ x ⟶ ¬¬y ≤ x"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬¬y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "real_less_def, ¬x < y ⟷ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬x < y ⟷ y ≤ x"
                }
            ],
            "prop": "~(x < y) <--> y <= x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.1"
                    ],
                    "goal_id": "0.1.1.0",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0",
                        "1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_le_antisym, x - y = 0 ⟷ x - y ≤ 0 ∧ 0 ≤ x - y",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y = 0 ⟷ x - y ≤ 0 ∧ 0 ≤ x - y"
                },
                {
                    "args": "real_not_lt, x - y ≤ 0 ⟷ ¬0 < x - y",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y ≤ 0 ⟷ ¬0 < x - y"
                },
                {
                    "args": "real_le_antisym, x ≤ y ∧ y ≤ x ⟷ x = y",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ≤ y ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_not_lt, ¬y < x ∧ y ≤ x ⟷ x = y",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬y < x ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_sub_lt, ¬0 < x - y ∧ y ≤ x ⟷ x = y",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬0 < x - y ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "x - y ≤ 0 ∧ y ≤ x ⟷ x = y",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x - y ≤ 0 ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_sub_le, x - y ≤ 0 ∧ 0 ≤ x - y ⟷ x = y",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y ≤ 0 ∧ 0 ≤ x - y ⟷ x = y"
                },
                {
                    "args": "x - y = 0 ⟷ x = y",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x - y = 0 ⟷ x = y"
                }
            ],
            "prop": "x-y=0 <--> x=y",
            "steps": [
                {
                    "goal": "x - y = 0 <--> x - y <= 0 & 0 <= x - y",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_antisym"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_sub_le"
                },
                {
                    "goal": "x - y <= 0 <--> ~(0 < x - y)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_sub_lt"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_antisym"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_lt_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬y ≤ x ⟶ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "¬y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "real_le_lt",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬y ≤ x ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "real_less_def, x < y",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬y ≤ x ⊢ x < y"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ x ≤ y"
                },
                {
                    "args": "real_le_lt",
                    "id": "0.4",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬y ≤ x ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬y ≤ x ⊢ x ≤ y ⟶ false"
                },
                {
                    "args": "x ≤ y",
                    "id": "0.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "0.5.1",
                    "prevs": [
                        "0.5",
                        "0.3"
                    ],
                    "rule": "apply_fact",
                    "th": "¬y ≤ x, x ≤ y ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.5.2",
                    "prevs": [
                        "0.5.0",
                        "0.5.1"
                    ],
                    "rule": "intros",
                    "th": "¬y ≤ x ⊢ x ≤ y ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ ¬x ≤ y"
                },
                {
                    "args": "real_less_def, y < x",
                    "id": "0.7",
                    "prevs": [
                        "0.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬y ≤ x ⊢ y < x"
                },
                {
                    "args": "disjI1, {}, {A: y < x, B: y = x}",
                    "id": "0.8",
                    "prevs": [
                        "0.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ⊢ y < x ∨ y = x"
                },
                {
                    "args": "negE_gen, {}, {A: y < x ∨ y = x, C: ¬x = y}",
                    "id": "0.9",
                    "prevs": [
                        "0.4",
                        "0.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ⊢ ¬x = y"
                },
                {
                    "args": "conjI",
                    "id": "0.10",
                    "prevs": [
                        "0.3",
                        "0.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "",
                    "id": "0.11",
                    "prevs": [
                        "0.0",
                        "0.10"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬y ≤ x ⟶ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ y ∧ ¬x = y ⟶ ¬y ≤ x"
                },
                {
                    "args": "x ≤ y ∧ ¬x = y",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ∧ ¬x = y ⊢ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "conjD1, {}, {A: x ≤ y, B: ¬x = y}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ ¬x = y ⊢ x ≤ y"
                },
                {
                    "args": "conjD2, {}, {A: x ≤ y, B: ¬x = y}",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x = y"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x ≤ y ∨ y = x ⟶ false"
                },
                {
                    "args": "¬x ≤ y ∨ y = x",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ∨ y = x"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ⟶ false"
                },
                {
                    "args": "¬x ≤ y",
                    "id": "1.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x ≤ y ⊢ ¬x ≤ y"
                },
                {
                    "args": "negE",
                    "id": "1.3.1.1",
                    "prevs": [
                        "1.3.1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬x ≤ y, x ≤ y ∧ ¬x = y ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.1.2",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ⟶ false"
                },
                {
                    "args": "",
                    "id": "1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ y = x ⟶ false"
                },
                {
                    "args": "y = x",
                    "id": "1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = x ⊢ y = x"
                },
                {
                    "args": "",
                    "id": "1.3.2.1",
                    "prevs": [
                        "1.3.2.0",
                        "1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "y = x, x ≤ y ∧ ¬x = y ⊢ ¬x = x"
                },
                {
                    "args": "eq_refl, {a: real}, {x: x}",
                    "id": "1.3.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x = x"
                },
                {
                    "args": "negE",
                    "id": "1.3.2.3",
                    "prevs": [
                        "1.3.2.1",
                        "1.3.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x, y = x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.2.4",
                    "prevs": [
                        "1.3.2.0",
                        "1.3.2.3"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ y = x ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.1",
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬x ≤ y ∨ y = x, x ≤ y ∧ ¬x = y ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x ≤ y ∨ y = x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬(¬x ≤ y ∨ y = x)"
                },
                {
                    "args": "real_less_def, ¬(y < x ∨ y = x)",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "real_le_lt, ¬y ≤ x",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ∧ ¬x = y ⟶ ¬y ≤ x"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬y ≤ x ⟷ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "real_less_def, x < y ⟷ x ≤ y ∧ ¬x = y",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x < y ⟷ x ≤ y ∧ ¬x = y"
                }
            ],
            "prop": "x < y <--> x <= y & ~(x = y)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lt"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lt"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.5"
                    ],
                    "goal_id": "0.5.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lt"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.0",
                        "1.1"
                    ],
                    "goal_id": "1.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.2.0",
                        "1.2"
                    ],
                    "goal_id": "1.3.2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.3.2.2",
                    "method_name": "apply_backward_step",
                    "param_A": "x=x",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.3.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg1",
            "prop": "-x = -1 * x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg2",
            "prop": "x - y = x + -1 * y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_sgn",
            "prop": "real_sgn x = if 0 < x then 1 else if x <0 then -1 else 0",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "name": "sqrt",
            "prop": "sqrt x = THE y. real_sgn y =  real_sgn x & y ^ (2::nat) = abs x",
            "ty": "def",
            "type": "real ⇒ real"
        }
    ],
    "description": "real numbers",
    "imports": [
        "rat"
    ],
    "name": "real"
}