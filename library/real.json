{
    "content": [
        {
            "args": [],
            "name": "real",
            "ty": "type.ax"
        },
        {
            "name": "of_nat",
            "ty": "def.ax",
            "type": "nat => real"
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "zero",
            "prop": "zero = of_nat (zero::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "one",
            "prop": "one = of_nat (one::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "plus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "uminus",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "ascii_op": "-",
            "attributes": [
                "hint_rewrite"
            ],
            "name": "minus",
            "prop": "x - y = x + -y",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "name": "times",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_inverse",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "ascii_op": "/",
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_divide",
            "prop": "x / y = x * real_inverse y",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "ascii_op": "^",
            "name": "power",
            "rules": [
                {
                    "prop": "(x::real) ^ 0 = 1"
                },
                {
                    "prop": "x ^ Suc m = x * x ^ m"
                }
            ],
            "ty": "def.ind",
            "type": "real => nat => real"
        },
        {
            "name": "less_eq",
            "ty": "def.ax",
            "type": "real => real => bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "less",
            "prop": "x < y ⟷ ¬y ≤ x",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "real_add_assoc",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x + (y + z) = x + y + z",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x + (y + z) = x + y + z"
                }
            ],
            "prop": "x + (y + z) = x + y + z",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_resolve"
            ],
            "name": "real_add_comm",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x + y = y + x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x + y = y + x"
                }
            ],
            "prop": "x + y = y + x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_lid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 + x = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 0 + x = x"
                }
            ],
            "prop": "0 + x = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_rid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_lid, 0 + x = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 + x = x"
                },
                {
                    "args": "real_add_comm, x + 0 = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + 0 = x"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + 0 = x"
                }
            ],
            "prop": "x + 0 = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_linv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "-x + x = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ -x + x = 0"
                }
            ],
            "prop": "-x + x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "real_mult_assoc",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x * (y * z) = x * y * z",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x * (y * z) = x * y * z"
                }
            ],
            "prop": "x * (y * z) = x * y * z",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_resolve",
                "hint_backward"
            ],
            "name": "real_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lid",
            "prop": "1 * x = x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_ldistrib",
            "prop": "x * (y + z) = x * y + x * z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_backward"
            ],
            "name": "real_le_refl",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x ≤ x"
                }
            ],
            "prop": "x ≤ x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "real_le_antisym",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ y ∧ y ≤ x ⟷ x = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x ≤ y ∧ y ≤ x ⟷ x = y"
                }
            ],
            "prop": "x ≤ y ∧ y ≤ x ⟷ x = y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward",
                "hint_backward1"
            ],
            "name": "real_le_trans",
            "prop": "x ≤ y ∧ y ≤ z ⟶ x ≤ z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_backward"
            ],
            "name": "real_le_total",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ y ∨ y ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x ≤ y ∨ y ≤ x"
                }
            ],
            "prop": "x ≤ y ∨ y ≤ x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_le_ladd_imp",
            "prop": "y <= z --> x + y <= x + z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_forward",
                "hint_backward"
            ],
            "name": "real_le_mul",
            "prop": "0 ≤ x ∧ 0 ≤ y ⟶ 0 ≤ x * y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_lt_le",
            "prop": "x < y <--> x <= y & ~(x = y)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_inv_0",
            "prop": "real_inverse 0 = 0",
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_mul_linv",
            "prop": "¬x = 0 ⟶ real_inverse x * x = 1",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_eq",
            "prop": "(of_nat::nat=>real) m = (of_nat::nat=>real) n ⟷ m = n",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_le",
            "prop": "(of_nat::nat ⇒ real) m ≤ (of_nat::nat ⇒ real) n ⟷ m ≤ n",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_add",
            "prop": "(of_nat::nat ⇒ real) m + (of_nat::nat ⇒ real) n = (of_nat::nat ⇒ real) (m + n)",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [],
            "name": "real_of_nat_minus",
            "prop": "of_nat (m - n) = if m >= n then of_nat m - of_nat n else (0::real)",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_mul",
            "prop": "(of_nat::nat ⇒ real) m * (of_nat::nat ⇒ real) n = (of_nat::nat ⇒ real) (m * n)",
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_ac3",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_comm, {}, {x: x, y: y}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x + y = y + x"
                },
                {
                    "args": "z + (x + y) = z + (y + x)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ z + (x + y) = z + (y + x)"
                },
                {
                    "args": "real_add_comm, x + y + z = y + x + z",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + y + z = y + x + z"
                },
                {
                    "args": "real_add_assoc, x + (y + z) = y + (x + z)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + (y + z) = y + (x + z)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + (y + z) = y + (x + z)"
                }
            ],
            "prop": "x+(y+z)=y+(x+z)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_assoc"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "param_y": "y",
                    "theorem": "real_add_comm"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_rinv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_linv, -x + x = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x + x = 0"
                },
                {
                    "args": "real_add_comm, x + -x = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + -x = 0"
                }
            ],
            "prop": "x + -x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_resolve",
                "hint_rewrite_sym"
            ],
            "name": "real_eq_add_lcancel",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x + y = x + z ⟶ y = z"
                },
                {
                    "args": "x + y = x + z",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + y = x + z ⊢ x + y = x + z"
                },
                {
                    "args": "-x + (x + y) = -x + (x + z)",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x + y = x + z ⊢ -x + (x + y) = -x + (x + z)"
                },
                {
                    "args": "real_add_assoc",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ -x + x + y = -x + x + z"
                },
                {
                    "args": "real_add_linv",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ 0 + y = 0 + z"
                },
                {
                    "args": "real_add_lid",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y = x + z ⊢ y = z"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + y = x + z ⟶ y = z"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y = z ⟶ x + y = x + z"
                },
                {
                    "args": "y = z",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = z ⊢ y = z"
                },
                {
                    "args": "x + y = x + z",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "y = z ⊢ x + y = x + z"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ y = z ⟶ x + y = x + z"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x + y = x + z ⟷ y = z"
                }
            ],
            "prop": "x + y = x + z ⟷ y = z",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal": "-x + (x + y) = -x + (x + z)",
                    "goal_id": "0.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_assoc"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_lid"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_eq_add_rcancel",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_eq_add_lcancel, z + x = z + y ⟷ x = y",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ z + x = z + y ⟷ x = y"
                },
                {
                    "args": "real_add_comm, x + z = y + z ⟷ x = y",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + z = y + z ⟷ x = y"
                }
            ],
            "prop": "x + z = y + z ⟷ x = y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_eq_add_lcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_rzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_lid, x * (0 + 1) = 0 + x * 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * (0 + 1) = 0 + x * 1"
                },
                {
                    "args": "real_add_ldistrib",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * 0 + x * 1 = 0 + x * 1"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * 0 = 0"
                }
            ],
            "prop": "x * 0 = 0",
            "steps": [
                {
                    "goal": "x * (0 + 1) = 0 + x * 1",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ldistrib"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rzero, x * 0 = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "real_mult_comm, 0 * x = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 * x = 0"
                }
            ],
            "prop": "0 * x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_neg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rinv, 0 = x + -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + -x"
                },
                {
                    "args": "real_add_linv, --x + -x = x + -x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ --x + -x = x + -x"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ --x = x"
                }
            ],
            "prop": "-(-x)=x",
            "steps": [
                {
                    "goal": "--x + -x = x + -x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_rneg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rzero, x * 0 = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "real_add_linv, x * (-y + y) = -(x * y) + x * y",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * (-y + y) = -(x * y) + x * y"
                },
                {
                    "args": "real_add_ldistrib",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * -y + x * y = -(x * y) + x * y"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ x * -y = -(x * y)"
                }
            ],
            "prop": "x * -y = -(x * y)",
            "steps": [
                {
                    "goal": "x * (-y + y) = -(x * y) + (x * y)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rzero"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ldistrib"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_lneg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_rneg, y * -x = -(y * x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ y * -x = -(y * x)"
                },
                {
                    "args": "real_mult_comm, -x * y = -(x * y)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x * y = -(x * y)"
                }
            ],
            "prop": "(-x) * y = -(x * y)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mul_rneg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rinv, 0 = x + -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + -x"
                },
                {
                    "args": " real_add_rid, 0 = x + (-x + 0)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + (-x + 0)"
                },
                {
                    "args": "real_add_linv, 0 = x + (-x + (-y + y))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = x + (-x + (-y + y))"
                },
                {
                    "args": "real_add_assoc, 0 = x + (-x + -y + y)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ 0 = x + (-x + -y + y)"
                },
                {
                    "args": "real_add_ac3, 0 = -x + -y + (x + y)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = -x + -y + (x + y)"
                },
                {
                    "args": "real_add_linv, -(x + y) + (x + y) = -x + -y + (x + y)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x + y) + (x + y) = -x + -y + (x + y)"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ -(x + y) = -x + -y"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ -(x + y) = -x + -y"
                }
            ],
            "prop": "-(x+y)= -x+-y",
            "steps": [
                {
                    "goal": "-(x+y) + (x +y) = -x + -y + (x + y)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_ac3"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_add_assoc"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_eq_add_rcancel"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_add_rid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_lid, 0 + x = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 + x = x"
                },
                {
                    "args": "real_add_comm, x + 0 = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + 0 = x"
                }
            ],
            "prop": "x + 0 = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rid, (0::real) = 0 + 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (0::real) = 0 + 0"
                },
                {
                    "args": "real_add_linv, -(0::real) + 0 = 0 + 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(0::real) + 0 = 0 + 0"
                },
                {
                    "args": "real_eq_add_rcancel",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ -(0::real) = 0"
                }
            ],
            "prop": "-(0::real) = 0",
            "steps": [
                {
                    "goal": "-(0::real) + 0 = 0 + 0",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_linv"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_eq_add_rcancel"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lneg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ -x ≤ y ⟶ 0 ≤ x + y"
                },
                {
                    "args": "-x ≤ y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-x ≤ y ⊢ -x ≤ y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: x, y: -x, z: y}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "-x ≤ y ⊢ x + -x ≤ x + y"
                },
                {
                    "args": "real_add_rinv",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-x ≤ y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "real_zero_def",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-x ≤ y ⊢ of_nat 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ -x ≤ y ⟶ 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x + y ⟶ -x ≤ y"
                },
                {
                    "args": "0 ≤ x + y",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x + y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: -x, y: (0::real), z: x + y}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ -x + (x + y)"
                },
                {
                    "args": "real_add_assoc",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ -x + x + y"
                },
                {
                    "args": "real_add_linv",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ 0 + y"
                },
                {
                    "args": "real_add_lid",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x + 0 ≤ y"
                },
                {
                    "args": "real_add_rid",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x + y ⊢ -x ≤ y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x + y ⟶ -x ≤ y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ -x ≤ y ⟷ 0 ≤ x + y"
                }
            ],
            "prop": "-x <= y <--> 0 <= x + y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rinv"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "-x",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_assoc"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lneg2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x + -y ⟶ 0 ≤ -y + x"
                },
                {
                    "args": "0 ≤ x + -y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x + -y ⊢ 0 ≤ x + -y"
                },
                {
                    "args": "real_add_comm, 0 ≤ -y + x",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x + -y ⊢ 0 ≤ -y + x"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x + -y ⟶ 0 ≤ -y + x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ -y + x ⟶ 0 ≤ x + -y"
                },
                {
                    "args": "0 ≤ -y + x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ -y + x ⊢ 0 ≤ -y + x"
                },
                {
                    "args": "real_add_comm, 0 ≤ x + -y",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ -y + x ⊢ 0 ≤ x + -y"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ -y + x ⟶ 0 ≤ x + -y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ 0 ≤ x + -y ⟷ 0 ≤ -y + x"
                },
                {
                    "args": "real_le_lneg, -x ≤ -y ⟷ --y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x ≤ -y ⟷ --y ≤ x"
                },
                {
                    "args": "real_neg_neg, --y ≤ x ⟷ y ≤ x",
                    "id": "4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ --y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "-x ≤ -y ⟷ y ≤ x",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ -x ≤ -y ⟷ y ≤ x"
                }
            ],
            "prop": "-x ≤ -y ⟷ y ≤ x",
            "steps": [
                {
                    "goal": "-x <= -y <--> --y <= x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_rneg",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ -y ⟶ x + y ≤ 0"
                },
                {
                    "args": "x ≤ -y",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ -y ⊢ x ≤ -y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: y, y: x, z: -y}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ -y ⊢ y + x ≤ y + -y"
                },
                {
                    "args": "real_add_rinv",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ -y ⊢ y + x ≤ 0"
                },
                {
                    "args": "real_add_comm, x + y ≤ 0",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ -y ⊢ x + y ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ -y ⟶ x + y ≤ 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x + y ≤ 0 ⟶ x ≤ -y"
                },
                {
                    "args": "x + y ≤ 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + y ≤ 0 ⊢ x + y ≤ 0"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: -y, y: x + y, z: (0::real)}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x + y ≤ 0 ⊢ -y + (x + y) ≤ -y + 0"
                },
                {
                    "args": "real_add_ac3",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x + (-y + y) ≤ -y + 0"
                },
                {
                    "args": "real_add_linv",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x + 0 ≤ -y + 0"
                },
                {
                    "args": "real_add_rid",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x + y ≤ 0 ⊢ x ≤ -y"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "x + y ≤ 0 ⊢ x ≤ -y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + y ≤ 0 ⟶ x ≤ -y"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x ≤ -y ⟷ x + y ≤ 0"
                }
            ],
            "prop": "x ≤ -y ⟷ x + y <= 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "param_x": "y",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rinv"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "-y",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_ac3"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_linv"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_entire",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = 0 ⟶ x * y = 0 ⟶ x = 0 ∨ y = 0"
                },
                {
                    "args": "x = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "x * y = 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x * y = 0 ⊢ x * y = 0"
                },
                {
                    "args": "disjI1, {}, {A: x = 0, B: y = 0}",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x = 0, x * y = 0 ⊢ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = 0 ⟶ x * y = 0 ⟶ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(x = 0) ⟶ x * y = 0 ⟶ x = 0 ∨ y = 0"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "x * y = 0",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x * y = 0 ⊢ x * y = 0"
                },
                {
                    "args": "real_mul_linv, {}, {x: x}",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0) ⊢ real_inverse x * x = 1"
                },
                {
                    "args": "real_mul_lid, 1 * y = y",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 1 * y = y"
                },
                {
                    "args": "real_inverse x * x * y = y",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(x = 0), x * y = 0 ⊢ real_inverse x * x * y = y"
                },
                {
                    "args": "real_mult_assoc",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "¬(x = 0), x * y = 0 ⊢ real_inverse x * (x * y) = y"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.1",
                        "1.5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x * y = 0, ¬(x = 0) ⊢ real_inverse x * 0 = y"
                },
                {
                    "args": "real_mul_rzero",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x * y = 0, ¬(x = 0) ⊢ 0 = y"
                },
                {
                    "args": "eq_sym_eq, y = 0",
                    "id": "1.8",
                    "prevs": [
                        "1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), x * y = 0 ⊢ y = 0"
                },
                {
                    "args": "disjI2, {}, {A: x = 0, B: y = 0}",
                    "id": "1.9",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0), x * y = 0 ⊢ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ x * y = 0 ⟶ x = 0 ∨ y = 0"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x * y = 0 ⟶ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = 0 ∨ y = 0 ⟶ x * y = 0"
                },
                {
                    "args": "x = 0 ∨ y = 0",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ∨ y = 0 ⊢ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x = 0 ∨ y = 0 ⊢ x = 0 ⟶ x * y = 0"
                },
                {
                    "args": "x = 0",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "real_mul_lzero, 0 * y = 0",
                    "id": "3.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 * y = 0"
                },
                {
                    "args": "x * y = 0",
                    "id": "3.1.2",
                    "prevs": [
                        "3.1.0",
                        "3.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0, x = 0 ∨ y = 0 ⊢ x * y = 0"
                },
                {
                    "args": "",
                    "id": "3.1.3",
                    "prevs": [
                        "3.1.0",
                        "3.1.2"
                    ],
                    "rule": "intros",
                    "th": "x = 0 ∨ y = 0 ⊢ x = 0 ⟶ x * y = 0"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x = 0 ∨ y = 0 ⊢ y = 0 ⟶ x * y = 0"
                },
                {
                    "args": "y = 0",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = 0 ⊢ y = 0"
                },
                {
                    "args": "real_mul_rzero, x * 0 = 0",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 0 = 0"
                },
                {
                    "args": "x * y = 0",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "y = 0, x = 0 ∨ y = 0 ⊢ x * y = 0"
                },
                {
                    "args": "",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.0",
                        "3.2.2"
                    ],
                    "rule": "intros",
                    "th": "x = 0 ∨ y = 0 ⊢ y = 0 ⟶ x * y = 0"
                },
                {
                    "args": "disjE",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = 0 ∨ y = 0 ⊢ x * y = 0"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = 0 ∨ y = 0 ⟶ x * y = 0"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x * y = 0 ⟷ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ x * y = 0 ⟷ x = 0 ∨ y = 0"
                }
            ],
            "prop": "(x * y = 0) <--> (x = 0) | (y = 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "case": "x = 0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal": "real_inverse x * x * y = y",
                    "goal_id": "1.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "real_mul_linv"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_mult_assoc"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.5"
                    ],
                    "goal_id": "1.6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.6"
                    ],
                    "goal_id": "1.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "1.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_pos",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_0, {}, {n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "real_of_nat_le, (of_nat::nat ⇒ real) 0 ≤ of_nat n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) 0 ≤ of_nat n"
                },
                {
                    "args": "real_zero_def, (0::real) ≤ of_nat n",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (0::real) ≤ of_nat n"
                }
            ],
            "prop": "(0::real) <= of_nat n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_of_nat_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_one_def, (1::real) = of_nat 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = of_nat 1"
                },
                {
                    "args": "real_nat_power_def_1, (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat 1"
                },
                {
                    "args": "nat_nat_power_def_1, (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat (x ^ (0::nat))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ (0::nat) = of_nat (x ^ (0::nat))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⟶ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)"
                },
                {
                    "args": "real_of_nat_mul, (of_nat::nat ⇒ real) x * of_nat (x ^ n) = of_nat (x * x ^ n)",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (of_nat::nat ⇒ real) x * of_nat (x ^ n) = of_nat (x * x ^ n)"
                },
                {
                    "args": "(of_nat::nat ⇒ real) x * of_nat x ^ n = of_nat (x * x ^ n)",
                    "id": "3.3",
                    "prevs": [
                        "3.1",
                        "3.2",
                        "3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x * of_nat x ^ n = of_nat (x * x ^ n)"
                },
                {
                    "args": "real_nat_power_def_2, (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x * x ^ n)",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x * x ^ n)"
                },
                {
                    "args": "nat_nat_power_def_2, (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⊢ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n) ⟶ (of_nat::nat ⇒ real) x ^ Suc n = of_nat (x ^ Suc n)"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (of_nat::nat ⇒ real) x ^ n = of_nat (x ^ n)"
                }
            ],
            "prop": "(of_nat::nat=>real) x ^ n = of_nat (x ^ n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_of_nat_mul"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_neg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "if_true, (1::real) = (if true then 1 else -1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = (if true then 1 else -1)"
                },
                {
                    "args": "even_def_1, (1::real) = (if even 0 then 1 else -1)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = (if even 0 then 1 else -1)"
                },
                {
                    "args": "real_nat_power_def_1, -x ^ (0::nat) = (if even 0 then x ^ (0::nat) else -(x ^ (0::nat)))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x ^ (0::nat) = (if even 0 then x ^ (0::nat) else -(x ^ (0::nat)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. -x ^ n = (if even n then x ^ n else -(x ^ n)) ⟶ -x ^ Suc n = (if even (Suc n) then x ^ Suc n else -(x ^ Suc n))"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "-x ^ n = (if even n then x ^ n else -(x ^ n))",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x ^ n = (if even n then x ^ n else -(x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ even n ⟶ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "even n",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "double_neg",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "even n ⊢ ¬¬(even n)"
                },
                {
                    "args": "real_mul_lneg, -x * x ^ n = -(x * x ^ n)",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x * x ^ n = -(x * x ^ n)"
                },
                {
                    "args": "if_not_P, -x * x ^ n = (if ¬(even n) then x * x ^ n else -(x * x ^ n))",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.2",
                        "3.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, -x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * x ^ n = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "if_P, -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))",
                    "id": "3.2.4",
                    "prevs": [
                        "3.2.3",
                        "3.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, -x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.0",
                        "3.2.4"
                    ],
                    "rule": "intros",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ even n ⟶ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ ¬(even n) ⟶ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "¬(even n)",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(even n) ⊢ ¬(even n)"
                },
                {
                    "args": "real_neg_neg, --(x * x ^ n) = x * x ^ n",
                    "id": "3.3.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ --(x * x ^ n) = x * x ^ n"
                },
                {
                    "args": "real_mul_lneg, -(-x * x ^ n) = x * x ^ n",
                    "id": "3.3.2",
                    "prevs": [
                        "3.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)), ¬(even n) ⊢ -(-x * x ^ n) = x * x ^ n"
                },
                {
                    "args": "real_mul_rneg, -x * -(x ^ n) = x * x ^ n",
                    "id": "3.3.3",
                    "prevs": [
                        "3.3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)), ¬(even n) ⊢ -x * -(x ^ n) = x * x ^ n"
                },
                {
                    "args": "if_P, -x * -(x ^ n) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.3",
                        "3.3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even n), -x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * -(x ^ n) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "if_not_P, -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))",
                    "id": "3.3.5",
                    "prevs": [
                        "3.3.4",
                        "3.3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even n), -x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "",
                    "id": "3.3.6",
                    "prevs": [
                        "3.3.0",
                        "3.3.5"
                    ],
                    "rule": "intros",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ ¬(even n) ⟶ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "classical_cases",
                    "id": "3.4",
                    "prevs": [
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * (if even n then x ^ n else -(x ^ n)) = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "-x * -x ^ n = (if ¬(even n) then x * x ^ n else -(x * x ^ n))",
                    "id": "3.5",
                    "prevs": [
                        "3.1",
                        "3.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x * -x ^ n = (if ¬(even n) then x * x ^ n else -(x * x ^ n))"
                },
                {
                    "args": "real_nat_power_def_2, -x ^ Suc n = (if ¬(even n) then x ^ Suc n else -(x ^ Suc n))",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x ^ Suc n = (if ¬(even n) then x ^ Suc n else -(x ^ Suc n))"
                },
                {
                    "args": "even_def_2, -x ^ Suc n = (if even (Suc n) then x ^ Suc n else -(x ^ Suc n))",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "-x ^ n = (if even n then x ^ n else -(x ^ n)) ⊢ -x ^ Suc n = (if even (Suc n) then x ^ Suc n else -(x ^ Suc n))"
                },
                {
                    "args": "",
                    "id": "3.8",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. -x ^ n = (if even n then x ^ n else -(x ^ n)) ⟶ -x ^ Suc n = (if even (Suc n) then x ^ Suc n else -(x ^ Suc n))"
                },
                {
                    "args": "nat_induct, {}, {P: λn. -x ^ n = (if even n then x ^ n else -(x ^ n)), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ -x ^ n = (if even n then x ^ n else -(x ^ n))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ -x ^ n = (if even n then x ^ n else -(x ^ n))"
                }
            ],
            "prop": "(-x) ^ n = (if even n then x ^ n else -(x ^ n))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "even_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_true"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "case": "even n",
                    "goal_id": "3.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "3.2.1"
                    ],
                    "goal_id": "3.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "3.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lneg"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rneg"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lneg"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_neg_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "greater_eq",
            "prop": "m ≥ n ⟷ n ≤ m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "greater",
            "prop": "m > n ⟷ n < m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "abs",
            "prop": "abs n = (if 0 ≤ n then n else -n)",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_nat",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_0, {}, {n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "if_P, (if 0 ≤ n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 ≤ n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n"
                },
                {
                    "args": "real_of_nat_le, (if (of_nat::nat ⇒ real) 0 ≤ of_nat n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if (of_nat::nat ⇒ real) 0 ≤ of_nat n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n"
                },
                {
                    "args": "real_zero_def, (if (0::real) ≤ of_nat n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if (0::real) ≤ of_nat n then (of_nat::nat ⇒ real) n else -(of_nat n)) = of_nat n"
                },
                {
                    "args": "real_abs_def, abs ((of_nat::nat ⇒ real) n) = of_nat n",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs ((of_nat::nat ⇒ real) n) = of_nat n"
                }
            ],
            "prop": "abs ((of_nat::nat ⇒ real) n) = of_nat n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal": "0 <= n",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_neg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "abs (-x) = abs x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ abs (-x) = abs x"
                }
            ],
            "prop": "abs (-x) = abs x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_eqI_from_lt_gt",
            "prop": "(x < y --> false) --> (y < x --> false) --> x = y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "max",
            "prop": "max m n = (if m ≤ n then n else m)",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "min",
            "prop": "min m n = (if m ≤ n then m else n)",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_lt_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x ∧ 0 < y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ∧ 0 < y ⊢ 0 < x ∧ 0 < y"
                },
                {
                    "args": "real_lt_le",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 < x ∧ 0 < y ⊢ (0 ≤ x ∧ ¬(0 = x)) ∧ 0 ≤ y ∧ ¬(0 = y)"
                },
                {
                    "args": "conjD1, {}, {A: 0 ≤ x ∧ ¬(0 = x), B: 0 ≤ y ∧ ¬(0 = y)}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ x ∧ ¬(0 = x)"
                },
                {
                    "args": "conjD2, {}, {A: 0 ≤ x ∧ ¬(0 = x), B: 0 ≤ y ∧ ¬(0 = y)}",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ y ∧ ¬(0 = y)"
                },
                {
                    "args": "conjD1",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ x"
                },
                {
                    "args": "conjD1",
                    "id": "5",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ y"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ x ∧ 0 ≤ y"
                },
                {
                    "args": "real_le_mul",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ x * y"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < x ∧ 0 < y ⊢ 0 = x * y ⟶ false"
                },
                {
                    "args": "0 = x * y",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 = x * y ⊢ 0 = x * y"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "8.1",
                    "prevs": [
                        "8.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 = x * y ⊢ x * y = 0"
                },
                {
                    "args": "real_entire",
                    "id": "8.2",
                    "prevs": [
                        "8.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 = x * y ⊢ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "8.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < x ∧ 0 < y, 0 = x * y ⊢ x = 0 ⟶ false"
                },
                {
                    "args": "x = 0",
                    "id": "8.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "conjD2, {}, {A: 0 ≤ x, B: ¬(0 = x)}",
                    "id": "8.3.1",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ∧ 0 < y ⊢ ¬(0 = x)"
                },
                {
                    "args": "",
                    "id": "8.3.2",
                    "prevs": [
                        "8.3.0",
                        "8.3.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x = 0, 0 < x ∧ 0 < y ⊢ ¬((0::real) = 0)"
                },
                {
                    "args": "eq_refl, {a: real}, {x: (0::real)}",
                    "id": "8.3.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) = 0"
                },
                {
                    "args": "negE",
                    "id": "8.3.4",
                    "prevs": [
                        "8.3.2",
                        "8.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = 0, 0 < x ∧ 0 < y, 0 = x * y ⊢ false"
                },
                {
                    "args": "",
                    "id": "8.3.5",
                    "prevs": [
                        "8.3.0",
                        "8.3.4"
                    ],
                    "rule": "intros",
                    "th": "0 < x ∧ 0 < y, 0 = x * y ⊢ x = 0 ⟶ false"
                },
                {
                    "args": "conjD2, {}, {A: 0 ≤ y, B: ¬(0 = y)}",
                    "id": "8.4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ∧ 0 < y ⊢ ¬(0 = y)"
                },
                {
                    "args": "",
                    "id": "8.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < x ∧ 0 < y, 0 = x * y ⊢ y = 0 ⟶ false"
                },
                {
                    "args": "y = 0",
                    "id": "8.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = 0 ⊢ y = 0"
                },
                {
                    "args": "",
                    "id": "8.5.1",
                    "prevs": [
                        "8.5.0",
                        "8.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "y = 0, 0 < x ∧ 0 < y ⊢ ¬((0::real) = 0)"
                },
                {
                    "args": "eq_refl, {a: real}, {x: (0::real)}",
                    "id": "8.5.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) = 0"
                },
                {
                    "args": "negE",
                    "id": "8.5.3",
                    "prevs": [
                        "8.5.1",
                        "8.5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "y = 0, 0 < x ∧ 0 < y, 0 = x * y ⊢ false"
                },
                {
                    "args": "",
                    "id": "8.5.4",
                    "prevs": [
                        "8.5.0",
                        "8.5.3"
                    ],
                    "rule": "intros",
                    "th": "0 < x ∧ 0 < y, 0 = x * y ⊢ y = 0 ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "8.6",
                    "prevs": [
                        "8.2",
                        "8.3",
                        "8.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 = x * y, 0 < x ∧ 0 < y ⊢ false"
                },
                {
                    "args": "",
                    "id": "8.7",
                    "prevs": [
                        "8.0",
                        "8.6"
                    ],
                    "rule": "intros",
                    "th": "0 < x ∧ 0 < y ⊢ 0 = x * y ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ ¬(0 = x * y)"
                },
                {
                    "args": "conjI",
                    "id": "10",
                    "prevs": [
                        "7",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ∧ 0 < y ⊢ 0 ≤ x * y ∧ ¬(0 = x * y)"
                },
                {
                    "args": "real_lt_le, 0 < x * y",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ∧ 0 < y ⊢ 0 < x * y"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "0",
                        "11"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ∧ 0 < y ⟶ 0 < x * y"
                }
            ],
            "prop": "0 < x & 0 < y --> 0 < x * y",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_lt_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_lt_le"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.0"
                    ],
                    "goal_id": "8.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "8.1"
                    ],
                    "goal_id": "8.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "fact_ids": [
                        "8.2"
                    ],
                    "goal_id": "8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "8.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "8.3.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8.3.0",
                        "8.3.1"
                    ],
                    "goal_id": "8.3.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "8.3.2"
                    ],
                    "goal_id": "8.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "8.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "8.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "8.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.5.0",
                        "8.4"
                    ],
                    "goal_id": "8.5.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "8.5.1"
                    ],
                    "goal_id": "8.5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "8.5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve"
            ],
            "name": "real_lte_total",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y ≤ x ⟶ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "disjI2, {}, {A: ¬(y ≤ x), B: y ≤ x}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "y ≤ x ⊢ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ y ≤ x ⟶ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(y ≤ x) ⟶ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "¬(y ≤ x)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(y ≤ x) ⊢ ¬(y ≤ x)"
                },
                {
                    "args": "disjI1, {}, {A: ¬(y ≤ x), B: y ≤ x}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(y ≤ x) ⊢ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(y ≤ x) ⟶ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(y ≤ x) ∨ y ≤ x"
                },
                {
                    "args": "real_less_def, x < y ∨ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x < y ∨ y ≤ x"
                }
            ],
            "prop": "x < y | y <= x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "case": "y <= x",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_lt_imp_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ⊢ x < y"
                },
                {
                    "args": "real_less_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x < y ⊢ ¬y ≤ x"
                },
                {
                    "args": "real_le_total, {}, {x: x, y: y}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ≤ y ∨ y ≤ x"
                },
                {
                    "args": "x ≤ y ⟶ x ≤ y",
                    "id": "3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x < y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "y ≤ x",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE_gen, {}, {A: y ≤ x, C: x ≤ y}",
                    "id": "4.1",
                    "prevs": [
                        "1",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y, y ≤ x ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "x < y ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ⟶ x ≤ y"
                }
            ],
            "prop": "x <y --> x <= y",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "goal": "x <=y | y <= x",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_total"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_lte_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y ∧ y ≤ z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ∧ y ≤ z ⊢ x < y ∧ y ≤ z"
                },
                {
                    "args": "conjD1, {}, {A: x < y, B: y ≤ z}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y ∧ y ≤ z ⊢ x < y"
                },
                {
                    "args": "real_less_def",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x < y ∧ y ≤ z ⊢ ¬y ≤ x"
                },
                {
                    "args": "conjD2, {}, {A: x < y, B: y ≤ z}",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x < y ∧ y ≤ z ⊢ y ≤ z"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x < y ∧ y ≤ z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "z ≤ x",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "z ≤ x ⊢ z ≤ x"
                },
                {
                    "args": "conjI",
                    "id": "4.1",
                    "prevs": [
                        "3",
                        "4.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ y ≤ z ∧ z ≤ x"
                },
                {
                    "args": "real_le_trans",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "4.3",
                    "prevs": [
                        "2",
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z, z ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "x < y ∧ y ≤ z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y ≤ z ⊢ ¬z ≤ x"
                },
                {
                    "args": "real_less_def, x < z",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x < y ∧ y ≤ z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ∧ y ≤ z ⟶ x < z"
                }
            ],
            "prop": "x < y & y <= z --> x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "param_A": "y <= x",
                    "theorem": "negE"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "param_y": "z",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_let_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ y ∧ y < z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ∧ y < z ⊢ x ≤ y ∧ y < z"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ y < z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "z ≤ x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "z ≤ x ⊢ z ≤ x"
                },
                {
                    "args": "conjD1, {}, {A: x ≤ y, B: y < z}",
                    "id": "1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ y < z ⊢ x ≤ y"
                },
                {
                    "args": "conjD2, {}, {A: x ≤ y, B: y < z}",
                    "id": "1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ y < z ⊢ y < z"
                },
                {
                    "args": "real_less_def",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ y ∧ y < z ⊢ ¬z ≤ y"
                },
                {
                    "args": "conjI",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ z ≤ x ∧ x ≤ y"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ z ≤ y"
                },
                {
                    "args": "negE",
                    "id": "1.6",
                    "prevs": [
                        "1.3",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z, z ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ y < z ⊢ z ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ y < z ⊢ ¬z ≤ x"
                },
                {
                    "args": "real_less_def, x < z",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ y < z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ∧ y < z ⟶ x < z"
                }
            ],
            "prop": "x ≤ y ∧ y < z ⟶ x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "param_A": "z <= y",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "param_y": "x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_lt_trans",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x < y ∧ y < z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ∧ y < z ⊢ x < y ∧ y < z"
                },
                {
                    "args": "conjD1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < y"
                },
                {
                    "args": "conjD2",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ y < z"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ y ≤ z"
                },
                {
                    "args": "conjI",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < y ∧ y ≤ z"
                },
                {
                    "args": "real_lte_trans",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x < y ∧ y < z ⊢ x < z"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x < y ∧ y < z ⟶ x < z"
                }
            ],
            "prop": "x < y ∧ y < z ⟶ x < z",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_y": "y",
                    "theorem": "real_lte_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_le_add",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "0 ≤ x ∧ 0 ≤ y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x ∧ 0 ≤ y"
                },
                {
                    "args": "conjD1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x"
                },
                {
                    "args": "conjD2",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ y"
                },
                {
                    "args": "real_le_ladd_imp, {}, {x: x, y: (0::real), z: y}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x + 0 ≤ x + y"
                },
                {
                    "args": "real_add_rid",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x ≤ x + y"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ x ≤ x + y"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "1",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x ∧ x ≤ x + y"
                },
                {
                    "args": "real_le_trans",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ 0 ≤ y ⊢ 0 ≤ x + y"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ∧ 0 ≤ y ⟶ 0 ≤ x + y"
                }
            ],
            "prop": "0 <= x & 0 <= y --> 0 <= x + y",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_y": "x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal": "x + 0 <= x + y",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_ladd_imp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_resolve"
            ],
            "name": "real_lte_antisym",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬y ≤ x ∧ y ≤ x ⟶ false"
                },
                {
                    "args": "¬y ≤ x ∧ y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ ¬y ≤ x ∧ y ≤ x"
                },
                {
                    "args": "conjD1, {}, {A: ¬y ≤ x, B: y ≤ x}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "conjD2, {}, {A: ¬y ≤ x, B: y ≤ x}",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ∧ y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬y ≤ x ∧ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(¬y ≤ x ∧ y ≤ x)"
                },
                {
                    "args": "real_less_def, ¬(x < y ∧ y ≤ x)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(x < y ∧ y ≤ x)"
                }
            ],
            "prop": "~(x <y & y <=x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_neg_neg, --y ≤ x ⟷ y ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ --y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "real_le_lneg",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ 0 ≤ -y + x ⟷ y ≤ x"
                },
                {
                    "args": "real_add_comm, 0 ≤ x + -y ⟷ y ≤ x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 ≤ x + -y ⟷ y ≤ x"
                },
                {
                    "args": "real_minus_def, 0 ≤ x - y ⟷ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 ≤ x - y ⟷ y ≤ x"
                }
            ],
            "prop": "0 <= x - y <--> y <= x",
            "steps": [
                {
                    "goal": "--y <= x <--> y <= x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_add_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_neg_sub",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ -x + y = y + -x"
                },
                {
                    "args": "real_neg_neg, -x + --y = y + -x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -x + --y = y + -x"
                },
                {
                    "args": "real_neg_add, -(x + -y) = y + -x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x + -y) = y + -x"
                },
                {
                    "args": "real_minus_def, -(x - y) = y - x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -(x - y) = y - x"
                }
            ],
            "prop": "-(x-y)= y-x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_add"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_le_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀P. ∀Q. ¬P ∨ Q ∧ P ⟷ ¬P ∨ Q",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀P. ∀Q. ¬P ∨ Q ∧ P ⟷ ¬P ∨ Q"
                },
                {
                    "args": "y ≤ x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "forall_elim",
                    "th": "⊢ ∀Q. ¬(y ≤ x) ∨ Q ∧ y ≤ x ⟷ ¬(y ≤ x) ∨ Q"
                },
                {
                    "args": "x ≤ y",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "forall_elim",
                    "th": "⊢ ¬(y ≤ x) ∨ x ≤ y ∧ y ≤ x ⟷ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ y ⟶ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "x ≤ y",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "disjI2, {}, {A: ¬(y ≤ x), B: x ≤ y}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ⊢ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ⟶ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(y ≤ x) ∨ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "¬(y ≤ x) ∨ x ≤ y",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(y ≤ x) ∨ x ≤ y ⊢ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(y ≤ x) ∨ x ≤ y ⊢ ¬(y ≤ x) ⟶ x ≤ y"
                },
                {
                    "args": "¬(y ≤ x)",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(y ≤ x) ⊢ ¬(y ≤ x)"
                },
                {
                    "args": "real_le_total, {}, {x: x, y: y}",
                    "id": "4.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ≤ y ∨ y ≤ x"
                },
                {
                    "args": "x ≤ y ⟶ x ≤ y",
                    "id": "4.1.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(y ≤ x) ∨ x ≤ y, ¬(y ≤ x) ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "y ≤ x",
                    "id": "4.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "negE_gen, {}, {A: y ≤ x, C: x ≤ y}",
                    "id": "4.1.3.1",
                    "prevs": [
                        "4.1.0",
                        "4.1.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(y ≤ x), ¬(y ≤ x) ∨ x ≤ y, y ≤ x ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.1.3.2",
                    "prevs": [
                        "4.1.3.0",
                        "4.1.3.1"
                    ],
                    "rule": "intros",
                    "th": "¬(y ≤ x) ∨ x ≤ y, ¬(y ≤ x) ⊢ y ≤ x ⟶ x ≤ y"
                },
                {
                    "args": "disjE",
                    "id": "4.1.4",
                    "prevs": [
                        "4.1.1",
                        "4.1.2",
                        "4.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(y ≤ x) ∨ x ≤ y, ¬(y ≤ x) ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.1.5",
                    "prevs": [
                        "4.1.0",
                        "4.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(y ≤ x) ∨ x ≤ y ⊢ ¬(y ≤ x) ⟶ x ≤ y"
                },
                {
                    "args": "x ≤ y ⟶ x ≤ y",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "disjE",
                    "id": "4.3",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(y ≤ x) ∨ x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(y ≤ x) ∨ x ≤ y ⟶ x ≤ y"
                },
                {
                    "args": "iffI",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ x ≤ y ⟷ ¬(y ≤ x) ∨ x ≤ y"
                },
                {
                    "args": "x ≤ y ⟷ ¬(y ≤ x) ∨ x ≤ y ∧ y ≤ x",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x ≤ y ⟷ ¬(y ≤ x) ∨ x ≤ y ∧ y ≤ x"
                },
                {
                    "args": "real_less_def, x ≤ y ⟷ x < y ∨ x ≤ y ∧ y ≤ x",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ≤ y ⟷ x < y ∨ x ≤ y ∧ y ≤ x"
                },
                {
                    "args": "real_le_antisym, x ≤ y ⟷ x < y ∨ x = y",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ x ≤ y ⟷ x < y ∨ x = y"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ⟷ x < y ∨ x = y"
                }
            ],
            "prop": "x <= y <--> x <y | x = y",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_le_antisym"
                },
                {
                    "goal": "!P::bool. !Q. ((~P) | Q & P) <--> ((~P) | Q)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "forall_elim",
                    "s": "y ≤ x"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "forall_elim",
                    "s": "x ≤ y"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "param_y": "y",
                    "theorem": "real_le_total"
                },
                {
                    "fact_ids": [
                        "4.1.1"
                    ],
                    "goal_id": "4.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.1.0"
                    ],
                    "goal_id": "4.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_lt",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "real_neg_sub, x - y = -(y - x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y = -(y - x)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ¬0 ≤ y - x + 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "real_le_lneg, ¬-(y - x) ≤ 0 ⟷ ¬x ≤ y",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬-(y - x) ≤ 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "¬x - y ≤ 0 ⟷ ¬x ≤ y",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ ¬x - y ≤ 0 ⟷ ¬x ≤ y"
                },
                {
                    "args": "real_less_def, 0 < x - y ⟷ y < x",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 < x - y ⟷ y < x"
                }
            ],
            "prop": "0<x-y <--> y < x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal": "x - y = -(y - x)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_neg_sub"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lneg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_not_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬¬y ≤ x ⟶ y ≤ x"
                },
                {
                    "args": "¬¬y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬y ≤ x ⊢ ¬¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "y ≤ x",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "",
                    "id": "0.1.1.0",
                    "prevs": [
                        "0.1.1",
                        "0.1.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.1.1.1",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.0"
                    ],
                    "rule": "intros",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "0.1.3",
                    "prevs": [
                        "0.0",
                        "0.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.0",
                        "0.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬¬y ≤ x ⊢ y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE_gen, {}, {A: ¬y ≤ x, C: y ≤ x}",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬¬y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬¬y ≤ x ⟶ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ y ≤ x ⟶ ¬¬y ≤ x"
                },
                {
                    "args": "y ≤ x",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ≤ x ⊢ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "y ≤ x ⊢ ¬y ≤ x ⟶ false"
                },
                {
                    "args": "¬y ≤ x",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "negE",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x, y ≤ x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "y ≤ x ⊢ ¬y ≤ x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "y ≤ x ⊢ ¬¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ y ≤ x ⟶ ¬¬y ≤ x"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬¬y ≤ x ⟷ y ≤ x"
                },
                {
                    "args": "real_less_def, ¬x < y ⟷ y ≤ x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬x < y ⟷ y ≤ x"
                }
            ],
            "prop": "~(x < y) <--> y <= x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.1"
                    ],
                    "goal_id": "0.1.1.0",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0",
                        "1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_le_antisym, x - y = 0 ⟷ x - y ≤ 0 ∧ 0 ≤ x - y",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y = 0 ⟷ x - y ≤ 0 ∧ 0 ≤ x - y"
                },
                {
                    "args": "real_not_lt, x - y ≤ 0 ⟷ ¬0 < x - y",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y ≤ 0 ⟷ ¬0 < x - y"
                },
                {
                    "args": "real_le_antisym, x ≤ y ∧ y ≤ x ⟷ x = y",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ≤ y ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_not_lt, ¬y < x ∧ y ≤ x ⟷ x = y",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬y < x ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_sub_lt, ¬0 < x - y ∧ y ≤ x ⟷ x = y",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬0 < x - y ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "x - y ≤ 0 ∧ y ≤ x ⟷ x = y",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x - y ≤ 0 ∧ y ≤ x ⟷ x = y"
                },
                {
                    "args": "real_sub_le, x - y ≤ 0 ∧ 0 ≤ x - y ⟷ x = y",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - y ≤ 0 ∧ 0 ≤ x - y ⟷ x = y"
                },
                {
                    "args": "x - y = 0 ⟷ x = y",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ x - y = 0 ⟷ x = y"
                }
            ],
            "prop": "x-y=0 <--> x=y",
            "steps": [
                {
                    "goal": "x - y = 0 <--> x - y <= 0 & 0 <= x - y",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_antisym"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_sub_le"
                },
                {
                    "goal": "x - y <= 0 <--> ~(0 < x - y)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_sub_lt"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_antisym"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_lt_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬y ≤ x ⟶ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "¬y ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬y ≤ x ⊢ ¬y ≤ x"
                },
                {
                    "args": "real_le_lt",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬y ≤ x ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "real_less_def, x < y",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬y ≤ x ⊢ x < y"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ x ≤ y"
                },
                {
                    "args": "real_le_lt",
                    "id": "0.4",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬y ≤ x ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬y ≤ x ⊢ x ≤ y ⟶ false"
                },
                {
                    "args": "x ≤ y",
                    "id": "0.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "",
                    "id": "0.5.1",
                    "prevs": [
                        "0.5",
                        "0.3"
                    ],
                    "rule": "apply_fact",
                    "th": "¬y ≤ x, x ≤ y ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.5.2",
                    "prevs": [
                        "0.5.0",
                        "0.5.1"
                    ],
                    "rule": "intros",
                    "th": "¬y ≤ x ⊢ x ≤ y ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ ¬x ≤ y"
                },
                {
                    "args": "real_less_def, y < x",
                    "id": "0.7",
                    "prevs": [
                        "0.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬y ≤ x ⊢ y < x"
                },
                {
                    "args": "disjI1, {}, {A: y < x, B: y = x}",
                    "id": "0.8",
                    "prevs": [
                        "0.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ⊢ y < x ∨ y = x"
                },
                {
                    "args": "negE_gen, {}, {A: y < x ∨ y = x, C: ¬x = y}",
                    "id": "0.9",
                    "prevs": [
                        "0.4",
                        "0.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬y ≤ x ⊢ ¬x = y"
                },
                {
                    "args": "conjI",
                    "id": "0.10",
                    "prevs": [
                        "0.3",
                        "0.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬y ≤ x ⊢ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "",
                    "id": "0.11",
                    "prevs": [
                        "0.0",
                        "0.10"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬y ≤ x ⟶ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x ≤ y ∧ ¬x = y ⟶ ¬y ≤ x"
                },
                {
                    "args": "x ≤ y ∧ ¬x = y",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ y ∧ ¬x = y ⊢ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "conjD1, {}, {A: x ≤ y, B: ¬x = y}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ ¬x = y ⊢ x ≤ y"
                },
                {
                    "args": "conjD2, {}, {A: x ≤ y, B: ¬x = y}",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x = y"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x ≤ y ∨ y = x ⟶ false"
                },
                {
                    "args": "¬x ≤ y ∨ y = x",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ∨ y = x"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ⟶ false"
                },
                {
                    "args": "¬x ≤ y",
                    "id": "1.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x ≤ y ⊢ ¬x ≤ y"
                },
                {
                    "args": "negE",
                    "id": "1.3.1.1",
                    "prevs": [
                        "1.3.1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬x ≤ y, x ≤ y ∧ ¬x = y ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.1.2",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ ¬x ≤ y ⟶ false"
                },
                {
                    "args": "",
                    "id": "1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ y = x ⟶ false"
                },
                {
                    "args": "y = x",
                    "id": "1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = x ⊢ y = x"
                },
                {
                    "args": "",
                    "id": "1.3.2.1",
                    "prevs": [
                        "1.3.2.0",
                        "1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "y = x, x ≤ y ∧ ¬x = y ⊢ ¬x = x"
                },
                {
                    "args": "eq_refl, {a: real}, {x: x}",
                    "id": "1.3.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x = x"
                },
                {
                    "args": "negE",
                    "id": "1.3.2.3",
                    "prevs": [
                        "1.3.2.1",
                        "1.3.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x, y = x ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.2.4",
                    "prevs": [
                        "1.3.2.0",
                        "1.3.2.3"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y, ¬x ≤ y ∨ y = x ⊢ y = x ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.1",
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬x ≤ y ∨ y = x, x ≤ y ∧ ¬x = y ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "intros",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬x ≤ y ∨ y = x ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬(¬x ≤ y ∨ y = x)"
                },
                {
                    "args": "real_less_def, ¬(y < x ∨ y = x)",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬(y < x ∨ y = x)"
                },
                {
                    "args": "real_le_lt, ¬y ≤ x",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ y ∧ ¬x = y ⊢ ¬y ≤ x"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ y ∧ ¬x = y ⟶ ¬y ≤ x"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬y ≤ x ⟷ x ≤ y ∧ ¬x = y"
                },
                {
                    "args": "real_less_def, x < y ⟷ x ≤ y ∧ ¬x = y",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x < y ⟷ x ≤ y ∧ ¬x = y"
                }
            ],
            "prop": "x < y <--> x <= y & ~(x = y)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lt"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_fact",
                    "theorem": "real_le_lt"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.5"
                    ],
                    "goal_id": "0.5.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_le_lt"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.0",
                        "1.1"
                    ],
                    "goal_id": "1.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.2.0",
                        "1.2"
                    ],
                    "goal_id": "1.3.2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.3.2.2",
                    "method_name": "apply_backward_step",
                    "param_A": "x=x",
                    "theorem": "negE"
                },
                {
                    "goal_id": "1.3.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg1",
            "prop": "-x = -1 * x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg2",
            "prop": "x - y = x + -1 * y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_sub_rzero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_add_rid, x + 0 = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + 0 = x"
                },
                {
                    "args": "real_neg_0, x + -0 = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x + -0 = x"
                },
                {
                    "args": "real_minus_def, x - 0 = x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x - 0 = x"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x - 0 = x"
                }
            ],
            "prop": "x - 0 = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_neg_0"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_abs",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(if 0 ≤ abs x then abs x else -abs x) = (if 0 ≤ x then x else -x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (if 0 ≤ abs x then abs x else -abs x) = (if 0 ≤ x then x else -x)"
                },
                {
                    "args": "real_abs_def, abs (abs x) = abs x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (abs x) = abs x"
                }
            ],
            "prop": "abs (abs x) = abs x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_bounds",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x ⟶ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "0 ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x ⊢ x ≤ k ⟶ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "x ≤ k",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ k ⊢ x ≤ k"
                },
                {
                    "args": "conjI",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0",
                        "0.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x ≤ k ⊢ 0 ≤ x ∧ x ≤ k"
                },
                {
                    "args": "real_le_trans",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x ≤ k ⊢ 0 ≤ k"
                },
                {
                    "args": "real_add_rid, 0 ≤ k + 0",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x ≤ k ⊢ 0 ≤ k + 0"
                },
                {
                    "args": "real_le_lneg, -k ≤ 0",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x ≤ k ⊢ -k ≤ 0"
                },
                {
                    "args": "conjI",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.4",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x ≤ k ⊢ -k ≤ 0 ∧ 0 ≤ x"
                },
                {
                    "args": "real_le_trans",
                    "id": "0.1.6",
                    "prevs": [
                        "0.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x ≤ k ⊢ -k ≤ x"
                },
                {
                    "args": "conjI",
                    "id": "0.1.7",
                    "prevs": [
                        "0.1.6",
                        "0.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x ≤ k ⊢ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "0.1.8",
                    "prevs": [
                        "0.1.0",
                        "0.1.7"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x ⊢ x ≤ k ⟶ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x ⊢ -k ≤ x ∧ x ≤ k ⟶ x ≤ k"
                },
                {
                    "args": "-k ≤ x ∧ x ≤ k",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-k ≤ x ∧ x ≤ k ⊢ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "-k ≤ x ∧ x ≤ k ⊢ x ≤ k"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x ⊢ -k ≤ x ∧ x ≤ k ⟶ x ≤ k"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ⊢ x ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "if_P, (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k",
                    "id": "0.4",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(0 ≤ x) ⟶ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "¬(0 ≤ x)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(0 ≤ x) ⊢ ¬(0 ≤ x)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(0 ≤ x) ⊢ -x ≤ k ⟶ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "-x ≤ k",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-x ≤ k ⊢ -x ≤ k"
                },
                {
                    "args": "real_le_lneg",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-x ≤ k ⊢ 0 ≤ x + k"
                },
                {
                    "args": "real_add_comm, 0 ≤ k + x",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ 0 ≤ k + x"
                },
                {
                    "args": "real_le_lneg, -k ≤ x",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ -k ≤ x"
                },
                {
                    "args": "x + x ≤ 0",
                    "id": "1.1.4",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "¬(0 ≤ x) ⊢ x + x ≤ 0"
                },
                {
                    "args": "real_le_rneg, x ≤ -x",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ x ≤ -x"
                },
                {
                    "args": "conjI",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.5",
                        "1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ x ≤ -x ∧ -x ≤ k"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.1.7",
                    "prevs": [
                        "1.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ x ≤ k"
                },
                {
                    "args": "conjI",
                    "id": "1.1.8",
                    "prevs": [
                        "1.1.3",
                        "1.1.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(0 ≤ x), -x ≤ k ⊢ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.9",
                    "prevs": [
                        "1.1.0",
                        "1.1.8"
                    ],
                    "rule": "intros",
                    "th": "¬(0 ≤ x) ⊢ -x ≤ k ⟶ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(0 ≤ x) ⊢ -k ≤ x ∧ x ≤ k ⟶ -x ≤ k"
                },
                {
                    "args": "-k ≤ x ∧ x ≤ k",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "-k ≤ x ∧ x ≤ k ⊢ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "real_le_lneg",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "-k ≤ x ∧ x ≤ k ⊢ 0 ≤ k + x ∧ x ≤ k"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "-k ≤ x ∧ x ≤ k ⊢ 0 ≤ k + x"
                },
                {
                    "args": "real_add_comm, 0 ≤ x + k",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x), -k ≤ x ∧ x ≤ k ⊢ 0 ≤ x + k"
                },
                {
                    "args": "real_le_lneg, -x ≤ k",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x), -k ≤ x ∧ x ≤ k ⊢ -x ≤ k"
                },
                {
                    "args": "",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.0",
                        "1.2.4"
                    ],
                    "rule": "intros",
                    "th": "¬(0 ≤ x) ⊢ -k ≤ x ∧ x ≤ k ⟶ -x ≤ k"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(0 ≤ x) ⊢ -x ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "if_not_P, (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k",
                    "id": "1.4",
                    "prevs": [
                        "1.3",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(0 ≤ x) ⊢ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(0 ≤ x) ⟶ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if 0 ≤ x then x else -x) ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "real_abs_def, abs x ≤ k ⟷ -k ≤ x ∧ x ≤ k",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs x ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs x ≤ k ⟷ -k ≤ x ∧ x ≤ k"
                }
            ],
            "prop": "abs x <= k <--> -k <= x & x <= k",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "case": "0 ≤ x",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "param_y": "(0::real)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "param_y": "x",
                    "theorem": "real_le_trans"
                },
                {
                    "fact_ids": [
                        "0.0",
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_lneg"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_comm"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "apply_backward_step",
                    "param_y": "-x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_rneg"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_lneg"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_le_lneg"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_comm"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "real",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "real_abs_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 ≤ x ⟶ abs (x * y) = abs x * abs y"
                },
                {
                    "args": "0 ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "(if 0 ≤ x * y then x * y else -(x * y)) = (if 0 ≤ x then x else -x) * (if 0 ≤ y then y else -y)",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (if 0 ≤ x * y then x * y else -(x * y)) = (if 0 ≤ x then x else -x) * (if 0 ≤ y then y else -y)"
                },
                {
                    "args": "real_abs_def, abs (x * y) = abs x * abs y",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ abs (x * y) = abs x * abs y"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ abs (x * y) = abs x * abs y"
                },
                {
                    "args": "¬0 ≤ x ⟶ abs (x * y) = abs x * abs y",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬0 ≤ x ⟶ abs (x * y) = abs x * abs y"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ abs (x * y) = abs x * abs y"
                }
            ],
            "prop": "abs (x * y) = abs x * abs y",
            "steps": [
                {
                    "case": "0 <= x",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_abs_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_min_max",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "min x y = -(max (-x) (-y))",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ min x y = -(max (-x) (-y))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ min x y = -(max (-x) (-y))"
                }
            ],
            "prop": "min x y = -max (-x) (-y)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_max_min",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "max x y = -(min (-x) (-y))",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ max x y = -(min (-x) (-y))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ max x y = -(min (-x) (-y))"
                }
            ],
            "prop": "max x y = -(min (-x) (-y))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_pow_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "(0::real) ≤ 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) ≤ 1"
                },
                {
                    "args": "real_nat_power_def_1, 0 ≤ x ^ (0::nat)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ 0 ≤ x ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x ⊢ ∀n. 0 ≤ x ^ n ⟶ 0 ≤ x ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "0 ≤ x ^ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ^ n ⊢ 0 ≤ x ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.2",
                    "prevs": [
                        "0",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, 0 ≤ x ^ n ⊢ 0 ≤ x ∧ 0 ≤ x ^ n"
                },
                {
                    "args": "real_le_mul",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, 0 ≤ x ^ n ⊢ 0 ≤ x * x ^ n"
                },
                {
                    "args": "real_nat_power_def_2, 0 ≤ x ^ Suc n",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, 0 ≤ x ^ n ⊢ 0 ≤ x ^ Suc n"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x ⊢ ∀n. 0 ≤ x ^ n ⟶ 0 ≤ x ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. 0 ≤ x ^ n, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ⊢ 0 ≤ x ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ 0 ≤ x ^ n"
                }
            ],
            "prop": "0 ≤ x ⟶ 0 ≤ x ^ n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "fact_ids": [
                        "0",
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_pow_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "(0::real) < 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 1"
                },
                {
                    "args": "real_nat_power_def_1, 0 < x ^ (0::nat)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ⊢ 0 < x ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < x ⊢ ∀n. 0 < x ^ n ⟶ 0 < x ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "0 < x ^ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ^ n ⊢ 0 < x ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.2",
                    "prevs": [
                        "0",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x, 0 < x ^ n ⊢ 0 < x ∧ 0 < x ^ n"
                },
                {
                    "args": "real_lt_mul",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x, 0 < x ^ n ⊢ 0 < x * x ^ n"
                },
                {
                    "args": "real_nat_power_def_2, 0 < x ^ Suc n",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x, 0 < x ^ n ⊢ 0 < x ^ Suc n"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "0 < x ⊢ ∀n. 0 < x ^ n ⟶ 0 < x ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. 0 < x ^ n, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ⊢ 0 < x ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ 0 < x ^ n"
                }
            ],
            "prop": "0 < x ⟶ 0 < x ^ n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_mul"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_abs_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_abs_nat, abs ((of_nat::nat ⇒ real) 1) = of_nat 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs ((of_nat::nat ⇒ real) 1) = of_nat 1"
                },
                {
                    "args": "real_one_def, abs (1::real) = 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (1::real) = 1"
                },
                {
                    "args": "real_nat_power_def_1, abs (x ^ (0::nat)) = abs x ^ (0::nat)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (x ^ (0::nat)) = abs x ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. abs (x ^ n) = abs x ^ n ⟶ abs (x ^ Suc n) = abs x ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "abs (x ^ n) = abs x ^ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (x ^ n) = abs x ^ n ⊢ abs (x ^ n) = abs x ^ n"
                },
                {
                    "args": "abs x * abs (x ^ n) = abs x * abs x ^ n",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "abs (x ^ n) = abs x ^ n ⊢ abs x * abs (x ^ n) = abs x * abs x ^ n"
                },
                {
                    "args": "real_abs_mul, abs (x * x ^ n) = abs x * abs x ^ n",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "abs (x ^ n) = abs x ^ n ⊢ abs (x * x ^ n) = abs x * abs x ^ n"
                },
                {
                    "args": "real_nat_power_def_2, abs (x ^ Suc n) = abs x ^ Suc n",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "abs (x ^ n) = abs x ^ n ⊢ abs (x ^ Suc n) = abs x ^ Suc n"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. abs (x ^ n) = abs x ^ n ⟶ abs (x ^ Suc n) = abs x ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. abs (x ^ n) = abs x ^ n, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (x ^ n) = abs x ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (x ^ n) = abs x ^ n"
                }
            ],
            "prop": "abs (x ^ n) = (abs x) ^ n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_le_lmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x ∧ y ≤ z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ∧ y ≤ z ⊢ 0 < x ∧ y ≤ z"
                },
                {
                    "args": "x * y ≤ x * z",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < x ∧ y ≤ z ⊢ x * y ≤ x * z"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ∧ y ≤ z ⟶ x * y ≤ x * z"
                }
            ],
            "prop": "0 <= x ∧ y ≤ z ⟶ x * y ≤ x * z",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_lt_lmul:",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "y < z",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y < z ⊢ y < z"
                },
                {
                    "args": "x * y < x * z",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "z3",
                    "th": "y < z, 0 < x ⊢ x * y < x * z"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ y < z ⟶ x * y < x * z"
                }
            ],
            "prop": "0 < x --> y < z ⟶ x * y < x * z",
            "steps": [
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_inverse_divide",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_lid, real_inverse x = 1 * real_inverse x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse x = 1 * real_inverse x"
                },
                {
                    "args": "real_divide_def, real_inverse x = 1 / x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse x = 1 / x"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse x = 1 / x"
                }
            ],
            "prop": "real_inverse x = 1 / x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_mul_linv_uniq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x * y = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x * y = 1 ⊢ x * y = 1"
                },
                {
                    "args": "real_inverse y = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "x * y = 1 ⊢ real_inverse y = x"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ x * y = 1 ⟶ real_inverse y = x"
                }
            ],
            "prop": "x * y = 1 --> real_inverse y = x",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_inv_inv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = 0 ⟶ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "x = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "real_inv_0, real_inverse 0 = 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse 0 = 0"
                },
                {
                    "args": "real_inv_0, real_inverse (real_inverse 0) = 0",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 0 ⊢ real_inverse (real_inverse 0) = 0"
                },
                {
                    "args": "real_inverse (real_inverse x) = x",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0 ⊢ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = 0 ⟶ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(x = 0) ⟶ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "real_mul_linv",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0) ⊢ real_inverse x * x = 1"
                },
                {
                    "args": "real_mult_comm, x * real_inverse x = 1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0) ⊢ x * real_inverse x = 1"
                },
                {
                    "args": "real_mul_linv_uniq",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0) ⊢ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_inverse (real_inverse x) = x"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse (real_inverse x) = x"
                }
            ],
            "prop": "real_inverse (real_inverse x) = x",
            "steps": [
                {
                    "case": "x=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_mul_linv_uniq"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_mul_linv"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_inv_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ real_inverse x = 0 ⟶ x = 0"
                },
                {
                    "args": "real_inverse x = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_inverse x = 0 ⊢ real_inverse x = 0"
                },
                {
                    "args": "real_inv_0, 0 = real_inverse 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = real_inverse 0"
                },
                {
                    "args": "real_inv_0, real_inverse 0 = real_inverse (real_inverse 0)",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "real_inverse x = 0 ⊢ real_inverse 0 = real_inverse (real_inverse 0)"
                },
                {
                    "args": "real_inverse (real_inverse x) = real_inverse (real_inverse 0)",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "real_inverse x = 0 ⊢ real_inverse (real_inverse x) = real_inverse (real_inverse 0)"
                },
                {
                    "args": "real_inv_inv, x = 0",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "real_inverse x = 0 ⊢ x = 0"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse x = 0 ⟶ x = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = 0 ⟶ real_inverse x = 0"
                },
                {
                    "args": "x = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "real_inv_0, real_inverse 0 = 0",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse 0 = 0"
                },
                {
                    "args": "real_inverse x = 0",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0 ⊢ real_inverse x = 0"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = 0 ⟶ real_inverse x = 0"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_inverse x = 0 ⟷ x = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse x = 0 ⟷ x = 0"
                }
            ],
            "prop": "real_inverse x = 0 <--> x = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_inv_inv"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_inv_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = 0 ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "x = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "real_mul_lzero, 0 = 0 * real_inverse y",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = 0 * real_inverse y"
                },
                {
                    "args": "real_inv_0, real_inverse 0 = real_inverse 0 * real_inverse y",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 0 ⊢ real_inverse 0 = real_inverse 0 * real_inverse y"
                },
                {
                    "args": "real_mul_lzero, real_inverse (0 * y) = real_inverse 0 * real_inverse y",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 0 ⊢ real_inverse (0 * y) = real_inverse 0 * real_inverse y"
                },
                {
                    "args": "real_inverse (x * y) = real_inverse x * real_inverse y",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0 ⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = 0 ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(x = 0) ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ y = 0 ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "y = 0",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y = 0 ⊢ y = 0"
                },
                {
                    "args": "real_mul_rzero, 0 = real_inverse x * 0",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = real_inverse x * 0"
                },
                {
                    "args": "real_inv_0, real_inverse 0 = real_inverse x * real_inverse 0",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), y = 0 ⊢ real_inverse 0 = real_inverse x * real_inverse 0"
                },
                {
                    "args": "real_mul_rzero, real_inverse (x * 0) = real_inverse x * real_inverse 0",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), y = 0 ⊢ real_inverse (x * 0) = real_inverse x * real_inverse 0"
                },
                {
                    "args": "real_inverse (x * y) = real_inverse x * real_inverse y",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.0",
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "y = 0, ¬(x = 0) ⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ y = 0 ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ ¬(y = 0) ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "¬(y = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(y = 0) ⊢ ¬(y = 0)"
                },
                {
                    "args": "real_inverse (x * y) = real_inverse x * real_inverse y",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "¬(y = 0), ¬(x = 0) ⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ ¬(y = 0) ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0) ⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse (x * y) = real_inverse x * real_inverse y"
                }
            ],
            "prop": "real_inverse (x*y) = real_inverse x * real_inverse y",
            "steps": [
                {
                    "case": "x=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "y=0",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_0"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0",
                        "1.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_lid, (1::real) = 1 * 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) = 1 * 1"
                },
                {
                    "args": "real_nat_power_def_1, (x * y) ^ (0::nat) = x ^ (0::nat) * y ^ (0::nat)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (x * y) ^ (0::nat) = x ^ (0::nat) * y ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (x * y) ^ n = x ^ n * y ^ n ⟶ (x * y) ^ Suc n = x ^ Suc n * y ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "(x * y) ^ n = x ^ n * y ^ n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(x * y) ^ n = x ^ n * y ^ n ⊢ (x * y) ^ n = x ^ n * y ^ n"
                },
                {
                    "args": "∀a::real. ∀b. ∀c. ∀d. a * b * (c * d) = a * c * (b * d)",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. ∀c. ∀d. a * b * (c * d) = a * c * (b * d)"
                },
                {
                    "args": "x, y, x ^ n, y ^ n",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ x * y * (x ^ n * y ^ n) = x * x ^ n * (y * y ^ n)"
                },
                {
                    "args": "x * y * (x * y) ^ n = x * x ^ n * (y * y ^ n)",
                    "id": "2.4",
                    "prevs": [
                        "2.1",
                        "2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "(x * y) ^ n = x ^ n * y ^ n ⊢ x * y * (x * y) ^ n = x * x ^ n * (y * y ^ n)"
                },
                {
                    "args": "real_nat_power_def_2, (x * y) ^ Suc n = x ^ Suc n * y ^ Suc n",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(x * y) ^ n = x ^ n * y ^ n ⊢ (x * y) ^ Suc n = x ^ Suc n * y ^ Suc n"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (x * y) ^ n = x ^ n * y ^ n ⟶ (x * y) ^ Suc n = x ^ Suc n * y ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. (x * y) ^ n = x ^ n * y ^ n, x: n}",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (x * y) ^ n = x ^ n * y ^ n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (x * y) ^ n = x ^ n * y ^ n"
                }
            ],
            "prop": "(x * y) ^ n = x^n * y^n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. !c. !d. a*b*(c*d)=a*c*(b*d)",
                    "goal_id": "2.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": " real_pow_inv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 = real_inverse 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 1 = real_inverse 1"
                },
                {
                    "args": "real_nat_power_def_1, real_inverse x ^ (0::nat) = real_inverse (x ^ (0::nat))",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse x ^ (0::nat) = real_inverse (x ^ (0::nat))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. real_inverse x ^ n = real_inverse (x ^ n) ⟶ real_inverse x ^ Suc n = real_inverse (x ^ Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "real_inverse x ^ n = real_inverse (x ^ n)",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_inverse x ^ n = real_inverse (x ^ n) ⊢ real_inverse x ^ n = real_inverse (x ^ n)"
                },
                {
                    "args": "real_inv_mul, real_inverse x * real_inverse (x ^ n) = real_inverse (x * x ^ n)",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_inverse x * real_inverse (x ^ n) = real_inverse (x * x ^ n)"
                },
                {
                    "args": "real_inverse x * real_inverse x ^ n = real_inverse (x * x ^ n)",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "real_inverse x ^ n = real_inverse (x ^ n) ⊢ real_inverse x * real_inverse x ^ n = real_inverse (x * x ^ n)"
                },
                {
                    "args": "real_nat_power_def_2, real_inverse x ^ Suc n = real_inverse (x ^ Suc n)",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "real_inverse x ^ n = real_inverse (x ^ n) ⊢ real_inverse x ^ Suc n = real_inverse (x ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. real_inverse x ^ n = real_inverse (x ^ n) ⟶ real_inverse x ^ Suc n = real_inverse (x ^ Suc n)"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. real_inverse x ^ n = real_inverse (x ^ n), x: n}",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_inverse x ^ n = real_inverse (x ^ n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_inverse x ^ n = real_inverse (x ^ n)"
                }
            ],
            "prop": "(real_inverse x) ^ n = real_inverse (x ^ n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_mul"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_div",
            "num_gaps": 0,
            "proof": [
                {
                    "args": " real_pow_inv, x ^ n * real_inverse y ^ n = x ^ n * real_inverse (y ^ n)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ n * real_inverse y ^ n = x ^ n * real_inverse (y ^ n)"
                },
                {
                    "args": "real_pow_mul, (x * real_inverse y) ^ n = x ^ n * real_inverse (y ^ n)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (x * real_inverse y) ^ n = x ^ n * real_inverse (y ^ n)"
                },
                {
                    "args": "real_divide_def, (x / y) ^ n = x ^ n / y ^ n",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (x / y) ^ n = x ^ n / y ^ n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (x / y) ^ n = x ^ n / y ^ n"
                }
            ],
            "prop": "(x / y) ^ n = x ^ n / y ^ n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_mul"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": " real_pow_inv"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_div_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_inv_eq_0, x = 0 ∨ real_inverse y = 0 ⟷ x = 0 ∨ y = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x = 0 ∨ real_inverse y = 0 ⟷ x = 0 ∨ y = 0"
                },
                {
                    "args": "real_entire, x * real_inverse y = 0 ⟷ x = 0 ∨ y = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * real_inverse y = 0 ⟷ x = 0 ∨ y = 0"
                },
                {
                    "args": "real_divide_def, x / y = 0 ⟷ x = 0 ∨ y = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x / y = 0 ⟷ x = 0 ∨ y = 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x / y = 0 ⟷ x = 0 ∨ y = 0"
                }
            ],
            "prop": "x/y=0 <--> x=0 | y=0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_eq_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_add",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_lid, x ^ m = 1 * x ^ m",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ m = 1 * x ^ m"
                },
                {
                    "args": "real_mult_comm, x ^ m = x ^ m * 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ m = x ^ m * 1"
                },
                {
                    "args": "add_0_right, x ^ (m + 0) = x ^ m * 1",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (m + 0) = x ^ m * 1"
                },
                {
                    "args": "real_nat_power_def_1, x ^ (m + 0) = x ^ m * x ^ (0::nat)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (m + 0) = x ^ m * x ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. x ^ (m + n) = x ^ m * x ^ n ⟶ x ^ (m + Suc n) = x ^ m * x ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "x ^ (m + n) = x ^ m * x ^ n",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ (m + n) = x ^ m * x ^ n ⊢ x ^ (m + n) = x ^ m * x ^ n"
                },
                {
                    "args": "∀a::real. ∀b. ∀c. a * (b * c) = b * (a * c)",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. ∀c. a * (b * c) = b * (a * c)"
                },
                {
                    "args": "x, x ^ m, x ^ n",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ x * (x ^ m * x ^ n) = x ^ m * (x * x ^ n)"
                },
                {
                    "args": "x * x ^ (m + n) = x ^ m * (x * x ^ n)",
                    "id": "4.4",
                    "prevs": [
                        "4.1",
                        "4.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ^ (m + n) = x ^ m * x ^ n ⊢ x * x ^ (m + n) = x ^ m * (x * x ^ n)"
                },
                {
                    "args": "real_nat_power_def_2, x ^ Suc (m + n) = x ^ m * x ^ Suc n",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ (m + n) = x ^ m * x ^ n ⊢ x ^ Suc (m + n) = x ^ m * x ^ Suc n"
                },
                {
                    "args": "add_Suc_right, x ^ (m + Suc n) = x ^ m * x ^ Suc n",
                    "id": "4.6",
                    "prevs": [
                        "4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ (m + n) = x ^ m * x ^ n ⊢ x ^ (m + Suc n) = x ^ m * x ^ Suc n"
                },
                {
                    "args": "",
                    "id": "4.7",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. x ^ (m + n) = x ^ m * x ^ n ⟶ x ^ (m + Suc n) = x ^ m * x ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn. x ^ (m + n) = x ^ m * x ^ n, x: n}",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ^ (m + n) = x ^ m * x ^ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ^ (m + n) = x ^ m * x ^ n"
                }
            ],
            "prop": "x^(m+n)= x^m*x^n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_0_right"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_Suc_right"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. !c. a*(b*c)=b*(a*c)",
                    "goal_id": "4.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_pow_nz",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(x = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "¬((1::real) = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬((1::real) = 0)"
                },
                {
                    "args": "real_nat_power_def_1, ¬(x ^ (0::nat) = 0)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0) ⊢ ¬(x ^ (0::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ ∀n. ¬(x ^ n = 0) ⟶ ¬(x ^ Suc n = 0)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "¬(x ^ n = 0)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ^ n = 0) ⊢ ¬(x ^ n = 0)"
                },
                {
                    "args": "conjI",
                    "id": "3.2",
                    "prevs": [
                        "0",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0), ¬(x ^ n = 0) ⊢ ¬(x = 0) ∧ ¬(x ^ n = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(x = 0 ∨ x ^ n = 0)",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(x ^ n = 0) ⊢ ¬(x = 0 ∨ x ^ n = 0)"
                },
                {
                    "args": "real_entire, ¬(x * x ^ n = 0)",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(x ^ n = 0) ⊢ ¬(x * x ^ n = 0)"
                },
                {
                    "args": "real_nat_power_def_2, ¬(x ^ Suc n = 0)",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(x ^ n = 0) ⊢ ¬(x ^ Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ ∀n. ¬(x ^ n = 0) ⟶ ¬(x ^ Suc n = 0)"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. ¬(x ^ n = 0), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0) ⊢ ¬(x ^ n = 0)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ ¬(x ^ n = 0)"
                }
            ],
            "prop": "~(x=0)-->~(x^n=0)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "0",
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_sub",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(x = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "m ≤ n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "less_eq_exist",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ≤ n ⊢ ∃p. n = m + p"
                },
                {
                    "args": "p, nat",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "n = m + p",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = m + p ⊢ n = m + p"
                },
                {
                    "args": "real_pow_nz, {}, {n: m, x: x}",
                    "id": "5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0) ⊢ ¬(x ^ m = 0)"
                },
                {
                    "args": "real_mul_linv, {}, {x: x ^ m}",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0) ⊢ real_inverse (x ^ m) * x ^ m = 1"
                },
                {
                    "args": "real_mul_lid, x ^ p = 1 * x ^ p",
                    "id": "7",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ p = 1 * x ^ p"
                },
                {
                    "args": "x ^ p = real_inverse (x ^ m) * x ^ m * x ^ p",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ p = real_inverse (x ^ m) * x ^ m * x ^ p"
                },
                {
                    "args": "real_mult_assoc, x ^ p = real_inverse (x ^ m) * (x ^ m * x ^ p)",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ p = real_inverse (x ^ m) * (x ^ m * x ^ p)"
                },
                {
                    "args": "real_mult_comm, x ^ p = x ^ m * x ^ p * real_inverse (x ^ m)",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ p = x ^ m * x ^ p * real_inverse (x ^ m)"
                },
                {
                    "args": "real_divide_def, x ^ p = x ^ m * x ^ p / x ^ m",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ p = x ^ m * x ^ p / x ^ m"
                },
                {
                    "args": "real_pow_add, x ^ p = x ^ (m + p) / x ^ m",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ p = x ^ (m + p) / x ^ m"
                },
                {
                    "args": "nat_plus_minus_2, x ^ (m + p - m) = x ^ (m + p) / x ^ m",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), m ≤ n, n = m + p ⊢ x ^ (m + p - m) = x ^ (m + p) / x ^ m"
                },
                {
                    "args": "x ^ (n - m) = x ^ n / x ^ m",
                    "id": "14",
                    "prevs": [
                        "4",
                        "13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = m + p, ¬(x = 0), m ≤ n ⊢ x ^ (n - m) = x ^ n / x ^ m"
                },
                {
                    "args": "∃p. n = m + p",
                    "id": "15",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "14"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ m ≤ n ⟶ x ^ (n - m) = x ^ n / x ^ m"
                }
            ],
            "prop": "¬(x = 0) --> m ≤ n ⟶ x ^ (n - m) = x ^ n / x ^ m",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_eq_exist"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_minus_2"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_assoc"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "param_n": "m",
                    "theorem": "real_pow_nz"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "real_mul_linv"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_le_ldiv_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < z ⊢ 0 < z"
                },
                {
                    "args": "x / z ≤ y ⟷ x ≤ y * z",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < z ⊢ x / z ≤ y ⟷ x ≤ y * z"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < z ⟶ x / z ≤ y ⟷ x ≤ y * z"
                }
            ],
            "prop": "0 < z --> (x / z <= y <--> x <= y * z)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mul_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "2 * x = x + x",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 2 * x = x + x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ 2 * x = x + x"
                }
            ],
            "prop": "2 * x = x + x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(1::real) = 0 ⟷ x = 0 ∧ ¬((0::nat) = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (1::real) = 0 ⟷ x = 0 ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "real_nat_power_def_1, x ^ (0::nat) = 0 ⟷ x = 0 ∧ ¬((0::nat) = 0)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (0::nat) = 0 ⟷ x = 0 ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⟶ x ^ Suc n = 0 ⟷ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "n, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0)",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x * x ^ n = 0 ⟶ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "x * x ^ n = 0",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x * x ^ n = 0 ⊢ x * x ^ n = 0"
                },
                {
                    "args": "real_entire",
                    "id": "2.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x * x ^ n = 0 ⊢ x = 0 ∨ x ^ n = 0"
                },
                {
                    "args": "x = 0 ⟶ x = 0",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x = 0 ⟶ x = 0"
                },
                {
                    "args": "",
                    "id": "2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x * x ^ n = 0 ⊢ x ^ n = 0 ⟶ x = 0"
                },
                {
                    "args": "x ^ n = 0",
                    "id": "2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ n = 0 ⊢ x ^ n = 0"
                },
                {
                    "args": "",
                    "id": "2.2.3.1",
                    "prevs": [
                        "2.1",
                        "2.2.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x ^ n = 0 ⊢ x = 0 ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "2.2.3.2",
                    "prevs": [
                        "2.2.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x ^ n = 0 ⊢ x = 0"
                },
                {
                    "args": "",
                    "id": "2.2.3.3",
                    "prevs": [
                        "2.2.3.0",
                        "2.2.3.2"
                    ],
                    "rule": "intros",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x * x ^ n = 0 ⊢ x ^ n = 0 ⟶ x = 0"
                },
                {
                    "args": "disjE",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.1",
                        "2.2.2",
                        "2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x * x ^ n = 0, x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x = 0"
                },
                {
                    "args": "nat_zero_Suc_neq, {}, {n: n}",
                    "id": "2.2.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc n)"
                },
                {
                    "args": "ineq_sym",
                    "id": "2.2.6",
                    "prevs": [
                        "2.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x * x ^ n = 0 ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "conjI",
                    "id": "2.2.7",
                    "prevs": [
                        "2.2.4",
                        "2.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x * x ^ n = 0 ⊢ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "2.2.8",
                    "prevs": [
                        "2.2.0",
                        "2.2.7"
                    ],
                    "rule": "intros",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x * x ^ n = 0 ⟶ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x = 0 ∧ ¬(Suc n = 0) ⟶ x * x ^ n = 0"
                },
                {
                    "args": "x = 0 ∧ ¬(Suc n = 0)",
                    "id": "2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ∧ ¬(Suc n = 0) ⊢ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "2.3.1",
                    "prevs": [
                        "2.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = 0 ∧ ¬(Suc n = 0) ⊢ x = 0"
                },
                {
                    "args": "disjI1, {}, {A: x = 0, B: x ^ n = 0}",
                    "id": "2.3.2",
                    "prevs": [
                        "2.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x = 0 ∧ ¬(Suc n = 0) ⊢ x = 0 ∨ x ^ n = 0"
                },
                {
                    "args": "real_entire, x * x ^ n = 0",
                    "id": "2.3.3",
                    "prevs": [
                        "2.3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x = 0 ∧ ¬(Suc n = 0) ⊢ x * x ^ n = 0"
                },
                {
                    "args": "",
                    "id": "2.3.4",
                    "prevs": [
                        "2.3.0",
                        "2.3.3"
                    ],
                    "rule": "intros",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x = 0 ∧ ¬(Suc n = 0) ⟶ x * x ^ n = 0"
                },
                {
                    "args": "iffI",
                    "id": "2.4",
                    "prevs": [
                        "2.2",
                        "2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x * x ^ n = 0 ⟷ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "real_nat_power_def_2, x ^ Suc n = 0 ⟷ x = 0 ∧ ¬(Suc n = 0)",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⊢ x ^ Suc n = 0 ⟷ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0) ⟶ x ^ Suc n = 0 ⟷ x = 0 ∧ ¬(Suc n = 0)"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0), x: n}",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ^ n = 0 ⟷ x = 0 ∧ ¬(n = 0)"
                }
            ],
            "prop": "(x ^ n = 0) <--> (x = 0) & ~(n=0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "fact_ids": [
                        "2.2.1"
                    ],
                    "goal_id": "2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1",
                        "2.2.3.0"
                    ],
                    "goal_id": "2.2.3.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.2.3.1"
                    ],
                    "goal_id": "2.2.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_entire"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "2.3.0"
                    ],
                    "goal_id": "2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_le_mul2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ 0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z"
                },
                {
                    "args": "conjD1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ 0 ≤ w"
                },
                {
                    "args": "conjD2, {}, {A: 0 ≤ w, B: w ≤ x ∧ 0 ≤ y ∧ y ≤ z}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ w ≤ x ∧ 0 ≤ y ∧ y ≤ z"
                },
                {
                    "args": "conjD2, {}, {A: w ≤ x, B: 0 ≤ y ∧ y ≤ z}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ 0 ≤ y ∧ y ≤ z"
                },
                {
                    "args": "conjD2",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ y ≤ z"
                },
                {
                    "args": "conjI",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ 0 ≤ w ∧ y ≤ z"
                },
                {
                    "args": "real_le_lmul",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ w * y ≤ w * z"
                },
                {
                    "args": "w * z ≤ x * z",
                    "id": "7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ w * z ≤ x * z"
                },
                {
                    "args": "conjI",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ w * y ≤ w * z ∧ w * z ≤ x * z"
                },
                {
                    "args": "real_le_trans",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⊢ w * y ≤ x * z"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ w ∧ w ≤ x ∧ 0 ≤ y ∧ y ≤ z ⟶ w * y ≤ x * z"
                }
            ],
            "prop": [
                "0 <= w & w <= x & 0 <= y & y<=z",
                "--> w*y <= x *z "
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_y": "w*z",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "7",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "w": "real",
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_lt_mul2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ w",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ w ⊢ 0 ≤ w"
                },
                {
                    "args": "w < x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "w < x ⊢ w < x"
                },
                {
                    "args": "0 ≤ y",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ y ⊢ 0 ≤ y"
                },
                {
                    "args": "y < z",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y < z ⊢ y < z"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ y ≤ z"
                },
                {
                    "args": "conjI",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ 0 ≤ w ∧ y ≤ z"
                },
                {
                    "args": "real_le_lmul",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ w * y ≤ w * z"
                },
                {
                    "args": "conjI",
                    "id": "7",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ 0 ≤ y ∧ y < z"
                },
                {
                    "args": "real_let_trans",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ 0 < z"
                },
                {
                    "args": "real_lt_lmul:",
                    "id": "9",
                    "prevs": [
                        "8",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ z * w < z * x"
                },
                {
                    "args": "real_mult_comm, w * z < x * z",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ w * z < x * z"
                },
                {
                    "args": "conjI",
                    "id": "11",
                    "prevs": [
                        "6",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ w * y ≤ w * z ∧ w * z < x * z"
                },
                {
                    "args": "real_let_trans",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ w, w < x, 0 ≤ y, y < z ⊢ w * y < x * z"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "12"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ w ⟶ w < x ⟶ 0 ≤ y ⟶ y < z ⟶ w * y < x * z"
                }
            ],
            "prop": "0 ≤ w --> w < x --> 0 ≤ y --> y < z ⟶ w * y < x * z",
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "param_y": "w*z",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_lmul:"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "param_y": "y",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "w": "real",
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_lt_square",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x * x ⟷ ¬(x = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 0 < x * x ⟷ ¬(x = 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x * x ⟷ ¬(x = 0)"
                }
            ],
            "prop": "0 < x * x <--> ~(x = 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_mul_lid, 1 * x = x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 1 * x = x"
                },
                {
                    "args": "real_mult_comm, x * 1 = x",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * 1 = x"
                },
                {
                    "args": "real_nat_power_def_1, x * x ^ (0::nat) = x",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x * x ^ (0::nat) = x"
                },
                {
                    "args": "real_nat_power_def_2, x ^ Suc 0 = x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ Suc 0 = x"
                },
                {
                    "args": "nat_one_def, x ^ (1::nat) = x",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (1::nat) = x"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ^ (1::nat) = x"
                }
            ],
            "prop": "x ^ (1::nat) = x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_one",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_nat_power_def_1, (1::real) ^ (0::nat) = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) ^ (0::nat) = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (1::real) ^ n = 1 ⟶ (1::real) ^ Suc n = 1"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "(1::real) ^ n = 1",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(1::real) ^ n = 1 ⊢ (1::real) ^ n = 1"
                },
                {
                    "args": "real_mul_lid, (1::real) * 1 ^ n = 1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(1::real) ^ n = 1 ⊢ (1::real) * 1 ^ n = 1"
                },
                {
                    "args": "real_nat_power_def_2, (1::real) ^ Suc n = 1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(1::real) ^ n = 1 ⊢ (1::real) ^ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. (1::real) ^ n = 1 ⟶ (1::real) ^ Suc n = 1"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. (1::real) ^ n = 1, x: n}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::real) ^ n = 1"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (1::real) ^ n = 1"
                }
            ],
            "prop": "(1::real) ^ n = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_down",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < d",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d ⊢ 0 < d"
                },
                {
                    "args": "∃e. 0 < e ∧ e < d",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < d ⊢ ∃e. 0 < e ∧ e < d"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < d ⟶ (∃e. 0 < e ∧ e < d)"
                }
            ],
            "prop": "0 < d --> ?e. 0 < e & e < d",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "d": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_le2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x ∧ x ≤ y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ 0 ≤ x ∧ x ≤ y"
                },
                {
                    "args": "real_le_refl, {}, {x: (1::real)}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::real) ≤ 1"
                },
                {
                    "args": "real_nat_power_def_1, x ^ (0::nat) ≤ y ^ (0::nat)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ x ^ (0::nat) ≤ y ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ ∀n. x ^ n ≤ y ^ n ⟶ x ^ Suc n ≤ y ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "x ^ n ≤ y ^ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ n ≤ y ^ n ⊢ x ^ n ≤ y ^ n"
                },
                {
                    "args": "conjD1",
                    "id": "3.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ 0 ≤ x"
                },
                {
                    "args": "conjD2",
                    "id": "3.3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ x ≤ y"
                },
                {
                    "args": "real_pow_le, {}, {n: n, x: x}",
                    "id": "3.4",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ 0 ≤ x ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.5",
                    "prevs": [
                        "3.4",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ 0 ≤ x ^ n ∧ x ^ n ≤ y ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.6",
                    "prevs": [
                        "3.3",
                        "3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ x ≤ y ∧ 0 ≤ x ^ n ∧ x ^ n ≤ y ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.7",
                    "prevs": [
                        "3.2",
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ 0 ≤ x ∧ x ≤ y ∧ 0 ≤ x ^ n ∧ x ^ n ≤ y ^ n"
                },
                {
                    "args": "real_le_mul2",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ x * x ^ n ≤ y * y ^ n"
                },
                {
                    "args": "real_nat_power_def_2, x ^ Suc n ≤ y ^ Suc n",
                    "id": "3.9",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ∧ x ≤ y, x ^ n ≤ y ^ n ⊢ x ^ Suc n ≤ y ^ Suc n"
                },
                {
                    "args": "",
                    "id": "3.10",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.9"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ ∀n. x ^ n ≤ y ^ n ⟶ x ^ Suc n ≤ y ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. x ^ n ≤ y ^ n, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ∧ x ≤ y ⊢ x ^ n ≤ y ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ∧ x ≤ y ⟶ x ^ n ≤ y ^ n"
                }
            ],
            "prop": "0 <= x & x <= y --> x ^ n <= y ^ n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": " real_pow_le_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ x ⊢ 1 ≤ x"
                },
                {
                    "args": "real_pow_le2, {}, {n: n, x: (1::real), y: x}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ 1 ∧ 1 ≤ x ⟶ 1 ^ n ≤ x ^ n"
                },
                {
                    "args": "real_pow_one",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (0::real) ≤ 1 ∧ 1 ≤ x ⟶ 1 ≤ x ^ n"
                },
                {
                    "args": "(0::real) ≤ 1",
                    "id": "3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) ≤ 1"
                },
                {
                    "args": "conjI",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ⊢ (0::real) ≤ 1 ∧ 1 ≤ x"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "2",
                        "4"
                    ],
                    "rule": "apply_fact",
                    "th": "1 ≤ x ⊢ 1 ≤ x ^ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ 1 ≤ x ⟶ 1 ≤ x ^ n"
                }
            ],
            "prop": "1 <= x --> 1 <= x ^ n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "param_x": "(1::real)",
                    "param_y": "x",
                    "theorem": "real_pow_le2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_1_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x ∧ x ≤ 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ∧ x ≤ 1 ⊢ 0 ≤ x ∧ x ≤ 1"
                },
                {
                    "args": "real_pow_le2, {}, {n: n, x: x, y: (1::real)}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ x ∧ x ≤ 1 ⟶ x ^ n ≤ 1 ^ n"
                },
                {
                    "args": "real_pow_one",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ 0 ≤ x ∧ x ≤ 1 ⟶ x ^ n ≤ 1"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0"
                    ],
                    "rule": "apply_fact",
                    "th": "0 ≤ x ∧ x ≤ 1 ⊢ x ^ n ≤ 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ∧ x ≤ 1 ⟶ x ^ n ≤ 1"
                }
            ],
            "prop": "0 ≤ x ∧ x ≤ 1 ⟶ x ^ n ≤ 1",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "param_x": "x",
                    "param_y": "(1::real)",
                    "theorem": "real_pow_le2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_mono",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 ≤ x ∧ m ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ x ∧ m ≤ n ⊢ 1 ≤ x ∧ m ≤ n"
                },
                {
                    "args": "less_eq_exist",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 ≤ x ∧ m ≤ n ⊢ 1 ≤ x ∧ (∃p. n = m + p)"
                },
                {
                    "args": "conjD2, {}, {A: 1 ≤ x, B: ∃p. n = m + p}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 ≤ x ∧ m ≤ n ⊢ ∃p. n = m + p"
                },
                {
                    "args": "d, nat",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "n = m + d",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = m + d ⊢ n = m + d"
                },
                {
                    "args": "(0::real) ≤ 1",
                    "id": "5",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) ≤ 1"
                },
                {
                    "args": "conjD1",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ m ≤ n ⊢ 1 ≤ x"
                },
                {
                    "args": " real_pow_le_1, {}, {n: m, x: x}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ 1 ≤ x ^ m"
                },
                {
                    "args": "conjI",
                    "id": "8",
                    "prevs": [
                        "5",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ (0::real) ≤ 1 ∧ 1 ≤ x ^ m"
                },
                {
                    "args": "real_le_trans",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ 0 ≤ x ^ m"
                },
                {
                    "args": " real_pow_le_1, {}, {n: d, x: x}",
                    "id": "10",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ 1 ≤ x ^ d"
                },
                {
                    "args": "conjI",
                    "id": "11",
                    "prevs": [
                        "9",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ 0 ≤ x ^ m ∧ 1 ≤ x ^ d"
                },
                {
                    "args": "real_le_lmul",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ x ^ m * 1 ≤ x ^ m * x ^ d"
                },
                {
                    "args": "real_mult_comm",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ 1 * x ^ m ≤ x ^ d * x ^ m"
                },
                {
                    "args": "real_mul_lid",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ x ^ m ≤ x ^ d * x ^ m"
                },
                {
                    "args": "real_mult_comm, x ^ m ≤ x ^ m * x ^ d",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ x ^ m ≤ x ^ m * x ^ d"
                },
                {
                    "args": "real_pow_add, x ^ m ≤ x ^ (m + d)",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ x ∧ m ≤ n, n = m + d ⊢ x ^ m ≤ x ^ (m + d)"
                },
                {
                    "args": "x ^ m ≤ x ^ n",
                    "id": "17",
                    "prevs": [
                        "4",
                        "16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = m + d, 1 ≤ x ∧ m ≤ n ⊢ x ^ m ≤ x ^ n"
                },
                {
                    "args": "∃p. n = m + p",
                    "id": "18",
                    "prevs": [
                        "0",
                        "2",
                        "3",
                        "4",
                        "17"
                    ],
                    "rule": "intros",
                    "th": "⊢ 1 ≤ x ∧ m ≤ n ⟶ x ^ m ≤ x ^ n"
                }
            ],
            "prop": "1 ≤ x ∧ m ≤ n ⟶ x ^ m ≤ x ^ n",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_eq_exist"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_add"
                },
                {
                    "goal": "x ^ m  * 1≤ x ^ m * x ^ d",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "param_y": "(1::real)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": " real_pow_le_1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": " real_pow_le_1"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_lt2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x < y",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < y ⊢ x < y"
                },
                {
                    "args": "¬((0::nat) = 0) ⟶ x ^ (0::nat) < y ^ (0::nat)",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬((0::nat) = 0) ⟶ x ^ (0::nat) < y ^ (0::nat)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x, x < y ⊢ ∀n. (¬(n = 0) ⟶ x ^ n < y ^ n) ⟶ ¬(Suc n = 0) ⟶ x ^ Suc n < y ^ Suc n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "¬(n = 0) ⟶ x ^ n < y ^ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⟶ x ^ n < y ^ n ⊢ ¬(n = 0) ⟶ x ^ n < y ^ n"
                },
                {
                    "args": "¬(Suc n = 0)",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(Suc n = 0) ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ n = 0 ⟶ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "n = 0",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "real_mul_lid, 1 * x < 1 * y",
                    "id": "3.3.1",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0), n = 0 ⊢ 1 * x < 1 * y"
                },
                {
                    "args": "real_mult_comm, x * 1 < y * 1",
                    "id": "3.3.2",
                    "prevs": [
                        "3.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0), n = 0 ⊢ x * 1 < y * 1"
                },
                {
                    "args": "real_nat_power_def_1, x * x ^ (0::nat) < y * y ^ (0::nat)",
                    "id": "3.3.3",
                    "prevs": [
                        "3.3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0), n = 0 ⊢ x * x ^ (0::nat) < y * y ^ (0::nat)"
                },
                {
                    "args": "x * x ^ n < y * y ^ n",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.0",
                        "3.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = 0, 0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5",
                    "prevs": [
                        "3.3.0",
                        "3.3.4"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ n = 0 ⟶ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ ¬(n = 0) ⟶ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "3.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "real_pow_le, {}, {n: n, x: x}",
                    "id": "3.4.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0), ¬(n = 0) ⊢ 0 ≤ x ^ n"
                },
                {
                    "args": "",
                    "id": "3.4.2",
                    "prevs": [
                        "3.1",
                        "3.4.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0) ⟶ x ^ n < y ^ n, 0 ≤ x, x < y, ¬(Suc n = 0), ¬(n = 0) ⊢ x ^ n < y ^ n"
                },
                {
                    "args": "real_lt_mul2",
                    "id": "3.4.3",
                    "prevs": [
                        "0",
                        "1",
                        "3.4.1",
                        "3.4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0), ¬(n = 0) ⊢ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "",
                    "id": "3.4.4",
                    "prevs": [
                        "3.4.0",
                        "3.4.3"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ ¬(n = 0) ⟶ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "classical_cases",
                    "id": "3.5",
                    "prevs": [
                        "3.3",
                        "3.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ x * x ^ n < y * y ^ n"
                },
                {
                    "args": "real_nat_power_def_2, x ^ Suc n < y ^ Suc n",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, x < y, ¬(n = 0) ⟶ x ^ n < y ^ n, ¬(Suc n = 0) ⊢ x ^ Suc n < y ^ Suc n"
                },
                {
                    "args": "",
                    "id": "3.7",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.6"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x, x < y ⊢ ∀n. (¬(n = 0) ⟶ x ^ n < y ^ n) ⟶ ¬(Suc n = 0) ⟶ x ^ Suc n < y ^ Suc n"
                },
                {
                    "args": "nat_induct, {}, {P: λn::nat. ¬(n = 0) ⟶ x ^ n < y ^ n, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x, x < y ⊢ ¬(n = 0) ⟶ x ^ n < y ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ x < y ⟶ ¬(n = 0) ⟶ x ^ n < y ^ n"
                }
            ],
            "prop": "0 ≤ x ⟶ x < y ⟶ ¬(n = 0) ⟶ x ^ n < y ^ n",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "revert_intro"
                },
                {
                    "goal_id": "2",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "case": "n=0",
                    "goal_id": "3.3",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_mul2"
                },
                {
                    "goal_id": "3.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.4.2",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_lt_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "1 < x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 < x ⊢ 1 < x"
                },
                {
                    "args": "real_pow_lt2, {}, {n: n, x: (1::real), y: x}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0) ⊢ (0::real) ≤ 1 ⟶ 1 < x ⟶ 1 ^ n < x ^ n"
                },
                {
                    "args": "real_pow_one",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0) ⊢ (0::real) ≤ 1 ⟶ 1 < x ⟶ 1 < x ^ n"
                },
                {
                    "args": "(0::real) ≤ 1",
                    "id": "4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) ≤ 1"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0), 1 < x ⊢ 1 < x ^ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ 1 < x ⟶ 1 < x ^ n"
                }
            ],
            "prop": "¬(n = 0) --> 1 < x ⟶ 1 < x ^ n",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_x": "(1::real)",
                    "param_y": "x",
                    "theorem": "real_pow_lt2"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_1_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "0 ≤ x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x < 1",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < 1 ⊢ x < 1"
                },
                {
                    "args": "real_pow_lt2, {}, {n: n, x: x, y: (1::real)}",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), 0 ≤ x ⊢ x < 1 ⟶ x ^ n < 1 ^ n"
                },
                {
                    "args": "real_pow_one",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), 0 ≤ x ⊢ x < 1 ⟶ x ^ n < 1"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0), 0 ≤ x, x < 1 ⊢ x ^ n < 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ 0 ≤ x ⟶ x < 1 ⟶ x ^ n < 1"
                }
            ],
            "prop": "¬(n = 0) ⟶ 0 ≤ x ⟶ x < 1 ⟶ x ^ n < 1",
            "steps": [
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_y": "(1::real)",
                    "theorem": "real_pow_lt2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "4",
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "real_pow_mono_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 < x ⊢ 1 < x"
                },
                {
                    "args": "m < n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < n ⊢ m < n"
                },
                {
                    "args": "less_exist",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m < n ⊢ ∃d. n = m + Suc d"
                },
                {
                    "args": "d, nat",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "n = m + Suc d",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = m + Suc d ⊢ n = m + Suc d"
                },
                {
                    "args": "(0::real) < 1",
                    "id": "5",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 1"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "5",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ (0::real) < 1 ∧ 1 < x"
                },
                {
                    "args": "real_lt_trans",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ 0 < x"
                },
                {
                    "args": "real_pow_lt, {}, {n: m, x: x}",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ 0 < x ^ m"
                },
                {
                    "args": "nat_zero_Suc_neq, {}, {n: d}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc d)"
                },
                {
                    "args": "eq_sym_eq, ¬(Suc d = 0)",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ ¬(Suc d = 0)"
                },
                {
                    "args": "real_pow_lt_1",
                    "id": "11",
                    "prevs": [
                        "10",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ 1 < x ^ Suc d"
                },
                {
                    "args": "real_lt_lmul:",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ x ^ m * 1 < x ^ m * x ^ Suc d"
                },
                {
                    "args": "real_mult_comm",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ 1 * x ^ m < x ^ Suc d * x ^ m"
                },
                {
                    "args": "real_mul_lid",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ x ^ m < x ^ Suc d * x ^ m"
                },
                {
                    "args": "real_mult_comm, x ^ m < x ^ m * x ^ Suc d",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ x ^ m < x ^ m * x ^ Suc d"
                },
                {
                    "args": "real_pow_add, x ^ m < x ^ (m + Suc d)",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < x, m < n, n = m + Suc d ⊢ x ^ m < x ^ (m + Suc d)"
                },
                {
                    "args": "x ^ m < x ^ n",
                    "id": "17",
                    "prevs": [
                        "4",
                        "16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = m + Suc d, 1 < x, m < n ⊢ x ^ m < x ^ n"
                },
                {
                    "args": "∃d. n = m + Suc d",
                    "id": "18",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "17"
                    ],
                    "rule": "intros",
                    "th": "⊢ 1 < x ⟶ m < n ⟶ x ^ m < x ^ n"
                }
            ],
            "prop": "1 < x --> m < n ⟶ x ^ m < x ^ n",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_exist"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_add"
                },
                {
                    "goal": "x ^ m * 1 < x ^ m * x ^ Suc d",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_lmul:"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_lt"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "param_y": "(1::real)",
                    "theorem": "real_lt_trans"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_lt_1"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_pow_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_nat_power_def_1, x ^ m ^ (0::nat) = x ^ (0::nat)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ m ^ (0::nat) = x ^ (0::nat)"
                },
                {
                    "args": "mult_0_right, x ^ m ^ (0::nat) = x ^ (m * 0)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ m ^ (0::nat) = x ^ (m * 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. x ^ m ^ n = x ^ (m * n) ⟶ x ^ m ^ Suc n = x ^ (m * Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "x ^ m ^ n = x ^ (m * n)",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ m ^ n = x ^ (m * n) ⊢ x ^ m ^ n = x ^ (m * n)"
                },
                {
                    "args": "x ^ m * x ^ m ^ n = x ^ m * x ^ (m * n)",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ^ m ^ n = x ^ (m * n) ⊢ x ^ m * x ^ m ^ n = x ^ m * x ^ (m * n)"
                },
                {
                    "args": "real_nat_power_def_2, x ^ m ^ Suc n = x ^ m * x ^ (m * n)",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ m ^ n = x ^ (m * n) ⊢ x ^ m ^ Suc n = x ^ m * x ^ (m * n)"
                },
                {
                    "args": "real_pow_add, x ^ m ^ Suc n = x ^ (m + m * n)",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ m ^ n = x ^ (m * n) ⊢ x ^ m ^ Suc n = x ^ (m + m * n)"
                },
                {
                    "args": "mult_Suc_right, x ^ m ^ Suc n = x ^ (m * Suc n)",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ^ m ^ n = x ^ (m * n) ⊢ x ^ m ^ Suc n = x ^ (m * Suc n)"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. x ^ m ^ n = x ^ (m * n) ⟶ x ^ m ^ Suc n = x ^ (m * Suc n)"
                },
                {
                    "args": "nat_induct, {}, {P: λn. x ^ m ^ n = x ^ (m * n), x: n}",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ^ m ^ n = x ^ (m * n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ^ m ^ n = x ^ (m * n)"
                }
            ],
            "prop": "(x ^ m) ^ n = x ^ (m * n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_Suc_right"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_div_pow2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(x = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ n ≤ m ⟶ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "n ≤ m",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "real_pow_sub, {}, {m: n, n: m, x: x}",
                    "id": "1.1",
                    "prevs": [
                        "0",
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0), n ≤ m ⊢ x ^ (m - n) = x ^ m / x ^ n"
                },
                {
                    "args": "x ^ m / x ^ n = x ^ (m - n)",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(x = 0), n ≤ m ⊢ x ^ m / x ^ n = x ^ (m - n)"
                },
                {
                    "args": "if_P, x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))",
                    "id": "1.3",
                    "prevs": [
                        "1.2",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ m, ¬(x = 0) ⊢ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ n ≤ m ⟶ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ ¬(n ≤ m) ⟶ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "¬(n ≤ m)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n ≤ m) ⊢ ¬(n ≤ m)"
                },
                {
                    "args": "not_le",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n ≤ m) ⊢ m < n"
                },
                {
                    "args": "lt_imp_le, {}, {m: m, n: n}",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n ≤ m) ⊢ m ≤ n"
                },
                {
                    "args": "real_pow_sub, {}, {m: m, n: n, x: x}",
                    "id": "2.3",
                    "prevs": [
                        "0",
                        "2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0), ¬(n ≤ m) ⊢ x ^ (n - m) = x ^ n / x ^ m"
                },
                {
                    "args": "real_mult_comm, {}, {x: x ^ m, y: real_inverse (x ^ n)}",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ^ m * real_inverse (x ^ n) = real_inverse (x ^ n) * x ^ m"
                },
                {
                    "args": "real_inv_inv, x ^ m * real_inverse (x ^ n) = real_inverse (x ^ n) * real_inverse (real_inverse (x ^ m))",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(n ≤ m) ⊢ x ^ m * real_inverse (x ^ n) = real_inverse (x ^ n) * real_inverse (real_inverse (x ^ m))"
                },
                {
                    "args": "real_inv_mul, x ^ m * real_inverse (x ^ n) = real_inverse (x ^ n * real_inverse (x ^ m))",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(n ≤ m) ⊢ x ^ m * real_inverse (x ^ n) = real_inverse (x ^ n * real_inverse (x ^ m))"
                },
                {
                    "args": "real_divide_def, x ^ m / x ^ n = real_inverse (x ^ n / x ^ m)",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(n ≤ m) ⊢ x ^ m / x ^ n = real_inverse (x ^ n / x ^ m)"
                },
                {
                    "args": "x ^ m / x ^ n = real_inverse (x ^ (n - m))",
                    "id": "2.8",
                    "prevs": [
                        "2.3",
                        "2.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(x = 0), ¬(n ≤ m) ⊢ x ^ m / x ^ n = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "if_not_P, x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))",
                    "id": "2.9",
                    "prevs": [
                        "2.8",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n ≤ m), ¬(x = 0) ⊢ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "2.10",
                    "prevs": [
                        "2.0",
                        "2.9"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ ¬(n ≤ m) ⟶ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0) ⊢ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                }
            ],
            "prop": [
                "¬(x = 0) ",
                "⟶ x ^ m / x ^ n = (if n <= m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
            ],
            "steps": [
                {
                    "case": "n ≤ m",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "0",
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "real_pow_sub"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "0",
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "real_pow_sub"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_mul"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_inv"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_mult_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_div_pow2_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(x = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "real_div_pow2, {}, {m: m, n: n, x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(x = 0) ⊢ x ^ m / x ^ n = (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ n < m ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "n < m",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n < m ⊢ n < m"
                },
                {
                    "args": "lt_imp_le, {}, {m: n, n: m}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n < m ⊢ n ≤ m"
                },
                {
                    "args": "if_P, (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = x ^ (m - n)",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n < m ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = x ^ (m - n)"
                },
                {
                    "args": "if_P, (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))",
                    "id": "2.3",
                    "prevs": [
                        "2.2",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n < m, ¬(x = 0) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ n < m ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0) ⊢ ¬(n < m) ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "¬(n < m)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n < m) ⊢ ¬(n < m)"
                },
                {
                    "args": "not_le",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "¬(n < m) ⊢ ¬¬(m ≤ n)"
                },
                {
                    "args": "double_neg",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n < m) ⊢ m ≤ n"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0), ¬(n < m) ⊢ n ≤ m ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "n ≤ m",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "sub_eq_0",
                    "id": "3.3.1",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "¬(n < m) ⊢ m - n = 0"
                },
                {
                    "args": "sub_eq_0",
                    "id": "3.3.2",
                    "prevs": [
                        "3.3.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "n ≤ m ⊢ n - m = 0"
                },
                {
                    "args": "1 = real_inverse 1",
                    "id": "3.3.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 1 = real_inverse 1"
                },
                {
                    "args": "real_nat_power_def_1, x ^ (0::nat) = real_inverse (x ^ (0::nat))",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(x = 0), ¬(n < m), n ≤ m ⊢ x ^ (0::nat) = real_inverse (x ^ (0::nat))"
                },
                {
                    "args": "x ^ (0::nat) = real_inverse (x ^ (n - m))",
                    "id": "3.3.5",
                    "prevs": [
                        "3.3.2",
                        "3.3.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n ≤ m, ¬(x = 0), ¬(n < m) ⊢ x ^ (0::nat) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "x ^ (m - n) = real_inverse (x ^ (n - m))",
                    "id": "3.3.6",
                    "prevs": [
                        "3.3.1",
                        "3.3.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n < m), ¬(x = 0), n ≤ m ⊢ x ^ (m - n) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "if_P, (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))",
                    "id": "3.3.7",
                    "prevs": [
                        "3.3.6",
                        "3.3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ m, ¬(x = 0), ¬(n < m) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "",
                    "id": "3.3.8",
                    "prevs": [
                        "3.3.0",
                        "3.3.7"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0), ¬(n < m) ⊢ n ≤ m ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(x = 0), ¬(n < m) ⊢ ¬(n ≤ m) ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "¬(n ≤ m)",
                    "id": "3.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n ≤ m) ⊢ ¬(n ≤ m)"
                },
                {
                    "args": "if_not_P, (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))",
                    "id": "3.4.1",
                    "prevs": [
                        "3.4.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n ≤ m) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "",
                    "id": "3.4.2",
                    "prevs": [
                        "3.4.0",
                        "3.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0), ¬(n < m) ⊢ ¬(n ≤ m) ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "classical_cases",
                    "id": "3.5",
                    "prevs": [
                        "3.3",
                        "3.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0), ¬(n < m) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = real_inverse (x ^ (n - m))"
                },
                {
                    "args": "if_not_P, (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))",
                    "id": "3.6",
                    "prevs": [
                        "3.5",
                        "3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n < m), ¬(x = 0) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "3.7",
                    "prevs": [
                        "3.0",
                        "3.6"
                    ],
                    "rule": "intros",
                    "th": "¬(x = 0) ⊢ ¬(n < m) ⟶ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 0) ⊢ (if n ≤ m then x ^ (m - n) else real_inverse (x ^ (n - m))) = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "x ^ m / x ^ n = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(x = 0) ⊢ x ^ m / x ^ n = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(x = 0) ⟶ x ^ m / x ^ n = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
                }
            ],
            "prop": [
                "¬(x = 0) ",
                "⟶ x ^ m / x ^ n = (if n < m then x ^ (m - n) else real_inverse (x ^ (n - m)))"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_m": "m",
                    "param_n": "n",
                    "theorem": "real_div_pow2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "case": "n < m",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "case": "n ≤ m",
                    "goal_id": "3.3",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "sub_eq_0"
                },
                {
                    "fact_ids": [
                        "3.3.0"
                    ],
                    "goal_id": "3.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "sub_eq_0"
                },
                {
                    "fact_ids": [
                        "3.3.1"
                    ],
                    "goal_id": "3.3.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2"
                    ],
                    "goal_id": "3.3.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "3.3.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.4.0"
                    ],
                    "goal_id": "3.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_lt_pow2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(0::real) < 2",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 2"
                },
                {
                    "args": "real_pow_lt, {}, {n: n, x: (2::real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) < 2 ^ n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ (0::real) < 2 ^ n"
                }
            ],
            "prop": "0 < (2::real) ^ n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_lt"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_arch_simple",
            "prop": "?n. x <= of_nat n",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_arch_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_arch_simple, {}, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃n. x ≤ of_nat n"
                },
                {
                    "args": "n, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "x ≤ of_nat n",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ of_nat n ⊢ x ≤ of_nat n"
                },
                {
                    "args": "x < of_nat (n + 1)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "z3",
                    "th": "x ≤ of_nat n ⊢ x < of_nat (n + 1)"
                },
                {
                    "args": "exI, {a: nat}, {P: λn. x < of_nat n, a: n + 1}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ of_nat n ⊢ ∃a. x < of_nat a"
                },
                {
                    "args": "∃n. x ≤ of_nat n",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃a. x < of_nat a"
                }
            ],
            "prop": "?n. x < of_nat n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "real_arch_simple"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "n"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "n + 1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "real_arch",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < x ⊢ ∀y. ∃n. y < of_nat n * x"
                },
                {
                    "args": "y, real",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "real_arch_lt, {}, {x: y / x}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃n. y / x < of_nat n"
                },
                {
                    "args": "n, nat",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "y / x < of_nat n",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y / x < of_nat n ⊢ y / x < of_nat n"
                },
                {
                    "args": "y < of_nat n * x",
                    "id": "1.4",
                    "prevs": [
                        "1.3",
                        "0"
                    ],
                    "rule": "z3",
                    "th": "y / x < of_nat n, 0 < x ⊢ y < of_nat n * x"
                },
                {
                    "args": "exI, {a: nat}, {P: λn. y < of_nat n * x, a: n}",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x, y / x < of_nat n ⊢ ∃a. y < of_nat a * x"
                },
                {
                    "args": "∃n. y / x < of_nat n",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "0 < x ⊢ ∀y. ∃n. y < of_nat n * x"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ (∀y. ∃n. y < of_nat n * x)"
                }
            ],
            "prop": "0 < x --> !y. ?n. y < of_nat n * x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "y"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_x": "y / x",
                    "theorem": "real_arch_lt"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "exists_elim",
                    "names": "n"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.3",
                        "0"
                    ],
                    "goal_id": "1.4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_arch_inv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 < e ⟶ (∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e)"
                },
                {
                    "args": "0 < e",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ⊢ 0 < e"
                },
                {
                    "args": "real_arch_lt, {}, {x: real_inverse e}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃n. real_inverse e < of_nat n"
                },
                {
                    "args": "n, nat",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "real_inverse e < of_nat n",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_inverse e < of_nat n ⊢ real_inverse e < of_nat n"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ n = 0 ⟶ false"
                },
                {
                    "args": "n = 0",
                    "id": "0.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "0.4.1",
                    "prevs": [
                        "0.4.0",
                        "0.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = 0, real_inverse e < of_nat n ⊢ real_inverse e < of_nat 0"
                },
                {
                    "args": "real_zero_def",
                    "id": "0.4.2",
                    "prevs": [
                        "0.4.1"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "n = 0, real_inverse e < of_nat n ⊢ real_inverse e < 0"
                },
                {
                    "args": "false",
                    "id": "0.4.3",
                    "prevs": [
                        "0.4.2",
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "n = 0, real_inverse e < of_nat n, 0 < e ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.4.4",
                    "prevs": [
                        "0.4.0",
                        "0.4.3"
                    ],
                    "rule": "intros",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ n = 0 ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ ¬(n = 0)"
                },
                {
                    "args": "0 < real_inverse (of_nat n)",
                    "id": "0.6",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "real_inverse e < of_nat n, 0 < e ⊢ 0 < real_inverse (of_nat n)"
                },
                {
                    "args": "real_inverse (of_nat n) < e",
                    "id": "0.7",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "real_inverse e < of_nat n, 0 < e ⊢ real_inverse (of_nat n) < e"
                },
                {
                    "args": "conjI",
                    "id": "0.8",
                    "prevs": [
                        "0.6",
                        "0.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e"
                },
                {
                    "args": "conjI",
                    "id": "0.9",
                    "prevs": [
                        "0.5",
                        "0.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e"
                },
                {
                    "args": "exI, {a: nat}, {P: λn. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e, a: n}",
                    "id": "0.10",
                    "prevs": [
                        "0.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < e, real_inverse e < of_nat n ⊢ ∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e"
                },
                {
                    "args": "∃n. real_inverse e < of_nat n",
                    "id": "0.11",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.10"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < e ⟶ (∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e)"
                },
                {
                    "args": "(∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e) ⟶ 0 < e",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e) ⟶ 0 < e"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ 0 < e ⟷ (∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < e ⟷ (∃n. ¬(n = 0) ∧ 0 < real_inverse (of_nat n) ∧ real_inverse (of_nat n) < e)"
                }
            ],
            "prop": "0 < e <--> ?n. ~(n = 0) & 0 < real_inverse (of_nat n) & real_inverse (of_nat n) < e",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "param_x": "real_inverse e",
                    "theorem": "real_arch_lt"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "exists_elim",
                    "names": "n"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.4.0",
                        "0.3"
                    ],
                    "goal_id": "0.4.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.4.1"
                    ],
                    "goal_id": "0.4.2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_zero_def"
                },
                {
                    "fact_ids": [
                        "0.4.2",
                        "0.0"
                    ],
                    "goal_id": "0.4.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.3",
                        "0.0"
                    ],
                    "goal_id": "0.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0.3",
                        "0.0"
                    ],
                    "goal_id": "0.7",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "e": "real"
            }
        },
        {
            "name": "real_sgn",
            "prop": "real_sgn x = if 0 < x then 1 else if x <0 then -1 else 0",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "name": "sqrt",
            "prop": "sqrt x = THE y. real_sgn y =  real_sgn x & y ^ (2::nat) = abs x",
            "ty": "def",
            "type": "real ⇒ real"
        }
    ],
    "description": "real numbers",
    "imports": [
        "rat"
    ],
    "name": "real"
}