{
    "content": [
        {
            "args": [],
            "name": "real",
            "ty": "type.ax"
        },
        {
            "name": "of_nat",
            "ty": "def.ax",
            "type": "nat => real"
        },
        {
            "name": "zero",
            "prop": "zero = of_nat (zero::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "one",
            "prop": "one = of_nat (one::nat)",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "plus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "uminus",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "name": "minus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "times",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_inverse",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "name": "real_divide",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "ascii_op": "^",
            "name": "power",
            "rules": [
                {
                    "prop": "(x::real) ^ 0 = 1"
                },
                {
                    "prop": "x ^ Suc m = x * x ^ m"
                }
            ],
            "ty": "def.ind",
            "type": "real => nat => real"
        },
        {
            "name": "real_add_assoc",
            "prop": "x + (y + z) = (x + y) + z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "name": "real_add_comm",
            "prop": "x + y = y + x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_mult_assoc",
            "prop": "x * (y * z) = (x * y) * z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg1",
            "prop": "-x = -1 * x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_poly_neg2",
            "prop": "x - y = x + -1 * y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "less_eq",
            "ty": "def.ax",
            "type": "real => real => bool"
        },
        {
            "name": "less",
            "prop": "less x y = neg(less_eq y x)",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "name": "greater_eq",
            "prop": "greater_eq m n = less_eq n m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "name": "greater",
            "prop": "greater m n = less n m",
            "ty": "def",
            "type": "real ⇒ real ⇒ bool"
        },
        {
            "name": "abs",
            "prop": "abs n = (if 0 <= n then n else -n)",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_eqI_from_lt_gt",
            "prop": "(x < y --> false) --> (y < x --> false) --> x = y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "max",
            "prop": "max m n = if m <= n then n else m",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "name": "min",
            "prop": "min m n = if m <= n then m else n",
            "ty": "def",
            "type": "real ⇒ real ⇒ real"
        },
        {
            "name": "real_sgn",
            "prop": "real_sgn x = if 0 < x then 1 else if x <0 then -1 else 0",
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "name": "sqrt",
            "prop": "sqrt x = THE y. real_sgn y =  real_sgn x & y ^ (2::nat) = abs x",
            "ty": "def",
            "type": "real ⇒ real"
        }
    ],
    "description": "real numbers",
    "imports": [
        "rat"
    ],
    "name": "real"
}