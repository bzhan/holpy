{
    "content": [
        {
            "args": [],
            "name": "real",
            "ty": "type.ax"
        },
        {
            "name": "real_of_nat",
            "overload": "of_nat",
            "ty": "def.ax",
            "type": "nat => real"
        },
        {
            "name": "real_zero",
            "overload": "zero",
            "prop": "real_zero = real_of_nat nat_zero",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "real_one",
            "overload": "one",
            "prop": "real_one = real_of_nat nat_one",
            "ty": "def",
            "type": "real"
        },
        {
            "name": "real_plus",
            "overload": "plus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_uminus",
            "overload": "uminus",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "name": "real_minus",
            "overload": "minus",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_times",
            "overload": "times",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_inverse",
            "ty": "def.ax",
            "type": "real => real"
        },
        {
            "name": "real_divide",
            "ty": "def.ax",
            "type": "real => real => real"
        },
        {
            "name": "real_of_nat",
            "ty": "def.ax",
            "type": "nat => real"
        },
        {
            "name": "real_add_assoc",
            "prop": "x + (y + z) = (x + y) + z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "name": "real_add_comm",
            "prop": "x + y = y + x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_mult_assoc",
            "prop": "x * (y * z) = (x * y) * z",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real",
                "z": "real"
            }
        },
        {
            "name": "real_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_less_eq",
            "overload": "less_eq",
            "ty": "def.ax",
            "type": "real => real => bool"
        },
        {
            "name": "real_less",
            "overload": "less",
            "prop": "less x y = neg(less_eq y x)",
            "ty": "def",
            "type": "real => real => bool"
        },
        {
            "name": "real_greater_eq",
            "overload": "greater_eq",
            "prop": "greater_eq m n = less_eq n m",
            "ty": "def",
            "type": "real => real => bool"
        },
        {
            "name": "real_greater",
            "overload": "greater",
            "prop": "greater m n = less n m",
            "ty": "def",
            "type": "real => real => bool"
        },
        {
            "name": "real_abs",
            "overload": "abs",
            "prop": "real_abs n = (if 0 <= n then n else -n)",
            "ty": "def",
            "type": "real => real"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_eqI_from_lt_gt",
            "prop": "(x < y --> false) --> (y < x --> false) --> x = y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_max",
            "overload": "max",
            "prop": "max m n = if m <= n then n else m",
            "ty": "def",
            "type": "real => real => real"
        },
        {
            "name": "min",
            "ty": "def.ax",
            "type": "'a => 'a => 'a"
        },
        {
            "name": "real_min",
            "overload": "min",
            "prop": "min m n = if m <= n then m else n",
            "ty": "def",
            "type": "real => real => real"
        }
    ],
    "description": "real numbers",
    "imports": [
        "rat"
    ],
    "name": "real"
}