{
    "content": [
        {
            "depth": 0,
            "name": "Function update",
            "ty": "header"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "fun_upd",
            "prop": "fun_upd f a b x = (if x = a then b else f x)",
            "ty": "def",
            "type": "('a => 'b) => 'a => 'b => 'a => 'b"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "fun_upd_same",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "b",
                    "id": "0",
                    "prevs": [],
                    "rule": "reflexive",
                    "th": "⊢ b = b"
                },
                {
                    "args": "a",
                    "id": "1",
                    "prevs": [],
                    "rule": "reflexive",
                    "th": "⊢ a = a"
                },
                {
                    "args": "if_P, (if a = a then b else f a) = b",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if a = a then b else f a) = b"
                },
                {
                    "args": "fun_upd_def, fun_upd f a b a = b",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ fun_upd f a b a = b"
                }
            ],
            "prop": "fun_upd f a b a = b",
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "'b",
                "f": "'a => 'b"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "fun_upd_other",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬c = a",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬c = a ⊢ ¬c = a"
                },
                {
                    "args": "f c",
                    "id": "1",
                    "prevs": [],
                    "rule": "reflexive",
                    "th": "⊢ f c = f c"
                },
                {
                    "args": "if_not_P, (if c = a then b else f c) = f c",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a ⊢ (if c = a then b else f c) = f c"
                },
                {
                    "args": "fun_upd_def, fun_upd f a b c = f c",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a ⊢ fun_upd f a b c = f c"
                },
                {
                    "args": "¬c = a",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "implies_intr",
                    "th": "⊢ ¬c = a ⟶ fun_upd f a b c = f c"
                }
            ],
            "prop": "~(c = a) --> fun_upd f a b c = f c",
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "'b",
                "c": "'a",
                "f": "'a => 'b"
            }
        },
        {
            "name": "fun_upd_triv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. (f)(a := f a) x = f x"
                },
                {
                    "args": "x, 'a",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = a ⟶ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "x = a",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = a ⊢ x = a"
                },
                {
                    "args": "f a = f x",
                    "id": "0.1.1",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = a ⊢ f a = f x"
                },
                {
                    "args": "if_P, (if x = a then f a else f x) = f x",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1",
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = a ⊢ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = a ⟶ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬x = a ⟶ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "¬x = a",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x = a ⊢ ¬x = a"
                },
                {
                    "args": "if_not_P, (if x = a then f a else f x) = f x",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬x = a ⊢ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬x = a ⟶ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "classical_cases",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if x = a then f a else f x) = f x"
                },
                {
                    "args": "fun_upd_def, (f)(a := f a) x = f x",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (f)(a := f a) x = f x"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. (f)(a := f a) x = f x"
                },
                {
                    "args": "extension",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (f)(a := f a) = f"
                }
            ],
            "prop": "fun_upd f a (f a) = f",
            "ty": "thm",
            "vars": {
                "a": "'a",
                "f": "'a => 'b"
            }
        },
        {
            "name": "fun_upd_upd",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "x, 'a",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ x = a ⟶ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "x = a",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = a ⊢ x = a"
                },
                {
                    "args": "fun_upd_same, (f)(a := b, a := c) a = (f)(a := c) a",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (f)(a := b, a := c) a = (f)(a := c) a"
                },
                {
                    "args": "(f)(a := b, a := c) x = (f)(a := c) x",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = a ⊢ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = a ⟶ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬x = a ⟶ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "¬x = a",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x = a ⊢ ¬x = a"
                },
                {
                    "args": "fun_upd_other, (f)(a := b) x = f x",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬x = a ⊢ (f)(a := b) x = f x"
                },
                {
                    "args": "fun_upd_other, (f)(a := b, a := c) x = (f)(a := c) x",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1",
                        "0.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬x = a ⊢ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬x = a ⟶ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "classical_cases",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. (f)(a := b, a := c) x = (f)(a := c) x"
                },
                {
                    "args": "extension",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (f)(a := b, a := c) = (f)(a := c)"
                }
            ],
            "prop": "fun_upd (fun_upd f a b) a c = fun_upd f a c",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "extension"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "case": "x = a",
                    "goal_id": "0.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "'b",
                "c": "'b",
                "f": "'a => 'b"
            }
        },
        {
            "name": "fun_upd_twist",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬c = a",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬c = a ⊢ ¬c = a"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬c = a ⊢ ∀x. (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "x, 'a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬c = a ⊢ x = a ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "x = a",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = a ⊢ x = a"
                },
                {
                    "args": "fun_upd_same, (f)(a := b) a = b",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (f)(a := b) a = b"
                },
                {
                    "args": "ineq_sym",
                    "id": "1.1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬c = a, x = a ⊢ ¬a = c"
                },
                {
                    "args": "fun_upd_other, (f)(a := b, c := d) a = b",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a, x = a ⊢ (f)(a := b, c := d) a = b"
                },
                {
                    "args": "fun_upd_same, (f)(a := b, c := d) a = (f)(c := d, a := b) a",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a, x = a ⊢ (f)(a := b, c := d) a = (f)(c := d, a := b) a"
                },
                {
                    "args": "(f)(a := b, c := d) x = (f)(c := d, a := b) x",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = a, ¬c = a ⊢ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "¬c = a ⊢ x = a ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬c = a ⊢ ¬x = a ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "¬x = a",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x = a ⊢ ¬x = a"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬c = a, ¬x = a ⊢ x = c ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "x = c",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = c ⊢ x = c"
                },
                {
                    "args": "fun_upd_same, d = (f)(c := d) c",
                    "id": "1.2.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ d = (f)(c := d) c"
                },
                {
                    "args": "fun_upd_other, d = (f)(c := d, a := b) c",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.1",
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬x = a, x = c, ¬c = a ⊢ d = (f)(c := d, a := b) c"
                },
                {
                    "args": "fun_upd_same, (f)(a := b, c := d) c = (f)(c := d, a := b) c",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a, ¬x = a, x = c ⊢ (f)(a := b, c := d) c = (f)(c := d, a := b) c"
                },
                {
                    "args": "(f)(a := b, c := d) x = (f)(c := d, a := b) x",
                    "id": "1.2.1.4",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = c, ¬c = a, ¬x = a ⊢ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.2.1.5",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬c = a, ¬x = a ⊢ x = c ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬c = a, ¬x = a ⊢ ¬x = c ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "¬x = c",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬x = c ⊢ ¬x = c"
                },
                {
                    "args": "fun_upd_other, (f)(a := b) x = (f)(c := d) x",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.2.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a, ¬x = a, ¬x = c ⊢ (f)(a := b) x = (f)(c := d) x"
                },
                {
                    "args": "fun_upd_other, (f)(a := b, c := d) x = (f)(c := d, a := b) x",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.0",
                        "1.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬c = a, ¬x = c, ¬x = a ⊢ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬c = a, ¬x = a ⊢ ¬x = c ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "classical_cases",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬c = a, ¬x = a ⊢ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬c = a ⊢ ¬x = a ⟶ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬c = a ⊢ (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "¬c = a ⊢ ∀x. (f)(a := b, c := d) x = (f)(c := d, a := b) x"
                },
                {
                    "args": "extension",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬c = a ⊢ (f)(a := b, c := d) = (f)(c := d, a := b)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬c = a ⟶ (f)(a := b, c := d) = (f)(c := d, a := b)"
                }
            ],
            "prop": "~c = a --> fun_upd (fun_upd f a b) c d = fun_upd (fun_upd f c d) a b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "extension"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "case": "x = a",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "case": "x = c",
                    "goal_id": "1.2.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "fact_ids": [
                        "1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction",
                    "names": ""
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "'a",
                "b": "'b",
                "c": "'a",
                "d": "'b",
                "f": "'a => 'b"
            }
        },
        {
            "name": "fun_upd_eval",
            "ty": "macro"
        },
        {
            "name": "fun_upd_eval_test1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬0 = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬0 = 1"
                },
                {
                    "args": "fun_upd_other, (λx. 0)(1 := 5) 0 = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (λx. 0)(1 := 5) 0 = 0"
                }
            ],
            "prop": "fun_upd (%x. 0) 1 5 0 = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_other"
                },
                {
                    "goal_id": "0",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "fun_upd_eval_test2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "fun_upd_same, (λx. 0)(1 := 5) 1 = 5",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (λx. 0)(1 := 5) 1 = 5"
                }
            ],
            "prop": "fun_upd (%x. 0) 1 5 1 = 5",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "fun_upd_same"
                }
            ],
            "ty": "thm",
            "vars": {}
        }
    ],
    "description": "Functions",
    "imports": [
        "nat"
    ],
    "name": "function"
}