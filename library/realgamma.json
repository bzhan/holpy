{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "euler_mascheroni",
            "prop": [
                "euler_mascheroni = ",
                "reallim sequentially ",
                "  (λn. sum ({1..n}) (λk. real_inverse (of_nat k)) - log (of_nat n))"
            ],
            "ty": "def",
            "type": "real"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_mascheroni",
            "prop": [
                "tendsto_real (λn. sum ({1..n}) (λk. real_inverse (of_nat k)) - log (of_nat n)) ",
                "  euler_mascheroni ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma",
            "prop": [
                "gamma x = ",
                "reallim sequentially ",
                "  (λn. of_nat n ^ x * of_nat (fact n) / product ({0..n}) (λm. x + of_nat m))"
            ],
            "ty": "def",
            "type": "real ⇒ real"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gamma",
            "prop": [
                "tendsto_real ",
                "  (λn. of_nat n ^ x * of_nat (fact n) / product ({0..n}) (λm. x + of_nat m)) ",
                "  (gamma x) ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_eq_0",
            "prop": "gamma x = 0 ⟷ (∃n. x + of_nat n = 0)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_at_gamma",
            "prop": "(∀n. ¬(x + of_nat n = 0)) ⟶ real_differentiable gamma (atreal x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_within_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀n. ¬(x + of_nat n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ ∀n. ¬(x + of_nat n = 0)"
                },
                {
                    "args": "real_differentiable_at_gamma",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ real_differentiable gamma (atreal x)"
                },
                {
                    "args": "real_differentiable_atreal_within, {}, {f: gamma, s: s, x: x}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ real_differentiable gamma (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. ¬(x + of_nat n = 0)) ⟶ real_differentiable gamma (within (atreal x) s)"
                }
            ],
            "prop": "(∀n. ¬(x + of_nat n = 0)) ⟶ real_differentiable gamma (within (atreal x) s)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_atreal_within"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_at_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_on_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ ∀x. x ∈ s ⟶ real_differentiable gamma (within (atreal x) s)"
                },
                {
                    "args": "x, real",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "subsetE, {a: real}, {A: s, B: {x::real. ∀n. ¬(x + of_nat n = 0)}, x: x}",
                    "id": "1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ x ∈ s ⟶ x ∈ {x1. ∀n. ¬(x1 + of_nat n = 0)}"
                },
                {
                    "args": "member_collect",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ x ∈ s ⟶ (∀n. ¬(x + of_nat n = 0))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.3",
                        "1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}, x ∈ s ⊢ ∀n. ¬(x + of_nat n = 0)"
                },
                {
                    "args": "real_differentiable_within_gamma, {}, {s: s, x: x}",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}, x ∈ s ⊢ real_differentiable gamma (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ ∀x. x ∈ s ⟶ real_differentiable gamma (within (atreal x) s)"
                },
                {
                    "args": "real_differentiable_on_differentiable, real_differentiable_on gamma s",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ real_differentiable_on gamma s"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⟶ real_differentiable_on gamma s"
                }
            ],
            "prop": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⟶ real_differentiable_on gamma s",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_differentiable_on_differentiable"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "subsetE"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_within_gamma"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_atreal_gamma",
            "prop": "(∀n. ¬(x + of_nat n = 0)) ⟶ real_continuous gamma (atreal x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_within_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀n. ¬(x + of_nat n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ ∀n. ¬(x + of_nat n = 0)"
                },
                {
                    "args": "real_continuous_atreal_gamma",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ real_continuous gamma (atreal x)"
                },
                {
                    "args": "real_continuous_atreal_withinreal, {}, {f: gamma, s: s, x: x}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. ¬(x + of_nat n = 0) ⊢ real_continuous gamma (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. ¬(x + of_nat n = 0)) ⟶ real_continuous gamma (within (atreal x) s)"
                }
            ],
            "prop": "(∀n. ¬(x + of_nat n = 0)) ⟶ real_continuous gamma (within (atreal x) s)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_atreal_withinreal"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_atreal_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_on_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ ∀x. x ∈ s ⟶ real_continuous gamma (within (atreal x) s)"
                },
                {
                    "args": "x, real",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "subsetE, {a: real}, {A: s, B: {x::real. ∀n. ¬(x + of_nat n = 0)}, x: x}",
                    "id": "1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ x ∈ s ⟶ x ∈ {x1. ∀n. ¬(x1 + of_nat n = 0)}"
                },
                {
                    "args": "member_collect",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ x ∈ s ⟶ (∀n. ¬(x + of_nat n = 0))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.3",
                        "1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}, x ∈ s ⊢ ∀n. ¬(x + of_nat n = 0)"
                },
                {
                    "args": "real_continuous_within_gamma, {}, {s: s, x: x}",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)}, x ∈ s ⊢ real_continuous gamma (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ ∀x. x ∈ s ⟶ real_continuous gamma (within (atreal x) s)"
                },
                {
                    "args": "real_continuous_on_eq_continuous_within, real_continuous_on gamma s",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⊢ real_continuous_on gamma s"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⟶ real_continuous_on gamma s"
                }
            ],
            "prop": "s ⊆ {x. ∀n. ¬(x + of_nat n = 0)} ⟶ real_continuous_on gamma s",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_continuous_on_eq_continuous_within"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_within_gamma"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "subsetE"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_atreal_recip_gamma",
            "prop": "real_differentiable (real_inverse ∘ gamma) (atreal x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_within_recip_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_differentiable_atreal_recip_gamma, {}, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (real_inverse ∘ gamma) (atreal x)"
                },
                {
                    "args": "real_differentiable_atreal_within, {}, {f: real_inverse ∘ gamma, s: s, x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)"
                }
            ],
            "prop": "real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_atreal_within"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_atreal_recip_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_differentiable_on_recip_gamma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ s ⟶ real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "real_differentiable_within_recip_gamma, {}, {s: s, x: x}",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ s ⟶ real_differentiable (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "real_differentiable_on_differentiable, real_differentiable_on (real_inverse ∘ gamma) s",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_differentiable_on (real_inverse ∘ gamma) s"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_differentiable_on (real_inverse ∘ gamma) s"
                }
            ],
            "prop": "real_differentiable_on (real_inverse ∘ gamma) s",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_differentiable_on_differentiable"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_within_recip_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_atreal_recip_gamma:",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_differentiable_atreal_recip_gamma, {}, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (real_inverse ∘ gamma) (atreal x)"
                },
                {
                    "args": "real_differentiable_imp_continuous_atreal",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (atreal x)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (atreal x)"
                }
            ],
            "prop": "real_continuous (real_inverse ∘ gamma) (atreal x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_imp_continuous_atreal"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_atreal_recip_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_withinreal_recip_gamm",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_continuous_atreal_recip_gamma:, {}, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (atreal x)"
                },
                {
                    "args": "real_continuous_atreal_withinreal, {}, {f: real_inverse ∘ gamma, s: s, x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (within (atreal x) s)"
                }
            ],
            "prop": "real_continuous (real_inverse ∘ gamma) (within (atreal x) s)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_atreal_withinreal"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_atreal_recip_gamma:"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_continuous_on_recip_gamm",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ s ⟶ real_continuous (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "real_continuous_withinreal_recip_gamm, {}, {s: s, x: x}",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ s ⟶ real_continuous (real_inverse ∘ gamma) (within (atreal x) s)"
                },
                {
                    "args": "real_continuous_on_eq_continuous_within, real_continuous_on (real_inverse ∘ gamma) s",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_continuous_on (real_inverse ∘ gamma) s"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_continuous_on (real_inverse ∘ gamma) s"
                }
            ],
            "prop": "real_continuous_on (real_inverse ∘ gamma) s",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_continuous_on_eq_continuous_within"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_withinreal_recip_gamm"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_recurrence_alt",
            "prop": "gamma x = gamma (x + 1) / x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_1",
            "prop": "gamma 1 = 1",
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_recurrence",
            "prop": "gamma (x + 1) = (if x = 0 then 1 else x * gamma x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_fact",
            "prop": "gamma (of_nat (n + 1)) = of_nat (fact n)",
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_poles",
            "prop": "gamma (-(of_nat n)) = 0",
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gamma_simple_poles",
            "prop": [
                "tendsto_real (λx. (x + of_nat n) * gamma x) (-1 ^ n / of_nat (fact n)) ",
                "  (atreal (-(of_nat n)))"
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": " gamma_pos_le",
            "prop": "0 ≤ x ⟶ 0 ≤ gamma x",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gamma_pos_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "real_lt_le",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 < x ⊢ 0 ≤ x ∧ ¬(0 = x)"
                },
                {
                    "args": "conjD1",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ 0 ≤ x"
                },
                {
                    "args": " gamma_pos_le",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ 0 ≤ gamma x"
                },
                {
                    "args": "¬(∃n. x + of_nat n = 0)",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < x ⊢ ¬(∃n. x + of_nat n = 0)"
                },
                {
                    "args": "gamma_eq_0, ¬(gamma x = 0)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ⊢ ¬(gamma x = 0)"
                },
                {
                    "args": "eq_sym_eq, ¬(0 = gamma x)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ⊢ ¬(0 = gamma x)"
                },
                {
                    "args": "conjI",
                    "id": "7",
                    "prevs": [
                        "3",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ 0 ≤ gamma x ∧ ¬(0 = gamma x)"
                },
                {
                    "args": "real_lt_le, 0 < gamma x",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ⊢ 0 < gamma x"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ 0 < gamma x"
                }
            ],
            "prop": "0 < x ⟶ 0 < gamma x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_lt_le"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_lt_le"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": " gamma_pos_le"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gamma_eq_0"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_legendre_lt",
            "prop": "gamma x * gamma (x + 1 / 2) = 2 ^ (1 - 2 * x) * gamma (1 / 2) * gamma (2 * x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_reflection",
            "prop": "gamma x * gamma (1 - x) = pi / sin (pi * x)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_half",
            "prop": "gamma (1 / 2) = sqrt pi",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gamma_legendre",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gamma_half, 2 ^ (1 - 2 * x) * gamma (1 / 2) * gamma (2 * x) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 2 ^ (1 - 2 * x) * gamma (1 / 2) * gamma (2 * x) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)"
                },
                {
                    "args": "gamma_legendre_lt, gamma x * gamma (x + 1 / 2) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ gamma x * gamma (x + 1 / 2) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gamma x * gamma (x + 1 / 2) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)"
                }
            ],
            "prop": "gamma x * gamma (x + 1 / 2) = 2 ^ (1 - 2 * x) * sqrt pi * gamma (2 * x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gamma_legendre_lt"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gamma_half"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gamma_weierstrass",
            "prop": [
                "tendsto_real ",
                "  (λn. exp (-euler_mascheroni * x) / x * ",
                "     product ({1..n}) (λk. exp (x / of_nat k) / (1 + x / of_nat k))) ",
                "  (gamma x) ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_log_convex_gamma",
            "prop": "(∀x. x ∈ s ⟶ 0 < x) ⟶ real_log_convex_on gamma s",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "gamma_real_log_convex_unique",
            "prop": [
                "f 1 = 1 ",
                "⟶ (∀x. 0 < x ⟶ f (x + 1) = x * f x) ",
                "   ⟶ (∀x. 0 < x ⟶ 0 < f x) ",
                "      ⟶ real_log_convex_on f ({x. 0 < x}) ⟶ (∀x. 0 < x ⟶ f x = gamma x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_has_real_integral_gamma",
            "prop": "0 < x ⟶ has_real_integral (λt. t ^ (x - 1) / exp t) (gamma x) ({t. 0 ≤ t})",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_real_integral",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "euler_has_real_integral_gamma",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ has_real_integral (λt. t ^ (x - 1) / exp t) (gamma x) ({t. 0 ≤ t})"
                },
                {
                    "args": "real_integral_unique",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ real_integral ({t. 0 ≤ t}) (λt. t ^ (x - 1) / exp t) = gamma x"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ real_integral ({t. 0 ≤ t}) (λt. t ^ (x - 1) / exp t) = gamma x"
                }
            ],
            "prop": "0 < x ⟶ real_integral ({t. 0 ≤ t}) (λt. t ^ (x - 1) / exp t) = gamma x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_integral_unique"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "euler_has_real_integral_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_real_integrable",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "euler_has_real_integral_gamma",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < x ⊢ has_real_integral (λt. t ^ (x - 1) / exp t) (gamma x) ({t. 0 ≤ t})"
                },
                {
                    "args": "exI, {a: real}, {P: λy. has_real_integral (λt. t ^ (x - 1) / exp t) y ({t. 0 ≤ t}), a: gamma x}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < x ⊢ ∃a1. has_real_integral (λt. t ^ (x - 1) / exp t) a1 ({t. 0 ≤ t})"
                },
                {
                    "args": "real_integrable_on_def, real_integrable_on (λt. t ^ (x - 1) / exp t) ({t. 0 ≤ t})",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < x ⊢ real_integrable_on (λt. t ^ (x - 1) / exp t) ({t. 0 ≤ t})"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < x ⟶ real_integrable_on (λt. t ^ (x - 1) / exp t) ({t. 0 ≤ t})"
                }
            ],
            "prop": "0 < x ⟶ real_integrable_on (λt. t ^ (x - 1) / exp t) ({t. 0 ≤ t})",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_integrable_on_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "inst_exists_goal",
                    "s": "gamma x"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "euler_has_real_integral_gamma"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_original_real_integrable",
            "prop": "0 < x ⟶ real_integrable_on (λt. -(log t) ^ (x - 1)) (real_closed_interval 0 1)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_original_has_real_integral_gamma",
            "prop": [
                "0 < x ",
                "⟶ has_real_integral (λt. -(log t) ^ (x - 1)) (gamma x) (real_closed_interval 0 1)"
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euler_original_real_integral",
            "prop": [
                "0 < x ",
                "⟶ real_integral (real_closed_interval 0 1) (λt. -(log t) ^ (x - 1)) = gamma x"
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sin_product",
            "prop": [
                "tendsto_real ",
                "  (λn. x * product ({1..n}) (λm. 1 - (x / (pi * of_nat m)) ^ (2::nat))) ",
                "  (sin x) ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "wallis_alt",
            "prop": [
                "tendsto_real ",
                "  (λn. product ({1..n}) ",
                "       (λk. 2 * of_nat k / (2 * of_nat k - 1) * (2 * of_nat k) / (2 * of_nat k + 1))) ",
                "  (pi / 2) ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "wallis",
            "prop": [
                "tendsto_real ",
                "  (λn. (2 ^ n * of_nat (fact n)) ^ (4::nat) / ",
                "     (of_nat (fact (2 * n)) * of_nat (fact (2 * n + 1)))) ",
                "  (pi / 2) ",
                "  sequentially"
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gaussian_has_real_integral",
            "num_gaps": 3,
            "proof": [
                {
                    "args": "euler_has_real_integral_gamma, {}, {x: 1 / 2}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < 1 / 2 ⟶ has_real_integral (λt. t ^ (1 / 2 - 1) / exp t) (gamma (1 / 2)) ({t. 0 ≤ t})"
                },
                {
                    "args": "0 < 1 / 2",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 0 < 1 / 2"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ has_real_integral (λt. t ^ (1 / 2 - 1) / exp t) (gamma (1 / 2)) ({t. 0 ≤ t})"
                },
                {
                    "args": "1 / 2 - 1 = -(1 / 2)",
                    "id": "3",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ 1 / 2 - 1 = -(1 / 2)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ has_real_integral (λt. t ^ -(1 / 2) / exp t) (gamma (1 / 2)) ({t. 0 ≤ t})"
                },
                {
                    "args": "has_real_integral_rmul, {}, {c: real_inverse 2, f: λt. t ^ -(1 / 2) / exp t, k: gamma (1 / 2), s: {t::real. 0 ≤ t}}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_integral (λx. x ^ -(1 / 2) / exp x * real_inverse 2) (gamma (1 / 2) * real_inverse 2) ({t. 0 ≤ t})"
                },
                {
                    "args": "real_divide_def",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "⊢ has_real_integral (λx. x ^ -(1 / 2) / exp x / 2) (gamma (1 / 2) / 2) ({t. 0 ≤ t})"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ∀a. ∀b. real_integrable_on (λx. if 0 ≤ x then exp (-(x ^ (2::nat))) else 0) (real_closed_interval a b)"
                },
                {
                    "args": "member_collect, ∀a. ∀b. real_integrable_on (λx. if x ∈ {x1. 0 ≤ x1} then exp (-(x ^ (2::nat))) else 0) (real_closed_interval a b)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀a. ∀b. real_integrable_on (λx. if x ∈ {x1. 0 ≤ x1} then exp (-(x ^ (2::nat))) else 0) (real_closed_interval a b)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ∀e. 0 < e ⟶ (∃B. 0 < B ∧ (∀a. ∀b. real_closed_interval (-B) B ⊆ real_closed_interval a b ⟶ abs (real_integral (real_closed_interval a b) (λx. if x ∈ {x1. 0 ≤ x1} then exp (-(x ^ (2::nat))) else 0) - gamma (1 / 2) / 2) < e))"
                },
                {
                    "args": "conjI",
                    "id": "10",
                    "prevs": [
                        "8",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀a. ∀b. real_integrable_on (λx. if x ∈ {x1. 0 ≤ x1} then exp (-(x ^ (2::nat))) else 0) (real_closed_interval a b)) ∧ (∀e. 0 < e ⟶ (∃B. 0 < B ∧ (∀a. ∀b. real_closed_interval (-B) B ⊆ real_closed_interval a b ⟶ abs (real_integral (real_closed_interval a b) (λx. if x ∈ {x1. 0 ≤ x1} then exp (-(x ^ (2::nat))) else 0) - gamma (1 / 2) / 2) < e)))"
                },
                {
                    "args": "has_real_integral_alt, has_real_integral (λx. exp (-(x ^ (2::nat)))) (gamma (1 / 2) / 2) ({x. 0 ≤ x})",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_real_integral (λx. exp (-(x ^ (2::nat)))) (gamma (1 / 2) / 2) ({x. 0 ≤ x})"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ has_real_integral (λx. exp (-(x ^ (2::nat)))) (sqrt pi) univ"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_real_integral (λx. exp (-(x ^ (2::nat)))) (sqrt pi) univ"
                }
            ],
            "prop": "has_real_integral (λx. exp (-(x ^ (2::nat)))) (sqrt pi) univ",
            "steps": [
                {
                    "goal": "has_real_integral (λx. exp (-(x ^ (2::nat)))) (gamma(1/2)/2) {x. 0 <= x}",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "(1::real)/2",
                    "theorem": "euler_has_real_integral_gamma"
                },
                {
                    "goal": "0 < 1 / 2",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "1 / 2 - 1 = -(1 / 2)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "3",
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "param_c": "real_inverse 2",
                    "theorem": "has_real_integral_rmul"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_real_integral_alt"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                }
            ],
            "ty": "thm",
            "vars": {}
        }
    ],
    "description": "Real gamma functions and Euler_Mascheroni const. Refer to gamma.ml from HOL light",
    "imports": [
        "realintegral"
    ],
    "name": "realgamma"
}