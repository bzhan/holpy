{
    "content": [
        {
            "args": [],
            "name": "int",
            "ty": "type.ax"
        },
        {
            "name": "of_nat",
            "ty": "def.ax",
            "type": "nat => int"
        },
        {
            "name": "zero",
            "prop": "zero = of_nat (zero::nat)",
            "ty": "def",
            "type": "int"
        },
        {
            "name": "one",
            "prop": "one = of_nat (one::nat)",
            "ty": "def",
            "type": "int"
        },
        {
            "name": "plus",
            "ty": "def.ax",
            "type": "int => int => int"
        },
        {
            "ascii_op": "-",
            "name": "uminus",
            "overloaded": true,
            "ty": "def.ax",
            "type": "'a => 'a"
        },
        {
            "name": "abs",
            "overloaded": true,
            "ty": "def.ax",
            "type": "'a => 'a"
        },
        {
            "name": "uminus",
            "ty": "def.ax",
            "type": "int => int"
        },
        {
            "name": "minus",
            "ty": "def.ax",
            "type": "int => int => int"
        },
        {
            "name": "times",
            "ty": "def.ax",
            "type": "int => int => int"
        },
        {
            "name": "less_eq",
            "ty": "def.ax",
            "type": "int => int => bool"
        },
        {
            "name": "less",
            "ty": "def.ax",
            "type": "int => int => bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "abs",
            "prop": "abs n = (if zero <= n then n else -n)",
            "ty": "def",
            "type": "int ⇒ int"
        },
        {
            "name": "int_add_assoc",
            "prop": "x + (y + z) = (x + y) + z",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int",
                "z": "int"
            }
        },
        {
            "name": "int_add_comm",
            "prop": "x + y = y + x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "int_mult_assoc",
            "prop": "x * (y * z) = (x * y) * z",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int",
                "z": "int"
            }
        },
        {
            "name": "int_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "max",
            "prop": "max m n = (if m <= n then n else m)",
            "ty": "def",
            "type": "int ⇒ int ⇒ int"
        }
    ],
    "description": "integers",
    "imports": [
        "list"
    ],
    "name": "int"
}