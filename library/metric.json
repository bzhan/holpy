{
    "content": [
        {
            "args": [
                "a"
            ],
            "name": "net",
            "ty": "type.ax"
        },
        {
            "name": "within",
            "ty": "def.ax",
            "type": "'a net ⇒ 'a set ⇒ 'a net"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "net_within_univ",
            "prop": "within net univ = net",
            "ty": "thm",
            "vars": {
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "within_within",
            "prop": "within (within net s) t = within net (s ∩ t)",
            "ty": "thm",
            "vars": {
                "net": "'a net",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "name": "eventually",
            "ty": "def.ax",
            "type": "('a ⇒ bool) ⇒ 'a net ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "trivial_limit",
            "prop": "trivial_limit net ⟷ eventually (λx. false) net",
            "ty": "def",
            "type": "'a net ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_within_imp",
            "prop": "eventually P (within net s) ⟷ eventually (λx. x ∈ s ⟶ P x) net",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "eventually_imp_within",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "eventually P net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P net ⊢ eventually P net"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "eventually P net ⊢ eventually (λx. x ∈ s ⟶ P x) net"
                },
                {
                    "args": "eventually_within_imp, eventually P (within net s)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "eventually P net ⊢ eventually P (within net s)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P net ⟶ eventually P (within net s)"
                }
            ],
            "prop": "eventually P net ⟶ eventually P (within net s)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_within_inter_imp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually_within_imp, eventually (λx. x ∈ t ⟶ P x) (within net s) ⟷ eventually (λx. x ∈ s ⟶ x ∈ t ⟶ P x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually (λx. x ∈ t ⟶ P x) (within net s) ⟷ eventually (λx. x ∈ s ⟶ x ∈ t ⟶ P x) net"
                },
                {
                    "args": "eventually_within_imp, eventually P (within (within net s) t) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually P (within (within net s) t) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)"
                },
                {
                    "args": "within_within, eventually P (within net (s ∩ t)) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ eventually P (within net (s ∩ t)) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P (within net (s ∩ t)) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)"
                }
            ],
            "prop": "eventually P (within net (s ∩ t)) ⟷ eventually (λx. x ∈ t ⟶ P x) (within net s)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "within_within"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "nontrivial_limit_within",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "trivial_limit net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "trivial_limit_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "trivial_limit net ⊢ eventually (λx. false) net"
                },
                {
                    "args": "eventually_imp_within, {P: λx::'a. false, net: net, s: s}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ⊢ eventually (λx. false) (within net s)"
                },
                {
                    "args": "trivial_limit_def, trivial_limit (within net s)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ⊢ trivial_limit (within net s)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ⟶ trivial_limit (within net s)"
                }
            ],
            "prop": "trivial_limit net ⟶ trivial_limit (within net s)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "trivial_limit_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_imp_within"
                }
            ],
            "ty": "thm",
            "vars": {
                "net": "'a net",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "eventually_happens",
            "prop": "eventually P net ⟶ trivial_limit net ∨ (∃x. P x)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "always_eventually",
            "prop": "(∀x. P x) ⟶ eventually P net",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "eventually_mono",
            "prop": "(∀x. P x ⟶ Q x) ⟶ eventually P net ⟶ eventually Q net",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_and",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ eventually (λx. P x ∧ Q x) net ⟶ eventually P net ∧ eventually Q net"
                },
                {
                    "args": "eventually (λx. P x ∧ Q x) net",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. P x ∧ Q x) net ⊢ eventually (λx. P x ∧ Q x) net"
                },
                {
                    "args": "∀x. P x ∧ Q x ⟶ P x",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. P x ∧ Q x ⟶ P x"
                },
                {
                    "args": "eventually_mono",
                    "id": "0.2",
                    "prevs": [
                        "0.1",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ∧ Q x) net ⊢ eventually P net"
                },
                {
                    "args": "∀x. P x ∧ Q x ⟶ Q x",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. P x ∧ Q x ⟶ Q x"
                },
                {
                    "args": "eventually_mono",
                    "id": "0.4",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ∧ Q x) net ⊢ eventually Q net"
                },
                {
                    "args": "conjI",
                    "id": "0.5",
                    "prevs": [
                        "0.2",
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ∧ Q x) net ⊢ eventually P net ∧ eventually Q net"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. P x ∧ Q x) net ⟶ eventually P net ∧ eventually Q net"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ eventually P net ∧ eventually Q net ⟶ eventually (λx. P x ∧ Q x) net"
                },
                {
                    "args": "eventually P net ∧ eventually Q net",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P net ∧ eventually Q net ⊢ eventually P net ∧ eventually Q net"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "eventually P net ∧ eventually Q net ⊢ eventually (λx. P x ∧ Q x) net"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P net ∧ eventually Q net ⟶ eventually (λx. P x ∧ Q x) net"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ eventually (λx. P x ∧ Q x) net ⟷ eventually P net ∧ eventually Q net"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. P x ∧ Q x) net ⟷ eventually P net ∧ eventually Q net"
                }
            ],
            "prop": "eventually (λx. P x ∧ Q x) net ⟷ eventually P net ∧ eventually Q net",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. P x ∧ Q x)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. P x ∧ Q x)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "eventually_mp",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "eventually (λx. P x ⟶ Q x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. P x ⟶ Q x) net ⊢ eventually (λx. P x ⟶ Q x) net"
                },
                {
                    "args": "eventually P net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P net ⊢ eventually P net"
                },
                {
                    "args": "conjI, {A: eventually P net, B: eventually (λx. P x ⟶ Q x) net}",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually P net, eventually (λx. P x ⟶ Q x) net ⊢ eventually P net ∧ eventually (λx. P x ⟶ Q x) net"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "eventually (λx. P x ⟶ Q x) net, eventually P net ⊢ eventually Q net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. P x ⟶ Q x) net ⟶ eventually P net ⟶ eventually Q net"
                }
            ],
            "prop": "eventually (λx. P x ⟶ Q x) net ⟶ eventually P net ⟶ eventually Q net",
            "steps": [
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "eventually_eq_mp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. P x ⟷ Q x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually (λx. P x ⟷ Q x) net"
                },
                {
                    "args": "eventually P net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P net ⊢ eventually P net"
                },
                {
                    "args": "∀x. P x ⟷ Q x ⟶ P x ⟶ Q x",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. P x ⟷ Q x ⟶ P x ⟶ Q x"
                },
                {
                    "args": "always_eventually, {P: λx. P x ⟷ Q x ⟶ P x ⟶ Q x, net: net}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually P net ⊢ eventually (λx. P x ⟷ Q x ⟶ P x ⟶ Q x) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "4",
                    "prevs": [
                        "3",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually P net ⊢ eventually (λx. P x ⟶ Q x) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "5",
                    "prevs": [
                        "4",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually P net ⊢ eventually Q net"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. P x ⟷ Q x) net ⟶ eventually P net ⟶ eventually Q net"
                }
            ],
            "prop": "eventually (λx. P x ⟷ Q x) net ⟶ eventually P net ⟶ eventually Q net",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_P": "P",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. P x ⟷ Q x)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "eventually_iff",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. P x ⟷ Q x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually (λx. P x ⟷ Q x) net"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually P net ⟶ eventually Q net"
                },
                {
                    "args": "eventually P net",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P net ⊢ eventually P net"
                },
                {
                    "args": "eventually_eq_mp",
                    "id": "1.1",
                    "prevs": [
                        "0",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually P net ⊢ eventually Q net"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually P net ⟶ eventually Q net"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually Q net ⟶ eventually P net"
                },
                {
                    "args": "eventually Q net",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually Q net ⊢ eventually Q net"
                },
                {
                    "args": "eq_sym_eq, eventually (λx. Q x ⟷ P x) net",
                    "id": "2.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually Q net ⊢ eventually (λx. Q x ⟷ P x) net"
                },
                {
                    "args": "eventually_eq_mp",
                    "id": "2.2",
                    "prevs": [
                        "2.1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ⟷ Q x) net, eventually Q net ⊢ eventually P net"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually Q net ⟶ eventually P net"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. P x ⟷ Q x) net ⊢ eventually P net ⟷ eventually Q net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. P x ⟷ Q x) net ⟶ eventually P net ⟷ eventually Q net"
                }
            ],
            "prop": "eventually (λx. P x ⟷ Q x) net ⟶ eventually P net ⟷ eventually Q net",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "param_P": "P",
                    "theorem": "eventually_eq_mp"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "param_P": "Q",
                    "theorem": "eventually_eq_mp"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_true",
            "prop": "eventually (λx. true) net ⟷ true",
            "ty": "thm",
            "vars": {
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "eventually_within_subset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually P (within net s)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P (within net s) ⊢ eventually P (within net s)"
                },
                {
                    "args": "t ⊆ s",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "t ⊆ s ⊢ t ⊆ s"
                },
                {
                    "args": "eventually_within_imp",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually P (within net s) ⊢ eventually (λx. x ∈ s ⟶ P x) net"
                },
                {
                    "args": "∀x. (x ∈ s ⟶ P x) ⟶ x ∈ t ⟶ P x",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "z3",
                    "th": "t ⊆ s ⊢ ∀x. (x ∈ s ⟶ P x) ⟶ x ∈ t ⟶ P x"
                },
                {
                    "args": "eventually_mono",
                    "id": "4",
                    "prevs": [
                        "3",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually P (within net s), t ⊆ s ⊢ eventually (λx. x ∈ t ⟶ P x) net"
                },
                {
                    "args": "eventually_within_imp, eventually P (within net t)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "eventually P (within net s), t ⊆ s ⊢ eventually P (within net t)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P (within net s) ⟶ t ⊆ s ⟶ eventually P (within net t)"
                }
            ],
            "prop": "eventually P (within net s) ⟶ t ⊆ s ⟶ eventually P (within net t)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. x ∈ s ⟶ P x)",
                    "theorem": "eventually_mono"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net",
                "s": "'a set",
                "t": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "always_within_eventually",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. x ∈ s ⟶ P x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ P x ⊢ ∀x. x ∈ s ⟶ P x"
                },
                {
                    "args": "always_eventually, {P: λx. x ∈ s ⟶ P x, net: net}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. x ∈ s ⟶ P x ⊢ eventually (λx. x ∈ s ⟶ P x) net"
                },
                {
                    "args": "eventually_within_imp, eventually P (within net s)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. x ∈ s ⟶ P x ⊢ eventually P (within net s)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. x ∈ s ⟶ P x) ⟶ eventually P (within net s)"
                }
            ],
            "prop": "(∀x. x ∈ s ⟶ P x) ⟶ eventually P (within net s)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net",
                "s": "'a set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "not_eventually",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. ¬(P x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ¬(P x) ⊢ ∀x. ¬(P x)"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "not_exists",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "∀x. ¬(P x) ⊢ ¬(∃x. P x)"
                },
                {
                    "args": "conjI, {A: ¬(∃x. P x), B: ¬(trivial_limit net)}",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net) ⊢ ¬(∃x. P x) ∧ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net) ⊢ ¬¬(eventually P net) ⟶ ¬(¬(∃x. P x) ∧ ¬(trivial_limit net))"
                },
                {
                    "args": "¬¬(eventually P net)",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(eventually P net) ⊢ ¬¬(eventually P net)"
                },
                {
                    "args": "double_neg",
                    "id": "4.1",
                    "prevs": [
                        "4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(eventually P net) ⊢ eventually P net"
                },
                {
                    "args": "eventually_happens, {P: P, net: net}",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬¬(eventually P net) ⊢ trivial_limit net ∨ (∃x. P x)"
                },
                {
                    "args": "disj_comm, (∃x. P x) ∨ trivial_limit net",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net), ¬¬(eventually P net) ⊢ (∃x. P x) ∨ trivial_limit net"
                },
                {
                    "args": "double_neg, ¬¬(∃x. P x) ∨ ¬¬(trivial_limit net)",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net), ¬¬(eventually P net) ⊢ ¬¬(∃x. P x) ∨ ¬¬(trivial_limit net)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬(∃x. P x) ∧ ¬(trivial_limit net))",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net), ¬¬(eventually P net) ⊢ ¬(¬(∃x. P x) ∧ ¬(trivial_limit net))"
                },
                {
                    "args": "",
                    "id": "4.6",
                    "prevs": [
                        "4.0",
                        "4.5"
                    ],
                    "rule": "intros",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net) ⊢ ¬¬(eventually P net) ⟶ ¬(¬(∃x. P x) ∧ ¬(trivial_limit net))"
                },
                {
                    "args": "contrapositive",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. ¬(P x), ¬(trivial_limit net) ⊢ ¬(eventually P net)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. ¬(P x)) ⟶ ¬(trivial_limit net) ⟶ ¬(eventually P net)"
                }
            ],
            "prop": "(∀x. ¬(P x)) ⟶ ¬(trivial_limit net) ⟶ ¬(eventually P net)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_exists"
                },
                {
                    "fact_ids": [
                        "2",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "apply_forward_step",
                    "theorem": "eventually_happens"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "disj_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "eventually_forall",
            "prop": [
                "finite s ",
                "⟶ ¬(s = ∅) ",
                "   ⟶ eventually (λx. ∀a. a ∈ s ⟶ P a x) net ⟷ (∀a. a ∈ s ⟶ eventually (P a) net)"
            ],
            "ty": "thm",
            "vars": {
                "P": "'b ⇒ 'a ⇒ bool",
                "net": "'a net",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "forall_eventually",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite s ⊢ finite s"
                },
                {
                    "args": "¬(s = ∅)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s = ∅) ⊢ ¬(s = ∅)"
                },
                {
                    "args": "eventually_forall, {P: P, net: net, s: s}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite s, ¬(s = ∅) ⊢ eventually (λx. ∀a. a ∈ s ⟶ P a x) net ⟷ (∀a. a ∈ s ⟶ eventually (P a) net)"
                },
                {
                    "args": "eq_sym_eq, (∀a. a ∈ s ⟶ eventually (P a) net) ⟷ eventually (λx. ∀a. a ∈ s ⟶ P a x) net",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite s, ¬(s = ∅) ⊢ (∀a. a ∈ s ⟶ eventually (P a) net) ⟷ eventually (λx. ∀a. a ∈ s ⟶ P a x) net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite s ⟶ ¬(s = ∅) ⟶ (∀a. a ∈ s ⟶ eventually (P a) net) ⟷ eventually (λx. ∀a. a ∈ s ⟶ P a x) net"
                }
            ],
            "prop": [
                "finite s ",
                "⟶ ¬(s = ∅) ",
                "   ⟶ (∀a. a ∈ s ⟶ eventually (P a) net) ⟷ eventually (λx. ∀a. a ∈ s ⟶ P a x) net"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_forall"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'b ⇒ 'a ⇒ bool",
                "net": "'a net",
                "s": "'b set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "eventually_trivial",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "trivial_limit net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "trivial_limit_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "trivial_limit net ⊢ eventually (λx. false) net"
                },
                {
                    "args": "∀x. false ⟶ P x",
                    "id": "2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. false ⟶ P x"
                },
                {
                    "args": "eventually_mono",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ⊢ eventually P net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ⟶ eventually P net"
                }
            ],
            "prop": "trivial_limit net ⟶ eventually P net",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "trivial_limit_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx::'a. false)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "net": "'a net"
            }
        },
        {
            "name": "sequentially",
            "ty": "def.ax",
            "type": "nat net"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_sequentially",
            "prop": "eventually P sequentially ⟷ (∃N. ∀n. N ≤ n ⟶ P n)",
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "trivial_limit_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(∃N::nat. ∀n. N ≤ n ⟶ false)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬(∃N::nat. ∀n. N ≤ n ⟶ false)"
                },
                {
                    "args": "eventually_sequentially, ¬(eventually (λx. false) sequentially)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(eventually (λx. false) sequentially)"
                },
                {
                    "args": "trivial_limit_def, ¬(trivial_limit sequentially)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                }
            ],
            "prop": "¬(trivial_limit sequentially)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "eventually_happens_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually P sequentially",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P sequentially ⊢ eventually P sequentially"
                },
                {
                    "args": "eventually_happens, {P: P, net: sequentially}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually P sequentially ⊢ trivial_limit sequentially ∨ (∃x. P x)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually P sequentially ⊢ trivial_limit sequentially ⟶ (∃n. P n)"
                },
                {
                    "args": "trivial_limit sequentially",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ⊢ trivial_limit sequentially"
                },
                {
                    "args": "double_neg",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "trivial_limit sequentially ⊢ ¬¬(trivial_limit sequentially)"
                },
                {
                    "args": "trivial_limit_sequentially",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "negE_gen, {A: ¬(trivial_limit sequentially), C: ∃n. P n}",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit sequentially, eventually P sequentially ⊢ ∃n. P n"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "eventually P sequentially ⊢ trivial_limit sequentially ⟶ (∃n. P n)"
                },
                {
                    "args": "(∃x. P x) ⟶ (∃n. P n)",
                    "id": "3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ (∃x. P x) ⟶ (∃n. P n)"
                },
                {
                    "args": "disjE",
                    "id": "4",
                    "prevs": [
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually P sequentially ⊢ ∃n. P n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P sequentially ⟶ (∃n. P n)"
                }
            ],
            "prop": "eventually P sequentially ⟶ (∃n. P n)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "theorem": "eventually_happens"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "trivial_limit_sequentially"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "eventually_sequentially_within",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n) ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n ⊢ ∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "N, nat",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ n ∈ k ⟶ P n",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ n ∈ k ⟶ P n ⊢ ∀n. N ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "∀n. n ∈ k ⟶ N ≤ n ⟶ P n",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "z3",
                    "th": "∀n. N ≤ n ⟶ n ∈ k ⟶ P n ⊢ ∀n. n ∈ k ⟶ N ≤ n ⟶ P n"
                },
                {
                    "args": "exI, {P: λN. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n, a: N}",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n, ∀n. N ≤ n ⟶ n ∈ k ⟶ P n ⊢ ∃a1. ∀n. n ∈ k ⟶ a1 ≤ n ⟶ P n"
                },
                {
                    "args": "disjI2, {A: finite k, B: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n}",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n, ∀n. N ≤ n ⟶ n ∈ k ⟶ P n ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n) ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ finite k ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "finite k",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "nat_finite",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "finite k ⊢ ∃a. ∀x. x ∈ k ⟶ x ≤ a"
                },
                {
                    "args": "a, nat",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "∀x. x ∈ k ⟶ x ≤ a",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ k ⟶ x ≤ a ⊢ ∀x. x ∈ k ⟶ x ≤ a"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n), finite k, ∀x. x ∈ k ⟶ x ≤ a ⊢ ∀n. a + 1 ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "n, nat",
                    "id": "1.1.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "a + 1 ≤ n",
                    "id": "1.1.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a + 1 ≤ n ⊢ a + 1 ≤ n"
                },
                {
                    "args": "n ∈ k",
                    "id": "1.1.4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ∈ k ⊢ n ∈ k"
                },
                {
                    "args": "",
                    "id": "1.1.4.3",
                    "prevs": [
                        "1.1.3",
                        "1.1.4.2"
                    ],
                    "rule": "apply_fact",
                    "th": "∀x. x ∈ k ⟶ x ≤ a, n ∈ k ⊢ n ≤ a"
                },
                {
                    "args": "P n",
                    "id": "1.1.4.4",
                    "prevs": [
                        "1.1.4.1",
                        "1.1.4.3"
                    ],
                    "rule": "z3",
                    "th": "a + 1 ≤ n, ∀x. x ∈ k ⟶ x ≤ a, n ∈ k ⊢ P n"
                },
                {
                    "args": "",
                    "id": "1.1.4.5",
                    "prevs": [
                        "1.1.4.0",
                        "1.1.4.1",
                        "1.1.4.2",
                        "1.1.4.4"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n), finite k, ∀x. x ∈ k ⟶ x ≤ a ⊢ ∀n. a + 1 ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n, a: a + 1}",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n), finite k, ∀x. x ∈ k ⟶ x ≤ a ⊢ ∃a1. ∀n. a1 ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "∃a. ∀x. x ∈ k ⟶ x ≤ a",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2",
                        "1.1.3",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ finite k ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n"
                },
                {
                    "args": "N, nat",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. n ∈ k ⟶ N ≤ n ⟶ P n",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. n ∈ k ⟶ N ≤ n ⟶ P n ⊢ ∀n. n ∈ k ⟶ N ≤ n ⟶ P n"
                },
                {
                    "args": "∀n. N ≤ n ⟶ n ∈ k ⟶ P n",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "z3",
                    "th": "∀n. n ∈ k ⟶ N ≤ n ⟶ P n ⊢ ∀n. N ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n, a: N}",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n, ∀n. n ∈ k ⟶ N ≤ n ⟶ P n ⊢ ∃a1. ∀n. a1 ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.0",
                        "1.2.0",
                        "1.2.1",
                        "1.2.2",
                        "1.2.4"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "disjE",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⊢ ∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n) ⟶ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ n ∈ k ⟶ P n) ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "eventually_sequentially, eventually (λx. x ∈ k ⟶ P x) sequentially ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually (λx. x ∈ k ⟶ P x) sequentially ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "eventually_within_imp, eventually P (within sequentially k) ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually P (within sequentially k) ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P (within sequentially k) ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)"
                }
            ],
            "prop": "eventually P (within sequentially k) ⟷ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ P n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_within_imp"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_finite"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "inst_exists_goal",
                    "s": "a + 1"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.1.3",
                        "1.1.4.2"
                    ],
                    "goal_id": "1.1.4.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.4.1",
                        "1.1.4.3"
                    ],
                    "goal_id": "1.1.4.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "1.2.3",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "fact_ids": [
                        "1.2.2"
                    ],
                    "goal_id": "1.2.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "k": "nat set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "trivial_limit_sequentially_within",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⟶ finite k"
                },
                {
                    "args": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "finite k ⟶ finite k",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ finite k ⟶ finite k"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⟶ finite k"
                },
                {
                    "args": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false"
                },
                {
                    "args": "",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false ⊢ ¬(finite k) ⟶ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "¬(finite k)",
                    "id": "0.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite k) ⊢ ¬(finite k)"
                },
                {
                    "args": "",
                    "id": "0.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false, ¬(finite k) ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ false)"
                },
                {
                    "args": "x, nat",
                    "id": "0.2.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "infinite_def",
                    "id": "0.2.1.1.1",
                    "prevs": [
                        "0.2.1.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "¬(finite k) ⊢ infinite k"
                },
                {
                    "args": "nat_infinite_eq",
                    "id": "0.2.1.1.2",
                    "prevs": [
                        "0.2.1.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(finite k) ⊢ ∀N. ∃n. N ≤ n ∧ n ∈ k"
                },
                {
                    "args": "x",
                    "id": "0.2.1.1.3",
                    "prevs": [
                        "0.2.1.1.2"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "¬(finite k) ⊢ ∃n. x ≤ n ∧ n ∈ k"
                },
                {
                    "args": "∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ false)",
                    "id": "0.2.1.1.4",
                    "prevs": [
                        "0.2.1.1.3"
                    ],
                    "rule": "z3",
                    "th": "¬(finite k) ⊢ ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ false)"
                },
                {
                    "args": "not_all, ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ false)",
                    "id": "0.2.1.1.5",
                    "prevs": [
                        "0.2.1.1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false, ¬(finite k) ⊢ ¬(∀x1. x1 ∈ k ⟶ x ≤ x1 ⟶ false)"
                },
                {
                    "args": "",
                    "id": "0.2.1.1.6",
                    "prevs": [
                        "0.2.1.1.0",
                        "0.2.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false, ¬(finite k) ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ false)"
                },
                {
                    "args": "not_exists, ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)",
                    "id": "0.2.1.2",
                    "prevs": [
                        "0.2.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false, ¬(finite k) ⊢ ¬(∃x. ∀n. n ∈ k ⟶ x ≤ n ⟶ false)"
                },
                {
                    "args": "",
                    "id": "0.2.1.3",
                    "prevs": [
                        "0.2.1.0",
                        "0.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false), ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false ⊢ ¬(finite k) ⟶ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false, finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⊢ finite k"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⟶ finite k"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⊢ finite k"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⟶ finite k"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ finite k ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "finite k",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "disjI1, {A: finite k, B: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite k ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ false) ⟷ finite k"
                },
                {
                    "args": "eventually_sequentially_within, eventually (λx. false) (within sequentially k) ⟷ finite k",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually (λx. false) (within sequentially k) ⟷ finite k"
                },
                {
                    "args": "trivial_limit_def, trivial_limit (within sequentially k) ⟷ finite k",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ trivial_limit (within sequentially k) ⟷ finite k"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit (within sequentially k) ⟷ finite k"
                }
            ],
            "prop": "trivial_limit (within sequentially k) ⟷ finite k",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially_within"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "0.2.1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "0.2.1.0"
                    ],
                    "goal_id": "0.2.1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "infinite_def"
                },
                {
                    "fact_ids": [
                        "0.2.1.1.1"
                    ],
                    "goal_id": "0.2.1.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_infinite_eq"
                },
                {
                    "fact_ids": [
                        "0.2.1.1.2"
                    ],
                    "goal_id": "0.2.1.1.3",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "0.2.1.1.3"
                    ],
                    "goal_id": "0.2.1.1.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "eventually_subsequence",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀m. ∀n. m < n ⟶ R m < R n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀m. ∀n. m < n ⟶ R m < R n"
                },
                {
                    "args": "eventually P sequentially",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually P sequentially ⊢ eventually P sequentially"
                },
                {
                    "args": "eventually_sequentially",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually P sequentially ⊢ ∃N. ∀n. N ≤ n ⟶ P n"
                },
                {
                    "args": "N, nat",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ P n",
                    "id": "4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ P n ⊢ ∀n. N ≤ n ⟶ P n"
                },
                {
                    "args": "monotone_bigger, {R: R}",
                    "id": "5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. n ≤ R n"
                },
                {
                    "args": "∀n. N ≤ n ⟶ P (R n)",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "z3",
                    "th": "∀n. N ≤ n ⟶ P n, ∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. N ≤ n ⟶ P (R n)"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ P (R n), a: N}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n, eventually P sequentially, ∀n. N ≤ n ⟶ P n ⊢ ∃a1. ∀n. a1 ≤ n ⟶ P (R n)"
                },
                {
                    "args": "comp_fun_def, ∃N. ∀n. N ≤ n ⟶ (P ∘ R) n",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n, eventually P sequentially, ∀n. N ≤ n ⟶ P n ⊢ ∃N. ∀n. N ≤ n ⟶ (P ∘ R) n"
                },
                {
                    "args": "eventually_sequentially, eventually (P ∘ R) sequentially",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n, eventually P sequentially, ∀n. N ≤ n ⟶ P n ⊢ eventually (P ∘ R) sequentially"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ P n",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀m. ∀n. m < n ⟶ R m < R n) ⟶ eventually P sequentially ⟶ eventually (P ∘ R) sequentially"
                }
            ],
            "prop": [
                "(∀m. ∀n. m < n ⟶ R m < R n) ",
                "⟶ eventually P sequentially ⟶ eventually (P ∘ R) sequentially"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "comp_fun_def"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "monotone_bigger"
                },
                {
                    "goal_id": "6",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "fact_ids": [
                        "4",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "R": "nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "arch_eventually_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_arch_simple, {x: x + 1}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃n. x + 1 ≤ of_nat n"
                },
                {
                    "args": "N, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "x + 1 ≤ of_nat N",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x + 1 ≤ of_nat N ⊢ x + 1 ≤ of_nat N"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x + 1 ≤ of_nat N ⊢ ∀n. N ≤ n ⟶ x < of_nat n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "real_of_nat_le",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "N ≤ n ⊢ (of_nat::nat ⇒ real) N ≤ of_nat n"
                },
                {
                    "args": "x < of_nat n",
                    "id": "3.3",
                    "prevs": [
                        "3.2",
                        "2"
                    ],
                    "rule": "z3",
                    "th": "N ≤ n, x + 1 ≤ of_nat N ⊢ x < of_nat n"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "x + 1 ≤ of_nat N ⊢ ∀n. N ≤ n ⟶ x < of_nat n"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ x < of_nat n, a: N}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x + 1 ≤ of_nat N ⊢ ∃a1. ∀n. a1 ≤ n ⟶ x < of_nat n"
                },
                {
                    "args": "eventually_sequentially, eventually (λn. x < of_nat n) sequentially",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x + 1 ≤ of_nat N ⊢ eventually (λn. x < of_nat n) sequentially"
                },
                {
                    "args": "∃n. x + 1 ≤ of_nat n",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. x < of_nat n) sequentially"
                }
            ],
            "prop": "eventually (λn. x < of_nat n) sequentially",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "x+1",
                    "theorem": "real_arch_simple"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_of_nat_le"
                },
                {
                    "fact_ids": [
                        "3.2",
                        "2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "arch_eventually_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_arch_simple, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃n. x ≤ of_nat n"
                },
                {
                    "args": "N, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "x ≤ of_nat N",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ of_nat N ⊢ x ≤ of_nat N"
                },
                {
                    "args": "∀n. (of_nat::nat ⇒ real) N ≤ of_nat n ⟶ x ≤ of_nat n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "z3",
                    "th": "x ≤ of_nat N ⊢ ∀n. (of_nat::nat ⇒ real) N ≤ of_nat n ⟶ x ≤ of_nat n"
                },
                {
                    "args": "exI, {P: λN. ∀n. (of_nat::nat ⇒ real) N ≤ of_nat n ⟶ x ≤ of_nat n, a: N}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ of_nat N ⊢ ∃a1. ∀n. (of_nat::nat ⇒ real) a1 ≤ of_nat n ⟶ x ≤ of_nat n"
                },
                {
                    "args": "real_of_nat_le, ∃N. ∀n. N ≤ n ⟶ x ≤ of_nat n",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ of_nat N ⊢ ∃N. ∀n. N ≤ n ⟶ x ≤ of_nat n"
                },
                {
                    "args": "eventually_sequentially, eventually (λn. x ≤ of_nat n) sequentially",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ of_nat N ⊢ eventually (λn. x ≤ of_nat n) sequentially"
                },
                {
                    "args": "∃n. x ≤ of_nat n",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. x ≤ of_nat n) sequentially"
                }
            ],
            "prop": "eventually (λn. x ≤ of_nat n) sequentially",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "real_arch_simple"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_of_nat_le"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "arch_eventually_abs_inv_offset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⟶ 0 < e"
                },
                {
                    "args": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially"
                },
                {
                    "args": "eventually_happens, {P: λn. abs (real_inverse (of_nat n + a)) < e, net: sequentially}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ trivial_limit sequentially ∨ (∃x. abs (real_inverse (of_nat x + a)) < e)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ trivial_limit sequentially ⟶ 0 < e"
                },
                {
                    "args": "trivial_limit sequentially",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ⊢ trivial_limit sequentially"
                },
                {
                    "args": "",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially, trivial_limit sequentially ⊢ ¬(0 < e) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "¬(0 < e)",
                    "id": "0.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(0 < e) ⊢ ¬(0 < e)"
                },
                {
                    "args": "trivial_limit_sequentially",
                    "id": "0.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "",
                    "id": "0.2.1.2",
                    "prevs": [
                        "0.2.1.0",
                        "0.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially, trivial_limit sequentially ⊢ ¬(0 < e) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially, eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ 0 < e"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ trivial_limit sequentially ⟶ 0 < e"
                },
                {
                    "args": "(∃x. abs (real_inverse (of_nat x + a)) < e) ⟶ 0 < e",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∃x. abs (real_inverse (of_nat x + a)) < e) ⟶ 0 < e"
                },
                {
                    "args": "disjE",
                    "id": "0.4",
                    "prevs": [
                        "0.1",
                        "0.2",
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⊢ 0 < e"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⟶ 0 < e"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 < e ⟶ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially"
                },
                {
                    "args": "0 < e",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ⊢ 0 < e"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 < e ⊢ ∀x. max 0 (max (2 * abs a) (2 / e)) < of_nat x ⟶ abs (real_inverse (of_nat x + a)) < e"
                },
                {
                    "args": "n, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "max 0 (max (2 * abs a) (2 / e)) < of_nat n",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ max 0 (max (2 * abs a) (2 / e)) < of_nat n"
                },
                {
                    "args": "real_max_lt",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ (0::real) < of_nat n ∧ max (2 * abs a) (2 / e) < of_nat n"
                },
                {
                    "args": "conjD2, {A: (0::real) < of_nat n, B: max (2 * abs a) (2 / e) < of_nat n}",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ max (2 * abs a) (2 / e) < of_nat n"
                },
                {
                    "args": "real_max_lt",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ 2 * abs a < of_nat n ∧ 2 / e < of_nat n"
                },
                {
                    "args": "0 < of_nat n / 2",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "z3",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ 0 < of_nat n / 2"
                },
                {
                    "args": "of_nat n / 2 ≤ abs (of_nat n + a)",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.4",
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n, 0 < e ⊢ of_nat n / 2 ≤ abs (of_nat n + a)"
                },
                {
                    "args": "real_le_inv2",
                    "id": "1.1.7",
                    "prevs": [
                        "1.1.5",
                        "1.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ real_inverse (abs (of_nat n + a)) ≤ real_inverse (of_nat n / 2)"
                },
                {
                    "args": "real_abs_inv, abs (real_inverse (of_nat n + a)) ≤ real_inverse (of_nat n / 2)",
                    "id": "1.1.8",
                    "prevs": [
                        "1.1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ abs (real_inverse (of_nat n + a)) ≤ real_inverse (of_nat n / 2)"
                },
                {
                    "args": "real_inv_inv, e = real_inverse (real_inverse e)",
                    "id": "1.1.9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ e = real_inverse (real_inverse e)"
                },
                {
                    "args": "real_lt_inv",
                    "id": "1.1.10",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ 0 < real_inverse e"
                },
                {
                    "args": "real_inverse e < of_nat n / 2",
                    "id": "1.1.11",
                    "prevs": [
                        "1.1.4",
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "max 0 (max (2 * abs a) (2 / e)) < of_nat n, 0 < e ⊢ real_inverse e < of_nat n / 2"
                },
                {
                    "args": "real_lt_inv2",
                    "id": "1.1.12",
                    "prevs": [
                        "1.1.10",
                        "1.1.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ real_inverse (of_nat n / 2) < real_inverse (real_inverse e)"
                },
                {
                    "args": "real_inverse (of_nat n / 2) < e",
                    "id": "1.1.13",
                    "prevs": [
                        "1.1.9",
                        "1.1.12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ real_inverse (of_nat n / 2) < e"
                },
                {
                    "args": "real_let_trans",
                    "id": "1.1.14",
                    "prevs": [
                        "1.1.8",
                        "1.1.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e, max 0 (max (2 * abs a) (2 / e)) < of_nat n ⊢ abs (real_inverse (of_nat n + a)) < e"
                },
                {
                    "args": "",
                    "id": "1.1.15",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.14"
                    ],
                    "rule": "intros",
                    "th": "0 < e ⊢ ∀n. max 0 (max (2 * abs a) (2 / e)) < of_nat n ⟶ abs (real_inverse (of_nat n + a)) < e"
                },
                {
                    "args": "arch_eventually_lt, {x: max 0 (max (2 * abs a) (2 / e))}",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ eventually (λn. max 0 (max (2 * abs a) (2 / e)) < of_nat n) sequentially"
                },
                {
                    "args": "eventually_mono",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e ⊢ eventually (λx. abs (real_inverse (of_nat x + a)) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < e ⟶ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⟷ 0 < e"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⟷ 0 < e"
                }
            ],
            "prop": "eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially ⟷ 0 < e",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "theorem": "eventually_happens"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trivial_limit_sequentially"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λn. max 0 (max (2 * abs a) (2/e)) < of_nat n)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_max_lt"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "apply_backward_step",
                    "param_y": "real_inverse (of_nat n /2)",
                    "theorem": "real_let_trans"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.3"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_max_lt"
                },
                {
                    "goal_id": "1.1.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_inv"
                },
                {
                    "goal_id": "1.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inv2"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.5",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1.4",
                        "1.0"
                    ],
                    "goal_id": "1.1.6",
                    "method_name": "z3"
                },
                {
                    "goal": "e = real_inverse (real_inverse e)",
                    "goal_id": "1.1.9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inv_inv"
                },
                {
                    "fact_ids": [
                        "1.1.9"
                    ],
                    "goal_id": "1.1.10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv2"
                },
                {
                    "goal_id": "1.1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "fact_ids": [
                        "1.1.4",
                        "1.0"
                    ],
                    "goal_id": "1.1.11",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "arch_eventually_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "e": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "arch_eventually_inv_offset",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "arch_eventually_lt, {x: abs a}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ eventually (λn. abs a < of_nat n) sequentially"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⟶ 0 < e"
                },
                {
                    "args": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially"
                },
                {
                    "args": "conjI, {A: eventually (λn. real_inverse (of_nat n + a) < e) sequentially, B: eventually (λn. abs a < of_nat n) sequentially}",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially ∧ eventually (λn. abs a < of_nat n) sequentially"
                },
                {
                    "args": "eventually_and",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ eventually (λx. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x) sequentially"
                },
                {
                    "args": "eventually_happens, {P: λx. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x, net: sequentially}",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ trivial_limit sequentially ∨ (∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ trivial_limit sequentially ⟶ 0 < e"
                },
                {
                    "args": "trivial_limit sequentially",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ⊢ trivial_limit sequentially"
                },
                {
                    "args": "",
                    "id": "1.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially, trivial_limit sequentially ⊢ ¬(0 < e) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "¬(0 < e)",
                    "id": "1.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(0 < e) ⊢ ¬(0 < e)"
                },
                {
                    "args": "trivial_limit_sequentially",
                    "id": "1.4.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "",
                    "id": "1.4.1.2",
                    "prevs": [
                        "1.4.1.0",
                        "1.4.1.1"
                    ],
                    "rule": "intros",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially, trivial_limit sequentially ⊢ ¬(0 < e) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.0",
                        "1.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially, eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ 0 < e"
                },
                {
                    "args": "",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.0",
                        "1.4.2"
                    ],
                    "rule": "intros",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ trivial_limit sequentially ⟶ 0 < e"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ (∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x) ⟶ 0 < e"
                },
                {
                    "args": "∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x",
                    "id": "1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x ⊢ ∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x"
                },
                {
                    "args": "n, nat",
                    "id": "1.5.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "real_inverse (of_nat n + a) < e ∧ abs a < of_nat n",
                    "id": "1.5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_inverse (of_nat n + a) < e ∧ abs a < of_nat n ⊢ real_inverse (of_nat n + a) < e ∧ abs a < of_nat n"
                },
                {
                    "args": "0 < e",
                    "id": "1.5.3",
                    "prevs": [
                        "1.5.2"
                    ],
                    "rule": "z3",
                    "th": "real_inverse (of_nat n + a) < e ∧ abs a < of_nat n ⊢ 0 < e"
                },
                {
                    "args": "∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x",
                    "id": "1.5.4",
                    "prevs": [
                        "1.5.0",
                        "1.5.0",
                        "1.5.1",
                        "1.5.2",
                        "1.5.3"
                    ],
                    "rule": "intros",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ (∃x. real_inverse (of_nat x + a) < e ∧ abs a < of_nat x) ⟶ 0 < e"
                },
                {
                    "args": "disjE",
                    "id": "1.6",
                    "prevs": [
                        "1.3",
                        "1.4",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⊢ 0 < e"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⟶ 0 < e"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ 0 < e ⟶ eventually (λn. real_inverse (of_nat n + a) < e) sequentially"
                },
                {
                    "args": "0 < e",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ⊢ 0 < e"
                },
                {
                    "args": "∀x. abs (real_inverse (of_nat x + a)) < e ⟶ real_inverse (of_nat x + a) < e",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. abs (real_inverse (of_nat x + a)) < e ⟶ real_inverse (of_nat x + a) < e"
                },
                {
                    "args": "arch_eventually_abs_inv_offset, eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially",
                    "id": "2.2",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < e ⊢ eventually (λn. abs (real_inverse (of_nat n + a)) < e) sequentially"
                },
                {
                    "args": "eventually_mono",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e ⊢ eventually (λx. real_inverse (of_nat x + a) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < e ⟶ eventually (λn. real_inverse (of_nat n + a) < e) sequentially"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⟷ 0 < e"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⟷ 0 < e"
                }
            ],
            "prop": "eventually (λn. real_inverse (of_nat n + a) < e) sequentially ⟷ 0 < e",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "abs a",
                    "theorem": "arch_eventually_lt"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "eventually_happens"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trivial_limit_sequentially"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.1",
                    "method_name": "exists_elim",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.5.2"
                    ],
                    "goal_id": "1.5.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λn. abs (real_inverse (of_nat n + a)) < e)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "arch_eventually_abs_inv_offset"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "e": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "arch_eventually_inv1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "arch_eventually_inv_offset, eventually (λn. real_inverse (of_nat n + 1) < e) sequentially ⟷ 0 < e",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + 1) < e) sequentially ⟷ 0 < e"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + 1) < e) sequentially ⟷ 0 < e"
                }
            ],
            "prop": "eventually (λn. real_inverse (of_nat n + 1) < e) sequentially ⟷ 0 < e",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "arch_eventually_inv_offset"
                }
            ],
            "ty": "thm",
            "vars": {
                "e": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "arch_eventually_inv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. of_nat n = of_nat n + (0::real)"
                },
                {
                    "args": "n, nat",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "real_add_rid, of_nat n = of_nat n + (0::real)",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ of_nat n = of_nat n + (0::real)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. of_nat n = of_nat n + (0::real)"
                },
                {
                    "args": "arch_eventually_inv_offset, eventually (λn. real_inverse (of_nat n + 0) < e) sequentially ⟷ 0 < e",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n + 0) < e) sequentially ⟷ 0 < e"
                },
                {
                    "args": "eventually (λn. real_inverse (of_nat n) < e) sequentially ⟷ 0 < e",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n) < e) sequentially ⟷ 0 < e"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λn. real_inverse (of_nat n) < e) sequentially ⟷ 0 < e"
                }
            ],
            "prop": "eventually (λn. real_inverse (of_nat n) < e) sequentially ⟷ 0 < e",
            "steps": [
                {
                    "goal": "!n. of_nat n = of_nat n + (0::real)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "arch_eventually_inv_offset"
                }
            ],
            "ty": "thm",
            "vars": {
                "e": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "arch_eventually_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 < x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 < x ⊢ 1 < x"
                },
                {
                    "args": "real_arch_pow, {x: x, y: b}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 < x ⊢ ∃n::nat. b < x ^ n"
                },
                {
                    "args": "N, nat",
                    "id": "2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "b < x ^ N",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b < x ^ N ⊢ b < x ^ N"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "1 < x, b < x ^ N ⊢ ∀n. N ≤ n ⟶ b < x ^ n"
                },
                {
                    "args": "n, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "4.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, b < x ^ N, N ≤ n ⊢ 1 ≤ x"
                },
                {
                    "args": "real_pow_mono",
                    "id": "4.3",
                    "prevs": [
                        "4.2",
                        "4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, b < x ^ N, N ≤ n ⊢ x ^ N ≤ x ^ n"
                },
                {
                    "args": "real_lte_trans",
                    "id": "4.4",
                    "prevs": [
                        "3",
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < x, b < x ^ N, N ≤ n ⊢ b < x ^ n"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "1 < x, b < x ^ N ⊢ ∀n. N ≤ n ⟶ b < x ^ n"
                },
                {
                    "args": "exI, {P: λN::nat. ∀n. N ≤ n ⟶ b < x ^ n, a: N}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 < x, b < x ^ N ⊢ ∃a1::nat. ∀n. a1 ≤ n ⟶ b < x ^ n"
                },
                {
                    "args": "eventually_sequentially, eventually (λn. b < x ^ n) sequentially",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < x, b < x ^ N ⊢ eventually (λn. b < x ^ n) sequentially"
                },
                {
                    "args": "∃n::nat. b < x ^ n",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ 1 < x ⟶ eventually (λn. b < x ^ n) sequentially"
                }
            ],
            "prop": "1 < x ⟶ eventually (λn. b < x ^ n) sequentially",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_y": "b",
                    "theorem": "real_arch_pow"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "4",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "apply_backward_step",
                    "param_y": "x ^ N",
                    "theorem": "real_lte_trans"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_mono"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "arch_eventually_pow_inv",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "1 < e",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 < e ⊢ 1 < e"
                },
                {
                    "args": "abs x < 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs x < 1 ⊢ abs x < 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "1 < e, abs x < 1 ⊢ x = 0 ⟶ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "x = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "∀n::nat. 1 ≤ n ⟶ abs (if n = 0 then 1 else 0) < e",
                    "id": "2.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "1 < e ⊢ ∀n::nat. 1 ≤ n ⟶ abs (if n = 0 then 1 else 0) < e"
                },
                {
                    "args": "exI, {P: λN::nat. ∀n. N ≤ n ⟶ abs (if n = 0 then 1 else 0) < e, a: (1::nat)}",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 < e, abs x < 1, x = 0 ⊢ ∃a1::nat. ∀n. a1 ≤ n ⟶ abs (if n = 0 then 1 else 0) < e"
                },
                {
                    "args": "eventually_sequentially, eventually (λn. abs (if n = 0 then 1 else 0) < e) sequentially",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < e, abs x < 1, x = 0 ⊢ eventually (λn. abs (if n = 0 then 1 else 0) < e) sequentially"
                },
                {
                    "args": "real_pow_zero, eventually (λn. abs (0 ^ n) < e) sequentially",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < e, abs x < 1, x = 0 ⊢ eventually (λn. abs (0 ^ n) < e) sequentially"
                },
                {
                    "args": "eventually (λn. abs (x ^ n) < e) sequentially",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0, 1 < e, abs x < 1 ⊢ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "1 < e, abs x < 1 ⊢ x = 0 ⟶ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "1 < e, abs x < 1 ⊢ ¬(x = 0) ⟶ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 0) ⊢ ¬(x = 0)"
                },
                {
                    "args": "arch_eventually_pow, {b: real_inverse e, x: real_inverse (abs x)}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 1 < real_inverse (abs x) ⟶ eventually (λn. real_inverse e < real_inverse (abs x) ^ n) sequentially"
                },
                {
                    "args": "1 < real_inverse (abs x)",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "1"
                    ],
                    "rule": "z3",
                    "th": "¬(x = 0), abs x < 1 ⊢ 1 < real_inverse (abs x)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(x = 0), abs x < 1 ⊢ eventually (λn. real_inverse e < real_inverse (abs x) ^ n) sequentially"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "1 < e, abs x < 1, ¬(x = 0) ⊢ ∀x1::nat. real_inverse e < real_inverse (abs x) ^ x1 ⟶ abs (x ^ x1) < e"
                },
                {
                    "args": "n, nat",
                    "id": "3.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "real_inverse e < real_inverse (abs x) ^ n",
                    "id": "3.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_inverse e < real_inverse (abs x) ^ n ⊢ real_inverse e < real_inverse (abs x) ^ n"
                },
                {
                    "args": "0 < real_inverse e",
                    "id": "3.4.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "1 < e ⊢ 0 < real_inverse e"
                },
                {
                    "args": "real_pow_inv",
                    "id": "3.4.3",
                    "prevs": [
                        "3.4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "real_inverse e < real_inverse (abs x) ^ n ⊢ real_inverse e < real_inverse (abs x ^ n)"
                },
                {
                    "args": "real_lt_inv2",
                    "id": "3.4.4",
                    "prevs": [
                        "3.4.2",
                        "3.4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < e, abs x < 1, ¬(x = 0), real_inverse e < real_inverse (abs x) ^ n ⊢ real_inverse (real_inverse (abs x ^ n)) < real_inverse (real_inverse e)"
                },
                {
                    "args": "real_inv_inv, abs x ^ n < e",
                    "id": "3.4.5",
                    "prevs": [
                        "3.4.4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "1 < e, abs x < 1, ¬(x = 0), real_inverse e < real_inverse (abs x) ^ n ⊢ abs x ^ n < e"
                },
                {
                    "args": "real_abs_pow, abs (x ^ n) < e",
                    "id": "3.4.6",
                    "prevs": [
                        "3.4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 < e, abs x < 1, ¬(x = 0), real_inverse e < real_inverse (abs x) ^ n ⊢ abs (x ^ n) < e"
                },
                {
                    "args": "",
                    "id": "3.4.7",
                    "prevs": [
                        "3.4.0",
                        "3.4.1",
                        "3.4.6"
                    ],
                    "rule": "intros",
                    "th": "1 < e, abs x < 1, ¬(x = 0) ⊢ ∀n::nat. real_inverse e < real_inverse (abs x) ^ n ⟶ abs (x ^ n) < e"
                },
                {
                    "args": "eventually_mono",
                    "id": "3.5",
                    "prevs": [
                        "3.4",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < e, abs x < 1, ¬(x = 0) ⊢ eventually (λx1. abs (x ^ x1) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "1 < e, abs x < 1 ⊢ ¬(x = 0) ⟶ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 < e, abs x < 1 ⊢ eventually (λn. abs (x ^ n) < e) sequentially"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 1 < e ⟶ abs x < 1 ⟶ eventually (λn. abs (x ^ n) < e) sequentially"
                }
            ],
            "prop": "1 < e ⟶ abs x < 1 ⟶ eventually (λn. abs (x ^ n) < e) sequentially",
            "steps": [
                {
                    "case": "x = 0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_zero"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_forward_step",
                    "param_b": "real_inverse e",
                    "param_x": "real_inverse (abs x)",
                    "theorem": "arch_eventually_pow"
                },
                {
                    "goal": "1 < real_inverse (abs x)",
                    "goal_id": "3.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.0",
                        "1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.1",
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "param_P": "(λn::nat. real_inverse e < real_inverse (abs x) ^ n)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_pow"
                },
                {
                    "goal_id": "3.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_inv_inv"
                },
                {
                    "goal_id": "3.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.4.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.4.1"
                    ],
                    "goal_id": "3.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_pow_inv"
                }
            ],
            "ty": "thm",
            "vars": {
                "e": "real",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "eventually_in_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ P n) ⟶ (∃a. ∀x. ¬(P x) ⟶ x ≤ a)"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ P n",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. N ≤ n ⟶ P n ⊢ ∃N. ∀n. N ≤ n ⟶ P n"
                },
                {
                    "args": "N, nat",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ P n",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ P n ⊢ ∀n. N ≤ n ⟶ P n"
                },
                {
                    "args": "∀x. ¬(P x) ⟶ x ≤ N",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "z3",
                    "th": "∀n. N ≤ n ⟶ P n ⊢ ∀x. ¬(P x) ⟶ x ≤ N"
                },
                {
                    "args": "exI, {P: λa. ∀x. ¬(P x) ⟶ x ≤ a, a: N}",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃N. ∀n. N ≤ n ⟶ P n, ∀n. N ≤ n ⟶ P n ⊢ ∃a1. ∀x. ¬(P x) ⟶ x ≤ a1"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ P n",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ P n) ⟶ (∃a. ∀x. ¬(P x) ⟶ x ≤ a)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃a. ∀x. ¬(P x) ⟶ x ≤ a) ⟶ (∃N. ∀n. N ≤ n ⟶ P n)"
                },
                {
                    "args": "∃a. ∀x. ¬(P x) ⟶ x ≤ a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃a. ∀x. ¬(P x) ⟶ x ≤ a ⊢ ∃a. ∀x. ¬(P x) ⟶ x ≤ a"
                },
                {
                    "args": "N, nat",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀x. ¬(P x) ⟶ x ≤ N",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ¬(P x) ⟶ x ≤ N ⊢ ∀x. ¬(P x) ⟶ x ≤ N"
                },
                {
                    "args": "∀n. N + 1 ≤ n ⟶ P n",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "∀x. ¬(P x) ⟶ x ≤ N ⊢ ∀n. N + 1 ≤ n ⟶ P n"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ P n, a: N + 1}",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃a. ∀x. ¬(P x) ⟶ x ≤ a, ∀x. ¬(P x) ⟶ x ≤ N ⊢ ∃a1. ∀n. a1 ≤ n ⟶ P n"
                },
                {
                    "args": "∃a. ∀x. ¬(P x) ⟶ x ≤ a",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃a. ∀x. ¬(P x) ⟶ x ≤ a) ⟶ (∃N. ∀n. N ≤ n ⟶ P n)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ P n) ⟷ (∃a. ∀x. ¬(P x) ⟶ x ≤ a)"
                },
                {
                    "args": "member_collect, (∃N. ∀n. N ≤ n ⟶ P n) ⟷ (∃a. ∀x. x ∈ {n. ¬(P n)} ⟶ x ≤ a)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃N. ∀n. N ≤ n ⟶ P n) ⟷ (∃a. ∀x. x ∈ {n. ¬(P n)} ⟶ x ≤ a)"
                },
                {
                    "args": "eventually_sequentially, eventually P sequentially ⟷ (∃a. ∀x. x ∈ {n. ¬(P n)} ⟶ x ≤ a)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually P sequentially ⟷ (∃a. ∀x. x ∈ {n. ¬(P n)} ⟶ x ≤ a)"
                },
                {
                    "args": "nat_finite, eventually P sequentially ⟷ finite ({n. ¬(P n)})",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually P sequentially ⟷ finite ({n. ¬(P n)})"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P sequentially ⟷ finite ({n. ¬(P n)})"
                }
            ],
            "prop": "eventually P sequentially ⟷ finite ({n. ¬(P n)})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_finite"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "inst_exists_goal",
                    "s": "N + 1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_no_subsequence",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀p. ∀q. (p ⟷ ¬q) ⟷ ¬p ⟷ q",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀p. ∀q. (p ⟷ ¬q) ⟷ ¬p ⟷ q"
                },
                {
                    "args": "member_collect, (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ {n1. ¬(P n1)})) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ {n1. ¬(P n1)})) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                },
                {
                    "args": "infinite_enumerate_eq_alt, infinite ({n. ¬(P n)}) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ infinite ({n. ¬(P n)}) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                },
                {
                    "args": "infinite_def, ¬(finite ({n. ¬(P n)})) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ ¬(finite ({n. ¬(P n)})) ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                },
                {
                    "args": "finite ({n. ¬(P n)}) ⟷ ¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ finite ({n. ¬(P n)}) ⟷ ¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                },
                {
                    "args": "eventually_in_sequentially, eventually P sequentially ⟷ ¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ eventually P sequentially ⟷ ¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually P sequentially ⟷ ¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
                }
            ],
            "prop": [
                "eventually P sequentially ⟷ ",
                "¬(∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. ¬(P (r n))))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_in_sequentially"
                },
                {
                    "goal": "!p. !q. (p <--> ~q) <-->  (~p <--> q)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "infinite_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "infinite_enumerate_eq_alt"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_ubound_le_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b) ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b ⊢ ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b"
                },
                {
                    "args": "b, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ f n ≤ b",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. N ≤ n ⟶ f n ≤ b ⊢ ∃N. ∀n. N ≤ n ⟶ f n ≤ b"
                },
                {
                    "args": "N, nat",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ f n ≤ b",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ f n ≤ b ⊢ ∀n. N ≤ n ⟶ f n ≤ b"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ N = 0 ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "N = 0",
                    "id": "0.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N = 0 ⊢ N = 0"
                },
                {
                    "args": "",
                    "id": "0.5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, N = 0 ⊢ ∀n. f n ≤ b"
                },
                {
                    "args": "n, nat",
                    "id": "0.5.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "le_0, {n: n}",
                    "id": "0.5.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "N ≤ n",
                    "id": "0.5.1.2",
                    "prevs": [
                        "0.5.0",
                        "0.5.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "N = 0, ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ N ≤ n"
                },
                {
                    "args": "n",
                    "id": "0.5.1.3",
                    "prevs": [
                        "0.4",
                        "0.5.1.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ f n ≤ b, ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, N = 0 ⊢ f n ≤ b"
                },
                {
                    "args": "",
                    "id": "0.5.1.4",
                    "prevs": [
                        "0.5.1.0",
                        "0.5.1.3"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, N = 0 ⊢ ∀n. f n ≤ b"
                },
                {
                    "args": "exI, {P: λb. ∀n. f n ≤ b, a: b}",
                    "id": "0.5.2",
                    "prevs": [
                        "0.5.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, N = 0 ⊢ ∃a1. ∀n. f n ≤ a1"
                },
                {
                    "args": "",
                    "id": "0.5.3",
                    "prevs": [
                        "0.5.0",
                        "0.5.2"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ N = 0 ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ ¬(N = 0) ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "¬(N = 0)",
                    "id": "0.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(N = 0) ⊢ ¬(N = 0)"
                },
                {
                    "args": "",
                    "id": "0.6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ ∀n. f n ≤ max b (sup ({y. ∃m. y = f m ∧ m < N}))"
                },
                {
                    "args": "m, nat",
                    "id": "0.6.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "",
                    "id": "0.6.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ m < N ⟶ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "m < N",
                    "id": "0.6.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < N ⊢ m < N"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∀x. (∃m1. x = f m1 ∧ m1 < N) ⟷ (∃x1. x = f x1 ∧ x1 < N)"
                },
                {
                    "args": "x, real",
                    "id": "0.6.1.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eq_refl, {x: ∃m1. x = f m1 ∧ m1 < N}",
                    "id": "0.6.1.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∃m1. x = f m1 ∧ m1 < N) ⟷ (∃m1. x = f m1 ∧ m1 < N)"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.1.2",
                    "prevs": [
                        "0.6.1.1.1.0",
                        "0.6.1.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∀x. (∃m1. x = f m1 ∧ m1 < N) ⟷ (∃x1. x = f x1 ∧ x1 < N)"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ (∃x1. x = f x1 ∧ x1 ∈ {m. m < N})",
                    "id": "0.6.1.1.2",
                    "prevs": [
                        "0.6.1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ (∃x1. x = f x1 ∧ x1 ∈ {m. m < N})"
                },
                {
                    "args": "in_image, ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ x ∈ image f ({m. m < N})",
                    "id": "0.6.1.1.3",
                    "prevs": [
                        "0.6.1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ x ∈ image f ({m. m < N})"
                },
                {
                    "args": "set_equal_iff, {y. ∃m1. y = f m1 ∧ m1 < N} = image f ({m. m < N})",
                    "id": "0.6.1.1.4",
                    "prevs": [
                        "0.6.1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ {y. ∃m1. y = f m1 ∧ m1 < N} = image f ({m. m < N})"
                },
                {
                    "args": "finite_natseg_lt, {n: N}",
                    "id": "0.6.1.1.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m. m < N})"
                },
                {
                    "args": "finite_image, {f: f, s: {m. m < N}}",
                    "id": "0.6.1.1.6",
                    "prevs": [
                        "0.6.1.1.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ finite (image f ({m. m < N}))"
                },
                {
                    "args": "finite ({y. ∃m1. y = f m1 ∧ m1 < N})",
                    "id": "0.6.1.1.7",
                    "prevs": [
                        "0.6.1.1.4",
                        "0.6.1.1.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ finite ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ (∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false",
                    "id": "0.6.1.1.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false"
                },
                {
                    "args": "f 0",
                    "id": "0.6.1.1.8.1",
                    "prevs": [
                        "0.6.1.1.8.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ f 0 ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "0.6.1.1.8.2",
                    "prevs": [
                        "0.6.1.1.8.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ false ⟷ f 0 ∈ {y. ∃m1. y = f m1 ∧ m1 < N}"
                },
                {
                    "args": "eq_refl, {x: f 0}",
                    "id": "0.6.1.1.8.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f 0 = f 0"
                },
                {
                    "args": "le_1_1",
                    "id": "0.6.1.1.8.4",
                    "prevs": [
                        "0.6.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(N = 0) ⊢ 0 < N"
                },
                {
                    "args": "conjI",
                    "id": "0.6.1.1.8.5",
                    "prevs": [
                        "0.6.1.1.8.3",
                        "0.6.1.1.8.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N, ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ f 0 = f 0 ∧ 0 < N"
                },
                {
                    "args": "exI, {P: λm1. f 0 = f m1 ∧ m1 < N, a: (0::nat)}",
                    "id": "0.6.1.1.8.6",
                    "prevs": [
                        "0.6.1.1.8.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N, ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ ∃a1. f 0 = f a1 ∧ a1 < N"
                },
                {
                    "args": "member_collect, f 0 ∈ {y. ∃m1. y = f m1 ∧ m1 < N}",
                    "id": "0.6.1.1.8.7",
                    "prevs": [
                        "0.6.1.1.8.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N, ∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false ⊢ f 0 ∈ {y. ∃m1. y = f m1 ∧ m1 < N}"
                },
                {
                    "args": "false",
                    "id": "0.6.1.1.8.8",
                    "prevs": [
                        "0.6.1.1.8.2",
                        "0.6.1.1.8.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false, ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ false"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.8.9",
                    "prevs": [
                        "0.6.1.1.8.0",
                        "0.6.1.1.8.8"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ (∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false) ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "0.6.1.1.9",
                    "prevs": [
                        "0.6.1.1.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ¬(∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ x ∈ ∅)",
                    "id": "0.6.1.1.10",
                    "prevs": [
                        "0.6.1.1.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ¬(∀x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({y. ∃m1. y = f m1 ∧ m1 < N} = ∅)",
                    "id": "0.6.1.1.11",
                    "prevs": [
                        "0.6.1.1.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ¬({y. ∃m1. y = f m1 ∧ m1 < N} = ∅)"
                },
                {
                    "args": "real_le_sup_finite, {a: f m, s: {y. ∃m1. y = f m1 ∧ m1 < N}}",
                    "id": "0.6.1.1.12",
                    "prevs": [
                        "0.6.1.1.7",
                        "0.6.1.1.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N}) ⟷ (∃x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ f m ≤ x)"
                },
                {
                    "args": "eq_refl, {x: f m}",
                    "id": "0.6.1.1.13",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f m = f m"
                },
                {
                    "args": "conjI",
                    "id": "0.6.1.1.14",
                    "prevs": [
                        "0.6.1.1.13",
                        "0.6.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ f m = f m ∧ m < N"
                },
                {
                    "args": "exI, {P: λm1. f m = f m1 ∧ m1 < N, a: m}",
                    "id": "0.6.1.1.15",
                    "prevs": [
                        "0.6.1.1.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∃a1. f m = f a1 ∧ a1 < N"
                },
                {
                    "args": "real_le_refl, {x: f m}",
                    "id": "0.6.1.1.16",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f m ≤ f m"
                },
                {
                    "args": "conjI",
                    "id": "0.6.1.1.17",
                    "prevs": [
                        "0.6.1.1.15",
                        "0.6.1.1.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ (∃m1. f m = f m1 ∧ m1 < N) ∧ f m ≤ f m"
                },
                {
                    "args": "exI, {P: λx. (∃m1. x = f m1 ∧ m1 < N) ∧ f m ≤ x, a: f m}",
                    "id": "0.6.1.1.18",
                    "prevs": [
                        "0.6.1.1.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∃a1. (∃m1. a1 = f m1 ∧ m1 < N) ∧ f m ≤ a1"
                },
                {
                    "args": "member_collect, ∃x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ f m ≤ x",
                    "id": "0.6.1.1.19",
                    "prevs": [
                        "0.6.1.1.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ ∃x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ f m ≤ x"
                },
                {
                    "args": "f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})",
                    "id": "0.6.1.1.20",
                    "prevs": [
                        "0.6.1.1.12",
                        "0.6.1.1.19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "disjI2, {A: f m ≤ b, B: f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})}",
                    "id": "0.6.1.1.21",
                    "prevs": [
                        "0.6.1.1.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), m < N ⊢ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.22",
                    "prevs": [
                        "0.6.1.1.0",
                        "0.6.1.1.21"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ m < N ⟶ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "",
                    "id": "0.6.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ ¬(m < N) ⟶ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "¬(m < N)",
                    "id": "0.6.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m < N) ⊢ ¬(m < N)"
                },
                {
                    "args": "N ≤ m",
                    "id": "0.6.1.2.1",
                    "prevs": [
                        "0.6.1.2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(m < N) ⊢ N ≤ m"
                },
                {
                    "args": "m",
                    "id": "0.6.1.2.2",
                    "prevs": [
                        "0.4",
                        "0.6.1.2.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ f n ≤ b, ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), ¬(m < N) ⊢ f m ≤ b"
                },
                {
                    "args": "disjI1, {A: f m ≤ b, B: f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})}",
                    "id": "0.6.1.2.3",
                    "prevs": [
                        "0.6.1.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0), ¬(m < N) ⊢ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "",
                    "id": "0.6.1.2.4",
                    "prevs": [
                        "0.6.1.2.0",
                        "0.6.1.2.3"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ ¬(m < N) ⟶ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "classical_cases",
                    "id": "0.6.1.3",
                    "prevs": [
                        "0.6.1.1",
                        "0.6.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ f m ≤ b ∨ f m ≤ sup ({y. ∃m1. y = f m1 ∧ m1 < N})"
                },
                {
                    "args": "real_le_max, f m ≤ max b (sup ({y. ∃m1. y = f m1 ∧ m1 < N}))",
                    "id": "0.6.1.4",
                    "prevs": [
                        "0.6.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ f m ≤ max b (sup ({y. ∃m1. y = f m1 ∧ m1 < N}))"
                },
                {
                    "args": "",
                    "id": "0.6.1.5",
                    "prevs": [
                        "0.6.1.0",
                        "0.6.1.4"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ ∀m. f m ≤ max b (sup ({y. ∃m1. y = f m1 ∧ m1 < N}))"
                },
                {
                    "args": "exI, {P: λb. ∀n. f n ≤ b, a: max b (sup ({y. ∃m. y = f m ∧ m < N}))}",
                    "id": "0.6.2",
                    "prevs": [
                        "0.6.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b, ¬(N = 0) ⊢ ∃a1. ∀n. f n ≤ a1"
                },
                {
                    "args": "",
                    "id": "0.6.3",
                    "prevs": [
                        "0.6.0",
                        "0.6.2"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ ¬(N = 0) ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.7",
                    "prevs": [
                        "0.5",
                        "0.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∀n. N ≤ n ⟶ f n ≤ b ⊢ ∃b. ∀n. f n ≤ b"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ f n ≤ b, ∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∃N. ∀n. N ≤ n ⟶ f n ≤ b) ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "eventually_sequentially, (∃b. eventually (λn. f n ≤ b) sequentially) ⟶ (∃b. ∀n. f n ≤ b)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃b. eventually (λn. f n ≤ b) sequentially) ⟶ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∀n. f n ≤ b) ⟶ (∃b. eventually (λn. f n ≤ b) sequentially)"
                },
                {
                    "args": "∃b. ∀n. f n ≤ b",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃b. ∀n. f n ≤ b ⊢ ∃b. ∀n. f n ≤ b"
                },
                {
                    "args": "b, real",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀n. f n ≤ b",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. f n ≤ b ⊢ ∀n. f n ≤ b"
                },
                {
                    "args": "always_eventually, {P: λn. f n ≤ b, net: sequentially}",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. f n ≤ b ⊢ eventually (λn. f n ≤ b) sequentially"
                },
                {
                    "args": "exI, {P: λb. eventually (λn. f n ≤ b) sequentially, a: b}",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∀n. f n ≤ b, ∀n. f n ≤ b ⊢ ∃a1. eventually (λn. f n ≤ a1) sequentially"
                },
                {
                    "args": "∃b. ∀n. f n ≤ b",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∀n. f n ≤ b) ⟶ (∃b. eventually (λn. f n ≤ b) sequentially)"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃b. eventually (λn. f n ≤ b) sequentially) ⟷ (∃b. ∀n. f n ≤ b)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. eventually (λn. f n ≤ b) sequentially) ⟷ (∃b. ∀n. f n ≤ b)"
                }
            ],
            "prop": "(∃b. eventually (λn. f n ≤ b) sequentially) ⟷ (∃b. ∀n. f n ≤ b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "case": "N=0",
                    "goal_id": "0.5",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.5.1",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "0.5.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5.1.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "0.5.0"
                    ],
                    "goal_id": "0.5.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.5.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "0.6",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1",
                    "method_name": "inst_exists_goal",
                    "s": "max b (sup {y. ?m. y = f m & m <N})"
                },
                {
                    "goal_id": "0.6.1",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "goal_id": "0.6.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_max"
                },
                {
                    "case": "m < N",
                    "goal_id": "0.6.1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.6.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal": "finite ({y. ∃m1. y = f m1 ∧ m1 < N})",
                    "goal_id": "0.6.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal": "{y. ∃m1. y = f m1 ∧ m1 < N} = image f {m. m < N}",
                    "goal_id": "0.6.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.6.1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.4"
                    ],
                    "goal_id": "0.6.1.1.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.6.1.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_image"
                },
                {
                    "goal_id": "0.6.1.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg_lt"
                },
                {
                    "goal": "~({y. ∃m1. y = f m1 ∧ m1 < N} = {})",
                    "goal_id": "0.6.1.1.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.8.0"
                    ],
                    "goal_id": "0.6.1.1.8.1",
                    "method_name": "forall_elim",
                    "s": "f 0"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.8.1"
                    ],
                    "goal_id": "0.6.1.1.8.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.8.2"
                    ],
                    "goal_id": "0.6.1.1.8.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.6.1.1.8.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.6.1.1.8.3",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "0.6.1.1.8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.6.1.1.8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "0.6.0"
                    ],
                    "goal_id": "0.6.1.1.8.4",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.7",
                        "0.6.1.1.11"
                    ],
                    "goal_id": "0.6.1.1.12",
                    "method_name": "apply_forward_step",
                    "param_a": "f m",
                    "theorem": "real_le_sup_finite"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.12"
                    ],
                    "goal_id": "0.6.1.1.13",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "inst_exists_goal",
                    "s": "f m"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "inst_exists_goal",
                    "s": "m"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.6.1.1.13",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "0.6.1.1.16",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "0.6.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.6.1.2.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "0.6.1.2.0"
                    ],
                    "goal_id": "0.6.1.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "eventually_lbound_le_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n) ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n ⊢ ∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n"
                },
                {
                    "args": "b, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ b ≤ f n",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃N. ∀n. N ≤ n ⟶ b ≤ f n ⊢ ∃N. ∀n. N ≤ n ⟶ b ≤ f n"
                },
                {
                    "args": "N, nat",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ b ≤ f n",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ b ≤ f n ⊢ ∀n. N ≤ n ⟶ b ≤ f n"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ N = 0 ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "N = 0",
                    "id": "0.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N = 0 ⊢ N = 0"
                },
                {
                    "args": "",
                    "id": "0.5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, N = 0 ⊢ ∀n. b ≤ f n"
                },
                {
                    "args": "n, nat",
                    "id": "0.5.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "le_0, {n: n}",
                    "id": "0.5.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "N ≤ n",
                    "id": "0.5.1.2",
                    "prevs": [
                        "0.5.0",
                        "0.5.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "N = 0, ∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ N ≤ n"
                },
                {
                    "args": "n",
                    "id": "0.5.1.3",
                    "prevs": [
                        "0.4",
                        "0.5.1.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ b ≤ f n, ∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, N = 0 ⊢ b ≤ f n"
                },
                {
                    "args": "",
                    "id": "0.5.1.4",
                    "prevs": [
                        "0.5.1.0",
                        "0.5.1.3"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, N = 0 ⊢ ∀n. b ≤ f n"
                },
                {
                    "args": "exI, {P: λb. ∀n. b ≤ f n, a: b}",
                    "id": "0.5.2",
                    "prevs": [
                        "0.5.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, N = 0 ⊢ ∃a1. ∀n. a1 ≤ f n"
                },
                {
                    "args": "",
                    "id": "0.5.3",
                    "prevs": [
                        "0.5.0",
                        "0.5.2"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ N = 0 ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ ¬(N = 0) ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "¬(N = 0)",
                    "id": "0.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(N = 0) ⊢ ¬(N = 0)"
                },
                {
                    "args": "",
                    "id": "0.6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ ∀n. min b (inf ({y. ∃m. y = f m ∧ m < N})) ≤ f n"
                },
                {
                    "args": "m, nat",
                    "id": "0.6.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "",
                    "id": "0.6.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ m < N ⟶ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "m < N",
                    "id": "0.6.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < N ⊢ m < N"
                },
                {
                    "args": "{y. ∃m. y = f m ∧ m < N} = {y. ∃x. x ∈ {m. m < N} ∧ y = f x}",
                    "id": "0.6.1.1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ {y. ∃m. y = f m ∧ m < N} = {y. ∃x. x ∈ {m. m < N} ∧ y = f x}"
                },
                {
                    "args": "image_def, {y. ∃m. y = f m ∧ m < N} = image f ({m. m < N})",
                    "id": "0.6.1.1.2",
                    "prevs": [
                        "0.6.1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ {y. ∃m. y = f m ∧ m < N} = image f ({m. m < N})"
                },
                {
                    "args": "finite_natseg_lt, {n: N}",
                    "id": "0.6.1.1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m. m < N})"
                },
                {
                    "args": "finite_image, {f: f, s: {m. m < N}}",
                    "id": "0.6.1.1.4",
                    "prevs": [
                        "0.6.1.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ finite (image f ({m. m < N}))"
                },
                {
                    "args": "finite ({y. ∃m. y = f m ∧ m < N})",
                    "id": "0.6.1.1.5",
                    "prevs": [
                        "0.6.1.1.2",
                        "0.6.1.1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ finite ({y. ∃m. y = f m ∧ m < N})"
                },
                {
                    "args": "¬({y. ∃m. y = f m ∧ m < N} = ∅)",
                    "id": "0.6.1.1.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬({y. ∃m. y = f m ∧ m < N} = ∅)"
                },
                {
                    "args": "real_inf_le_finite, {a: f m, s: {y. ∃m. y = f m ∧ m < N}}",
                    "id": "0.6.1.1.7",
                    "prevs": [
                        "0.6.1.1.5",
                        "0.6.1.1.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m ⟷ (∃x. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ x ≤ f m)"
                },
                {
                    "args": "eq_refl, {x: f m}",
                    "id": "0.6.1.1.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f m = f m"
                },
                {
                    "args": "conjI",
                    "id": "0.6.1.1.9",
                    "prevs": [
                        "0.6.1.1.8",
                        "0.6.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ f m = f m ∧ m < N"
                },
                {
                    "args": "exI, {P: λm1. f m = f m1 ∧ m1 < N, a: m}",
                    "id": "0.6.1.1.10",
                    "prevs": [
                        "0.6.1.1.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ ∃a1. f m = f a1 ∧ a1 < N"
                },
                {
                    "args": "member_collect, f m ∈ {y. ∃m1. y = f m1 ∧ m1 < N}",
                    "id": "0.6.1.1.11",
                    "prevs": [
                        "0.6.1.1.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ f m ∈ {y. ∃m1. y = f m1 ∧ m1 < N}"
                },
                {
                    "args": "real_le_refl, {x: f m}",
                    "id": "0.6.1.1.12",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ f m ≤ f m"
                },
                {
                    "args": "conjI",
                    "id": "0.6.1.1.13",
                    "prevs": [
                        "0.6.1.1.11",
                        "0.6.1.1.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ f m ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ f m ≤ f m"
                },
                {
                    "args": "exI, {P: λx. x ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ x ≤ f m, a: f m}",
                    "id": "0.6.1.1.14",
                    "prevs": [
                        "0.6.1.1.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ ∃a1. a1 ∈ {y. ∃m1. y = f m1 ∧ m1 < N} ∧ a1 ≤ f m"
                },
                {
                    "args": "inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m",
                    "id": "0.6.1.1.15",
                    "prevs": [
                        "0.6.1.1.7",
                        "0.6.1.1.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "disjI2, {A: b ≤ f m, B: inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m}",
                    "id": "0.6.1.1.16",
                    "prevs": [
                        "0.6.1.1.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), m < N ⊢ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "",
                    "id": "0.6.1.1.17",
                    "prevs": [
                        "0.6.1.1.0",
                        "0.6.1.1.16"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ m < N ⟶ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "",
                    "id": "0.6.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ ¬(m < N) ⟶ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "¬(m < N)",
                    "id": "0.6.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m < N) ⊢ ¬(m < N)"
                },
                {
                    "args": "N ≤ m",
                    "id": "0.6.1.2.1",
                    "prevs": [
                        "0.6.1.2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(m < N) ⊢ N ≤ m"
                },
                {
                    "args": "m",
                    "id": "0.6.1.2.2",
                    "prevs": [
                        "0.4",
                        "0.6.1.2.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ b ≤ f n, ∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), ¬(m < N) ⊢ b ≤ f m"
                },
                {
                    "args": "disjI1, {A: b ≤ f m, B: inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m}",
                    "id": "0.6.1.2.3",
                    "prevs": [
                        "0.6.1.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0), ¬(m < N) ⊢ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "",
                    "id": "0.6.1.2.4",
                    "prevs": [
                        "0.6.1.2.0",
                        "0.6.1.2.3"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ ¬(m < N) ⟶ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "classical_cases",
                    "id": "0.6.1.3",
                    "prevs": [
                        "0.6.1.1",
                        "0.6.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ b ≤ f m ∨ inf ({y. ∃m1. y = f m1 ∧ m1 < N}) ≤ f m"
                },
                {
                    "args": "real_min_le, min b (inf ({y. ∃m1. y = f m1 ∧ m1 < N})) ≤ f m",
                    "id": "0.6.1.4",
                    "prevs": [
                        "0.6.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ min b (inf ({y. ∃m1. y = f m1 ∧ m1 < N})) ≤ f m"
                },
                {
                    "args": "",
                    "id": "0.6.1.5",
                    "prevs": [
                        "0.6.1.0",
                        "0.6.1.4"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ ∀m. min b (inf ({y. ∃m1. y = f m1 ∧ m1 < N})) ≤ f m"
                },
                {
                    "args": "exI, {P: λb. ∀n. b ≤ f n, a: min b (inf ({y. ∃m. y = f m ∧ m < N}))}",
                    "id": "0.6.2",
                    "prevs": [
                        "0.6.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n, ¬(N = 0) ⊢ ∃a1. ∀n. a1 ≤ f n"
                },
                {
                    "args": "",
                    "id": "0.6.3",
                    "prevs": [
                        "0.6.0",
                        "0.6.2"
                    ],
                    "rule": "intros",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ ¬(N = 0) ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.7",
                    "prevs": [
                        "0.5",
                        "0.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∀n. N ≤ n ⟶ b ≤ f n ⊢ ∃b. ∀n. b ≤ f n"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ b ≤ f n, ∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n) ⟶ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∀n. b ≤ f n) ⟶ (∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n)"
                },
                {
                    "args": "∃b. ∀n. b ≤ f n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃b. ∀n. b ≤ f n ⊢ ∃b. ∀n. b ≤ f n"
                },
                {
                    "args": "b, real",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀n. b ≤ f n",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. b ≤ f n ⊢ ∀n. b ≤ f n"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ b ≤ f n",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "∀n. b ≤ f n ⊢ ∃N. ∀n. N ≤ n ⟶ b ≤ f n"
                },
                {
                    "args": "exI, {P: λb. ∃N. ∀n. N ≤ n ⟶ b ≤ f n, a: b}",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃b. ∀n. b ≤ f n, ∀n. b ≤ f n ⊢ ∃a1. ∃N. ∀n. N ≤ n ⟶ a1 ≤ f n"
                },
                {
                    "args": "∃b. ∀n. b ≤ f n",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∀n. b ≤ f n) ⟶ (∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃b. ∃N. ∀n. N ≤ n ⟶ b ≤ f n) ⟷ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "eventually_sequentially, (∃b. eventually (λn. b ≤ f n) sequentially) ⟷ (∃b. ∀n. b ≤ f n)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃b. eventually (λn. b ≤ f n) sequentially) ⟷ (∃b. ∀n. b ≤ f n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. eventually (λn. b ≤ f n) sequentially) ⟷ (∃b. ∀n. b ≤ f n)"
                }
            ],
            "prop": "(∃b. eventually (λn. b ≤ f n) sequentially) ⟷ (∃b. ∀n. b ≤ f n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "case": "N=0",
                    "goal_id": "0.5",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.5.1",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "0.5.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5.1.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "0.5.0"
                    ],
                    "goal_id": "0.5.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.5.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "0.6",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1",
                    "method_name": "inst_exists_goal",
                    "s": "min b (inf {y. ?m. y = f m & m < N})"
                },
                {
                    "goal_id": "0.6.1",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "goal_id": "0.6.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_min_le"
                },
                {
                    "case": "m < N",
                    "goal_id": "0.6.1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.6.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal": "finite ({y. ∃m. y = f m ∧ m < N})",
                    "goal_id": "0.6.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal": "{y. ∃m. y = f m ∧ m < N} = image f {m. m < N}",
                    "goal_id": "0.6.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "0.6.1.1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.2"
                    ],
                    "goal_id": "0.6.1.1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.6.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_image"
                },
                {
                    "goal_id": "0.6.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg_lt"
                },
                {
                    "goal": "~({y. ∃m. y = f m ∧ m < N} = {})",
                    "goal_id": "0.6.1.1.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0.6.1.1.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.5",
                        "0.6.1.1.6"
                    ],
                    "goal_id": "0.6.1.1.7",
                    "method_name": "apply_forward_step",
                    "param_a": "f m",
                    "theorem": "real_inf_le_finite"
                },
                {
                    "fact_ids": [
                        "0.6.1.1.7"
                    ],
                    "goal_id": "0.6.1.1.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "inst_exists_goal",
                    "s": "f m"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "inst_exists_goal",
                    "s": "m"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.6.1.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "0.6.1.1.12",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "0.6.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.6.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.6.1.2.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "0.6.1.2.0"
                    ],
                    "goal_id": "0.6.1.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real"
            }
        },
        {
            "name": "netlimit",
            "ty": "def.ax",
            "type": "'a net ⇒ 'a"
        },
        {
            "name": "at_infinity",
            "ty": "def.ax",
            "type": "real net"
        },
        {
            "name": "at_posinfinity",
            "prop": "at_posinfinity = at_infinity",
            "ty": "def",
            "type": "real net"
        },
        {
            "name": "at_neginfinity",
            "prop": "at_neginfinity = at_infinity",
            "ty": "def",
            "type": "real net"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_open",
            "prop": "real_open s ⟷ (∀x. x ∈ s ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s)))",
            "ty": "def",
            "type": "real set ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_closed",
            "prop": "real_closed s ⟷ real_open (diff univ s)",
            "ty": "def",
            "type": "real set ⇒ bool"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_open_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x::real. x ∈ ∅ ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ ∅))"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ ∅",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ ∅ ⊢ x ∈ ∅"
                },
                {
                    "args": "member_empty, ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ ∅)",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x ∈ ∅ ⊢ ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ ∅)"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x::real. x ∈ ∅ ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ ∅))"
                },
                {
                    "args": "real_open_def, real_open ∅",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open ∅"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open ∅"
                }
            ],
            "prop": "real_open ∅",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_open_univ",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x::real. x ∈ univ ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ univ))"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ univ",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ univ ⊢ x ∈ univ"
                },
                {
                    "args": "(0::real) < 1",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 1"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ∈ univ ⊢ ∀x1. abs (x1 - x) < 1 ⟶ x1 ∈ univ"
                },
                {
                    "args": "x1, real",
                    "id": "0.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "abs (x1 - x) < 1",
                    "id": "0.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (x1 - x) < 1 ⊢ abs (x1 - x) < 1"
                },
                {
                    "args": "member_univ, {x: x1}",
                    "id": "0.3.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x1 ∈ univ"
                },
                {
                    "args": "",
                    "id": "0.3.3",
                    "prevs": [
                        "0.3.0",
                        "0.3.1",
                        "0.3.2"
                    ],
                    "rule": "intros",
                    "th": "x ∈ univ ⊢ ∀x1. abs (x1 - x) < 1 ⟶ x1 ∈ univ"
                },
                {
                    "args": "conjI",
                    "id": "0.4",
                    "prevs": [
                        "0.2",
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ univ ⊢ (0::real) < 1 ∧ (∀x1. abs (x1 - x) < 1 ⟶ x1 ∈ univ)"
                },
                {
                    "args": "exI, {P: λe. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ univ), a: (1::real)}",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ univ ⊢ ∃a1. 0 < a1 ∧ (∀x1. abs (x1 - x) < a1 ⟶ x1 ∈ univ)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x::real. x ∈ univ ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ univ))"
                },
                {
                    "args": "real_open_def, real_open univ",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open univ"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open univ"
                }
            ],
            "prop": "real_open univ",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "inst_exists_goal",
                    "s": "(1::real)"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "goal_id": "0.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_open_inter",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_open s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_open s ⊢ real_open s"
                },
                {
                    "args": "real_open t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_open t ⊢ real_open t"
                },
                {
                    "args": "real_open_def",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "real_open s ⊢ ∀x. x ∈ s ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s))"
                },
                {
                    "args": "real_open_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "real_open t ⊢ ∀x. x ∈ t ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ t))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "real_open s, real_open t ⊢ ∀x. x ∈ s ∩ t ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∩ t))"
                },
                {
                    "args": "x, real",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s ∩ t",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∩ t ⊢ x ∈ s ∩ t"
                },
                {
                    "args": "member_inter_iff",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ s ∩ t ⊢ x ∈ s ∧ x ∈ t"
                },
                {
                    "args": "conjD1, {A: x ∈ s, B: x ∈ t}",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ s ∩ t ⊢ x ∈ s"
                },
                {
                    "args": "conjD2, {A: x ∈ s, B: x ∈ t}",
                    "id": "4.4",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ s ∩ t ⊢ x ∈ t"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "2",
                        "4.3"
                    ],
                    "rule": "apply_fact",
                    "th": "real_open s, x ∈ s ∩ t ⊢ ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s)"
                },
                {
                    "args": "",
                    "id": "4.6",
                    "prevs": [
                        "3",
                        "4.4"
                    ],
                    "rule": "apply_fact",
                    "th": "real_open t, x ∈ s ∩ t ⊢ ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ t)"
                },
                {
                    "args": "d1, real",
                    "id": "4.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d1"
                },
                {
                    "args": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s)",
                    "id": "4.8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s) ⊢ 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s)"
                },
                {
                    "args": "d2, real",
                    "id": "4.9",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d2"
                },
                {
                    "args": "0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t)",
                    "id": "4.10",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t) ⊢ 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t)"
                },
                {
                    "args": "conjD1, {A: 0 < d1, B: ∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s}",
                    "id": "4.11",
                    "prevs": [
                        "4.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s) ⊢ 0 < d1"
                },
                {
                    "args": "conjD1, {A: 0 < d2, B: ∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t}",
                    "id": "4.12",
                    "prevs": [
                        "4.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t) ⊢ 0 < d2"
                },
                {
                    "args": "real_down2, {d1: d1, d2: d2}",
                    "id": "4.13",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < d1 ⟶ 0 < d2 ⟶ (∃e. 0 < e ∧ e < d1 ∧ e < d2)"
                },
                {
                    "args": "",
                    "id": "4.14",
                    "prevs": [
                        "4.13",
                        "4.11",
                        "4.12"
                    ],
                    "rule": "apply_fact",
                    "th": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t) ⊢ ∃e. 0 < e ∧ e < d1 ∧ e < d2"
                },
                {
                    "args": "e, real",
                    "id": "4.15",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "0 < e ∧ e < d1 ∧ e < d2",
                    "id": "4.16",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ∧ e < d1 ∧ e < d2 ⊢ 0 < e ∧ e < d1 ∧ e < d2"
                },
                {
                    "args": "conjD1",
                    "id": "4.17",
                    "prevs": [
                        "4.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e ∧ e < d1 ∧ e < d2 ⊢ 0 < e"
                },
                {
                    "args": "conjD2, {A: 0 < d1, B: ∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s}",
                    "id": "4.18",
                    "prevs": [
                        "4.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s) ⊢ ∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s"
                },
                {
                    "args": "conjD2, {A: 0 < d2, B: ∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t}",
                    "id": "4.19",
                    "prevs": [
                        "4.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t) ⊢ ∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t"
                },
                {
                    "args": "",
                    "id": "4.20",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2 ⊢ ∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∧ x1 ∈ t"
                },
                {
                    "args": "x1, real",
                    "id": "4.20.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "abs (x1 - x) < e",
                    "id": "4.20.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (x1 - x) < e ⊢ abs (x1 - x) < e"
                },
                {
                    "args": "conjD2, {A: 0 < e, B: e < d1 ∧ e < d2}",
                    "id": "4.20.2",
                    "prevs": [
                        "4.16"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < e ∧ e < d1 ∧ e < d2 ⊢ e < d1 ∧ e < d2"
                },
                {
                    "args": "conjD1",
                    "id": "4.20.3",
                    "prevs": [
                        "4.20.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e ∧ e < d1 ∧ e < d2 ⊢ e < d1"
                },
                {
                    "args": "real_lt_trans",
                    "id": "4.20.4",
                    "prevs": [
                        "4.20.1",
                        "4.20.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2, abs (x1 - x) < e ⊢ abs (x1 - x) < d1"
                },
                {
                    "args": "x1",
                    "id": "4.20.5",
                    "prevs": [
                        "4.18",
                        "4.20.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), real_open s, real_open t, x ∈ s ∩ t, 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2, abs (x1 - x) < e ⊢ x1 ∈ s"
                },
                {
                    "args": "conjD2",
                    "id": "4.20.6",
                    "prevs": [
                        "4.20.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < e ∧ e < d1 ∧ e < d2 ⊢ e < d2"
                },
                {
                    "args": "real_lt_trans",
                    "id": "4.20.7",
                    "prevs": [
                        "4.20.1",
                        "4.20.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2, abs (x1 - x) < e ⊢ abs (x1 - x) < d2"
                },
                {
                    "args": "x1",
                    "id": "4.20.8",
                    "prevs": [
                        "4.19",
                        "4.20.7"
                    ],
                    "rule": "apply_fact_for",
                    "th": "0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < e ∧ e < d1 ∧ e < d2, abs (x1 - x) < e ⊢ x1 ∈ t"
                },
                {
                    "args": "conjI",
                    "id": "4.20.9",
                    "prevs": [
                        "4.20.5",
                        "4.20.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2, abs (x1 - x) < e ⊢ x1 ∈ s ∧ x1 ∈ t"
                },
                {
                    "args": "",
                    "id": "4.20.10",
                    "prevs": [
                        "4.20.0",
                        "4.20.1",
                        "4.20.9"
                    ],
                    "rule": "intros",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2 ⊢ ∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∧ x1 ∈ t"
                },
                {
                    "args": "conjI",
                    "id": "4.21",
                    "prevs": [
                        "4.17",
                        "4.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2 ⊢ 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∧ x1 ∈ t)"
                },
                {
                    "args": "exI, {P: λe. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∧ x1 ∈ t), a: e}",
                    "id": "4.22",
                    "prevs": [
                        "4.21"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2 ⊢ ∃a1. 0 < a1 ∧ (∀x1. abs (x1 - x) < a1 ⟶ x1 ∈ s ∧ x1 ∈ t)"
                },
                {
                    "args": "member_inter_iff, ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∩ t)",
                    "id": "4.23",
                    "prevs": [
                        "4.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "real_open s, real_open t, x ∈ s ∩ t, 0 < d1 ∧ (∀x1. abs (x1 - x) < d1 ⟶ x1 ∈ s), 0 < d2 ∧ (∀x1. abs (x1 - x) < d2 ⟶ x1 ∈ t), 0 < e ∧ e < d1 ∧ e < d2 ⊢ ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∩ t)"
                },
                {
                    "args": "∃e. 0 < e ∧ e < d1 ∧ e < d2, ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ t), ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s)",
                    "id": "4.24",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.5",
                        "4.7",
                        "4.8",
                        "4.6",
                        "4.9",
                        "4.10",
                        "4.14",
                        "4.15",
                        "4.16",
                        "4.23"
                    ],
                    "rule": "intros",
                    "th": "real_open s, real_open t ⊢ ∀x. x ∈ s ∩ t ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ s ∩ t))"
                },
                {
                    "args": "real_open_def, real_open (s ∩ t)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "real_open s, real_open t ⊢ real_open (s ∩ t)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open s ⟶ real_open t ⟶ real_open (s ∩ t)"
                }
            ],
            "prop": "real_open s ⟶ real_open t ⟶ real_open (s ∩ t)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2",
                        "4.3"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.4"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.7",
                    "method_name": "exists_elim",
                    "names": "d1"
                },
                {
                    "fact_ids": [
                        "4.6"
                    ],
                    "goal_id": "4.9",
                    "method_name": "exists_elim",
                    "names": "d2"
                },
                {
                    "goal_id": "4.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "fact_ids": [
                        "4.8"
                    ],
                    "goal_id": "4.11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.10"
                    ],
                    "goal_id": "4.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4.13",
                    "method_name": "apply_forward_step",
                    "param_d1": "d1",
                    "param_d2": "d2",
                    "theorem": "real_down2"
                },
                {
                    "fact_ids": [
                        "4.13",
                        "4.11",
                        "4.12"
                    ],
                    "goal_id": "4.14",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4.14"
                    ],
                    "goal_id": "4.15",
                    "method_name": "exists_elim",
                    "names": "e"
                },
                {
                    "goal_id": "4.17",
                    "method_name": "inst_exists_goal",
                    "s": "e"
                },
                {
                    "goal_id": "4.17",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.16"
                    ],
                    "goal_id": "4.17",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.8"
                    ],
                    "goal_id": "4.18",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.10"
                    ],
                    "goal_id": "4.19",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4.20",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "goal_id": "4.20.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.18"
                    ],
                    "goal_id": "4.20.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "4.20.2",
                    "method_name": "apply_backward_step",
                    "param_y": "e",
                    "theorem": "real_lt_trans"
                },
                {
                    "fact_ids": [
                        "4.16"
                    ],
                    "goal_id": "4.20.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.20.2"
                    ],
                    "goal_id": "4.20.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.19"
                    ],
                    "goal_id": "4.20.6",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "4.20.6",
                    "method_name": "apply_backward_step",
                    "param_y": "e",
                    "theorem": "real_lt_trans"
                },
                {
                    "fact_ids": [
                        "4.20.2"
                    ],
                    "goal_id": "4.20.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "t": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_open_halfspace_gt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ {x1. a < x1} ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. a < x2}))"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {x1. a < x1}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {x1. a < x1} ⊢ x ∈ {x1. a < x1}"
                },
                {
                    "args": "member_collect",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ {x1. a < x1} ⊢ a < x"
                },
                {
                    "args": "0 < abs (a - x)",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "z3",
                    "th": "x ∈ {x1. a < x1} ⊢ 0 < abs (a - x)"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ∈ {x1. a < x1} ⊢ ∀x1. abs (x1 - x) < abs (a - x) ⟶ a < x1"
                },
                {
                    "args": "x1, real",
                    "id": "0.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "abs (x1 - x) < abs (a - x)",
                    "id": "0.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (x1 - x) < abs (a - x) ⊢ abs (x1 - x) < abs (a - x)"
                },
                {
                    "args": "a < x1",
                    "id": "0.4.2",
                    "prevs": [
                        "0.2",
                        "0.4.1"
                    ],
                    "rule": "z3",
                    "th": "x ∈ {x1. a < x1}, abs (x1 - x) < abs (a - x) ⊢ a < x1"
                },
                {
                    "args": "",
                    "id": "0.4.3",
                    "prevs": [
                        "0.4.0",
                        "0.4.1",
                        "0.4.2"
                    ],
                    "rule": "intros",
                    "th": "x ∈ {x1. a < x1} ⊢ ∀x1. abs (x1 - x) < abs (a - x) ⟶ a < x1"
                },
                {
                    "args": "conjI",
                    "id": "0.5",
                    "prevs": [
                        "0.3",
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ {x1. a < x1} ⊢ 0 < abs (a - x) ∧ (∀x1. abs (x1 - x) < abs (a - x) ⟶ a < x1)"
                },
                {
                    "args": "exI, {P: λe. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ a < x1), a: abs (a - x)}",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ {x1. a < x1} ⊢ ∃a1. 0 < a1 ∧ (∀x1. abs (x1 - x) < a1 ⟶ a < x1)"
                },
                {
                    "args": "member_collect, ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. a < x2})",
                    "id": "0.7",
                    "prevs": [
                        "0.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ {x1. a < x1} ⊢ ∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. a < x2})"
                },
                {
                    "args": "",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ {x1. a < x1} ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. a < x2}))"
                },
                {
                    "args": "real_open_def, real_open ({x. a < x})",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open ({x. a < x})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open ({x. a < x})"
                }
            ],
            "prop": "real_open ({x. a < x})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "inst_exists_goal",
                    "s": "abs (a - x)"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "fact_ids": [
                        "0.2",
                        "0.4.1"
                    ],
                    "goal_id": "0.4.2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_open_halfspace_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ {x1. x1 < a} ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. x2 < a}))"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {x1. x1 < a}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {x1. x1 < a} ⊢ x ∈ {x1. x1 < a}"
                },
                {
                    "args": "member_collect",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ {x1. x1 < a} ⊢ x < a"
                },
                {
                    "args": "0 < abs (a - x)",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "z3",
                    "th": "x ∈ {x1. x1 < a} ⊢ 0 < abs (a - x)"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ∈ {x1. x1 < a} ⊢ ∀x1. abs (x1 - x) < abs (a - x) ⟶ x1 ∈ {x2. x2 < a}"
                },
                {
                    "args": "x1, real",
                    "id": "0.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "abs (x1 - x) < abs (a - x)",
                    "id": "0.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (x1 - x) < abs (a - x) ⊢ abs (x1 - x) < abs (a - x)"
                },
                {
                    "args": "x1 < a",
                    "id": "0.4.2",
                    "prevs": [
                        "0.4.1",
                        "0.2"
                    ],
                    "rule": "z3",
                    "th": "abs (x1 - x) < abs (a - x), x ∈ {x1. x1 < a} ⊢ x1 < a"
                },
                {
                    "args": "member_collect, x1 ∈ {x. x < a}",
                    "id": "0.4.3",
                    "prevs": [
                        "0.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ {x1. x1 < a}, abs (x1 - x) < abs (a - x) ⊢ x1 ∈ {x. x < a}"
                },
                {
                    "args": "",
                    "id": "0.4.4",
                    "prevs": [
                        "0.4.0",
                        "0.4.1",
                        "0.4.3"
                    ],
                    "rule": "intros",
                    "th": "x ∈ {x1. x1 < a} ⊢ ∀x1. abs (x1 - x) < abs (a - x) ⟶ x1 ∈ {x2. x2 < a}"
                },
                {
                    "args": "conjI",
                    "id": "0.5",
                    "prevs": [
                        "0.3",
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ∈ {x1. x1 < a} ⊢ 0 < abs (a - x) ∧ (∀x1. abs (x1 - x) < abs (a - x) ⟶ x1 ∈ {x2. x2 < a})"
                },
                {
                    "args": "exI, {P: λe. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. x2 < a}), a: abs (a - x)}",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ {x1. x1 < a} ⊢ ∃a1. 0 < a1 ∧ (∀x1. abs (x1 - x) < a1 ⟶ x1 ∈ {x2. x2 < a})"
                },
                {
                    "args": "",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ {x1. x1 < a} ⟶ (∃e. 0 < e ∧ (∀x1. abs (x1 - x) < e ⟶ x1 ∈ {x2. x2 < a}))"
                },
                {
                    "args": "real_open_def, real_open ({x. x < a})",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open ({x. x < a})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open ({x. x < a})"
                }
            ],
            "prop": "real_open ({x. x < a})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "inst_exists_goal",
                    "s": "abs (a - x)"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "introduction",
                    "names": "x1"
                },
                {
                    "goal_id": "0.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "0.4.1",
                        "0.2"
                    ],
                    "goal_id": "0.4.2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_open_real_interval",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "{p. a < p ∧ p < b} = {p. a < p} ∩ {p. p < b}",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ {p. a < p ∧ p < b} = {p. a < p} ∩ {p. p < b}"
                },
                {
                    "args": "real_open_halfspace_gt, {a: a}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_open ({x. a < x})"
                },
                {
                    "args": "real_open_halfspace_lt, {a: b}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_open ({x. x < b})"
                },
                {
                    "args": "real_open_inter",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_open ({p. a < p} ∩ {p. p < b})"
                },
                {
                    "args": "real_open ({p. a < p ∧ p < b})",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ real_open ({p. a < p ∧ p < b})"
                },
                {
                    "args": "real_open_interval_def, real_open (real_open_interval a b)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open (real_open_interval a b)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open (real_open_interval a b)"
                }
            ],
            "prop": "real_open (real_open_interval a b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_interval_def"
                },
                {
                    "goal": "{p. a < p ∧ p < b} = inter {p. a < p}  {p. p < b} ",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_open_inter"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_open_halfspace_gt"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_open_halfspace_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_bounded",
            "prop": "real_bounded s ⟷ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B)",
            "ty": "def",
            "type": "real set ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_bounded_pos",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B) ⟶ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))"
                },
                {
                    "args": "∃B. ∀x. x ∈ s ⟶ abs x ≤ B",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃B. ∀x. x ∈ s ⟶ abs x ≤ B ⊢ ∃B. ∀x. x ∈ s ⟶ abs x ≤ B"
                },
                {
                    "args": "B, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR B"
                },
                {
                    "args": "∀x. x ∈ s ⟶ abs x ≤ B",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ s ⟶ abs x ≤ B ⊢ ∀x. x ∈ s ⟶ abs x ≤ B"
                },
                {
                    "args": "0 < 1 + abs B",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ 0 < 1 + abs B"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀x. x ∈ s ⟶ abs x ≤ B, ∃B. ∀x. x ∈ s ⟶ abs x ≤ B ⊢ ∀x. x ∈ s ⟶ abs x ≤ 1 + abs B"
                },
                {
                    "args": "x, real",
                    "id": "0.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ s",
                    "id": "0.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ⊢ x ∈ s"
                },
                {
                    "args": "",
                    "id": "0.4.2",
                    "prevs": [
                        "0.2",
                        "0.4.1"
                    ],
                    "rule": "apply_fact",
                    "th": "x ∈ s, ∀x. x ∈ s ⟶ abs x ≤ B ⊢ abs x ≤ B"
                },
                {
                    "args": "abs x ≤ 1 + abs B",
                    "id": "0.4.3",
                    "prevs": [
                        "0.4.2"
                    ],
                    "rule": "z3",
                    "th": "x ∈ s, ∀x. x ∈ s ⟶ abs x ≤ B ⊢ abs x ≤ 1 + abs B"
                },
                {
                    "args": "",
                    "id": "0.4.4",
                    "prevs": [
                        "0.4.0",
                        "0.4.1",
                        "0.4.3"
                    ],
                    "rule": "intros",
                    "th": "∀x. x ∈ s ⟶ abs x ≤ B, ∃B. ∀x. x ∈ s ⟶ abs x ≤ B ⊢ ∀x. x ∈ s ⟶ abs x ≤ 1 + abs B"
                },
                {
                    "args": "conjI",
                    "id": "0.5",
                    "prevs": [
                        "0.3",
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ s ⟶ abs x ≤ B, ∃B. ∀x. x ∈ s ⟶ abs x ≤ B ⊢ 0 < 1 + abs B ∧ (∀x. x ∈ s ⟶ abs x ≤ 1 + abs B)"
                },
                {
                    "args": "exI, {P: λB. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B), a: 1 + abs B}",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀x. x ∈ s ⟶ abs x ≤ B, ∃B. ∀x. x ∈ s ⟶ abs x ≤ B ⊢ ∃a1. 0 < a1 ∧ (∀x. x ∈ s ⟶ abs x ≤ a1)"
                },
                {
                    "args": "∃B. ∀x. x ∈ s ⟶ abs x ≤ B",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B) ⟶ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)) ⟶ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B)"
                },
                {
                    "args": "∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B) ⊢ ∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)"
                },
                {
                    "args": "B, real",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR B"
                },
                {
                    "args": "0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B) ⊢ 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)"
                },
                {
                    "args": "conjD2",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B) ⊢ ∀x. x ∈ s ⟶ abs x ≤ B"
                },
                {
                    "args": "exI, {P: λa1. ∀x. x ∈ s ⟶ abs x ≤ a1, a: B}",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B) ⊢ ∃a1. ∀x. x ∈ s ⟶ abs x ≤ a1"
                },
                {
                    "args": "∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B)) ⟶ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃B. ∀x. x ∈ s ⟶ abs x ≤ B) ⟷ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))"
                },
                {
                    "args": "real_bounded_def, real_bounded s ⟷ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_bounded s ⟷ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_bounded s ⟷ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))"
                }
            ],
            "prop": "real_bounded s ⟷ (∃B. 0 < B ∧ (∀x. x ∈ s ⟶ abs x ≤ B))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_bounded_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "B"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "inst_exists_goal",
                    "s": "1+abs B"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0.2",
                        "0.4.1"
                    ],
                    "goal_id": "0.4.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "0.4.2"
                    ],
                    "goal_id": "0.4.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "exists_elim",
                    "names": "B"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_bounded_real_closed_interval",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. a ≤ x ∧ x ≤ b ⟶ abs x ≤ max (abs a) (abs b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. a ≤ x ∧ x ≤ b ⟶ abs x ≤ max (abs a) (abs b)"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ abs x ≤ max (abs a) (abs b)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ abs x ≤ max (abs a) (abs b)"
                },
                {
                    "args": "exI, {P: λB. ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ abs x ≤ B, a: max (abs a) (abs b)}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ abs x ≤ a1"
                },
                {
                    "args": "real_closed_interval_def, ∃B. ∀x. x ∈ real_closed_interval a b ⟶ abs x ≤ B",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃B. ∀x. x ∈ real_closed_interval a b ⟶ abs x ≤ B"
                },
                {
                    "args": "real_bounded_def, real_bounded (real_closed_interval a b)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_bounded (real_closed_interval a b)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_bounded (real_closed_interval a b)"
                }
            ],
            "prop": "real_bounded (real_closed_interval a b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_bounded_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_closed_interval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "inst_exists_goal",
                    "s": "max (abs a) (abs b)"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_bounded_real_open_interval",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. a < x ∧ x < b ⟶ abs x ≤ max (abs a) (abs b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. a < x ∧ x < b ⟶ abs x ≤ max (abs a) (abs b)"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {p. a < p ∧ p < b} ⟶ abs x ≤ max (abs a) (abs b)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ {p. a < p ∧ p < b} ⟶ abs x ≤ max (abs a) (abs b)"
                },
                {
                    "args": "exI, {P: λB. ∀x. x ∈ {p. a < p ∧ p < b} ⟶ abs x ≤ B, a: max (abs a) (abs b)}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ∀x. x ∈ {p. a < p ∧ p < b} ⟶ abs x ≤ a1"
                },
                {
                    "args": "real_open_interval_def, ∃B. ∀x. x ∈ real_open_interval a b ⟶ abs x ≤ B",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃B. ∀x. x ∈ real_open_interval a b ⟶ abs x ≤ B"
                },
                {
                    "args": "real_bounded_def, real_bounded (real_open_interval a b)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_bounded (real_open_interval a b)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_bounded (real_open_interval a b)"
                }
            ],
            "prop": "real_bounded (real_open_interval a b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_bounded_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_interval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "inst_exists_goal",
                    "s": "max (abs a) (abs b)"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_bounded_shrink",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. (∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s) ⟶ abs x ≤ 1"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s ⊢ ∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s"
                },
                {
                    "args": "a, real",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "x = a / (1 + abs a) ∧ a ∈ s",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = a / (1 + abs a) ∧ a ∈ s ⊢ x = a / (1 + abs a) ∧ a ∈ s"
                },
                {
                    "args": "conjD1",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = a / (1 + abs a) ∧ a ∈ s ⊢ x = a / (1 + abs a)"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "x = a / (1 + abs a) ∧ a ∈ s, ∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s ⊢ abs (a / (1 + abs a)) < 1"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = a / (1 + abs a) ∧ a ∈ s, ∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s ⊢ abs (a / (1 + abs a)) ≤ 1"
                },
                {
                    "args": "abs x ≤ 1",
                    "id": "0.7",
                    "prevs": [
                        "0.4",
                        "0.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = a / (1 + abs a) ∧ a ∈ s, ∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s ⊢ abs x ≤ 1"
                },
                {
                    "args": "∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. (∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s) ⟶ abs x ≤ 1"
                },
                {
                    "args": "exI, {P: λB. ∀x. (∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s) ⟶ abs x ≤ B, a: (1::real)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ∀x. (∃x1. x = x1 / (1 + abs x1) ∧ x1 ∈ s) ⟶ abs x ≤ a1"
                },
                {
                    "args": "in_image, ∃B. ∀x. x ∈ image (λx1. x1 / (1 + abs x1)) s ⟶ abs x ≤ B",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃B. ∀x. x ∈ image (λx1. x1 / (1 + abs x1)) s ⟶ abs x ≤ B"
                },
                {
                    "args": "real_bounded_def, real_bounded (image (λx. x / (1 + abs x)) s)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_bounded (image (λx. x / (1 + abs x)) s)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_bounded (image (λx. x / (1 + abs x)) s)"
                }
            ],
            "prop": "real_bounded (image (λx. x / (1 + abs x)) s)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_bounded_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "0",
                    "method_name": "inst_exists_goal",
                    "s": "(1::real)"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "not_real_bounded_univ",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x::real. ¬(∀x1. x1 ∈ univ ⟶ abs x1 ≤ x)"
                },
                {
                    "args": "a, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "member_univ, {x: abs a + 1}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs a + 1 ∈ univ"
                },
                {
                    "args": "¬(abs (abs a + 1) ≤ a)",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬(abs (abs a + 1) ≤ a)"
                },
                {
                    "args": "conjI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ abs a + 1 ∈ univ ∧ ¬(abs (abs a + 1) ≤ a)"
                },
                {
                    "args": "not_imp, ¬(abs a + 1 ∈ univ ⟶ abs (abs a + 1) ≤ a)",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(abs a + 1 ∈ univ ⟶ abs (abs a + 1) ≤ a)"
                },
                {
                    "args": "exI, {P: λx. ¬(x ∈ univ ⟶ abs x ≤ a), a: abs a + 1}",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ¬(a1 ∈ univ ⟶ abs a1 ≤ a)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ univ ⟶ abs x ≤ a)",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∀x. x ∈ univ ⟶ abs x ≤ a)"
                },
                {
                    "args": "",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀a::real. ¬(∀x. x ∈ univ ⟶ abs x ≤ a)"
                },
                {
                    "args": "not_exists, ¬(∃B::real. ∀x. x ∈ univ ⟶ abs x ≤ B)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∃B::real. ∀x. x ∈ univ ⟶ abs x ≤ B)"
                },
                {
                    "args": "real_bounded_def, ¬(real_bounded univ)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(real_bounded univ)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(real_bounded univ)"
                }
            ],
            "prop": "¬(real_bounded univ)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_bounded_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "a"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "inst_exists_goal",
                    "s": "abs a + 1"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "real_compact",
            "ty": "def.ax",
            "type": "real set ⇒ bool"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_compact_interval",
            "prop": "real_compact (real_closed_interval a b)",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        }
    ],
    "description": "Formalization of general topological and metric spaces. Refer to metric.ml from HOL Light.",
    "imports": [
        "misc"
    ],
    "name": "metric"
}