(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) Int)
(declare-fun f4 (S4 Int) S3)
(declare-fun f5 () S4)
(declare-fun f6 (S5 Int) S2)
(declare-fun f7 () S5)
(declare-fun f8 () Int)
(declare-fun f9 () S3)
(assert (not (= f1 f2)))
(assert (forall ((?v0 Int) (?v1 S2)) (= (< 0 (f3 (f4 f5 (ite (< ?v0 0) (- ?v0) ?v0)) ?v1)) (or (not (= ?v0 0)) (= ?v1 (f6 f7 0))))))
(assert (forall ((?v0 Int) (?v1 Int)) (let ((?v_0 (f6 f7 2))) (= (= (f3 (f4 f5 ?v0) ?v_0) (f3 (f4 f5 ?v1) ?v_0)) (= (ite (< ?v0 0) (- ?v0) ?v0) (ite (< ?v1 0) (- ?v1) ?v1))))))
(assert (forall ((?v0 Int) (?v1 S2)) (=> (<= 0 ?v0) (<= 0 (f3 (f4 f5 ?v0) ?v1)))))
(assert (not (<= 0 (f3 (f4 f5 f8) (f6 f7 2)))))
(assert (forall ((?v0 S2)) (= (f6 f7 (f3 f9 ?v0)) ?v0)))
(assert (forall ((?v0 Int)) (=> (<= 0 ?v0) (= (f3 f9 (f6 f7 ?v0)) ?v0))))
(assert (forall ((?v0 Int)) (=> (< ?v0 0) (= (f3 f9 (f6 f7 ?v0)) 0))))
(check-sat)
(exit)
