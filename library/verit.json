{
    "content": [
        {
            "name": "forall_inst",
            "prop": "¬(∀x1. P x1) ∨ P x",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "x": "'a"
            }
        },
        {
            "name": "or_pos",
            "prop": "¬P ∨ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "equiv1",
            "prop": "P ⟷ Q ⟶ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv2",
            "prop": "P ⟷ Q ⟶ P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_equiv1",
            "prop": "¬(P ⟷ Q) ⟶ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_equiv2",
            "prop": "¬(P ⟷ Q) ⟶ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_pos1",
            "prop": "¬(P ⟷ Q) ∨ P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_pos2",
            "prop": "¬(P ⟷ Q) ∨ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_neg1",
            "prop": "(P ⟷ Q) ∨ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_neg2",
            "prop": "(P ⟷ Q) ∨ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "tmp_LA_pre_int",
            "prop": "x = y ⟷ x ≤ y ∧ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "not_implies1",
            "prop": "¬(P ⟶ Q) ⟶ P",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_implies2",
            "prop": "¬(P ⟶ Q) ⟶ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite1",
            "prop": "(if P then Q else R) ⟶ P ∨ R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite2",
            "prop": "(if P then Q else R) ⟶ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_not_ite1",
            "prop": "¬(if P then Q else R) ⟶ P ∨ ¬R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_not_ite2",
            "prop": "¬(if P then Q else R) ⟶ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "la_disequality_int",
            "prop": "a = b ∨ ¬(a ≤ b) ∨ ¬(b ≤ a)",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int"
            }
        },
        {
            "name": "la_disequality_real",
            "prop": "a = b ∨ ¬(a ≤ b) ∨ ¬(b ≤ a)",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "neg_neg",
            "prop": "¬¬¬A ∨ A",
            "ty": "thm",
            "vars": {
                "A": "bool"
            }
        },
        {
            "name": "let",
            "rules": [
                {
                    "prop": "let s f = f s"
                }
            ],
            "ty": "def.ind",
            "type": "'a ⇒ ('a ⇒ 'b) ⇒ 'b"
        },
        {
            "name": "connective_def1",
            "prop": "(P ⟷ Q) ⟷ (P ⟶ Q) ∧ (Q ⟶ P)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_intro",
            "prop": "if P then x = (if P then x else y) else y = (if P then x else y)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "x": "'a",
                "y": "'a"
            }
        },
        {
            "name": "verit_eq_conj",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "Q",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Q ⊢ Q"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q ⊢ P ⟶ P ∧ Q"
                },
                {
                    "args": "P",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⊢ P"
                },
                {
                    "args": "conjI",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "P, Q ⊢ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "Q ⊢ P ⟶ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q ⊢ P ∧ Q ⟶ P"
                },
                {
                    "args": "P ∧ Q",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ∧ Q ⊢ P ∧ Q"
                },
                {
                    "args": "conjD1",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "P ∧ Q ⊢ P"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "Q ⊢ P ∧ Q ⟶ P"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "Q ⊢ P ⟷ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ Q ⟶ P ⟷ P ∧ Q"
                }
            ],
            "prop": "Q ⟶ P ⟷ P ∧ Q",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_implies_neg1",
            "prop": "(P ⟶ Q) ∨ P",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_implies_neg2",
            "prop": "(P ⟶ Q) ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_not_simplify1",
            "prop": "¬true ⟷ false",
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "verit_not_simplify2",
            "prop": "¬false ⟷ true",
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "verit_minus_simplify_3_real",
            "prop": "t = t - 0",
            "ty": "thm",
            "vars": {
                "t": "real"
            }
        },
        {
            "name": "verit_minus_simplify_3_int",
            "prop": "t = t - 0",
            "ty": "thm",
            "vars": {
                "t": "int"
            }
        },
        {
            "name": "verit_minus_simplify_4_real",
            "prop": "0 - t = -t",
            "ty": "thm",
            "vars": {
                "t": "real"
            }
        },
        {
            "name": "verit_minus_simplify_4_int",
            "prop": "0 - t = -t",
            "ty": "thm",
            "vars": {
                "t": "int"
            }
        },
        {
            "name": "verit_bool_simplify1",
            "prop": "¬(P ⟶ Q) ⟷ P ∧ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_bool_simplify4",
            "prop": "(P ⟶ Q ⟶ R) ⟷ (P ∧ Q ⟶ R)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_bool_simplify5",
            "prop": "((P ⟶ Q) ⟶ Q) ⟷ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_bool_simplify6",
            "prop": "P ∧ (P ⟶ Q) ⟷ P ∧ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_bool_simplify7",
            "prop": "(P ⟶ Q) ∧ P ⟷ P ∧ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify1",
            "prop": "(¬P ⟷ ¬Q) ⟷ P ⟷ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify2",
            "prop": "(P ⟷ P) ⟷ true",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify3",
            "prop": "(P ⟷ ¬P) ⟷ false",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify4",
            "prop": "(¬P ⟷ P) ⟷ false",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify5",
            "prop": "(true ⟷ P) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify6",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ P ⟷ true ⟶ P"
                },
                {
                    "args": "P ⟷ true",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⟷ true ⊢ P ⟷ true"
                },
                {
                    "args": "trueI",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "P",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P ⟷ true ⊢ P"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟷ true ⟶ P"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ P ⟶ P ⟷ true"
                },
                {
                    "args": "P",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⊢ P"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P ⊢ P ⟶ true"
                },
                {
                    "args": "trueI",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [
                        "1.0",
                        "1.1.0"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟶ true"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P ⊢ true ⟶ P"
                },
                {
                    "args": "true",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "true ⊢ true"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "intros",
                    "th": "P ⊢ true ⟶ P"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "P ⊢ P ⟷ true"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟶ P ⟷ true"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (P ⟷ true) ⟷ P"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (P ⟷ true) ⟷ P"
                }
            ],
            "prop": "(P ⟷ true) ⟷ P",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.0",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify7",
            "prop": "(false ⟷ P) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify8",
            "prop": "(P ⟷ false) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_conj_pos_neg",
            "prop": "P ∧ ¬P ⟶ false",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_lw_rw_eq_real",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_le_antisym, x = y ⟷ x ≤ y ∧ y ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x = y ⟷ x ≤ y ∧ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ x = y ⟷ x ≤ y ∧ y ≤ x"
                }
            ],
            "prop": "x = y ⟷ x ≤ y ∧ y ≤ x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_le_antisym"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_lw_rw_eq_int",
            "prop": "x = y ⟷ x ≤ y ∧ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_ite_pos1",
            "prop": "¬(if P then Q else R) ∨ P ∨ R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite_pos2",
            "prop": "¬(if P then Q else R) ∨ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite_neg1",
            "prop": "(if P then Q else R) ∨ P ∨ ¬R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite_neg2",
            "prop": "(if P then Q else R) ∨ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_bfun_elim_exists",
            "prop": "(∃x. t x) ⟷ t false ∨ t true",
            "ty": "thm",
            "vars": {
                "t": "bool ⇒ bool",
                "x": "bool"
            }
        },
        {
            "name": "verit_bfun_elim_forall",
            "prop": "(∀x. t x) ⟷ t false ∧ t true",
            "ty": "thm",
            "vars": {
                "t": "bool ⇒ bool",
                "x": "bool"
            }
        },
        {
            "name": "verit_bfun_elim",
            "prop": "f t = (if t then f true else f false)",
            "ty": "thm",
            "vars": {
                "f": "bool ⇒ 'a",
                "t": "bool"
            }
        },
        {
            "name": "verit_ite_apply",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "cond_rator, (if P then f else g) x = (if P then f x else g x)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if P then f else g) x = (if P then f x else g x)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ (if P then f else g) x = (if P then f x else g x)"
                }
            ],
            "prop": "(if P then f else g) x = (if P then f x else g x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cond_rator"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "bool",
                "f": "'a ⇒ 'b",
                "g": "'a ⇒ 'b",
                "x": "'a"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_int1",
            "prop": "¬(x > y) ⟷ ¬(y < x)",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_eq_int1",
            "prop": "¬(x ≥ y) ⟷ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_int2",
            "prop": "¬(x > y) ⟷ x ≤ y",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_eq_int2",
            "prop": "¬(x ≥ y) ⟷ x < y",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "imp_false_false",
            "prop": "(P ⟶ false) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "zero_eq_mul_const",
            "prop": "m = n ⟶ c * m = c * n",
            "ty": "thm",
            "vars": {
                "c": "int",
                "m": "int",
                "n": "int"
            }
        },
        {
            "name": "add_equals",
            "prop": "x = y ⟶ a = b ⟶ x + a = y + b",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int",
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "add_eq_with_ge",
            "prop": "x = y ⟶ a ≥ b ⟶ x + a ≥ y + b",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int",
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "add_ge_with_eq",
            "prop": "x ≥ y ⟶ a = b ⟶ x + a ≥ y + b",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int",
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "add_ge_with_ge",
            "prop": "x ≥ y ⟶ a ≥ b ⟶ x + a ≥ y + b",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int",
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_comp_simplify2",
            "prop": "x < x ⟷ false",
            "ty": "thm",
            "vars": {
                "x": "int"
            }
        },
        {
            "name": "verit_comp_simplify4",
            "prop": "x ≤ x ⟷ true",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_comp_simplify5",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "greater_eq_def, x ≥ y ⟷ y ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ≥ y ⟷ y ≤ x"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≥ y ⟷ y ≤ x"
                }
            ],
            "prop": "x ≥ y ⟷ y ≤ x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "greater_eq_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_comp_simplify6",
            "prop": "x < y ⟷ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_comp_simplify7",
            "prop": "x > y ⟷ ¬(x ≤ y)",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_comp_simplify2_real",
            "prop": "x < x ⟷ false",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "name": "verit_comp_simplify4_real",
            "prop": "x ≤ x ⟷ true",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_comp_simplify5_real",
            "prop": "x ≥ y ⟷ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_comp_simplify6_real",
            "prop": "x < y ⟷ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_comp_simplify7_real",
            "prop": "x > y ⟷ ¬(x ≤ y)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_la_disequality_int",
            "prop": "x = y ∨ ¬(x ≤ y) ∨ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "verit_ite_simplify1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "if_true, (if true then t1 else t2) = t1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if true then t1 else t2) = t1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ (if true then t1 else t2) = t1"
                }
            ],
            "prop": "(if true then t1 else t2) = t1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_true"
                }
            ],
            "ty": "thm",
            "vars": {
                "t1": "'a",
                "t2": "'a"
            }
        },
        {
            "name": "verit_ite_simplify2",
            "prop": "(if false then t1 else t2) = t2",
            "ty": "thm",
            "vars": {
                "t1": "'a",
                "t2": "'a"
            }
        },
        {
            "name": "verit_ite_simplify3",
            "prop": "(if P then t else t) = t",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "t": "'a"
            }
        },
        {
            "name": "verit_ite_simplify4",
            "prop": "(if ¬P then t1 else t2) = (if P then t2 else t1)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "t1": "'a",
                "t2": "'a"
            }
        },
        {
            "name": "verit_ite_simplify7",
            "prop": "(if P then if P then t1 else t2 else t3) = (if P then t1 else t3)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "t1": "'a",
                "t2": "'a",
                "t3": "'a"
            }
        },
        {
            "name": "verit_ite_simplify8",
            "prop": "(if P then t1 else if P then t2 else t3) = (if P then t1 else t3)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "t1": "'a",
                "t2": "'a",
                "t3": "'a"
            }
        },
        {
            "name": "verit_ite_simplify9",
            "prop": "(if P then true else false) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_ite_simplify10",
            "prop": "(if P then false else true) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_ite_simplify11",
            "prop": "(if P then true else Q) ⟷ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_simplify12",
            "prop": "(if P then Q else false) ⟷ P ∧ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_simplify13",
            "prop": "(if P then false else Q) ⟷ ¬P ∧ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_simplify14",
            "prop": "(if P then Q else true) ⟷ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_simplify15",
            "prop": "(if ¬P then Q else true) ⟷ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_simplify16",
            "prop": "(if ¬P then false else Q) ⟷ P ∧ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_imp_simplify1",
            "prop": "(¬P ⟶ ¬Q) ⟷ (Q ⟶ P)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_imp_simplify2",
            "prop": "(false ⟶ P) ⟷ true",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify3",
            "prop": "(P ⟶ true) ⟷ true",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify4",
            "prop": "(true ⟶ P) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify5",
            "prop": "(P ⟶ false) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify6",
            "prop": "(P ⟶ P) ⟷ true",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify7",
            "prop": "(¬P ⟶ P) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify8",
            "prop": "(P ⟶ ¬P) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_imp_simplify9",
            "prop": "((P ⟶ Q) ⟶ Q) ⟷ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_implies_pos",
            "prop": "¬(P ⟶ Q) ∨ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_forall_conj",
            "prop": "(∀a. P a) ∧ (∀a. Q a) ⟷ (∀a. P a ∧ Q a)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "a": "'a"
            }
        },
        {
            "name": "verit_exists_disj",
            "prop": "(∃a. P a) ∨ (∃a. Q a) ⟷ (∃a. P a ∨ Q a)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "'a ⇒ bool",
                "a": "'a"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_real1",
            "prop": "¬(x > y) ⟷ ¬(y < x)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_eq_real1",
            "prop": "¬(x ≥ y) ⟷ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_real2",
            "prop": "¬(x > y) ⟷ x ≤ y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_la_generic_neg_greater_eq_real2",
            "prop": "¬(x ≥ y) ⟷ x < y",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_greater_eq_mul_const",
            "prop": "c > 0 ⟶ x ≥ 0 ⟶ c * x ≥ 0",
            "ty": "thm",
            "vars": {
                "c": "real",
                "x": "real"
            }
        },
        {
            "name": "verit_real_greater_mul_const",
            "prop": "c > 0 ⟶ x > 0 ⟶ c * x > 0",
            "ty": "thm",
            "vars": {
                "c": "real",
                "x": "real"
            }
        },
        {
            "name": "verit_real_add_eq_eq",
            "prop": "x = 0 ⟶ y = 0 ⟶ x + y = 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_add_eq_gt",
            "prop": "x = 0 ⟶ y > 0 ⟶ x + y > 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_add_eq_ge",
            "prop": "x = 0 ⟶ y ≥ 0 ⟶ x + y ≥ 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_add_gt_gt",
            "prop": "x > 0 ⟶ y > 0 ⟶ x + y > 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_add_gt_ge",
            "prop": "x > 0 ⟶ y ≥ 0 ⟶ x + y > 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_real_add_ge_ge",
            "prop": "x ≥ 0 ⟶ y ≥ 0 ⟶ x + y ≥ 0",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_la_disequality_real",
            "prop": "x = y ∨ ¬(x ≤ y) ∨ ¬(y ≤ x)",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "verit_xor_pos1",
            "prop": "¬(xor P Q) ∨ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_xor_pos2",
            "prop": "¬(xor P Q) ∨ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_xor_neg1",
            "prop": "xor P Q ∨ P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_xor_neg2",
            "prop": "xor P Q ∨ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_some_eq_ex",
            "prop": "P (SOME x. P x) ⟷ (∃x. P x)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool"
            }
        },
        {
            "name": "verit_some_neg_eq_all",
            "prop": "P (SOME x. ¬(P x)) ⟷ (∀x. P x)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool"
            }
        },
        {
            "name": "verit_connective_def1",
            "prop": "xor P Q ⟷ ¬P ∧ Q ∨ P ∧ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_connective_def2",
            "prop": "(P ⟷ Q) ⟷ (P ⟶ Q) ∧ (Q ⟶ P)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_connective_def3",
            "prop": "(if P then Q else R) ⟷ (P ⟶ Q) ∧ (¬P ⟶ R)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_connective_def4",
            "prop": "(∃a. P a) ⟷ ¬(∀a. ¬(P a))",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "a": "'a"
            }
        },
        {
            "name": "verit_not_iff_eq",
            "prop": "¬(A ⟷ B) ⟷ A ∧ ¬B ∨ ¬A ∧ B",
            "ty": "thm",
            "vars": {
                "A": "bool",
                "B": "bool"
            }
        },
        {
            "name": "verit_iff_eq",
            "prop": "(A ⟷ B) ⟷ (¬A ∨ B) ∧ (¬B ∨ A)",
            "ty": "thm",
            "vars": {
                "A": "bool",
                "B": "bool"
            }
        },
        {
            "name": "verit_not_ite_eq",
            "prop": "¬(if P then Q else R) ⟷ P ∧ ¬Q ∨ ¬P ∧ R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite_eq",
            "prop": "(if P then Q else R) ⟷ (¬P ∨ Q) ∧ (P ∨ R)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_qnt_conj1",
            "prop": "(∀x. P x) ∧ Q ⟷ (∀x. P x ∧ Q)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_qnt_conj2",
            "prop": "P ∧ (∀x. Q x) ⟷ (∀x. P ∧ Q x)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "'a ⇒ bool"
            }
        },
        {
            "name": "verit_qnt_disj1",
            "prop": "(∀x. P x) ∨ Q ⟷ (∀x. P x ∨ Q)",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_qnt_disj2",
            "prop": "P ∨ (∀x. Q x) ⟷ (∀x. P ∨ Q x)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "'a ⇒ bool"
            }
        },
        {
            "name": "verit_onepoint_forall",
            "prop": "(∀x. ¬(x = t) ∨ P x) ⟷ ¬(t = t) ∨ P t",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "t": "'a"
            }
        },
        {
            "name": "verit_onepoint_forall_single",
            "prop": "(∀x. ¬(x = t)) ⟷ ¬(t = t)",
            "ty": "thm",
            "vars": {
                "t": "'a"
            }
        },
        {
            "name": "verit_onepoint_exists",
            "prop": "(∃x. x = t ∧ P x) ⟷ t = t ∧ P t",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "t": "'a"
            }
        },
        {
            "name": "verit_onepoint_exists_single",
            "prop": "(∃x. x = t) ⟷ t = t",
            "ty": "thm",
            "vars": {
                "t": "'a"
            }
        },
        {
            "name": "store",
            "prop": "store array i v = (λj. if j = i then v else array j)",
            "ty": "def",
            "type": "('a ⇒ 'b) ⇒ 'a ⇒ 'b ⇒ 'a ⇒ 'b"
        },
        {
            "name": "select",
            "prop": "select f a = f a",
            "ty": "def",
            "type": "('a ⇒ 'b) ⇒ 'a ⇒ 'b"
        },
        {
            "name": "verit_eq_simplify",
            "prop": "¬(t = t) ⟷ false",
            "ty": "thm",
            "vars": {
                "t": "'a"
            }
        },
        {
            "name": "verit_rm_unused_forall",
            "prop": "(∀x::'a. P) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_rm_unused_exists",
            "prop": "(∃x::'a. P) ⟷ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        }
    ],
    "description": "Schematic verit proof rule.",
    "imports": [
        "real"
    ],
    "name": "verit"
}