{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime",
            "prop": "coprime a b ⟷ (∀d. divides d a ∧ divides d b ⟷ d = 1)",
            "ty": "def",
            "type": "nat ⇒ nat ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_gcd",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟶ gcd a b = 1"
                },
                {
                    "args": "∀d. divides d a ∧ divides d b ⟷ d = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides_1, {x: b}",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 b"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀b1. divides b1 a ⟶ divides b1 b ⟶ divides b1 1"
                },
                {
                    "args": "d, nat",
                    "id": "0.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "divides d a",
                    "id": "0.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ⊢ divides d a"
                },
                {
                    "args": "divides d b",
                    "id": "0.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d b ⊢ divides d b"
                },
                {
                    "args": "conjI",
                    "id": "0.3.3",
                    "prevs": [
                        "0.3.1",
                        "0.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a, divides d b ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "",
                    "id": "0.3.4",
                    "prevs": [
                        "0.0",
                        "0.3.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides d a, divides d b, ∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_one, divides 1 1",
                    "id": "0.3.5",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ divides 1 1"
                },
                {
                    "args": "divides d 1",
                    "id": "0.3.6",
                    "prevs": [
                        "0.3.4",
                        "0.3.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides d a, divides d b, ∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ divides d 1"
                },
                {
                    "args": "",
                    "id": "0.3.7",
                    "prevs": [
                        "0.3.0",
                        "0.3.1",
                        "0.3.2",
                        "0.3.6"
                    ],
                    "rule": "intros",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀d. divides d a ⟶ divides d b ⟶ divides d 1"
                },
                {
                    "args": "gcd_equals",
                    "id": "0.4",
                    "prevs": [
                        "0.1",
                        "0.2",
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟶ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd a b = 1 ⟶ (∀d. divides d a ∧ divides d b ⟷ d = 1)"
                },
                {
                    "args": "gcd a b = 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟶ d = 1"
                },
                {
                    "args": "divides d a ∧ divides d b",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ∧ divides d b ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.1.1",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d a"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.1.2",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d b"
                },
                {
                    "args": "gcd_is_max",
                    "id": "1.1.1.3",
                    "prevs": [
                        "1.1.1.1",
                        "1.1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d (gcd a b)"
                },
                {
                    "args": "",
                    "id": "1.1.1.4",
                    "prevs": [
                        "1.0",
                        "1.1.1.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "gcd a b = 1, divides d a ∧ divides d b ⊢ divides d 1"
                },
                {
                    "args": "divides_one",
                    "id": "1.1.1.5",
                    "prevs": [
                        "1.1.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "gcd a b = 1, divides d a ∧ divides d b ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.1.6",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ d = 1 ⟶ divides d a ∧ divides d b"
                },
                {
                    "args": "d = 1",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "1.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides_1, {x: b}",
                    "id": "1.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.1",
                        "1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = 1, gcd a b = 1 ⊢ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "divides d a ∧ divides d b",
                    "id": "1.1.2.4",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "d = 1, gcd a b = 1 ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ d = 1 ⟶ divides d a ∧ divides d b"
                },
                {
                    "args": "iffI",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.0",
                        "1.1.3"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd a b = 1 ⟶ (∀d. divides d a ∧ divides d b ⟷ d = 1)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟷ gcd a b = 1"
                },
                {
                    "args": "coprime_def, coprime a b ⟷ gcd a b = 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ gcd a b = 1"
                }
            ],
            "prop": "coprime a b ⟷ gcd a b = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_equals"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "0.3.1",
                        "0.3.2"
                    ],
                    "goal_id": "0.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.0",
                        "0.3.3"
                    ],
                    "goal_id": "0.3.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.3.4"
                    ],
                    "goal_id": "0.3.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.3.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.1.1",
                        "1.1.1.2"
                    ],
                    "goal_id": "1.1.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "gcd_is_max"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.1.3"
                    ],
                    "goal_id": "1.1.1.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.1.4"
                    ],
                    "goal_id": "1.1.1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_backward"
            ],
            "name": "coprime_sym",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd a b = 1 ⟶ gcd b a = 1"
                },
                {
                    "args": "gcd a b = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "gcd_comm, gcd b a = 1",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "gcd a b = 1 ⊢ gcd b a = 1"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd a b = 1 ⟶ gcd b a = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd b a = 1 ⟶ gcd a b = 1"
                },
                {
                    "args": "gcd b a = 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd b a = 1 ⊢ gcd b a = 1"
                },
                {
                    "args": "gcd_comm, gcd a b = 1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "gcd b a = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd b a = 1 ⟶ gcd a b = 1"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ gcd a b = 1 ⟷ gcd b a = 1"
                },
                {
                    "args": "coprime_gcd, coprime a b ⟷ coprime b a",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ coprime b a"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ coprime b a"
                }
            ],
            "prop": "coprime a b ⟷ coprime b a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_bezout",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides_one, gcd a b = 1 ⟷ divides (gcd a b) 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a b = 1 ⟷ divides (gcd a b) 1"
                },
                {
                    "args": "gcd_bezout, gcd a b = 1 ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a b = 1 ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                },
                {
                    "args": "coprime_gcd, coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                }
            ],
            "prop": "coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_bezout"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_one"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides d (a * b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d (a * b) ⊢ divides d (a * b)"
                },
                {
                    "args": "coprime d a",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ⊢ coprime d a"
                },
                {
                    "args": "divides_lmul_gcd",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "divides d (a * b) ⊢ divides d (gcd d a * b)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d a ⊢ gcd d a = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime d a, divides d (a * b) ⊢ divides d (1 * b)"
                },
                {
                    "args": "mult_1_left",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d a, divides d (a * b) ⊢ divides d b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides d (a * b) ⟶ coprime d a ⟶ divides d b"
                }
            ],
            "prop": "divides d (a * b) ⟶ coprime d a ⟶ divides d b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "divides_lmul_gcd"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "3",
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_rmod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "division_simp1, {m: a, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a DIV n * n + a MOD n = a"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ a = a DIV n * n + a MOD n"
                },
                {
                    "args": "division_simp1, (a DIV n * n + a MOD n) MOD n = a MOD n",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (a DIV n * n + a MOD n) MOD n = a MOD n"
                },
                {
                    "args": "gcd_mod, gcd n (a MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1",
                    "id": "3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd n (a MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1"
                },
                {
                    "args": "gcd n ((a DIV n * n + a MOD n) MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ gcd n ((a DIV n * n + a MOD n) MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1"
                },
                {
                    "args": "gcd n (a MOD n) = 1 ⟷ gcd n a = 1",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ gcd n (a MOD n) = 1 ⟷ gcd n a = 1"
                },
                {
                    "args": "coprime_gcd, coprime n (a MOD n) ⟷ coprime n a",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                }
            ],
            "prop": "coprime n (a MOD n) ⟷ coprime n a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "n",
                    "theorem": "division_simp1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "(a DIV n * n + a MOD n) MOD n = a MOD n",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "division_simp1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_mod"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_lmod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime_rmod, coprime n (a MOD n) ⟷ coprime n a",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                },
                {
                    "args": "coprime_sym, coprime (a MOD n) n ⟷ coprime a n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (a MOD n) n ⟷ coprime a n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (a MOD n) n ⟷ coprime a n"
                }
            ],
            "prop": "coprime (a MOD n) n ⟷ coprime a n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rmod"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_mul_coprime_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ ∀d. divides d a ∧ divides d (b * c) ⟷ divides d a ∧ divides d c"
                },
                {
                    "args": "d, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ divides d a ∧ divides d (b * c) ⟶ divides d a ∧ divides d c"
                },
                {
                    "args": "divides d a ∧ divides d (b * c)",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ∧ divides d (b * c) ⊢ divides d a ∧ divides d (b * c)"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d (b * c) ⊢ divides d a"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d (b * c) ⊢ divides d (b * c)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "1.1.3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd a b = 1"
                },
                {
                    "args": "divides_gcd_right",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides d a ∧ divides d (b * c) ⊢ gcd a d = d"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides d a ∧ divides d (b * c) ⊢ d = gcd a d"
                },
                {
                    "args": "gcd_comm",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd b a = 1"
                },
                {
                    "args": "gcd_1_left, gcd 1 d = 1",
                    "id": "1.1.7",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd 1 d = 1"
                },
                {
                    "args": "gcd (gcd b a) d = 1",
                    "id": "1.1.8",
                    "prevs": [
                        "1.1.6",
                        "1.1.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ gcd (gcd b a) d = 1"
                },
                {
                    "args": "gcd_assoc, gcd b (gcd a d) = 1",
                    "id": "1.1.9",
                    "prevs": [
                        "1.1.8"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ gcd b (gcd a d) = 1"
                },
                {
                    "args": "gcd_comm, gcd (gcd a d) b = 1",
                    "id": "1.1.10",
                    "prevs": [
                        "1.1.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ gcd (gcd a d) b = 1"
                },
                {
                    "args": "gcd d b = 1",
                    "id": "1.1.11",
                    "prevs": [
                        "1.1.5",
                        "1.1.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ gcd d b = 1"
                },
                {
                    "args": "coprime_gcd, coprime d b",
                    "id": "1.1.12",
                    "prevs": [
                        "1.1.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ coprime d b"
                },
                {
                    "args": "coprime_divprod",
                    "id": "1.1.13",
                    "prevs": [
                        "1.1.2",
                        "1.1.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ divides d c"
                },
                {
                    "args": "conjI",
                    "id": "1.1.14",
                    "prevs": [
                        "1.1.1",
                        "1.1.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, divides d a ∧ divides d (b * c) ⊢ divides d a ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "1.1.15",
                    "prevs": [
                        "1.1.0",
                        "1.1.14"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ divides d a ∧ divides d (b * c) ⟶ divides d a ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ divides d a ∧ divides d c ⟶ divides d a ∧ divides d (b * c)"
                },
                {
                    "args": "divides d a ∧ divides d c",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ∧ divides d c ⊢ divides d a ∧ divides d c"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d c ⊢ divides d a"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d c ⊢ divides d c"
                },
                {
                    "args": "divides_lmul, {a: c, d: d, x: b}",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, divides d a ∧ divides d c ⊢ divides d (b * c)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.1",
                        "1.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, divides d a ∧ divides d c ⊢ divides d a ∧ divides d (b * c)"
                },
                {
                    "args": "",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.0",
                        "1.2.4"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ divides d a ∧ divides d c ⟶ divides d a ∧ divides d (b * c)"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b ⊢ divides d a ∧ divides d (b * c) ⟷ divides d a ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ ∀d. divides d a ∧ divides d (b * c) ⟷ divides d a ∧ divides d c"
                },
                {
                    "args": "gcd_eq",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b ⊢ gcd a (b * c) = gcd a c"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ gcd a (b * c) = gcd a c"
                }
            ],
            "prop": "coprime a b ⟶ gcd a (b * c) = gcd a c",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_divprod"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_gcd_right"
                },
                {
                    "fact_ids": [
                        "1.1.4"
                    ],
                    "goal_id": "1.1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.1.5"
                    ],
                    "goal_id": "1.1.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "goal_id": "1.1.6",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "gcd_assoc"
                },
                {
                    "fact_ids": [
                        "1.1.3"
                    ],
                    "goal_id": "1.1.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "fact_ids": [
                        "1.1.6"
                    ],
                    "goal_id": "1.1.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_1_left"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_mul_coprime_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a c",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a c ⊢ coprime a c"
                },
                {
                    "args": "gcd_mul_coprime_1, {a: a, b: c, c: b}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a c ⊢ gcd a (c * b) = gcd a b"
                },
                {
                    "args": "mult_comm, gcd a (b * c) = gcd a b",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a c ⊢ gcd a (b * c) = gcd a b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a c ⟶ gcd a (b * c) = gcd a b"
                }
            ],
            "prop": "coprime a c ⟶ gcd a (b * c) = gcd a b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_mul_coprime_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gcd_1_right, gcd a 1 = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a 1 = 1"
                },
                {
                    "args": "coprime_gcd, coprime a 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a 1"
                }
            ],
            "prop": "coprime a 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_1_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "gcd_coprime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(gcd a b = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(gcd a b = 0) ⊢ ¬(gcd a b = 0)"
                },
                {
                    "args": "a = c * gcd a b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = c * gcd a b ⊢ a = c * gcd a b"
                },
                {
                    "args": "b = d * gcd a b",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b = d * gcd a b ⊢ b = d * gcd a b"
                },
                {
                    "args": "gcd_mult_right, {k: gcd a b, m: c, n: d}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ gcd (c * gcd a b) (d * gcd a b) = gcd a b * gcd c d"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b ⊢ c * gcd a b = a"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "5",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "b = d * gcd a b ⊢ d * gcd a b = b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "4",
                        "3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "a = c * gcd a b ⊢ gcd a (d * gcd a b) = gcd a b * gcd c d"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "a = c * gcd a b, b = d * gcd a b ⊢ gcd a b = gcd a b * gcd c d"
                },
                {
                    "args": "mult_1_right, gcd a b = gcd a b * 1",
                    "id": "8",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a b = gcd a b * 1"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "8",
                        "7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "a = c * gcd a b, b = d * gcd a b ⊢ gcd a b * 1 = gcd a b * 1 * gcd c d"
                },
                {
                    "args": "mult_assoc",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b, b = d * gcd a b ⊢ gcd a b * 1 = gcd a b * (1 * gcd c d)"
                },
                {
                    "args": "mult_1_left",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b, b = d * gcd a b ⊢ gcd a b * 1 = gcd a b * gcd c d"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b, b = d * gcd a b ⊢ gcd a b = 0 ∨ 1 = gcd c d"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ gcd a b = 0 ⟶ gcd c d = 1"
                },
                {
                    "args": "gcd a b = 0",
                    "id": "13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 0 ⊢ gcd a b = 0"
                },
                {
                    "args": "negE_gen, {A: gcd a b = 0, C: gcd c d = 1}",
                    "id": "13.1",
                    "prevs": [
                        "0",
                        "13.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "gcd a b = 0, ¬(gcd a b = 0) ⊢ gcd c d = 1"
                },
                {
                    "args": "",
                    "id": "13.2",
                    "prevs": [
                        "13.0",
                        "13.1"
                    ],
                    "rule": "intros",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ gcd a b = 0 ⟶ gcd c d = 1"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ 1 = gcd c d ⟶ gcd c d = 1"
                },
                {
                    "args": "1 = gcd c d",
                    "id": "14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 = gcd c d ⊢ 1 = gcd c d"
                },
                {
                    "args": "eq_sym_eq, gcd c d = 1",
                    "id": "14.1",
                    "prevs": [
                        "14.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 = gcd c d, ¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ gcd c d = 1"
                },
                {
                    "args": "",
                    "id": "14.2",
                    "prevs": [
                        "14.0",
                        "14.1"
                    ],
                    "rule": "intros",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ 1 = gcd c d ⟶ gcd c d = 1"
                },
                {
                    "args": "disjE",
                    "id": "15",
                    "prevs": [
                        "12",
                        "13",
                        "14"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ gcd c d = 1"
                },
                {
                    "args": "coprime_gcd, coprime c d",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(gcd a b = 0), a = c * gcd a b, b = d * gcd a b ⊢ coprime c d"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "16"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(gcd a b = 0) ⟶ a = c * gcd a b ⟶ b = d * gcd a b ⟶ coprime c d"
                }
            ],
            "prop": "¬(gcd a b = 0) ⟶ a = c * gcd a b ⟶ b = d * gcd a b ⟶ coprime c d",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_k": "gcd a b",
                    "param_m": "c",
                    "param_n": "d",
                    "theorem": "gcd_mult_right"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4",
                        "3"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "5",
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal": "gcd a b = gcd a b * 1",
                    "goal_id": "8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "8",
                        "7"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "13.0"
                    ],
                    "goal_id": "13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "14",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "14.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_coprime_exists",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd a b = 0 ⟶ (∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d)"
                },
                {
                    "args": "gcd a b = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 0 ⊢ gcd a b = 0"
                },
                {
                    "args": "gcd_zero",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "gcd a b = 0 ⊢ a = 0 ∧ b = 0"
                },
                {
                    "args": "conjD1",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ a = 0"
                },
                {
                    "args": "conjD2",
                    "id": "0.3",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ b = 0"
                },
                {
                    "args": "nat_times_def_1, 0 = 0 * gcd 0 0",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = 0 * gcd 0 0"
                },
                {
                    "args": "mult_0_right, (0::nat) = 1 * 0",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (0::nat) = 1 * 0"
                },
                {
                    "args": "gcd_refl, 0 = 1 * gcd 0 0",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "gcd a b = 0 ⊢ 0 = 1 * gcd 0 0"
                },
                {
                    "args": "coprime_1, {a: (0::nat)}",
                    "id": "0.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ coprime 0 1"
                },
                {
                    "args": "conjI",
                    "id": "0.8",
                    "prevs": [
                        "0.6",
                        "0.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ 0 = 1 * gcd 0 0 ∧ coprime 0 1"
                },
                {
                    "args": "conjI",
                    "id": "0.9",
                    "prevs": [
                        "0.4",
                        "0.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ 0 = 0 * gcd 0 0 ∧ 0 = 1 * gcd 0 0 ∧ coprime 0 1"
                },
                {
                    "args": "0 = 0 * gcd 0 b ∧ b = 1 * gcd 0 b ∧ coprime 0 1",
                    "id": "0.10",
                    "prevs": [
                        "0.3",
                        "0.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "gcd a b = 0 ⊢ 0 = 0 * gcd 0 b ∧ b = 1 * gcd 0 b ∧ coprime 0 1"
                },
                {
                    "args": "a = 0 * gcd a b ∧ b = 1 * gcd a b ∧ coprime 0 1",
                    "id": "0.11",
                    "prevs": [
                        "0.2",
                        "0.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "gcd a b = 0 ⊢ a = 0 * gcd a b ∧ b = 1 * gcd a b ∧ coprime 0 1"
                },
                {
                    "args": "exI, {P: λa1. a = 0 * gcd a b ∧ b = a1 * gcd a b ∧ coprime 0 a1, a: (1::nat)}",
                    "id": "0.12",
                    "prevs": [
                        "0.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "gcd a b = 0 ⊢ ∃a1. a = 0 * gcd a b ∧ b = a1 * gcd a b ∧ coprime 0 a1"
                },
                {
                    "args": "exI, {P: λc. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d, a: (0::nat)}",
                    "id": "0.13",
                    "prevs": [
                        "0.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "gcd a b = 0 ⊢ ∃a1. ∃d. a = a1 * gcd a b ∧ b = d * gcd a b ∧ coprime a1 d"
                },
                {
                    "args": "",
                    "id": "0.14",
                    "prevs": [
                        "0.0",
                        "0.13"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd a b = 0 ⟶ (∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(gcd a b = 0) ⟶ (∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d)"
                },
                {
                    "args": "¬(gcd a b = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(gcd a b = 0) ⊢ ¬(gcd a b = 0)"
                },
                {
                    "args": "gcd_divide1, {m: a, n: b}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a b) a"
                },
                {
                    "args": "gcd_divides2, {m: a, n: b}",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a b) b"
                },
                {
                    "args": "divides_def",
                    "id": "1.3",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. a = gcd a b * k"
                },
                {
                    "args": "divides_def",
                    "id": "1.4",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. b = gcd a b * k"
                },
                {
                    "args": "k1, nat",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "a = gcd a b * k1",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = gcd a b * k1 ⊢ a = gcd a b * k1"
                },
                {
                    "args": "k2, nat",
                    "id": "1.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k2"
                },
                {
                    "args": "b = gcd a b * k2",
                    "id": "1.8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b = gcd a b * k2 ⊢ b = gcd a b * k2"
                },
                {
                    "args": "mult_comm, a = k1 * gcd a b",
                    "id": "1.9",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ a = k1 * gcd a b"
                },
                {
                    "args": "mult_comm, b = k2 * gcd a b",
                    "id": "1.10",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ b = k2 * gcd a b"
                },
                {
                    "args": "gcd_coprime",
                    "id": "1.11",
                    "prevs": [
                        "1.0",
                        "1.9",
                        "1.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ coprime k1 k2"
                },
                {
                    "args": "conjI",
                    "id": "1.12",
                    "prevs": [
                        "1.10",
                        "1.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ b = k2 * gcd a b ∧ coprime k1 k2"
                },
                {
                    "args": "conjI",
                    "id": "1.13",
                    "prevs": [
                        "1.9",
                        "1.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ a = k1 * gcd a b ∧ b = k2 * gcd a b ∧ coprime k1 k2"
                },
                {
                    "args": "exI, {P: λd. a = k1 * gcd a b ∧ b = d * gcd a b ∧ coprime k1 d, a: k2}",
                    "id": "1.14",
                    "prevs": [
                        "1.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ ∃a1. a = k1 * gcd a b ∧ b = a1 * gcd a b ∧ coprime k1 a1"
                },
                {
                    "args": "exI, {P: λc. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d, a: k1}",
                    "id": "1.15",
                    "prevs": [
                        "1.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(gcd a b = 0), a = gcd a b * k1, b = gcd a b * k2 ⊢ ∃a1. ∃d. a = a1 * gcd a b ∧ b = d * gcd a b ∧ coprime a1 d"
                },
                {
                    "args": "∃k. b = gcd a b * k, ∃k. a = gcd a b * k",
                    "id": "1.16",
                    "prevs": [
                        "1.0",
                        "1.3",
                        "1.5",
                        "1.6",
                        "1.4",
                        "1.7",
                        "1.8",
                        "1.15"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(gcd a b = 0) ⟶ (∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d"
                }
            ],
            "prop": "∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d",
            "steps": [
                {
                    "case": "gcd a b = 0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_zero"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "apply_backward_step",
                    "param_a": "(1::nat)",
                    "theorem": "exI"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_times_def_1"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_refl"
                },
                {
                    "goal_id": "0.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "0.7",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "b",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "b",
                    "theorem": "gcd_divides2"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.5",
                    "method_name": "exists_elim",
                    "names": "k1"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.7",
                    "method_name": "exists_elim",
                    "names": "k2"
                },
                {
                    "goal_id": "1.9",
                    "method_name": "inst_exists_goal",
                    "s": "k1"
                },
                {
                    "goal_id": "1.9",
                    "method_name": "inst_exists_goal",
                    "s": "k2"
                },
                {
                    "goal_id": "1.9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "1.11",
                    "method_name": "apply_backward_step",
                    "param_a": "a",
                    "param_b": "b",
                    "theorem": "gcd_coprime"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gcd_zero_right, gcd d 0 = 1 ⟷ d = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd d 0 = 1 ⟷ d = 1"
                },
                {
                    "args": "coprime_gcd, coprime d 0 ⟷ d = 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime d 0 ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d 0 ⟷ d = 1"
                }
            ],
            "prop": "coprime d 0 ⟷ d = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_zero_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime d a",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ⊢ coprime d a"
                },
                {
                    "args": "coprime d b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d b ⊢ coprime d b"
                },
                {
                    "args": "coprime_gcd",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d a ⊢ gcd d a = 1"
                },
                {
                    "args": "coprime_gcd",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d b ⊢ gcd d b = 1"
                },
                {
                    "args": "gcd_mul_coprime_1, {c: b}",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime d a ⊢ gcd d (a * b) = gcd d b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime d a, coprime d b ⊢ gcd d (a * b) = 1"
                },
                {
                    "args": "coprime_gcd, coprime d (a * b)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime d a, coprime d b ⊢ coprime d (a * b)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d a ⟶ coprime d b ⟶ coprime d (a * b)"
                }
            ],
            "prop": "coprime d a ⟶ coprime d b ⟶ coprime d (a * b)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_c": "b",
                    "theorem": "gcd_mul_coprime_1"
                },
                {
                    "fact_ids": [
                        "3",
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_lmul2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime d (a * b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d (a * b) ⊢ coprime d (a * b)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d (a * b) ⊢ gcd d (a * b) = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d (a * b) ⊢ 1 = gcd d (a * b)"
                },
                {
                    "args": "gcd_divide1, {m: d, n: b}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd d b) d"
                },
                {
                    "args": "gcd_divides2, {m: d, n: b}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd d b) b"
                },
                {
                    "args": "divides_lmul, {a: b, d: gcd d b, x: a}",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime d (a * b) ⊢ divides (gcd d b) (a * b)"
                },
                {
                    "args": "gcd_is_max",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ divides (gcd d b) (gcd d (a * b))"
                },
                {
                    "args": "divides (gcd d b) 1",
                    "id": "7",
                    "prevs": [
                        "2",
                        "6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime d (a * b) ⊢ divides (gcd d b) 1"
                },
                {
                    "args": "divides_1, {x: gcd d b}",
                    "id": "8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 (gcd d b)"
                },
                {
                    "args": "divides_antisym",
                    "id": "9",
                    "prevs": [
                        "7",
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ gcd d b = 1"
                },
                {
                    "args": "coprime_gcd, coprime d b",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime d (a * b) ⊢ coprime d b"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d (a * b) ⟶ coprime d b"
                }
            ],
            "prop": "coprime d (a * b) ⟶ coprime d b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_is_max"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_rmul2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime d (a * b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d (a * b) ⊢ coprime d (a * b)"
                },
                {
                    "args": "mult_comm",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d (a * b) ⊢ coprime d (b * a)"
                },
                {
                    "args": "coprime_lmul2",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ coprime d a"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d (a * b) ⟶ coprime d a"
                }
            ],
            "prop": "coprime d (a * b) ⟶ coprime d a",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_lmul2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_rmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime d (a * b) ⟶ coprime d a ∧ coprime d b"
                },
                {
                    "args": "coprime d (a * b)",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d (a * b) ⊢ coprime d (a * b)"
                },
                {
                    "args": "coprime_rmul2",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ coprime d a"
                },
                {
                    "args": "coprime_lmul2",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ coprime d b"
                },
                {
                    "args": "conjI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d (a * b) ⊢ coprime d a ∧ coprime d b"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d (a * b) ⟶ coprime d a ∧ coprime d b"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime d a ∧ coprime d b ⟶ coprime d (a * b)"
                },
                {
                    "args": "coprime d a ∧ coprime d b",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ∧ coprime d b ⊢ coprime d a ∧ coprime d b"
                },
                {
                    "args": "conjD1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d a ∧ coprime d b ⊢ coprime d a"
                },
                {
                    "args": "conjD2",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d a ∧ coprime d b ⊢ coprime d b"
                },
                {
                    "args": "coprime_mul",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d a ∧ coprime d b ⊢ coprime d (a * b)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d a ∧ coprime d b ⟶ coprime d (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ coprime d (a * b) ⟷ coprime d a ∧ coprime d b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d (a * b) ⟷ coprime d a ∧ coprime d b"
                }
            ],
            "prop": "coprime d (a * b) ⟷ coprime d a ∧ coprime d b",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_rmul2"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_lmul2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_mul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_lmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime_rmul, coprime d (a * b) ⟷ coprime d a ∧ coprime d b",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime d (a * b) ⟷ coprime d a ∧ coprime d b"
                },
                {
                    "args": "coprime_sym, coprime (a * b) d ⟷ coprime a d ∧ coprime b d",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (a * b) d ⟷ coprime a d ∧ coprime b d"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (a * b) d ⟷ coprime a d ∧ coprime b d"
                }
            ],
            "prop": "coprime (a * b) d ⟷ coprime a d ∧ coprime b d",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime d a",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ⊢ coprime d a"
                },
                {
                    "args": "coprime_1, {a: d}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ coprime d 1"
                },
                {
                    "args": "nat_nat_power_def_1, coprime d (a ^ (0::nat))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime d a ⊢ coprime d (a ^ (0::nat))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime d a ⊢ ∀n. coprime d (a ^ n) ⟶ coprime d (a ^ Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "coprime d (a ^ n)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d (a ^ n) ⊢ coprime d (a ^ n)"
                },
                {
                    "args": "coprime_mul",
                    "id": "3.2",
                    "prevs": [
                        "0",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d a, coprime d (a ^ n) ⊢ coprime d (a * a ^ n)"
                },
                {
                    "args": "nat_nat_power_def_2, coprime d (a ^ Suc n)",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime d a, coprime d (a ^ n) ⊢ coprime d (a ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "coprime d a ⊢ ∀n. coprime d (a ^ n) ⟶ coprime d (a ^ Suc n)"
                },
                {
                    "args": "nat_induct, {P: λn::nat. coprime d (a ^ n), x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime d a ⊢ coprime d (a ^ n)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime d a ⟶ coprime d (a ^ n)"
                }
            ],
            "prop": "coprime d a ⟶ coprime d (a ^ n)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_mul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "d": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_exp_imp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "coprime_sym, coprime b a",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b ⊢ coprime b a"
                },
                {
                    "args": "coprime_exp, {a: a, d: b, n: n}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b ⊢ coprime b (a ^ n)"
                },
                {
                    "args": "coprime_sym, coprime (a ^ n) b",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b ⊢ coprime (a ^ n) b"
                },
                {
                    "args": "coprime_exp, {a: b, d: a ^ n, n: n}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b ⊢ coprime (a ^ n) (b ^ n)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ coprime (a ^ n) (b ^ n)"
                }
            ],
            "prop": "coprime a b ⟶ coprime (a ^ n) (b ^ n)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_rexp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime m 1 ⟶ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "coprime m 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m 1 ⊢ coprime m 1"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "disjI2, {A: coprime m n, B: (0::nat) = 0}",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m 1 ⊢ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m 1 ⟶ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime m n ∨ (0::nat) = 0 ⟶ coprime m 1"
                },
                {
                    "args": "coprime m n ∨ (0::nat) = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ∨ (0::nat) = 0 ⊢ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "coprime_1, {a: m}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ coprime m 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m n ∨ (0::nat) = 0 ⟶ coprime m 1"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ coprime m 1 ⟷ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "nat_nat_power_def_1, coprime m (n ^ (0::nat)) ⟷ coprime m n ∨ (0::nat) = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime m (n ^ (0::nat)) ⟷ coprime m n ∨ (0::nat) = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n1. coprime m (n ^ n1) ⟷ coprime m n ∨ n1 = 0 ⟶ coprime m (n ^ Suc n1) ⟷ coprime m n ∨ Suc n1 = 0"
                },
                {
                    "args": "n, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m (n ^ n) ⟷ coprime m n ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0) ⟶ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "coprime m n ∧ (coprime m n ∨ n = 0)",
                    "id": "4.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ∧ (coprime m n ∨ n = 0) ⊢ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "4.2.1",
                    "prevs": [
                        "4.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m n ∧ (coprime m n ∨ n = 0) ⊢ coprime m n"
                },
                {
                    "args": "disjI1, {A: coprime m n, B: Suc n = 0}",
                    "id": "4.2.2",
                    "prevs": [
                        "4.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m n ∧ (coprime m n ∨ n = 0), coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "4.2.3",
                    "prevs": [
                        "4.2.0",
                        "4.2.2"
                    ],
                    "rule": "intros",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0) ⟶ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∨ Suc n = 0 ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "coprime m n ∨ Suc n = 0",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ∨ Suc n = 0 ⊢ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "4.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "coprime m n",
                    "id": "4.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ⊢ coprime m n"
                },
                {
                    "args": "disjI1, {A: coprime m n, B: n = 0}",
                    "id": "4.3.1.1",
                    "prevs": [
                        "4.3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m n, coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∨ n = 0"
                },
                {
                    "args": "conjI",
                    "id": "4.3.1.2",
                    "prevs": [
                        "4.3.1.0",
                        "4.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m n, coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.1.3",
                    "prevs": [
                        "4.3.1.0",
                        "4.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ Suc n = 0 ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "Suc n = 0",
                    "id": "4.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc n = 0 ⊢ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "4.3.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Suc n = 0, coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ ¬(coprime m n ∧ (coprime m n ∨ n = 0)) ⟶ ¬(Suc n = 0)"
                },
                {
                    "args": "¬(coprime m n ∧ (coprime m n ∨ n = 0))",
                    "id": "4.3.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(coprime m n ∧ (coprime m n ∨ n = 0)) ⊢ ¬(coprime m n ∧ (coprime m n ∨ n = 0))"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: n}",
                    "id": "4.3.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc n)"
                },
                {
                    "args": "ineq_sym",
                    "id": "4.3.2.1.2",
                    "prevs": [
                        "4.3.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "Suc n = 0, coprime m n ∨ Suc n = 0, ¬(coprime m n ∧ (coprime m n ∨ n = 0)), coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.2.1.3",
                    "prevs": [
                        "4.3.2.1.0",
                        "4.3.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "Suc n = 0, coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ ¬(coprime m n ∧ (coprime m n ∨ n = 0)) ⟶ ¬(Suc n = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.2.2",
                    "prevs": [
                        "4.3.2.0",
                        "4.3.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "Suc n = 0, coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.2.3",
                    "prevs": [
                        "4.3.2.0",
                        "4.3.2.2"
                    ],
                    "rule": "intros",
                    "th": "coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ Suc n = 0 ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "disjE",
                    "id": "4.3.3",
                    "prevs": [
                        "4.3.0",
                        "4.3.1",
                        "4.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m n ∨ Suc n = 0, coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.4",
                    "prevs": [
                        "4.3.0",
                        "4.3.3"
                    ],
                    "rule": "intros",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∨ Suc n = 0 ⟶ coprime m n ∧ (coprime m n ∨ n = 0)"
                },
                {
                    "args": "iffI",
                    "id": "4.4",
                    "prevs": [
                        "4.2",
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ (coprime m n ∨ n = 0) ⟷ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "coprime m n ∧ coprime m (n ^ n) ⟷ coprime m n ∨ Suc n = 0",
                    "id": "4.5",
                    "prevs": [
                        "4.1",
                        "4.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m n ∧ coprime m (n ^ n) ⟷ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "coprime_rmul, coprime m (n * n ^ n) ⟷ coprime m n ∨ Suc n = 0",
                    "id": "4.6",
                    "prevs": [
                        "4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m (n * n ^ n) ⟷ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "nat_nat_power_def_2, coprime m (n ^ Suc n) ⟷ coprime m n ∨ Suc n = 0",
                    "id": "4.7",
                    "prevs": [
                        "4.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⊢ coprime m (n ^ Suc n) ⟷ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "4.8",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. coprime m (n ^ n) ⟷ coprime m n ∨ n = 0 ⟶ coprime m (n ^ Suc n) ⟷ coprime m n ∨ Suc n = 0"
                },
                {
                    "args": "nat_induct, {P: λk::nat. coprime m (n ^ k) ⟷ coprime m n ∨ k = 0, x: k}",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ coprime m (n ^ k) ⟷ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m (n ^ k) ⟷ coprime m n ∨ k = 0"
                }
            ],
            "prop": "coprime m (n ^ k) ⟷ coprime m n ∨ k = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "k"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_1"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rmul"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "4.2.0"
                    ],
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.0"
                    ],
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.2.0"
                    ],
                    "goal_id": "4.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "4.3.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_lexp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime_rexp, coprime n (m ^ k) ⟷ coprime n m ∨ k = 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n (m ^ k) ⟷ coprime n m ∨ k = 0"
                },
                {
                    "args": "coprime_sym, coprime (m ^ k) n ⟷ coprime m n ∨ k = 0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (m ^ k) n ⟷ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (m ^ k) n ⟷ coprime m n ∨ k = 0"
                }
            ],
            "prop": "coprime (m ^ k) n ⟷ coprime m n ∨ k = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rexp"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_exp2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (coprime m n ∨ k = 0) ∨ k = 0 ⟶ coprime m n ∨ k = 0"
                },
                {
                    "args": "(coprime m n ∨ k = 0) ∨ k = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(coprime m n ∨ k = 0) ∨ k = 0 ⊢ (coprime m n ∨ k = 0) ∨ k = 0"
                },
                {
                    "args": "coprime m n ∨ k = 0 ⟶ coprime m n ∨ k = 0",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ coprime m n ∨ k = 0 ⟶ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(coprime m n ∨ k = 0) ∨ k = 0 ⊢ k = 0 ⟶ coprime m n ∨ k = 0"
                },
                {
                    "args": "k = 0",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "disjI2, {A: coprime m n, B: k = 0}",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, (coprime m n ∨ k = 0) ∨ k = 0 ⊢ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "(coprime m n ∨ k = 0) ∨ k = 0 ⊢ k = 0 ⟶ coprime m n ∨ k = 0"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "(coprime m n ∨ k = 0) ∨ k = 0 ⊢ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (coprime m n ∨ k = 0) ∨ k = 0 ⟶ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime m n ∨ k = 0 ⟶ (coprime m n ∨ k = 0) ∨ k = 0"
                },
                {
                    "args": "coprime m n ∨ k = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ∨ k = 0 ⊢ coprime m n ∨ k = 0"
                },
                {
                    "args": "disjI1, {A: coprime m n ∨ k = 0, B: k = 0}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m n ∨ k = 0 ⊢ (coprime m n ∨ k = 0) ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m n ∨ k = 0 ⟶ (coprime m n ∨ k = 0) ∨ k = 0"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (coprime m n ∨ k = 0) ∨ k = 0 ⟷ coprime m n ∨ k = 0"
                },
                {
                    "args": "coprime_rexp, coprime m (n ^ k) ∨ k = 0 ⟷ coprime m n ∨ k = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime m (n ^ k) ∨ k = 0 ⟷ coprime m n ∨ k = 0"
                },
                {
                    "args": "coprime_lexp, coprime (m ^ k) (n ^ k) ⟷ coprime m n ∨ k = 0",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (m ^ k) (n ^ k) ⟷ coprime m n ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (m ^ k) (n ^ k) ⟷ coprime m n ∨ k = 0"
                }
            ],
            "prop": "coprime (m ^ k) (n ^ k) ⟷ coprime m n ∨ k = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_lexp"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rexp"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_exp2_suc",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime m n ∨ Suc k = 0 ⟶ coprime m n"
                },
                {
                    "args": "coprime m n ∨ Suc k = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ∨ Suc k = 0 ⊢ coprime m n ∨ Suc k = 0"
                },
                {
                    "args": "coprime m n ⟶ coprime m n",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ coprime m n ⟶ coprime m n"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime m n ∨ Suc k = 0 ⊢ Suc k = 0 ⟶ coprime m n"
                },
                {
                    "args": "Suc k = 0",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc k = 0 ⊢ Suc k = 0"
                },
                {
                    "args": "",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Suc k = 0, coprime m n ∨ Suc k = 0 ⊢ ¬(coprime m n) ⟶ ¬(Suc k = 0)"
                },
                {
                    "args": "¬(coprime m n)",
                    "id": "0.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(coprime m n) ⊢ ¬(coprime m n)"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: k}",
                    "id": "0.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc k)"
                },
                {
                    "args": "ineq_sym",
                    "id": "0.2.1.2",
                    "prevs": [
                        "0.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(coprime m n), Suc k = 0, coprime m n ∨ Suc k = 0 ⊢ ¬(Suc k = 0)"
                },
                {
                    "args": "",
                    "id": "0.2.1.3",
                    "prevs": [
                        "0.2.1.0",
                        "0.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "Suc k = 0, coprime m n ∨ Suc k = 0 ⊢ ¬(coprime m n) ⟶ ¬(Suc k = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "Suc k = 0, coprime m n ∨ Suc k = 0 ⊢ coprime m n"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "coprime m n ∨ Suc k = 0 ⊢ Suc k = 0 ⟶ coprime m n"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m n ∨ Suc k = 0 ⊢ coprime m n"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m n ∨ Suc k = 0 ⟶ coprime m n"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime m n ⟶ coprime m n ∨ Suc k = 0"
                },
                {
                    "args": "coprime m n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ⊢ coprime m n"
                },
                {
                    "args": "disjI1, {A: coprime m n, B: Suc k = 0}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m n ⊢ coprime m n ∨ Suc k = 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime m n ⟶ coprime m n ∨ Suc k = 0"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ coprime m n ∨ Suc k = 0 ⟷ coprime m n"
                },
                {
                    "args": "coprime_exp2, coprime (m ^ Suc k) (n ^ Suc k) ⟷ coprime m n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (m ^ Suc k) (n ^ Suc k) ⟷ coprime m n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (m ^ Suc k) (n ^ Suc k) ⟷ coprime m n"
                }
            ],
            "prop": "coprime (m ^ Suc k) (n ^ Suc k) ⟷ coprime m n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_exp2"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "0.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_refl",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gcd_refl, gcd n n = 1 ⟷ n = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd n n = 1 ⟷ n = 1"
                },
                {
                    "args": "coprime_gcd, coprime n n ⟷ n = 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n n ⟷ n = 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime n n ⟷ n = 1"
                }
            ],
            "prop": "coprime n n ⟷ n = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_refl"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_plus1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gcd_1_right, gcd n 1 = 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd n 1 = 1"
                },
                {
                    "args": "gcd_add_right, gcd (n + 1) n = 1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd (n + 1) n = 1"
                },
                {
                    "args": "coprime_gcd, coprime (n + 1) n",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (n + 1) n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (n + 1) n"
                }
            ],
            "prop": "coprime (n + 1) n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_add_right"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_1_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_minus1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "coprime_plus1, {n: n - 1}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ coprime (n - 1 + 1) (n - 1)"
                },
                {
                    "args": "le_1_2",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ 1 ≤ n"
                },
                {
                    "args": "sub_add",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ n - 1 + 1 = n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0) ⊢ coprime n (n - 1)"
                },
                {
                    "args": "coprime_sym, coprime (n - 1) n",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0) ⊢ coprime (n - 1) n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ coprime (n - 1) n"
                }
            ],
            "prop": "¬(n = 0) ⟶ coprime (n - 1) n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal": "coprime ((n - 1) + 1) (n - 1)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_plus1"
                },
                {
                    "goal": "n - 1 + 1 = n",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_add"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "3",
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gcd_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "gcd_coprime_exists, {a: m, b: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃c. ∃d. m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d"
                },
                {
                    "args": "c, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "d, nat",
                    "id": "2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d"
                },
                {
                    "args": "conjD1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ m = c * gcd m n"
                },
                {
                    "args": "conjD2",
                    "id": "5",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ n = d * gcd m n ∧ coprime c d"
                },
                {
                    "args": "conjD1",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ n = d * gcd m n"
                },
                {
                    "args": "conjD2",
                    "id": "7",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ coprime c d"
                },
                {
                    "args": "coprime_gcd",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd c d = 1"
                },
                {
                    "args": "mult_1_right, gcd m n ^ k = gcd m n ^ k * 1",
                    "id": "9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd m n ^ k = gcd m n ^ k * 1"
                },
                {
                    "args": "disjI1, {A: coprime c d, B: k = 0}",
                    "id": "10",
                    "prevs": [
                        "7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ coprime c d ∨ k = 0"
                },
                {
                    "args": "coprime_exp2, coprime (c ^ k) (d ^ k)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ coprime (c ^ k) (d ^ k)"
                },
                {
                    "args": "coprime_gcd, gcd (c ^ k) (d ^ k) = 1",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd (c ^ k) (d ^ k) = 1"
                },
                {
                    "args": "disjI2, {A: gcd m n ^ k = 0, B: gcd (c ^ k) (d ^ k) = 1}",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k = 0 ∨ gcd (c ^ k) (d ^ k) = 1"
                },
                {
                    "args": "eq_mult_lcancel, gcd m n ^ k * gcd (c ^ k) (d ^ k) = gcd m n ^ k * 1",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * gcd (c ^ k) (d ^ k) = gcd m n ^ k * 1"
                },
                {
                    "args": "mult_1_left, gcd m n ^ k * (1 * gcd (c ^ k) (d ^ k)) = gcd m n ^ k * 1",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * (1 * gcd (c ^ k) (d ^ k)) = gcd m n ^ k * 1"
                },
                {
                    "args": "mult_assoc, gcd m n ^ k * 1 * gcd (c ^ k) (d ^ k) = gcd m n ^ k * 1",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * 1 * gcd (c ^ k) (d ^ k) = gcd m n ^ k * 1"
                },
                {
                    "args": "gcd m n ^ k * gcd (c ^ k) (d ^ k) = gcd m n ^ k",
                    "id": "17",
                    "prevs": [
                        "9",
                        "16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * gcd (c ^ k) (d ^ k) = gcd m n ^ k"
                },
                {
                    "args": "mult_1_right, gcd m n ^ k * gcd (c ^ k) (d ^ k) = (gcd m n * 1) ^ k",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * gcd (c ^ k) (d ^ k) = (gcd m n * 1) ^ k"
                },
                {
                    "args": "gcd m n ^ k * gcd (c ^ k) (d ^ k) = (gcd m n * gcd c d) ^ k",
                    "id": "19",
                    "prevs": [
                        "8",
                        "18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd m n ^ k * gcd (c ^ k) (d ^ k) = (gcd m n * gcd c d) ^ k"
                },
                {
                    "args": "gcd_mult_right, gcd (c ^ k * gcd m n ^ k) (d ^ k * gcd m n ^ k) = gcd (c * gcd m n) (d * gcd m n) ^ k",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd (c ^ k * gcd m n ^ k) (d ^ k * gcd m n ^ k) = gcd (c * gcd m n) (d * gcd m n) ^ k"
                },
                {
                    "args": "mult_exp, gcd ((c * gcd m n) ^ k) ((d * gcd m n) ^ k) = gcd (c * gcd m n) (d * gcd m n) ^ k",
                    "id": "21",
                    "prevs": [
                        "20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd ((c * gcd m n) ^ k) ((d * gcd m n) ^ k) = gcd (c * gcd m n) (d * gcd m n) ^ k"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "22",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ d * gcd m n = n"
                },
                {
                    "args": "",
                    "id": "23",
                    "prevs": [
                        "22",
                        "21"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd ((c * gcd m n) ^ k) (n ^ k) = gcd (c * gcd m n) n ^ k"
                },
                {
                    "args": "gcd (m ^ k) (n ^ k) = gcd m n ^ k",
                    "id": "24",
                    "prevs": [
                        "4",
                        "23"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d ⊢ gcd (m ^ k) (n ^ k) = gcd m n ^ k"
                },
                {
                    "args": "∃c. ∃d. m = c * gcd m n ∧ n = d * gcd m n ∧ coprime c d",
                    "id": "25",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "24"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd (m ^ k) (n ^ k) = gcd m n ^ k"
                }
            ],
            "prop": "gcd (m ^ k) (n ^ k) = gcd m n ^ k",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_a": "m",
                    "param_b": "n",
                    "theorem": "gcd_coprime_exists"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "c,d"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "gcd ((c * gcd m n) ^ k) ((d * gcd m n) ^ k) = gcd (c * gcd m n) (d * gcd m n) ^ k",
                    "goal_id": "8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_mult_right"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "goal": "gcd m n ^ k = gcd m n ^ k * 1",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_exp2"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "22",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "22",
                        "21"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "division_decomp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides a (b * c)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides a (b * c) ⊢ divides a (b * c)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides a (b * c) ⊢ gcd a b = 0 ⟶ (∃c1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c)"
                },
                {
                    "args": "gcd a b = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 0 ⊢ gcd a b = 0"
                },
                {
                    "args": "gcd_zero",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "gcd a b = 0 ⊢ a = 0 ∧ b = 0"
                },
                {
                    "args": "conjD1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ a = 0"
                },
                {
                    "args": "mult_1_right, (0::nat) = 0 * 1",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (0::nat) = 0 * 1"
                },
                {
                    "args": "a = 0 * 1",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides a (b * c), gcd a b = 0 ⊢ a = 0 * 1"
                },
                {
                    "args": "a = gcd a b * 1",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides a (b * c), gcd a b = 0 ⊢ a = gcd a b * 1"
                },
                {
                    "args": "gcd_divides2, {m: a, n: b}",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a b) b"
                },
                {
                    "args": "divides_1, {x: c}",
                    "id": "1.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 c"
                },
                {
                    "args": "conjI",
                    "id": "1.8",
                    "prevs": [
                        "1.6",
                        "1.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), gcd a b = 0 ⊢ divides (gcd a b) b ∧ divides 1 c"
                },
                {
                    "args": "conjI",
                    "id": "1.9",
                    "prevs": [
                        "1.5",
                        "1.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), gcd a b = 0 ⊢ a = gcd a b * 1 ∧ divides (gcd a b) b ∧ divides 1 c"
                },
                {
                    "args": "exI, {P: λc1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c, a: (1::nat)}",
                    "id": "1.10",
                    "prevs": [
                        "1.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides a (b * c), gcd a b = 0 ⊢ ∃a1. a = gcd a b * a1 ∧ divides (gcd a b) b ∧ divides a1 c"
                },
                {
                    "args": "",
                    "id": "1.11",
                    "prevs": [
                        "1.0",
                        "1.10"
                    ],
                    "rule": "intros",
                    "th": "divides a (b * c) ⊢ gcd a b = 0 ⟶ (∃c1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides a (b * c) ⊢ ¬(gcd a b = 0) ⟶ (∃c1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c)"
                },
                {
                    "args": "¬(gcd a b = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(gcd a b = 0) ⊢ ¬(gcd a b = 0)"
                },
                {
                    "args": "gcd_coprime_exists, {a: a, b: b}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d"
                },
                {
                    "args": "e, nat",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "f, nat",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR f"
                },
                {
                    "args": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f"
                },
                {
                    "args": "conjD1",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ a = e * gcd a b"
                },
                {
                    "args": "mult_comm",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ a = gcd a b * e"
                },
                {
                    "args": "gcd_divides2, {m: a, n: b}",
                    "id": "2.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a b) b"
                },
                {
                    "args": "conjD2",
                    "id": "2.8",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ b = f * gcd a b ∧ coprime e f"
                },
                {
                    "args": "conjD1",
                    "id": "2.9",
                    "prevs": [
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ b = f * gcd a b"
                },
                {
                    "args": "conjD2",
                    "id": "2.10",
                    "prevs": [
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ coprime e f"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.11",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ gcd a b * e = a"
                },
                {
                    "args": "mult_comm",
                    "id": "2.12",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ b = gcd a b * f"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ gcd a b * f = b"
                },
                {
                    "args": "divides a (gcd a b * f * c)",
                    "id": "2.14",
                    "prevs": [
                        "2.13",
                        "0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides a (gcd a b * f * c)"
                },
                {
                    "args": "divides (gcd a b * e) (gcd a b * f * c)",
                    "id": "2.15",
                    "prevs": [
                        "2.11",
                        "2.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides (gcd a b * e) (gcd a b * f * c)"
                },
                {
                    "args": "mult_assoc, divides (gcd a b * e) (gcd a b * (f * c))",
                    "id": "2.16",
                    "prevs": [
                        "2.15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides (gcd a b * e) (gcd a b * (f * c))"
                },
                {
                    "args": "divides_cmul2",
                    "id": "2.17",
                    "prevs": [
                        "2.16",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides e (f * c)"
                },
                {
                    "args": "coprime_divprod",
                    "id": "2.18",
                    "prevs": [
                        "2.17",
                        "2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides e c"
                },
                {
                    "args": "conjI",
                    "id": "2.19",
                    "prevs": [
                        "2.7",
                        "2.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ divides (gcd a b) b ∧ divides e c"
                },
                {
                    "args": "conjI",
                    "id": "2.20",
                    "prevs": [
                        "2.6",
                        "2.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ a = gcd a b * e ∧ divides (gcd a b) b ∧ divides e c"
                },
                {
                    "args": "exI, {P: λc1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c, a: e}",
                    "id": "2.21",
                    "prevs": [
                        "2.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides a (b * c), ¬(gcd a b = 0), a = e * gcd a b ∧ b = f * gcd a b ∧ coprime e f ⊢ ∃a1. a = gcd a b * a1 ∧ divides (gcd a b) b ∧ divides a1 c"
                },
                {
                    "args": "∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d",
                    "id": "2.22",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.4",
                        "2.21"
                    ],
                    "rule": "intros",
                    "th": "divides a (b * c) ⊢ ¬(gcd a b = 0) ⟶ (∃c1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides a (b * c) ⊢ ∃c1. a = gcd a b * c1 ∧ divides (gcd a b) b ∧ divides c1 c"
                },
                {
                    "args": "exI, {P: λb1. ∃c1. a = b1 * c1 ∧ divides b1 b ∧ divides c1 c, a: gcd a b}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides a (b * c) ⊢ ∃a1. ∃c1. a = a1 * c1 ∧ divides a1 b ∧ divides c1 c"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides a (b * c) ⟶ (∃b1. ∃c1. a = b1 * c1 ∧ divides b1 b ∧ divides c1 c)"
                }
            ],
            "prop": "divides a (b * c) ⟶ (∃b1. ∃c1. a = b1 * c1 ∧ divides b1 b ∧ divides c1 c)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "inst_exists_goal",
                    "s": "gcd a b"
                },
                {
                    "case": "gcd a b =0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_zero"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "goal_id": "1.7",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "param_a": "a",
                    "param_b": "b",
                    "theorem": "gcd_coprime_exists"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "exists_elim",
                    "names": "e,f"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "inst_exists_goal",
                    "s": "e"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.5"
                    ],
                    "goal_id": "2.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.8"
                    ],
                    "goal_id": "2.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "apply_backward_step",
                    "param_a": "f",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "apply_backward_step",
                    "param_c": "gcd a b",
                    "theorem": "divides_cmul2"
                },
                {
                    "fact_ids": [
                        "2.6"
                    ],
                    "goal_id": "2.11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.9"
                    ],
                    "goal_id": "2.12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "2.12"
                    ],
                    "goal_id": "2.13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "2.14",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "2.11"
                    ],
                    "goal_id": "2.14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.13"
                    ],
                    "goal_id": "2.14",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "divides_exp2_rev",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides (a ^ n) (b ^ n)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (a ^ n) (b ^ n) ⊢ divides (a ^ n) (b ^ n)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ gcd a b = 0 ⟶ divides a b"
                },
                {
                    "args": "gcd a b = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 0 ⊢ gcd a b = 0"
                },
                {
                    "args": "gcd_zero",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "gcd a b = 0 ⊢ a = 0 ∧ b = 0"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ a = 0"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 0 ⊢ b = 0"
                },
                {
                    "args": "divides_zero, {n: a}",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides a 0"
                },
                {
                    "args": "divides a b",
                    "id": "2.5",
                    "prevs": [
                        "2.3",
                        "2.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), gcd a b = 0, divides (a ^ n) (b ^ n) ⊢ divides a b"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ gcd a b = 0 ⟶ divides a b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ ¬(gcd a b = 0) ⟶ divides a b"
                },
                {
                    "args": "¬(gcd a b = 0)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(gcd a b = 0) ⊢ ¬(gcd a b = 0)"
                },
                {
                    "args": "gcd_coprime_exists, {a: a, b: b}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d"
                },
                {
                    "args": "c, nat",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "d, nat",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d"
                },
                {
                    "args": "conjD1",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ a = c * gcd a b"
                },
                {
                    "args": "conjD2",
                    "id": "3.6",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ b = d * gcd a b ∧ coprime c d"
                },
                {
                    "args": "conjD2",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ coprime c d"
                },
                {
                    "args": "conjD1",
                    "id": "3.8",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ b = d * gcd a b"
                },
                {
                    "args": "",
                    "id": "3.9",
                    "prevs": [
                        "3.5",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides ((c * gcd a b) ^ n) (b ^ n)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3.10",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ d * gcd a b = b"
                },
                {
                    "args": "divides ((c * gcd a b) ^ n) ((d * gcd a b) ^ n)",
                    "id": "3.11",
                    "prevs": [
                        "3.10",
                        "3.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides ((c * gcd a b) ^ n) ((d * gcd a b) ^ n)"
                },
                {
                    "args": "mult_exp",
                    "id": "3.12",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides (c ^ n * gcd a b ^ n) (d ^ n * gcd a b ^ n)"
                },
                {
                    "args": "mult_comm",
                    "id": "3.13",
                    "prevs": [
                        "3.12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides (gcd a b ^ n * c ^ n) (gcd a b ^ n * d ^ n)"
                },
                {
                    "args": "divides_cmul2",
                    "id": "3.14",
                    "prevs": [
                        "3.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ ¬(gcd a b ^ n = 0) ⟶ divides (c ^ n) (d ^ n)"
                },
                {
                    "args": "disjI1, {A: ¬(gcd a b = 0), B: ¬¬(n = 0)}",
                    "id": "3.15",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ ¬(gcd a b = 0) ∨ ¬¬(n = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(gcd a b = 0 ∧ ¬(n = 0))",
                    "id": "3.16",
                    "prevs": [
                        "3.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ ¬(gcd a b = 0 ∧ ¬(n = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(gcd a b ^ n = 0)",
                    "id": "3.17",
                    "prevs": [
                        "3.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ ¬(gcd a b ^ n = 0)"
                },
                {
                    "args": "",
                    "id": "3.18",
                    "prevs": [
                        "3.14",
                        "3.17"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides (c ^ n) (d ^ n)"
                },
                {
                    "args": "divides_gcd_left",
                    "id": "3.19",
                    "prevs": [
                        "3.18"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ gcd (c ^ n) (d ^ n) = c ^ n"
                },
                {
                    "args": "gcd_exp",
                    "id": "3.20",
                    "prevs": [
                        "3.19"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ gcd c d ^ n = c ^ n"
                },
                {
                    "args": "coprime_gcd",
                    "id": "3.21",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ gcd c d = 1"
                },
                {
                    "args": "",
                    "id": "3.22",
                    "prevs": [
                        "3.21",
                        "3.20"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ 1 ^ n = c ^ n"
                },
                {
                    "args": "exp_mono_eq",
                    "id": "3.23",
                    "prevs": [
                        "3.22"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ 1 = c ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "3.24",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ 1 = c ⟶ divides c d"
                },
                {
                    "args": "1 = c",
                    "id": "3.24.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 = c ⊢ 1 = c"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3.24.1",
                    "prevs": [
                        "3.24.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 = c ⊢ c = 1"
                },
                {
                    "args": "divides_1, {x: d}",
                    "id": "3.24.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 d"
                },
                {
                    "args": "divides c d",
                    "id": "3.24.3",
                    "prevs": [
                        "3.24.1",
                        "3.24.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "1 = c, ¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides c d"
                },
                {
                    "args": "",
                    "id": "3.24.4",
                    "prevs": [
                        "3.24.0",
                        "3.24.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ 1 = c ⟶ divides c d"
                },
                {
                    "args": "",
                    "id": "3.25",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ n = 0 ⟶ divides c d"
                },
                {
                    "args": "n = 0",
                    "id": "3.25.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: divides c d}",
                    "id": "3.25.1",
                    "prevs": [
                        "1",
                        "3.25.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(n = 0) ⊢ divides c d"
                },
                {
                    "args": "",
                    "id": "3.25.2",
                    "prevs": [
                        "3.25.0",
                        "3.25.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ n = 0 ⟶ divides c d"
                },
                {
                    "args": "disjE",
                    "id": "3.26",
                    "prevs": [
                        "3.23",
                        "3.24",
                        "3.25"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides c d"
                },
                {
                    "args": "divides_mult_right, {k: gcd a b, m: c, n: d}",
                    "id": "3.27",
                    "prevs": [
                        "3.26"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides (c * gcd a b) (d * gcd a b)"
                },
                {
                    "args": "",
                    "id": "3.28",
                    "prevs": [
                        "3.10",
                        "3.27"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides (c * gcd a b) b"
                },
                {
                    "args": "divides a b",
                    "id": "3.29",
                    "prevs": [
                        "3.5",
                        "3.28"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), ¬(gcd a b = 0), divides (a ^ n) (b ^ n), a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d ⊢ divides a b"
                },
                {
                    "args": "∃c. ∃d. a = c * gcd a b ∧ b = d * gcd a b ∧ coprime c d",
                    "id": "3.30",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.4",
                        "3.29"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ ¬(gcd a b = 0) ⟶ divides a b"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ divides a b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides (a ^ n) (b ^ n) ⟶ ¬(n = 0) ⟶ divides a b"
                }
            ],
            "prop": "divides (a ^ n) (b ^ n) ⟶ ¬(n = 0) ⟶ divides a b",
            "steps": [
                {
                    "case": "gcd a b = 0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_zero"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_forward_step",
                    "param_a": "a",
                    "param_b": "b",
                    "theorem": "gcd_coprime_exists"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "exists_elim",
                    "names": "c,d"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.5",
                        "0"
                    ],
                    "goal_id": "3.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.9"
                    ],
                    "goal": "divides ((c * gcd a b) ^ n) ((d * gcd a b) ^ n)",
                    "goal_id": "3.10",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.8"
                    ],
                    "goal_id": "3.10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3.10"
                    ],
                    "goal_id": "3.11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.11"
                    ],
                    "goal_id": "3.12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "fact_ids": [
                        "3.12"
                    ],
                    "goal_id": "3.13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "3.13"
                    ],
                    "goal_id": "3.14",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_cmul2"
                },
                {
                    "goal": "¬(gcd a b ^ n = 0)",
                    "goal_id": "3.15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "3.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "3.15",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "3.14",
                        "3.17"
                    ],
                    "goal_id": "3.18",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.5"
                    ],
                    "goal_id": "3.19",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "divides (c * gcd a b) (d * gcd a b)",
                    "goal_id": "3.19",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.19",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mult_right"
                },
                {
                    "fact_ids": [
                        "3.18"
                    ],
                    "goal_id": "3.19",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_gcd_left"
                },
                {
                    "fact_ids": [
                        "3.19"
                    ],
                    "goal_id": "3.20",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_exp"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.21",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "3.21",
                        "3.20"
                    ],
                    "goal_id": "3.22",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.22"
                    ],
                    "goal_id": "3.23",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_mono_eq"
                },
                {
                    "fact_ids": [
                        "3.23"
                    ],
                    "goal_id": "3.24",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.24",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.24.0"
                    ],
                    "goal_id": "3.24.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3.24.1"
                    ],
                    "goal_id": "3.24.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.24.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "3.25",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.25.0"
                    ],
                    "goal_id": "3.25.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "fact_ids": [
                        "3.10",
                        "3.27"
                    ],
                    "goal_id": "3.28",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "divides_exp2_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ divides (a ^ n) (b ^ n) ⟶ divides a b"
                },
                {
                    "args": "divides (a ^ n) (b ^ n)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (a ^ n) (b ^ n) ⊢ divides (a ^ n) (b ^ n)"
                },
                {
                    "args": "divides_exp2_rev",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (a ^ n) (b ^ n) ⊢ divides a b"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ divides (a ^ n) (b ^ n) ⟶ divides a b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ divides a b ⟶ divides (a ^ n) (b ^ n)"
                },
                {
                    "args": "divides a b",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides a b ⊢ divides a b"
                },
                {
                    "args": "divides_exp, {n: n, x: a, y: b}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides a b ⊢ divides (a ^ n) (b ^ n)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ divides a b ⟶ divides (a ^ n) (b ^ n)"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ divides (a ^ n) (b ^ n) ⟷ divides a b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ divides (a ^ n) (b ^ n) ⟷ divides a b"
                }
            ],
            "prop": "¬(n = 0) ⟶ divides (a ^ n) (b ^ n) ⟷ divides a b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_exp2_rev"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_exp"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "divides_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides m r",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides m r ⊢ divides m r"
                },
                {
                    "args": "divides n r",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides n r ⊢ divides n r"
                },
                {
                    "args": "coprime m n",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m n ⊢ coprime m n"
                },
                {
                    "args": "divides_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides m r ⊢ ∃k. r = m * k"
                },
                {
                    "args": "divides_def",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides n r ⊢ ∃k. r = n * k"
                },
                {
                    "args": "k1, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "r = m * k1",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "r = m * k1 ⊢ r = m * k1"
                },
                {
                    "args": "k2, nat",
                    "id": "7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k2"
                },
                {
                    "args": "r = n * k2",
                    "id": "8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "r = n * k2 ⊢ r = n * k2"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "9",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "r = m * k1 ⊢ m * k1 = r"
                },
                {
                    "args": "divides n (m * k1)",
                    "id": "10",
                    "prevs": [
                        "9",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime m n, divides m r, divides n r, r = m * k1, r = n * k2 ⊢ divides n (m * k1)"
                },
                {
                    "args": "coprime_sym, coprime n m",
                    "id": "11",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime m n, divides m r, divides n r, r = m * k1, r = n * k2 ⊢ coprime n m"
                },
                {
                    "args": "coprime_divprod",
                    "id": "12",
                    "prevs": [
                        "10",
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime m n, divides m r, divides n r, r = m * k1, r = n * k2 ⊢ divides n k1"
                },
                {
                    "args": "divides_mult_left, {k: m, m: n, n: k1}",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime m n, divides m r, divides n r, r = m * k1, r = n * k2 ⊢ divides (m * n) (m * k1)"
                },
                {
                    "args": "divides (m * n) r",
                    "id": "14",
                    "prevs": [
                        "6",
                        "13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime m n, divides m r, divides n r, r = m * k1, r = n * k2 ⊢ divides (m * n) r"
                },
                {
                    "args": "∃k. r = n * k, ∃k. r = m * k",
                    "id": "15",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "5",
                        "6",
                        "4",
                        "7",
                        "8",
                        "14"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides m r ⟶ divides n r ⟶ coprime m n ⟶ divides (m * n) r"
                }
            ],
            "prop": "divides m r ⟶ divides n r ⟶ coprime m n ⟶ divides (m * n) r",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "k1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "7",
                    "method_name": "exists_elim",
                    "names": "k2"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mult_left"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "param_a": "m",
                    "theorem": "coprime_divprod"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "r": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_coprime_lmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "gcd_divide1, {m: a, n: c}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a c) a"
                },
                {
                    "args": "gcd_divides2, {m: a, n: c}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a c) c"
                },
                {
                    "args": "divides_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. a = gcd a c * k"
                },
                {
                    "args": "divides_def",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. c = gcd a c * k"
                },
                {
                    "args": "k1, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "a = gcd a c * k1",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = gcd a c * k1 ⊢ a = gcd a c * k1"
                },
                {
                    "args": "k2, nat",
                    "id": "7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k2"
                },
                {
                    "args": "c = gcd a c * k2",
                    "id": "8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c = gcd a c * k2 ⊢ c = gcd a c * k2"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "9",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = gcd a c * k1 ⊢ gcd a c * k1 = a"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "10",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "c = gcd a c * k2 ⊢ gcd a c * k2 = c"
                },
                {
                    "args": "gcd (a * b) c = gcd (a * b) (gcd a c * k2)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "c = gcd a c * k2 ⊢ gcd (a * b) c = gcd (a * b) (gcd a c * k2)"
                },
                {
                    "args": "gcd (a * b) c = gcd (gcd a c * k1 * b) (gcd a c * k2)",
                    "id": "12",
                    "prevs": [
                        "9",
                        "11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (a * b) c = gcd (gcd a c * k1 * b) (gcd a c * k2)"
                },
                {
                    "args": "mult_assoc",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (a * b) c = gcd (gcd a c * (k1 * b)) (gcd a c * k2)"
                },
                {
                    "args": "gcd_mult_left",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (a * b) c = gcd a c * gcd (k1 * b) k2"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c = 0 ⟶ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "gcd a c = 0",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a c = 0 ⊢ gcd a c = 0"
                },
                {
                    "args": "disjI1, {A: gcd a c = 0, B: gcd (k1 * b) k2 = gcd b c}",
                    "id": "15.1",
                    "prevs": [
                        "15.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, gcd a c = 0, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "",
                    "id": "15.2",
                    "prevs": [
                        "15.0",
                        "15.1"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c = 0 ⟶ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "",
                    "id": "16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ ¬(gcd a c = 0) ⟶ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "¬(gcd a c = 0)",
                    "id": "16.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(gcd a c = 0) ⊢ ¬(gcd a c = 0)"
                },
                {
                    "args": "gcd_divide1, {m: k1 * b, n: k2}",
                    "id": "16.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd (k1 * b) k2) (k1 * b)"
                },
                {
                    "args": "gcd_comm, {m: k1 * b, n: k2}",
                    "id": "16.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ gcd (k1 * b) k2 = gcd k2 (k1 * b)"
                },
                {
                    "args": "divides_self, {n: k1}",
                    "id": "16.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides k1 k1"
                },
                {
                    "args": "divides_rmul, {a: k1, d: k1, x: b}",
                    "id": "16.4",
                    "prevs": [
                        "16.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides k1 (k1 * b)"
                },
                {
                    "args": "divides_gcd_right",
                    "id": "16.5",
                    "prevs": [
                        "16.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (k1 * b) k1 = k1"
                },
                {
                    "args": "mult_comm, a = k1 * gcd a c",
                    "id": "16.6",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ a = k1 * gcd a c"
                },
                {
                    "args": "mult_comm, c = k2 * gcd a c",
                    "id": "16.7",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ c = k2 * gcd a c"
                },
                {
                    "args": "gcd_coprime",
                    "id": "16.8",
                    "prevs": [
                        "16.0",
                        "16.6",
                        "16.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ coprime k1 k2"
                },
                {
                    "args": "coprime_sym, coprime k2 k1",
                    "id": "16.9",
                    "prevs": [
                        "16.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ coprime k2 k1"
                },
                {
                    "args": "coprime_gcd, gcd k2 k1 = 1",
                    "id": "16.10",
                    "prevs": [
                        "16.9"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd k2 k1 = 1"
                },
                {
                    "args": "gcd k2 (gcd (k1 * b) k1) = 1",
                    "id": "16.11",
                    "prevs": [
                        "16.5",
                        "16.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd k2 (gcd (k1 * b) k1) = 1"
                },
                {
                    "args": "gcd_assoc, gcd (gcd k2 (k1 * b)) k1 = 1",
                    "id": "16.12",
                    "prevs": [
                        "16.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd k2 (k1 * b)) k1 = 1"
                },
                {
                    "args": "gcd (gcd (k1 * b) k2) k1 = 1",
                    "id": "16.13",
                    "prevs": [
                        "16.2",
                        "16.12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd (k1 * b) k2) k1 = 1"
                },
                {
                    "args": "coprime_gcd, coprime (gcd (k1 * b) k2) k1",
                    "id": "16.14",
                    "prevs": [
                        "16.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ coprime (gcd (k1 * b) k2) k1"
                },
                {
                    "args": "coprime_divprod",
                    "id": "16.15",
                    "prevs": [
                        "16.1",
                        "16.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd (k1 * b) k2) b"
                },
                {
                    "args": "gcd_divides2, {m: k1 * b, n: k2}",
                    "id": "16.16",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd (k1 * b) k2) k2"
                },
                {
                    "args": "divides_self, {n: k2}",
                    "id": "16.17",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides k2 k2"
                },
                {
                    "args": "divides_lmul, {a: k2, d: k2, x: gcd a c}",
                    "id": "16.18",
                    "prevs": [
                        "16.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides k2 (gcd a c * k2)"
                },
                {
                    "args": "divides k2 c",
                    "id": "16.19",
                    "prevs": [
                        "8",
                        "16.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides k2 c"
                },
                {
                    "args": "divides_trans",
                    "id": "16.20",
                    "prevs": [
                        "16.16",
                        "16.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd (k1 * b) k2) c"
                },
                {
                    "args": "gcd_is_max",
                    "id": "16.21",
                    "prevs": [
                        "16.15",
                        "16.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd (k1 * b) k2) (gcd b c)"
                },
                {
                    "args": "gcd_divide1, {m: b, n: c}",
                    "id": "16.22",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd b c) b"
                },
                {
                    "args": "divides_lmul, {a: b, d: gcd b c, x: k1}",
                    "id": "16.23",
                    "prevs": [
                        "16.22"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd b c) (k1 * b)"
                },
                {
                    "args": "gcd_divides2, {m: b, n: c}",
                    "id": "16.24",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd b c) c"
                },
                {
                    "args": "gcd_comm, {m: b, n: c}",
                    "id": "16.25",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ gcd b c = gcd c b"
                },
                {
                    "args": "coprime_gcd",
                    "id": "16.26",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd a b = 1"
                },
                {
                    "args": "gcd_comm",
                    "id": "16.27",
                    "prevs": [
                        "16.26"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd b a = 1"
                },
                {
                    "args": "gcd_1_right, gcd c 1 = 1",
                    "id": "16.28",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd c 1 = 1"
                },
                {
                    "args": "gcd c (gcd b a) = 1",
                    "id": "16.29",
                    "prevs": [
                        "16.27",
                        "16.28"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd c (gcd b a) = 1"
                },
                {
                    "args": "gcd_assoc, gcd (gcd c b) a = 1",
                    "id": "16.30",
                    "prevs": [
                        "16.29"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd c b) a = 1"
                },
                {
                    "args": "gcd_refl, gcd (gcd (gcd c c) b) a = 1",
                    "id": "16.31",
                    "prevs": [
                        "16.30"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd (gcd c c) b) a = 1"
                },
                {
                    "args": "gcd_assoc, gcd (gcd c (gcd c b)) a = 1",
                    "id": "16.32",
                    "prevs": [
                        "16.31"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd c (gcd c b)) a = 1"
                },
                {
                    "args": "gcd (gcd c (gcd b c)) a = 1",
                    "id": "16.33",
                    "prevs": [
                        "16.25",
                        "16.32"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd c (gcd b c)) a = 1"
                },
                {
                    "args": "gcd_comm, gcd a (gcd c (gcd b c)) = 1",
                    "id": "16.34",
                    "prevs": [
                        "16.33"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a (gcd c (gcd b c)) = 1"
                },
                {
                    "args": "gcd_assoc, gcd (gcd a c) (gcd b c) = 1",
                    "id": "16.35",
                    "prevs": [
                        "16.34"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (gcd a c) (gcd b c) = 1"
                },
                {
                    "args": "coprime_gcd, coprime (gcd a c) (gcd b c)",
                    "id": "16.36",
                    "prevs": [
                        "16.35"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ coprime (gcd a c) (gcd b c)"
                },
                {
                    "args": "divides_mul",
                    "id": "16.37",
                    "prevs": [
                        "2",
                        "16.24",
                        "16.36"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd a c * gcd b c) c"
                },
                {
                    "args": "divides (gcd a c * gcd b c) (gcd a c * k2)",
                    "id": "16.38",
                    "prevs": [
                        "10",
                        "16.37"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd a c * gcd b c) (gcd a c * k2)"
                },
                {
                    "args": "divides_cmul2",
                    "id": "16.39",
                    "prevs": [
                        "16.38",
                        "16.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd b c) k2"
                },
                {
                    "args": "gcd_is_max",
                    "id": "16.40",
                    "prevs": [
                        "16.23",
                        "16.39"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ divides (gcd b c) (gcd (k1 * b) k2)"
                },
                {
                    "args": "divides_antisym",
                    "id": "16.41",
                    "prevs": [
                        "16.21",
                        "16.40"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "disjI2, {A: gcd a c = 0, B: gcd (k1 * b) k2 = gcd b c}",
                    "id": "16.42",
                    "prevs": [
                        "16.41"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(gcd a c = 0), a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "",
                    "id": "16.43",
                    "prevs": [
                        "16.0",
                        "16.42"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ ¬(gcd a c = 0) ⟶ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "classical_cases",
                    "id": "17",
                    "prevs": [
                        "15",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c = 0 ∨ gcd (k1 * b) k2 = gcd b c"
                },
                {
                    "args": "eq_mult_lcancel, gcd a c * gcd (k1 * b) k2 = gcd a c * gcd b c",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd a c * gcd (k1 * b) k2 = gcd a c * gcd b c"
                },
                {
                    "args": "gcd (a * b) c = gcd a c * gcd b c",
                    "id": "19",
                    "prevs": [
                        "14",
                        "18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, a = gcd a c * k1, c = gcd a c * k2 ⊢ gcd (a * b) c = gcd a c * gcd b c"
                },
                {
                    "args": "∃k. c = gcd a c * k, ∃k. a = gcd a c * k",
                    "id": "20",
                    "prevs": [
                        "0",
                        "3",
                        "5",
                        "6",
                        "4",
                        "7",
                        "8",
                        "19"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ gcd (a * b) c = gcd a c * gcd b c"
                }
            ],
            "prop": "coprime a b ⟶ gcd (a * b) c = gcd a c * gcd b c",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "c",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "c",
                    "theorem": "gcd_divides2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "k1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "7",
                    "method_name": "exists_elim",
                    "names": "k2"
                },
                {
                    "goal": "gcd (a * b) c = gcd (gcd a c * k1 * b) (gcd a c * k2) ",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_mult_left"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "case": "gcd a c = 0",
                    "goal_id": "15",
                    "method_name": "cases"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "16",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_is_max"
                },
                {
                    "goal_id": "16.1",
                    "method_name": "apply_backward_step",
                    "param_a": "k1",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "16.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal": "gcd (k1 * b) k2 = gcd k2 (k1 * b)",
                    "goal_id": "16.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "16.2",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_comm"
                },
                {
                    "fact_ids": [
                        "16.2"
                    ],
                    "goal_id": "16.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_assoc"
                },
                {
                    "goal": "divides k1 (k1 * b)",
                    "goal_id": "16.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "16.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "16.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "16.4"
                    ],
                    "goal_id": "16.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_gcd_right"
                },
                {
                    "fact_ids": [
                        "16.5"
                    ],
                    "goal_id": "16.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.6",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "16.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "16.0"
                    ],
                    "goal_id": "16.6",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_coprime"
                },
                {
                    "goal_id": "16.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "16.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "16.16",
                    "method_name": "apply_backward_step",
                    "param_m": "k2",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "16.16",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "16.17",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.17",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "16.17",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "16.22",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_is_max"
                },
                {
                    "goal_id": "16.22",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "16.22",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "16.24",
                    "method_name": "apply_backward_step",
                    "param_c": "gcd a c",
                    "theorem": "divides_cmul2"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "16.24",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.24",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mul"
                },
                {
                    "goal_id": "16.24",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "goal_id": "16.25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "16.25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_assoc"
                },
                {
                    "goal_id": "16.25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "goal": "(gcd b c) = (gcd c b)",
                    "goal_id": "16.25",
                    "method_name": "cut"
                },
                {
                    "goal_id": "16.25",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_comm"
                },
                {
                    "fact_ids": [
                        "16.25"
                    ],
                    "goal_id": "16.26",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.26",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "gcd_assoc"
                },
                {
                    "goal_id": "16.26",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_refl"
                },
                {
                    "goal_id": "16.26",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_assoc"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "16.26",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "16.26"
                    ],
                    "goal_id": "16.27",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "fact_ids": [
                        "16.27"
                    ],
                    "goal_id": "16.28",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16.28",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_1_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "name": "gcd_coprime_rmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "gcd_coprime_lmul, {a: a, b: b, c: c}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b ⊢ gcd (a * b) c = gcd a c * gcd b c"
                },
                {
                    "args": "gcd_comm, gcd c (a * b) = gcd c a * gcd c b",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b ⊢ gcd c (a * b) = gcd c a * gcd c b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ gcd c (a * b) = gcd c a * gcd c b"
                }
            ],
            "prop": "coprime a b ⟶ gcd c (a * b) = gcd c a * gcd c b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_coprime_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "chinese_reminder",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "¬(a = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a = 0) ⊢ ¬(a = 0)"
                },
                {
                    "args": "¬(b = 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(b = 0) ⊢ ¬(b = 0)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ ∀P. (∃d::nat. ∃x::nat. ∃y::nat. d = 1 ∧ P x y d) ⟷ (∃x. ∃y. P x y 1)"
                },
                {
                    "args": "P, nat ⇒ nat ⇒ nat ⇒ bool",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR P"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ (∃d. ∃x. ∃y. d = 1 ∧ P x y d) ⟶ (∃x. ∃y. P x y 1)"
                },
                {
                    "args": "∃d. ∃x. ∃y. d = 1 ∧ P x y d",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃d. ∃x. ∃y. d = 1 ∧ P x y d ⊢ ∃d. ∃x. ∃y. d = 1 ∧ P x y d"
                },
                {
                    "args": "d, nat",
                    "id": "3.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "x, nat",
                    "id": "3.1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, nat",
                    "id": "3.1.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "d = 1 ∧ P x y d",
                    "id": "3.1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ∧ P x y d ⊢ d = 1 ∧ P x y d"
                },
                {
                    "args": "conjD1",
                    "id": "3.1.5",
                    "prevs": [
                        "3.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = 1 ∧ P x y d ⊢ d = 1"
                },
                {
                    "args": "conjD2",
                    "id": "3.1.6",
                    "prevs": [
                        "3.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = 1 ∧ P x y d ⊢ P x y d"
                },
                {
                    "args": "",
                    "id": "3.1.7",
                    "prevs": [
                        "3.1.5",
                        "3.1.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "d = 1 ∧ P x y d ⊢ P x y 1"
                },
                {
                    "args": "exI, {P: λy. P x y 1, a: y}",
                    "id": "3.1.8",
                    "prevs": [
                        "3.1.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), d = 1 ∧ P x y d, ∃d. ∃x. ∃y. d = 1 ∧ P x y d ⊢ ∃a1. P x a1 1"
                },
                {
                    "args": "exI, {P: λx. ∃y. P x y 1, a: x}",
                    "id": "3.1.9",
                    "prevs": [
                        "3.1.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), d = 1 ∧ P x y d, ∃d. ∃x. ∃y. d = 1 ∧ P x y d ⊢ ∃a1. ∃y. P a1 y 1"
                },
                {
                    "args": "∃d. ∃x. ∃y. d = 1 ∧ P x y d",
                    "id": "3.1.10",
                    "prevs": [
                        "3.1.0",
                        "3.1.0",
                        "3.1.1",
                        "3.1.2",
                        "3.1.3",
                        "3.1.4",
                        "3.1.9"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ (∃d. ∃x. ∃y. d = 1 ∧ P x y d) ⟶ (∃x. ∃y. P x y 1)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ (∃x. ∃y. P x y 1) ⟶ (∃d. ∃x. ∃y. d = 1 ∧ P x y d)"
                },
                {
                    "args": "∃x. ∃y. P x y 1",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. ∃y. P x y 1 ⊢ ∃x. ∃y. P x y 1"
                },
                {
                    "args": "x, nat",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, nat",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "P x y 1",
                    "id": "3.2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P x y 1 ⊢ P x y 1"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "3.2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "conjI",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.4",
                        "3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), P x y 1, ∃x. ∃y. P x y 1 ⊢ (1::nat) = 1 ∧ P x y 1"
                },
                {
                    "args": "exI, {P: λy. (1::nat) = 1 ∧ P x y 1, a: y}",
                    "id": "3.2.6",
                    "prevs": [
                        "3.2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), P x y 1, ∃x. ∃y. P x y 1 ⊢ ∃a1. (1::nat) = 1 ∧ P x a1 1"
                },
                {
                    "args": "exI, {P: λx. ∃y. (1::nat) = 1 ∧ P x y 1, a: x}",
                    "id": "3.2.7",
                    "prevs": [
                        "3.2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), P x y 1, ∃x. ∃y. P x y 1 ⊢ ∃a1. ∃y. (1::nat) = 1 ∧ P a1 y 1"
                },
                {
                    "args": "exI, {P: λd. ∃x. ∃y. d = 1 ∧ P x y d, a: (1::nat)}",
                    "id": "3.2.8",
                    "prevs": [
                        "3.2.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), P x y 1, ∃x. ∃y. P x y 1 ⊢ ∃a1. ∃x. ∃y. a1 = 1 ∧ P x y a1"
                },
                {
                    "args": "∃x. ∃y. P x y 1",
                    "id": "3.2.9",
                    "prevs": [
                        "3.2.0",
                        "3.2.0",
                        "3.2.1",
                        "3.2.2",
                        "3.2.3",
                        "3.2.8"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ (∃x. ∃y. P x y 1) ⟶ (∃d. ∃x. ∃y. d = 1 ∧ P x y d)"
                },
                {
                    "args": "iffI",
                    "id": "3.3",
                    "prevs": [
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ (∃d. ∃x. ∃y. d = 1 ∧ P x y d) ⟷ (∃x. ∃y. P x y 1)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ ∀P. (∃d::nat. ∃x::nat. ∃y::nat. d = 1 ∧ P x y d) ⟷ (∃x. ∃y. P x y 1)"
                },
                {
                    "args": "bezout_add_strong, {a: b, b: a}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(b = 0) ⟶ (∃d. ∃x. ∃y. (divides d b ∧ divides d a) ∧ b * x = a * y + d)"
                },
                {
                    "args": "bezout_add_strong, {a: a, b: b}",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(a = 0) ⟶ (∃d. ∃x. ∃y. (divides d a ∧ divides d b) ∧ a * x = b * y + d)"
                },
                {
                    "args": "coprime_def",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "5",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(a = 0) ⊢ ∃d. ∃x. ∃y. (divides d a ∧ divides d b) ∧ a * x = b * y + d"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "4",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(b = 0) ⊢ ∃d. ∃x. ∃y. (divides d b ∧ divides d a) ∧ b * x = a * y + d"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, ¬(a = 0) ⊢ ∃d. ∃x. ∃y. d = 1 ∧ a * x = b * y + d"
                },
                {
                    "args": "conj_comm",
                    "id": "10",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ ∀d. divides d b ∧ divides d a ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "10",
                        "8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, ¬(b = 0) ⊢ ∃d. ∃x. ∃y. d = 1 ∧ b * x = a * y + d"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "3",
                        "9"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ ∃x. ∃y. a * x = b * y + 1"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "3",
                        "11"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0) ⊢ ∃x. ∃y. b * x = a * y + 1"
                },
                {
                    "args": "x1, nat",
                    "id": "14",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "y1, nat",
                    "id": "15",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y1"
                },
                {
                    "args": "a * x1 = b * y1 + 1",
                    "id": "16",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a * x1 = b * y1 + 1 ⊢ a * x1 = b * y1 + 1"
                },
                {
                    "args": "x2, nat",
                    "id": "17",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x2"
                },
                {
                    "args": "y2, nat",
                    "id": "18",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y2"
                },
                {
                    "args": "b * x2 = a * y2 + 1",
                    "id": "19",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b * x2 = a * y2 + 1 ⊢ b * x2 = a * y2 + 1"
                },
                {
                    "args": "v * (a * x1) + u * (a * y2 + 1) = u + (v * x1 + u * y2) * a",
                    "id": "20",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ v * (a * x1) + u * (a * y2 + 1) = u + (v * x1 + u * y2) * a"
                },
                {
                    "args": "v * (a * x1) + u * (b * x2) = u + (v * x1 + u * y2) * a",
                    "id": "21",
                    "prevs": [
                        "19",
                        "20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ v * (a * x1) + u * (b * x2) = u + (v * x1 + u * y2) * a"
                },
                {
                    "args": "mult_assoc, v * a * x1 + u * b * x2 = u + (v * x1 + u * y2) * a",
                    "id": "22",
                    "prevs": [
                        "21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ v * a * x1 + u * b * x2 = u + (v * x1 + u * y2) * a"
                },
                {
                    "args": "v * (b * y1 + 1) + u * (b * x2) = v + (v * y1 + u * x2) * b",
                    "id": "23",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ v * (b * y1 + 1) + u * (b * x2) = v + (v * y1 + u * x2) * b"
                },
                {
                    "args": "v * (a * x1) + u * (b * x2) = v + (v * y1 + u * x2) * b",
                    "id": "24",
                    "prevs": [
                        "16",
                        "23"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ v * (a * x1) + u * (b * x2) = v + (v * y1 + u * x2) * b"
                },
                {
                    "args": "mult_assoc, v * a * x1 + u * b * x2 = v + (v * y1 + u * x2) * b",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ v * a * x1 + u * b * x2 = v + (v * y1 + u * x2) * b"
                },
                {
                    "args": "conjI",
                    "id": "26",
                    "prevs": [
                        "22",
                        "25"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ v * a * x1 + u * b * x2 = u + (v * x1 + u * y2) * a ∧ v * a * x1 + u * b * x2 = v + (v * y1 + u * x2) * b"
                },
                {
                    "args": "exI, {P: λq2. v * a * x1 + u * b * x2 = u + (v * x1 + u * y2) * a ∧ v * a * x1 + u * b * x2 = v + q2 * b, a: v * y1 + u * x2}",
                    "id": "27",
                    "prevs": [
                        "26"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ ∃a1. v * a * x1 + u * b * x2 = u + (v * x1 + u * y2) * a ∧ v * a * x1 + u * b * x2 = v + a1 * b"
                },
                {
                    "args": "exI, {P: λq1. ∃q2. v * a * x1 + u * b * x2 = u + q1 * a ∧ v * a * x1 + u * b * x2 = v + q2 * b, a: v * x1 + u * y2}",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ ∃a1. ∃q2. v * a * x1 + u * b * x2 = u + a1 * a ∧ v * a * x1 + u * b * x2 = v + q2 * b"
                },
                {
                    "args": "exI, {P: λx. ∃q1. ∃q2. x = u + q1 * a ∧ x = v + q2 * b, a: v * a * x1 + u * b * x2}",
                    "id": "29",
                    "prevs": [
                        "28"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0), ¬(b = 0), a * x1 = b * y1 + 1, b * x2 = a * y2 + 1 ⊢ ∃a1. ∃q1. ∃q2. a1 = u + q1 * a ∧ a1 = v + q2 * b"
                },
                {
                    "args": "∃x. ∃y. b * x = a * y + 1, ∃x. ∃y. a * x = b * y + 1",
                    "id": "30",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "12",
                        "14",
                        "15",
                        "16",
                        "13",
                        "17",
                        "18",
                        "19",
                        "29"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ ¬(a = 0) ⟶ ¬(b = 0) ⟶ (∃x. ∃q1. ∃q2. x = u + q1 * a ∧ x = v + q2 * b)"
                }
            ],
            "prop": [
                "coprime a b ",
                "⟶ ¬(a = 0) ⟶ ¬(b = 0) ⟶ (∃x. ∃q1. ∃q2. x = u + q1 * a ∧ x = v + q2 * b)"
            ],
            "steps": [
                {
                    "goal": "!P::nat=>nat=>nat=>bool. (?d. ?x. ?y. (d = 1) & P x y d) <--> (?x. ?y. P x y 1)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "P"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.1",
                    "method_name": "exists_elim",
                    "names": "d,x,y"
                },
                {
                    "fact_ids": [
                        "3.1.4"
                    ],
                    "goal_id": "3.1.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.1.4"
                    ],
                    "goal_id": "3.1.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.1.5",
                        "3.1.6"
                    ],
                    "goal_id": "3.1.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "3.1.8",
                    "method_name": "inst_exists_goal",
                    "s": "x"
                },
                {
                    "goal_id": "3.1.8",
                    "method_name": "inst_exists_goal",
                    "s": "y"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "exists_elim",
                    "names": "x,y"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "inst_exists_goal",
                    "s": "x"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "inst_exists_goal",
                    "s": "y"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "param_a": "b",
                    "param_b": "a",
                    "theorem": "bezout_add_strong"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "param_a": "a",
                    "param_b": "b",
                    "theorem": "bezout_add_strong"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "5",
                        "1"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4",
                        "2"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6",
                        "7"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "fact_ids": [
                        "10",
                        "8"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3",
                        "9"
                    ],
                    "goal_id": "12",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3",
                        "11"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "14",
                    "method_name": "exists_elim",
                    "names": "x1,y1"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "17",
                    "method_name": "exists_elim",
                    "names": "x2,y2"
                },
                {
                    "goal_id": "20",
                    "method_name": "inst_exists_goal",
                    "s": "v * a * x1 + u * b * x2"
                },
                {
                    "goal_id": "20",
                    "method_name": "inst_exists_goal",
                    "s": "v * x1 + u * y2"
                },
                {
                    "goal_id": "20",
                    "method_name": "inst_exists_goal",
                    "s": "v * y1 + u * x2"
                },
                {
                    "goal_id": "20",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "20",
                    "method_name": "nat_norm"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "23",
                    "method_name": "nat_norm"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "u": "nat",
                "v": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime",
            "prop": "prime p ⟷ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
            "ty": "def",
            "type": "nat ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "one_or_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "p = 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "n, nat",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides n p",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides n p ⊢ divides n p"
                },
                {
                    "args": "",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides n p, p = 1 ⊢ divides n 1"
                },
                {
                    "args": "",
                    "id": "0.1.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides n p, p = 1 ⊢ divides n 1"
                },
                {
                    "args": "divides_one",
                    "id": "0.1.1.4",
                    "prevs": [
                        "0.1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides n p, p = 1 ⊢ n = 1"
                },
                {
                    "args": "disjI1, {A: n = 1, B: n = p}",
                    "id": "0.1.1.5",
                    "prevs": [
                        "0.1.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides n p, p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.1.1.6",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.1",
                        "0.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀n. divides n p ⟶ n = 1 ∨ n = p) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "∀n. divides n p ⟶ n = 1 ∨ n = p",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "p = 1",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)}",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)}",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. divides n p ⟶ n = 1 ∨ n = p) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "prime_def, p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                }
            ],
            "prop": "p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "goal_id": "0.1.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "goal_id": "0.1.1.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1.1.3"
                    ],
                    "goal_id": "0.1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "0.1.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p = 1",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "one_or_prime_divides_or_coprime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ∨ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "p = 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "n, nat",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "disjI1, {A: divides 1 n, B: coprime 1 n}",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "",
                    "id": "0.1.1.3",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "∀n. divides p n ∨ coprime p n",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "prime p",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_def",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "n, nat",
                    "id": "0.2.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "",
                    "id": "0.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "divides p n",
                    "id": "0.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "disjI1, {A: divides p n, B: ∀d. divides d p ∧ divides d n ⟷ d = 1}",
                    "id": "0.2.3.1.1",
                    "prevs": [
                        "0.2.3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p n, p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.1.2",
                    "prevs": [
                        "0.2.3.1.0",
                        "0.2.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "0.2.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "0.2.3.2.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟶ d = 1"
                },
                {
                    "args": "divides d p ∧ divides d n",
                    "id": "0.2.3.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d p ∧ divides d n ⊢ divides d p ∧ divides d n"
                },
                {
                    "args": "conjD1",
                    "id": "0.2.3.2.1.1.1",
                    "prevs": [
                        "0.2.3.2.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d n ⊢ divides d p"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.2",
                    "prevs": [
                        "0.2.2",
                        "0.2.3.2.1.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, divides d p ∧ divides d n ⊢ d = 1 ∨ d = p"
                },
                {
                    "args": "d = 1 ⟶ d = 1",
                    "id": "0.2.3.2.1.1.3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 1 ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "d = p",
                    "id": "0.2.3.2.1.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ⊢ d = p"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.3.2.1.1.4.1",
                    "prevs": [
                        "0.2.3.2.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d n ⊢ divides d n"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4.2",
                    "prevs": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "d = p, divides d p ∧ divides d n ⊢ divides p n"
                },
                {
                    "args": "negE_gen, {A: divides p n, C: d = 1}",
                    "id": "0.2.3.2.1.1.4.3",
                    "prevs": [
                        "0.2.3.2.0",
                        "0.2.3.2.1.1.4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "d = p, ¬(divides p n), divides d p ∧ divides d n ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4.4",
                    "prevs": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "0.2.3.2.1.1.5",
                    "prevs": [
                        "0.2.3.2.1.1.2",
                        "0.2.3.2.1.1.3",
                        "0.2.3.2.1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.6",
                    "prevs": [
                        "0.2.3.2.1.1.0",
                        "0.2.3.2.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ d = 1 ⟶ divides d p ∧ divides d n"
                },
                {
                    "args": "d = 1",
                    "id": "0.2.3.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: p}",
                    "id": "0.2.3.2.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 p"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "0.2.3.2.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "conjI",
                    "id": "0.2.3.2.1.2.3",
                    "prevs": [
                        "0.2.3.2.1.2.1",
                        "0.2.3.2.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, d = 1, ¬(divides p n), p = 1 ∨ prime p ⊢ divides 1 p ∧ divides 1 n"
                },
                {
                    "args": "divides d p ∧ divides d n",
                    "id": "0.2.3.2.1.2.4",
                    "prevs": [
                        "0.2.3.2.1.2.0",
                        "0.2.3.2.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, d = 1, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.2.5",
                    "prevs": [
                        "0.2.3.2.1.2.0",
                        "0.2.3.2.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ d = 1 ⟶ divides d p ∧ divides d n"
                },
                {
                    "args": "iffI",
                    "id": "0.2.3.2.1.3",
                    "prevs": [
                        "0.2.3.2.1.1",
                        "0.2.3.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.4",
                    "prevs": [
                        "0.2.3.2.1.0",
                        "0.2.3.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "disjI2, {A: divides p n, B: ∀d. divides d p ∧ divides d n ⟷ d = 1}",
                    "id": "0.2.3.2.2",
                    "prevs": [
                        "0.2.3.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.3",
                    "prevs": [
                        "0.2.3.2.0",
                        "0.2.3.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.2.3.3",
                    "prevs": [
                        "0.2.3.1",
                        "0.2.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "coprime_def, divides p n ∨ coprime p n",
                    "id": "0.2.3.4",
                    "prevs": [
                        "0.2.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.2.3.5",
                    "prevs": [
                        "0.2.3.0",
                        "0.2.3.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.0",
                        "0.2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀n. divides p n ∨ coprime p n) ⟶ p = 1 ∨ prime p"
                },
                {
                    "args": "∀n. divides p n ∨ coprime p n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "n, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides n p",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides n p ⊢ divides n p"
                },
                {
                    "args": "n",
                    "id": "1.1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "divides p n",
                    "id": "1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.1.3.1",
                    "prevs": [
                        "1.1.1",
                        "1.1.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides n p, divides p n, ∀n. divides p n ∨ coprime p n ⊢ n = p"
                },
                {
                    "args": "disjI2, {A: n = 1, B: n = p}",
                    "id": "1.1.3.2",
                    "prevs": [
                        "1.1.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides n p, divides p n, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.3.3",
                    "prevs": [
                        "1.1.3.0",
                        "1.1.3.2"
                    ],
                    "rule": "intros",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ coprime p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "coprime p n",
                    "id": "1.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "coprime_def",
                    "id": "1.1.4.1",
                    "prevs": [
                        "1.1.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "n",
                    "id": "1.1.4.2",
                    "prevs": [
                        "1.1.4.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides n p ∧ divides n n ⟷ n = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.1.4.3",
                    "prevs": [
                        "1.1.4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ n = 1 ⟷ divides n p ∧ divides n n"
                },
                {
                    "args": "divides_self, {n: n}",
                    "id": "1.1.4.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides n n"
                },
                {
                    "args": "conjI",
                    "id": "1.1.4.5",
                    "prevs": [
                        "1.1.1",
                        "1.1.4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides n p ∧ divides n n"
                },
                {
                    "args": "n = 1",
                    "id": "1.1.4.6",
                    "prevs": [
                        "1.1.4.3",
                        "1.1.4.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1"
                },
                {
                    "args": "disjI1, {A: n = 1, B: n = p}",
                    "id": "1.1.4.7",
                    "prevs": [
                        "1.1.4.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.4.8",
                    "prevs": [
                        "1.1.4.0",
                        "1.1.4.7"
                    ],
                    "rule": "intros",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ coprime p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "disjE",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.2",
                        "1.1.3",
                        "1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "one_or_prime, p = 1 ∨ prime p",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. divides p n ∨ coprime p n) ⟶ p = 1 ∨ prime p"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                }
            ],
            "prop": "p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "0.2.3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "case": "divides p n",
                    "goal_id": "0.2.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.2.3.2.1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "0.2.3.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.2.3.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.0"
                    ],
                    "goal_id": "0.2.3.2.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.2.2",
                        "0.2.3.2.1.1.1"
                    ],
                    "goal_id": "0.2.3.2.1.1.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.2"
                    ],
                    "goal_id": "0.2.3.2.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2.3.2.1.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.0"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.1"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.0",
                        "0.2.3.2.1.1.4.2"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.2.3.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.2.0"
                    ],
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2.3.2.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "one_or_prime"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.4.0"
                    ],
                    "goal_id": "1.1.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.1.4.1"
                    ],
                    "goal_id": "1.1.4.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "goal_id": "1.1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "1.1.4.2"
                    ],
                    "goal_id": "1.1.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.1.4.3"
                    ],
                    "goal_id": "1.1.4.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime_coprime_eq_nondivisiable",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "p = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ⊢ prime 1 ⟶ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "prime 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 1 ⊢ prime 1"
                },
                {
                    "args": "prime_def",
                    "id": "0.1.1",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime 1 ⊢ ¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1)"
                },
                {
                    "args": "conjD1",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 1 ⊢ ¬((1::nat) = 1)"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "negE_gen, {A: (1::nat) = 1, C: ∀n. coprime 1 n ⟷ ¬(divides 1 n)}",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.2",
                        "0.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime 1, p = 1 ⊢ ∀n. coprime 1 n ⟷ ¬(divides 1 n)"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ⊢ prime 1 ⟶ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ⊢ (∀n. coprime 1 n ⟷ ¬(divides 1 n)) ⟶ prime 1"
                },
                {
                    "args": "∀n. coprime 1 n ⟷ ¬(divides 1 n)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ ∀n. coprime 1 n ⟷ ¬(divides 1 n)"
                },
                {
                    "args": "(1::nat)",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ coprime 1 1 ⟷ ¬(divides 1 1)"
                },
                {
                    "args": "divides_one",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ coprime 1 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ gcd 1 1 = 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "gcd_1_right",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ (1::nat) = 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "prime 1",
                    "id": "0.2.5",
                    "prevs": [
                        "0.2.4"
                    ],
                    "rule": "z3",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "0.2.6",
                    "prevs": [
                        "0.2.0",
                        "0.2.5"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ⊢ (∀n. coprime 1 n ⟷ ¬(divides 1 n)) ⟶ prime 1"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ⊢ prime 1 ⟷ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1 ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(p = 1) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "one_or_prime_divides_or_coprime, {p: p}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1) ⊢ p = 1 ∨ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "prime p",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.0",
                    "prevs": [
                        "1.1",
                        "1.2.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "n, nat",
                    "id": "1.2.1.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n",
                    "id": "1.2.1.1.1.1",
                    "prevs": [
                        "1.2.1.1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "p = 1 ∨ prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "divides p n",
                    "id": "1.2.1.1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "coprime p n",
                    "id": "1.2.1.1.1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "coprime_def",
                    "id": "1.2.1.1.1.2.1.1",
                    "prevs": [
                        "1.2.1.1.1.2.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "p",
                    "id": "1.2.1.1.1.2.1.2",
                    "prevs": [
                        "1.2.1.1.1.2.1.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides p p ∧ divides p n ⟷ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.1.1.1.2.1.3.0",
                    "prevs": [
                        "1.2.1.1.1.2.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ p = 1 ⟷ divides p p ∧ divides p n"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "1.2.1.1.1.2.1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.1.1.2.1.3.2",
                    "prevs": [
                        "1.2.1.1.1.2.1.3.1",
                        "1.2.1.1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p p ∧ divides p n"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.1.1.2.1.3.3",
                    "prevs": [
                        "1.2.1.1.1.2.1.3.0",
                        "1.2.1.1.1.2.1.3.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.3.4",
                    "prevs": [
                        "1.2.1.1.1.2.0",
                        "1.2.1.1.1.2.1.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "double_neg, ¬¬(divides p n) ⟶ ¬¬(p = 1)",
                    "id": "1.2.1.1.1.2.1.4",
                    "prevs": [
                        "1.2.1.1.1.2.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬¬(divides p n) ⟶ ¬¬(p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.1.1.1.2.1.5",
                    "prevs": [
                        "1.0",
                        "1.2.1.1.1.2.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.6",
                    "prevs": [
                        "1.2.1.1.1.2.1.0",
                        "1.2.1.1.1.2.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "1.2.1.1.1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "negE_gen, {A: divides p n, C: coprime p n}",
                    "id": "1.2.1.1.1.2.2.1",
                    "prevs": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p n, ¬(divides p n) ⊢ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.2.2",
                    "prevs": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.1.1.2.3",
                    "prevs": [
                        "1.2.1.1.1.2.1",
                        "1.2.1.1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.4",
                    "prevs": [
                        "1.2.1.1.1.2.0",
                        "1.2.1.1.1.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "coprime p n",
                    "id": "1.2.1.1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "coprime_def",
                    "id": "1.2.1.1.1.3.1.0",
                    "prevs": [
                        "1.2.1.1.1.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "p",
                    "id": "1.2.1.1.1.3.1.1",
                    "prevs": [
                        "1.2.1.1.1.3.1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides p p ∧ divides p n ⟷ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "divides p n",
                    "id": "1.2.1.1.1.3.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.1.1.1.3.1.2.1",
                    "prevs": [
                        "1.2.1.1.1.3.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ p = 1 ⟷ divides p p ∧ divides p n"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "1.2.1.1.1.3.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.1.1.3.1.2.3",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.2",
                        "1.2.1.1.1.3.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p p ∧ divides p n"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.1.1.3.1.2.4",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.1",
                        "1.2.1.1.1.3.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.2.5",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.0",
                        "1.2.1.1.1.3.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "double_neg, ¬¬(divides p n) ⟶ ¬¬(p = 1)",
                    "id": "1.2.1.1.1.3.1.3",
                    "prevs": [
                        "1.2.1.1.1.3.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬¬(divides p n) ⟶ ¬¬(p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.1.1.1.3.1.4",
                    "prevs": [
                        "1.0",
                        "1.2.1.1.1.3.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.5",
                    "prevs": [
                        "1.2.1.1.1.3.0",
                        "1.2.1.1.1.3.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "1.2.1.1.1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.2.1",
                    "prevs": [
                        "1.2.1.1.1.3.2.0",
                        "1.2.1.1.1.3.0"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.1.1.3.3",
                    "prevs": [
                        "1.2.1.1.1.3.1",
                        "1.2.1.1.1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.4",
                    "prevs": [
                        "1.2.1.1.1.3.0",
                        "1.2.1.1.1.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "disjE",
                    "id": "1.2.1.1.1.4",
                    "prevs": [
                        "1.2.1.1.1.1",
                        "1.2.1.1.1.2",
                        "1.2.1.1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.5",
                    "prevs": [
                        "1.2.1.1.1.0",
                        "1.2.1.1.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.2",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "∀n. coprime p n ⟷ ¬(divides p n)",
                    "id": "1.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.2.1",
                    "prevs": [
                        "1.2.1.2.0",
                        "1.2.1.0"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.1",
                        "1.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.4",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "0",
                        "1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1) ⊢ p = 1 ∨ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1) ⊢ ¬(p = 1 ∨ prime p) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "¬(p = 1 ∨ prime p)",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(p = 1 ∨ prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [
                        "1.1",
                        "1.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(p = 1) ∧ ¬(prime p)"
                },
                {
                    "args": "conjD2",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "prime p",
                    "id": "1.3.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "negE_gen, {A: prime p, C: ∀n. coprime p n ⟷ ¬(divides p n)}",
                    "id": "1.3.4.1",
                    "prevs": [
                        "1.3.3",
                        "1.3.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = 1 ∨ prime p) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.3.4.2",
                    "prevs": [
                        "1.3.4.0",
                        "1.3.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "∀n. coprime p n ⟷ ¬(divides p n)",
                    "id": "1.3.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.3.5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "n, nat",
                    "id": "1.3.5.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n",
                    "id": "1.3.5.1.1",
                    "prevs": [
                        "1.3.5.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "classical, {A: divides p n}",
                    "id": "1.3.5.1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p n ∨ ¬(divides p n)"
                },
                {
                    "args": "divides p n ∨ coprime p n",
                    "id": "1.3.5.1.3",
                    "prevs": [
                        "1.3.5.1.1",
                        "1.3.5.1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.3.5.1.4",
                    "prevs": [
                        "1.3.5.1.0",
                        "1.3.5.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "negE_gen, {A: ∀n. divides p n ∨ coprime p n, C: prime p}",
                    "id": "1.3.5.2",
                    "prevs": [
                        "1.3.1",
                        "1.3.5.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.3.5.3",
                    "prevs": [
                        "1.3.5.0",
                        "1.3.5.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "1.3.6",
                    "prevs": [
                        "1.3.4",
                        "1.3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3.7",
                    "prevs": [
                        "1.3.0",
                        "1.3.6"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1) ⊢ ¬(p = 1 ∨ prime p) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "classical_cases",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1) ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(p = 1) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                }
            ],
            "prop": "prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))",
            "steps": [
                {
                    "case": "p=1",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "0.1.1"
                    ],
                    "goal_id": "0.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.1.2"
                    ],
                    "goal_id": "0.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "forall_elim",
                    "s": "(1::nat)"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "0.2.2"
                    ],
                    "goal_id": "0.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "0.2.3"
                    ],
                    "goal_id": "0.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_1_right"
                },
                {
                    "fact_ids": [
                        "0.2.4"
                    ],
                    "goal_id": "0.2.5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_p": "p",
                    "theorem": "one_or_prime_divides_or_coprime"
                },
                {
                    "case": "p = 1 ∨ prime p",
                    "goal_id": "1.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1.1.0",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.1",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1.1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.2",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.2"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3.0",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.3.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.2.1.1.1.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.1.1.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.0",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.1",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.2.1"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.2.1.1.1.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.3.2"
                    ],
                    "goal_id": "1.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.3.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.3",
                        "1.3.4.0"
                    ],
                    "goal_id": "1.3.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.3.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1"
                    ],
                    "goal_id": "1.3.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.3.5.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.3.5.0"
                    ],
                    "goal_id": "1.3.5.1.1",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.3.5.1.1"
                    ],
                    "goal_id": "1.3.5.1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "classical"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "zero_one_or_prime_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "p = 0 ∨ p = 1 ∨ prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "mult_eq_0, a * b = 0 ⟷ a = 0 ∨ b = 0",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ a * b = 0 ⟷ a = 0 ∨ b = 0"
                },
                {
                    "args": "divides_0, divides 0 (a * b) ⟷ divides 0 a ∨ divides 0 b",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 0 (a * b) ⟷ divides 0 a ∨ divides 0 b"
                },
                {
                    "args": "divides p (a * b) ⟷ divides p a ∨ divides p b",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 0, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 1",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟶ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides 1 (a * b)",
                    "id": "2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 (a * b) ⊢ divides 1 (a * b)"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "2.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "disjI1, {A: divides 1 a, B: divides 1 b}",
                    "id": "2.1.1.2",
                    "prevs": [
                        "2.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, divides 1 (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "",
                    "id": "2.1.1.3",
                    "prevs": [
                        "2.1.1.0",
                        "2.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟶ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "",
                    "id": "2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b ⟶ divides 1 (a * b)"
                },
                {
                    "args": "divides 1 a ∨ divides 1 b",
                    "id": "2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 a ∨ divides 1 b ⊢ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides_1, {x: a * b}",
                    "id": "2.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 (a * b)"
                },
                {
                    "args": "",
                    "id": "2.1.2.2",
                    "prevs": [
                        "2.1.2.0",
                        "2.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b ⟶ divides 1 (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.1",
                        "2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟷ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides p (a * b) ⟷ divides p a ∨ divides p b",
                    "id": "2.1.4",
                    "prevs": [
                        "2.1.0",
                        "2.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.1.5",
                    "prevs": [
                        "2.1.0",
                        "2.1.4"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "prime p",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "divides p (a * b)",
                    "id": "2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a * b) ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "divides p a",
                    "id": "2.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "disjI1, {A: divides p a, B: divides p b}",
                    "id": "2.2.1.1.1",
                    "prevs": [
                        "2.2.1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p a, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.1.2",
                    "prevs": [
                        "2.2.1.1.0",
                        "2.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ ¬(divides p a) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "¬(divides p a)",
                    "id": "2.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a) ⊢ ¬(divides p a)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "2.2.1.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "coprime p a",
                    "id": "2.2.1.2.2",
                    "prevs": [
                        "2.2.1.2.1",
                        "2.2.1.2.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ coprime p a"
                },
                {
                    "args": "coprime_divprod",
                    "id": "2.2.1.2.3",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b"
                },
                {
                    "args": "disjI2, {A: divides p a, B: divides p b}",
                    "id": "2.2.1.2.4",
                    "prevs": [
                        "2.2.1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.2.5",
                    "prevs": [
                        "2.2.1.2.0",
                        "2.2.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ ¬(divides p a) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "classical_cases",
                    "id": "2.2.1.3",
                    "prevs": [
                        "2.2.1.1",
                        "2.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.4",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p a ∨ divides p b",
                    "id": "2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ∨ divides p b ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p a",
                    "id": "2.2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "divides_rmul, {a: a, d: p, x: b}",
                    "id": "2.2.2.1.1",
                    "prevs": [
                        "2.2.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p a, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.1.2",
                    "prevs": [
                        "2.2.2.1.0",
                        "2.2.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p b",
                    "id": "2.2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p b ⊢ divides p b"
                },
                {
                    "args": "divides_lmul, {a: b, d: p, x: a}",
                    "id": "2.2.2.2.1",
                    "prevs": [
                        "2.2.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p b, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.2.2",
                    "prevs": [
                        "2.2.2.2.0",
                        "2.2.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "disjE",
                    "id": "2.2.2.3",
                    "prevs": [
                        "2.2.2.0",
                        "2.2.2.1",
                        "2.2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.4",
                    "prevs": [
                        "2.2.2.0",
                        "2.2.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.1",
                        "2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.0",
                        "2.2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "disjE",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "disjE",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                }
            ],
            "prop": "p = 0 ∨ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.0"
                    ],
                    "goal_id": "2.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "introduction"
                },
                {
                    "case": "divides p a",
                    "goal_id": "2.2.1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "2.2.1.0"
                    ],
                    "goal_id": "2.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_divprod"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "2.2.1.2.1"
                    ],
                    "goal_id": "2.2.1.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.2.0"
                    ],
                    "goal_id": "2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "2.2.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "zero_one_or_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                },
                {
                    "args": "p = 0 ∨ p = 1 ∨ prime p",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "a, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, nat",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "divides p (a * b)",
                    "id": "0.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a * b) ⊢ divides p (a * b)"
                },
                {
                    "args": "zero_one_or_prime_divprod, {a: a, b: b}",
                    "id": "0.1.3",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3",
                        "0.1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides p (a * b), p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.1",
                        "0.1.2",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "p = 0",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "disjI1, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ¬(p = 0) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 1 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: prime p}",
                    "id": "1.2.1.1",
                    "prevs": [
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 1 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ¬(p = 1) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "1.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "x, nat",
                    "id": "1.2.2.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "divides x p",
                    "id": "1.2.2.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides x p ⊢ divides x p"
                },
                {
                    "args": "divides_def",
                    "id": "1.2.2.1.2",
                    "prevs": [
                        "1.2.2.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p ⊢ ∃k. p = x * k"
                },
                {
                    "args": "k, nat",
                    "id": "1.2.2.1.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "p = x * k",
                    "id": "1.2.2.1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = x * k ⊢ p = x * k"
                },
                {
                    "args": "x",
                    "id": "1.2.2.1.5",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ∀b. divides p (x * b) ⟶ divides p x ∨ divides p b"
                },
                {
                    "args": "k",
                    "id": "1.2.2.1.6",
                    "prevs": [
                        "1.2.2.1.5"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides p (x * k) ⟶ divides p x ∨ divides p k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.7",
                    "prevs": [
                        "1.2.2.1.4",
                        "1.2.2.1.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) (x * k) ⟶ divides (x * k) x ∨ divides (x * k) k"
                },
                {
                    "args": "divides_self, {n: x * k}",
                    "id": "1.2.2.1.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (x * k) (x * k)"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.9",
                    "prevs": [
                        "1.2.2.1.7",
                        "1.2.2.1.8"
                    ],
                    "rule": "apply_fact",
                    "th": "p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) x ∨ divides (x * k) k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) x ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "divides (x * k) x",
                    "id": "1.2.2.1.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (x * k) x ⊢ divides (x * k) x"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.2.1.10.1",
                    "prevs": [
                        "1.2.2.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = x * k ⊢ x * k = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10.2",
                    "prevs": [
                        "1.2.2.1.10.1",
                        "1.2.2.1.10.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = x * k, divides (x * k) x ⊢ divides p x"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.2.2.1.10.3",
                    "prevs": [
                        "1.2.2.1.1",
                        "1.2.2.1.10.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) x, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = p"
                },
                {
                    "args": "disjI2, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.10.4",
                    "prevs": [
                        "1.2.2.1.10.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) x, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10.5",
                    "prevs": [
                        "1.2.2.1.10.0",
                        "1.2.2.1.10.4"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) x ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) k ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "divides (x * k) k",
                    "id": "1.2.2.1.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (x * k) k ⊢ divides (x * k) k"
                },
                {
                    "args": "divides_self, {n: k}",
                    "id": "1.2.2.1.11.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides k k"
                },
                {
                    "args": "divides_lmul, {a: k, d: k, x: x}",
                    "id": "1.2.2.1.11.2",
                    "prevs": [
                        "1.2.2.1.11.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides k (x * k)"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.2.2.1.11.3",
                    "prevs": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x * k = k"
                },
                {
                    "args": "mult_1_left, k = 1 * k",
                    "id": "1.2.2.1.11.4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ k = 1 * k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.5",
                    "prevs": [
                        "1.2.2.1.11.4",
                        "1.2.2.1.11.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x * (1 * k) = 1 * k"
                },
                {
                    "args": "mult_assoc",
                    "id": "1.2.2.1.11.6",
                    "prevs": [
                        "1.2.2.1.11.5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x * 1 * k = 1 * k"
                },
                {
                    "args": "mult_1_right",
                    "id": "1.2.2.1.11.7",
                    "prevs": [
                        "1.2.2.1.11.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x * k = 1 * k"
                },
                {
                    "args": "eq_mult_rcancel",
                    "id": "1.2.2.1.11.8",
                    "prevs": [
                        "1.2.2.1.11.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ k = 0 ∨ x = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ k = 0 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "k = 0",
                    "id": "1.2.2.1.11.9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9.1",
                    "prevs": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "k = 0, p = x * k ⊢ p = x * 0"
                },
                {
                    "args": "mult_0_right",
                    "id": "1.2.2.1.11.9.2",
                    "prevs": [
                        "1.2.2.1.11.9.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "k = 0, p = x * k ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: x = p}",
                    "id": "1.2.2.1.11.9.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2.1.11.9.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(p = 0), p = x * k ⊢ x = p"
                },
                {
                    "args": "disjI2, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.11.9.4",
                    "prevs": [
                        "1.2.2.1.11.9.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, k = 0, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9.5",
                    "prevs": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.11.9.4"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ k = 0 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "x = 1",
                    "id": "1.2.2.1.11.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 1 ⊢ x = 1"
                },
                {
                    "args": "disjI1, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.11.10.1",
                    "prevs": [
                        "1.2.2.1.11.10.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, x = 1, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.10.2",
                    "prevs": [
                        "1.2.2.1.11.10.0",
                        "1.2.2.1.11.10.1"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.1.11.11",
                    "prevs": [
                        "1.2.2.1.11.8",
                        "1.2.2.1.11.9",
                        "1.2.2.1.11.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.12",
                    "prevs": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.11"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ divides (x * k) k ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.1.12",
                    "prevs": [
                        "1.2.2.1.9",
                        "1.2.2.1.10",
                        "1.2.2.1.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "∃k. p = x * k",
                    "id": "1.2.2.1.13",
                    "prevs": [
                        "1.2.2.1.0",
                        "1.2.2.1.1",
                        "1.2.2.1.2",
                        "1.2.2.1.3",
                        "1.2.2.1.4",
                        "1.2.2.1.12"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "prime_def, prime p",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ prime p"
                },
                {
                    "args": "disjI2, {A: p = 1, B: prime p}",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.2.2.5",
                    "prevs": [
                        "1.2.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ¬(p = 1) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "classical_cases",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ ¬(p = 0) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟷ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟷ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                }
            ],
            "prop": [
                "p = 0 ∨ p = 1 ∨ prime p ⟷ ",
                "(∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "a,b"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1.3",
                    "method_name": "apply_forward_step",
                    "param_a": "a",
                    "param_b": "b",
                    "theorem": "zero_one_or_prime_divprod"
                },
                {
                    "fact_ids": [
                        "0.1.3",
                        "0.1.2"
                    ],
                    "goal_id": "0.1.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p = 0",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "case": "p=1",
                    "goal_id": "1.2.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.1"
                    ],
                    "goal_id": "1.2.2.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.2"
                    ],
                    "goal_id": "1.2.2.1.3",
                    "method_name": "exists_elim",
                    "names": "k"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.2.1.5",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.5"
                    ],
                    "goal_id": "1.2.2.1.6",
                    "method_name": "forall_elim",
                    "s": "k"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.4",
                        "1.2.2.1.6"
                    ],
                    "goal_id": "1.2.2.1.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.7"
                    ],
                    "goal": "divides (x * k) (x * k)",
                    "goal_id": "1.2.2.1.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.7",
                        "1.2.2.1.8"
                    ],
                    "goal_id": "1.2.2.1.9",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.9"
                    ],
                    "goal_id": "1.2.2.1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.1.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.4"
                    ],
                    "goal_id": "1.2.2.1.10.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.10.1",
                        "1.2.2.1.10.0"
                    ],
                    "goal_id": "1.2.2.1.10.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.2.2.1.10.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1.10.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1.2.2.1.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.0"
                    ],
                    "goal": "divides k (x * k)",
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.2"
                    ],
                    "goal_id": "1.2.2.1.11.3",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal": "k = 1 * k",
                    "goal_id": "1.2.2.1.11.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.11.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.4",
                        "1.2.2.1.11.3"
                    ],
                    "goal_id": "1.2.2.1.11.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.5"
                    ],
                    "goal_id": "1.2.2.1.11.6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.6"
                    ],
                    "goal_id": "1.2.2.1.11.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.7"
                    ],
                    "goal_id": "1.2.2.1.11.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_rcancel"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.8"
                    ],
                    "goal_id": "1.2.2.1.11.9",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.1.11.9",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1.11.9.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.4"
                    ],
                    "goal_id": "1.2.2.1.11.9.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.9.1"
                    ],
                    "goal_id": "1.2.2.1.11.9.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "fact_ids": [
                        "1.2.0",
                        "1.2.2.1.11.9.2"
                    ],
                    "goal_id": "1.2.2.1.11.9.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2.1.11.10",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1.11.10.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides_zero, {n: (2::nat)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 2 0"
                },
                {
                    "args": "¬((2::nat) = 1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 1)"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "conjI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬((2::nat) = 1) ∧ ¬((2::nat) = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬((2::nat) = 1 ∨ (2::nat) = 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬((2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "conjI",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides 2 0 ∧ ¬((2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "not_imp, ¬(divides 2 0 ⟶ (2::nat) = 1 ∨ (2::nat) = 0)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(divides 2 0 ⟶ (2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "exI, {P: λx. ¬(divides x 0 ⟶ x = 1 ∨ x = 0), a: (2::nat)}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ¬(divides a1 0 ⟶ a1 = 1 ∨ a1 = 0)"
                },
                {
                    "args": "not_all, ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)"
                },
                {
                    "args": "disjI2, {A: ¬¬((0::nat) = 1), B: ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)}",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬¬((0::nat) = 1) ∨ ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬((0::nat) = 1) ∧ (∀x. divides x 0 ⟶ x = 1 ∨ x = 0))",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(¬((0::nat) = 1) ∧ (∀x. divides x 0 ⟶ x = 1 ∨ x = 0))"
                },
                {
                    "args": "prime_def, ¬(prime 0)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(prime 0)"
                }
            ],
            "prop": "¬(prime 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "0",
                    "method_name": "inst_exists_goal",
                    "s": "(2::nat)"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "2",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "double_neg, ¬¬((1::nat) = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬¬((1::nat) = 1)"
                },
                {
                    "args": "disjI1, {A: ¬¬((1::nat) = 1), B: ¬(∀x. divides x 1 ⟶ x = 1 ∨ x = 1)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬¬((1::nat) = 1) ∨ ¬(∀x. divides x 1 ⟶ x = 1 ∨ x = 1)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1))"
                },
                {
                    "args": "prime_def, ¬(prime 1)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(prime 1)"
                }
            ],
            "prop": "¬(prime 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬((2::nat) = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. divides x 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "x, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "divides x 2",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides x 2 ⊢ divides x 2"
                },
                {
                    "args": "divides_le",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2 ⊢ x ≤ 2 ∨ (2::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2 ⊢ x ≤ 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "x ≤ 2",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 2 ⊢ x ≤ 2"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 0 ⟶ ¬(divides x 2)"
                },
                {
                    "args": "x = 0",
                    "id": "1.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "1.3.1.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "divides_0, ¬(divides 0 2)",
                    "id": "1.3.1.2",
                    "prevs": [
                        "1.3.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 0, divides x 2, x ≤ 2 ⊢ ¬(divides 0 2)"
                },
                {
                    "args": "¬(divides x 2)",
                    "id": "1.3.1.3",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0, divides x 2, x ≤ 2 ⊢ ¬(divides x 2)"
                },
                {
                    "args": "",
                    "id": "1.3.1.4",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.3"
                    ],
                    "rule": "intros",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 0 ⟶ ¬(divides x 2)"
                },
                {
                    "args": "double_neg, ¬¬(x = 0) ⟶ ¬(divides x 2)",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides x 2, x ≤ 2 ⊢ ¬¬(x = 0) ⟶ ¬(divides x 2)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.3.3",
                    "prevs": [
                        "1.1",
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2, x ≤ 2 ⊢ ¬(x = 0)"
                },
                {
                    "args": "x = 1 ∨ x = 2",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "z3",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [
                        "1.3.0",
                        "1.3.4"
                    ],
                    "rule": "intros",
                    "th": "divides x 2 ⊢ x ≤ 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2 ⊢ (2::nat) = 0 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "(2::nat) = 0",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(2::nat) = 0 ⊢ (2::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2, (2::nat) = 0 ⊢ ¬(x = 1 ∨ x = 2) ⟶ ¬((2::nat) = 0)"
                },
                {
                    "args": "¬(x = 1 ∨ x = 2)",
                    "id": "1.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 1 ∨ x = 2) ⊢ ¬(x = 1 ∨ x = 2)"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "1.4.1.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "1.4.1.2",
                    "prevs": [
                        "1.4.1.0",
                        "1.4.1.1"
                    ],
                    "rule": "intros",
                    "th": "divides x 2, (2::nat) = 0 ⊢ ¬(x = 1 ∨ x = 2) ⟶ ¬((2::nat) = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.0",
                        "1.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2, (2::nat) = 0 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.0",
                        "1.4.2"
                    ],
                    "rule": "intros",
                    "th": "divides x 2 ⊢ (2::nat) = 0 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "disjE",
                    "id": "1.5",
                    "prevs": [
                        "1.2",
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. divides x 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "conjI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬((2::nat) = 1) ∧ (∀x. divides x 2 ⟶ x = 1 ∨ x = 2)"
                },
                {
                    "args": "prime_def, prime 2",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime 2"
                }
            ],
            "prop": "prime 2",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "goal": "~(x = 0)",
                    "goal_id": "1.3.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.0"
                    ],
                    "goal_id": "1.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "1.3.1.1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "fact_ids": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "goal_id": "1.3.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.4.1.1",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_ge_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p < 2 ⟶ ¬(prime p)"
                },
                {
                    "args": "p < 2",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p < 2 ⊢ p < 2"
                },
                {
                    "args": "p = 0 ∨ p = 1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "p < 2 ⊢ p = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p < 2 ⊢ p = 0 ⟶ ¬(prime p)"
                },
                {
                    "args": "p = 0",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "prime_0",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = 0, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p < 2 ⊢ p = 0 ⟶ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p < 2 ⊢ p = 1 ⟶ ¬(prime p)"
                },
                {
                    "args": "p = 1",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0",
                        "1.3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = 1, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p < 2 ⊢ p = 1 ⟶ ¬(prime p)"
                },
                {
                    "args": "disjE",
                    "id": "1.4",
                    "prevs": [
                        "1.1",
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p < 2 ⟶ ¬(prime p)"
                },
                {
                    "args": "not_le, ¬(2 ≤ p) ⟶ ¬(prime p)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ ¬(2 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ 2 ≤ p"
                }
            ],
            "prop": "prime p ⟶ 2 ≤ p",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal": "p = 0 | p = 1",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_factor",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 1) ⊢ ¬(n = 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1) ⊢ ∀n. (∀m. m < n ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)) ⟶ ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                },
                {
                    "args": "n1, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)"
                },
                {
                    "args": "¬(n1 = 1)",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n1 = 1) ⊢ ¬(n1 = 1)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "prime n1",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime n1 ⊢ prime n1"
                },
                {
                    "args": "divides_self, {n: n1}",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides n1 n1"
                },
                {
                    "args": "conjI",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0",
                        "1.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime n1, ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ∧ divides n1 n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: n1}",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime n1, ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(prime n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "¬(prime n1)",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime n1) ⊢ ¬(prime n1)"
                },
                {
                    "args": "prime_def",
                    "id": "1.4.1",
                    "prevs": [
                        "1.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ ¬(¬(n1 = 1) ∧ (∀x. divides x n1 ⟶ x = 1 ∨ x = n1))"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ ¬¬(n1 = 1) ∨ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "double_neg",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ n1 = 1 ∨ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "",
                    "id": "1.4.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "n1 = 1",
                    "id": "1.4.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 = 1 ⊢ n1 = 1"
                },
                {
                    "args": "negE_gen, {A: n1 = 1, C: ∃p. prime p ∧ divides p n1}",
                    "id": "1.4.4.1",
                    "prevs": [
                        "1.2",
                        "1.4.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n1 = 1, ¬(n1 = 1) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.4.4.2",
                    "prevs": [
                        "1.4.4.0",
                        "1.4.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)",
                    "id": "1.4.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "not_all",
                    "id": "1.4.5.1",
                    "prevs": [
                        "1.4.5.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⊢ ∃x. ¬(divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "m, nat",
                    "id": "1.4.5.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "¬(divides m n1 ⟶ m = 1 ∨ m = n1)",
                    "id": "1.4.5.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(divides m n1 ⟶ m = 1 ∨ m = n1)"
                },
                {
                    "args": "not_imp",
                    "id": "1.4.5.4",
                    "prevs": [
                        "1.4.5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1 ∧ ¬(m = 1 ∨ m = n1)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.4.5.5",
                    "prevs": [
                        "1.4.5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1 ∧ ¬(m = 1) ∧ ¬(m = n1)"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.6",
                    "prevs": [
                        "1.4.5.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.7",
                    "prevs": [
                        "1.4.5.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = 1) ∧ ¬(m = n1)"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.8",
                    "prevs": [
                        "1.4.5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = 1)"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.9",
                    "prevs": [
                        "1.4.5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = n1)"
                },
                {
                    "args": "divides_le",
                    "id": "1.4.5.10",
                    "prevs": [
                        "1.4.5.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ m ≤ n1 ∨ n1 = 0"
                },
                {
                    "args": "",
                    "id": "1.4.5.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ m ≤ n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "m ≤ n1",
                    "id": "1.4.5.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n1 ⊢ m ≤ n1"
                },
                {
                    "args": "m < n1",
                    "id": "1.4.5.11.1",
                    "prevs": [
                        "1.4.5.11.0",
                        "1.4.5.9"
                    ],
                    "rule": "z3",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ m < n1"
                },
                {
                    "args": "",
                    "id": "1.4.5.11.2",
                    "prevs": [
                        "1.1",
                        "1.4.5.11.1"
                    ],
                    "rule": "apply_fact",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)"
                },
                {
                    "args": "",
                    "id": "1.4.5.11.3",
                    "prevs": [
                        "1.4.5.11.2",
                        "1.4.5.8"
                    ],
                    "rule": "apply_fact",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p m"
                },
                {
                    "args": "p, nat",
                    "id": "1.4.5.11.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p m",
                    "id": "1.4.5.11.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p m ⊢ prime p ∧ divides p m"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.11.6",
                    "prevs": [
                        "1.4.5.11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.11.7",
                    "prevs": [
                        "1.4.5.11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m ⊢ divides p m"
                },
                {
                    "args": "divides_trans",
                    "id": "1.4.5.11.8",
                    "prevs": [
                        "1.4.5.11.7",
                        "1.4.5.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides p n1"
                },
                {
                    "args": "conjI",
                    "id": "1.4.5.11.9",
                    "prevs": [
                        "1.4.5.11.6",
                        "1.4.5.11.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), m ≤ n1, ¬(n = 1), ¬(n1 = 1), prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime p ∧ divides p n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: p}",
                    "id": "1.4.5.11.10",
                    "prevs": [
                        "1.4.5.11.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(prime n1), m ≤ n1, ¬(n = 1), ¬(n1 = 1), prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "∃p. prime p ∧ divides p m",
                    "id": "1.4.5.11.11",
                    "prevs": [
                        "1.4.5.11.0",
                        "1.4.5.11.3",
                        "1.4.5.11.4",
                        "1.4.5.11.5",
                        "1.4.5.11.10"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ m ≤ n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4.5.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 0 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "n1 = 0",
                    "id": "1.4.5.12.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 = 0 ⊢ n1 = 0"
                },
                {
                    "args": "prime_2",
                    "id": "1.4.5.12.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "divides_zero, {n: (2::nat)}",
                    "id": "1.4.5.12.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 2 0"
                },
                {
                    "args": "divides 2 n1",
                    "id": "1.4.5.12.3",
                    "prevs": [
                        "1.4.5.12.0",
                        "1.4.5.12.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ divides 2 n1"
                },
                {
                    "args": "conjI",
                    "id": "1.4.5.12.4",
                    "prevs": [
                        "1.4.5.12.1",
                        "1.4.5.12.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime 2 ∧ divides 2 n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: (2::nat)}",
                    "id": "1.4.5.12.5",
                    "prevs": [
                        "1.4.5.12.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "",
                    "id": "1.4.5.12.6",
                    "prevs": [
                        "1.4.5.12.0",
                        "1.4.5.12.5"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 0 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "disjE",
                    "id": "1.4.5.13",
                    "prevs": [
                        "1.4.5.10",
                        "1.4.5.11",
                        "1.4.5.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "∃x. ¬(divides x n1 ⟶ x = 1 ∨ x = n1)",
                    "id": "1.4.5.14",
                    "prevs": [
                        "1.4.5.0",
                        "1.4.5.1",
                        "1.4.5.2",
                        "1.4.5.3",
                        "1.4.5.13"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "disjE",
                    "id": "1.4.6",
                    "prevs": [
                        "1.4.3",
                        "1.4.4",
                        "1.4.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.4.7",
                    "prevs": [
                        "1.4.0",
                        "1.4.6"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(prime n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.5",
                    "prevs": [
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1) ⊢ ∀n1. (∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)) ⟶ ¬(n1 = 1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "nat_WF",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1) ⊢ ∀n. ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                },
                {
                    "args": "n",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(n = 1) ⊢ ∃p. prime p ∧ divides p n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                }
            ],
            "prop": "¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)",
            "steps": [
                {
                    "goal": "!n. ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_WF"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n1"
                },
                {
                    "case": "prime (n1)",
                    "goal_id": "1.3",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "inst_exists_goal",
                    "s": "n1"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1.4.1"
                    ],
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "1.4.2"
                    ],
                    "goal_id": "1.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.4.3"
                    ],
                    "goal_id": "1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2",
                        "1.4.4.0"
                    ],
                    "goal_id": "1.4.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.4.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.5.0"
                    ],
                    "goal_id": "1.4.5.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "1.4.5.1"
                    ],
                    "goal_id": "1.4.5.2",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "1.4.5.3"
                    ],
                    "goal_id": "1.4.5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1.4.5.4"
                    ],
                    "goal_id": "1.4.5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.4.5.5"
                    ],
                    "goal_id": "1.4.5.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.5"
                    ],
                    "goal_id": "1.4.5.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.4.5.7"
                    ],
                    "goal_id": "1.4.5.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.7"
                    ],
                    "goal_id": "1.4.5.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.4.5.6"
                    ],
                    "goal_id": "1.4.5.10",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.4.5.10"
                    ],
                    "goal_id": "1.4.5.11",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4.5.11",
                    "method_name": "introduction"
                },
                {
                    "goal": "m < n1",
                    "goal_id": "1.4.5.11.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.0",
                        "1.4.5.9"
                    ],
                    "goal_id": "1.4.5.11.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.4.5.11.1"
                    ],
                    "goal_id": "1.4.5.11.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.2",
                        "1.4.5.8"
                    ],
                    "goal_id": "1.4.5.11.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.3"
                    ],
                    "goal_id": "1.4.5.11.4",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "1.4.5.11.6",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.5"
                    ],
                    "goal_id": "1.4.5.11.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.5"
                    ],
                    "goal_id": "1.4.5.11.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.4.5.11.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.7",
                        "1.4.5.6"
                    ],
                    "goal_id": "1.4.5.11.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "1.4.5.12",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "inst_exists_goal",
                    "s": "(2::nat)"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_2"
                },
                {
                    "fact_ids": [
                        "1.4.5.12.0"
                    ],
                    "goal_id": "1.4.5.12.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.5.12.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_factor_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "n = p * m",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p * m ⊢ n = p * m"
                },
                {
                    "args": "prime_ge_2",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "less_eq_exist",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∃p1. p = 2 + p1"
                },
                {
                    "args": "q, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR q"
                },
                {
                    "args": "p = 2 + q",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 2 + q ⊢ p = 2 + q"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = p * m, p = 2 + q ⊢ n = (2 + q) * m"
                },
                {
                    "args": "m + q * m = (1 + q) * m",
                    "id": "8",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ m + q * m = (1 + q) * m"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ Suc q * m = 0 ⟶ false"
                },
                {
                    "args": "Suc q * m = 0",
                    "id": "9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc q * m = 0 ⊢ Suc q * m = 0"
                },
                {
                    "args": "mult_nonzero",
                    "id": "9.1",
                    "prevs": [
                        "9.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "Suc q * m = 0 ⊢ Suc q = 0 ∨ m = 0"
                },
                {
                    "args": "",
                    "id": "9.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ Suc q = 0 ⟶ false"
                },
                {
                    "args": "Suc q = 0",
                    "id": "9.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc q = 0 ⊢ Suc q = 0"
                },
                {
                    "args": "",
                    "id": "9.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬(Suc q = 0)"
                },
                {
                    "args": "¬false",
                    "id": "9.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: q}",
                    "id": "9.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc q)"
                },
                {
                    "args": "ineq_sym",
                    "id": "9.2.1.2",
                    "prevs": [
                        "9.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬false, prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬(Suc q = 0)"
                },
                {
                    "args": "",
                    "id": "9.2.1.3",
                    "prevs": [
                        "9.2.1.0",
                        "9.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬(Suc q = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "9.2.2",
                    "prevs": [
                        "9.2.0",
                        "9.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.2.3",
                    "prevs": [
                        "9.2.0",
                        "9.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ Suc q = 0 ⟶ false"
                },
                {
                    "args": "",
                    "id": "9.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ m = 0 ⟶ false"
                },
                {
                    "args": "m = 0",
                    "id": "9.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ⊢ m = 0"
                },
                {
                    "args": "",
                    "id": "9.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬¬(n = 0)"
                },
                {
                    "args": "¬false",
                    "id": "9.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "",
                    "id": "9.3.1.1",
                    "prevs": [
                        "9.3.0",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "m = 0, n = p * m ⊢ n = p * 0"
                },
                {
                    "args": "mult_0_right",
                    "id": "9.3.1.2",
                    "prevs": [
                        "9.3.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m = 0, n = p * m ⊢ n = 0"
                },
                {
                    "args": "double_neg, ¬¬(n = 0)",
                    "id": "9.3.1.3",
                    "prevs": [
                        "9.3.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬false, prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "9.3.1.4",
                    "prevs": [
                        "9.3.1.0",
                        "9.3.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬¬(n = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "9.3.2",
                    "prevs": [
                        "1",
                        "9.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.3.3",
                    "prevs": [
                        "9.3.0",
                        "9.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ m = 0 ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "9.4",
                    "prevs": [
                        "9.1",
                        "9.2",
                        "9.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.5",
                    "prevs": [
                        "9.0",
                        "9.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ Suc q * m = 0 ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬(Suc q * m = 0)"
                },
                {
                    "args": "add_1_left, ¬((1 + q) * m = 0)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬((1 + q) * m = 0)"
                },
                {
                    "args": "¬(m + q * m = 0)",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬(m + q * m = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ 0 < m + q * m"
                },
                {
                    "args": "lt_add, m < m + (m + q * m)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < m + (m + q * m)"
                },
                {
                    "args": "add_assoc, m < m + m + q * m",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < m + m + q * m"
                },
                {
                    "args": "mult_2, m < 2 * m + q * m",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < 2 * m + q * m"
                },
                {
                    "args": "distrib_r, m < (2 + q) * m",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < (2 + q) * m"
                },
                {
                    "args": "m < n",
                    "id": "18",
                    "prevs": [
                        "7",
                        "17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < n"
                },
                {
                    "args": "∃p1. p = 2 + p1",
                    "id": "19",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4",
                        "5",
                        "6",
                        "18"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(n = 0) ⟶ n = p * m ⟶ m < n"
                }
            ],
            "prop": "prime p ⟶ ¬(n = 0) ⟶ n = p * m ⟶ m < n",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_eq_exist"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "q"
                },
                {
                    "fact_ids": [
                        "6",
                        "2"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "distrib_r"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_2"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_assoc"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "lt_add"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_1"
                },
                {
                    "goal": "m + q * m = (1+ q) * m",
                    "goal_id": "8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_left"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "9",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "9.0"
                    ],
                    "goal_id": "9.1",
                    "method_name": "apply_forward_step",
                    "theorem": "mult_nonzero"
                },
                {
                    "fact_ids": [
                        "9.1"
                    ],
                    "goal_id": "9.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "9.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "9.2.0"
                    ],
                    "goal_id": "9.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "9.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "9.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "9.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "9.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "9.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "9.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "9.3.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "9.3.0",
                        "2"
                    ],
                    "goal_id": "9.3.1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9.3.1.1"
                    ],
                    "goal_id": "9.3.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_factor_induct",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "P 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 1 ⊢ P 1"
                },
                {
                    "args": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. (∀m. m < n ⟶ P m) ⟶ P n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "∀m. m < n ⟶ P m",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. m < n ⟶ P m ⊢ ∀m. m < n ⟶ P m"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 0 ⟶ P n"
                },
                {
                    "args": "n = 0",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "P n",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0",
                        "0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, n = 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 0 ⟶ P n"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 0) ⟶ P n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 1 ⟶ P n"
                },
                {
                    "args": "n = 1",
                    "id": "3.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 1 ⊢ n = 1"
                },
                {
                    "args": "P n",
                    "id": "3.3.1.1",
                    "prevs": [
                        "3.3.1.0",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, n = 1, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.3.1.2",
                    "prevs": [
                        "3.3.1.0",
                        "3.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 1 ⟶ P n"
                },
                {
                    "args": "",
                    "id": "3.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 1) ⟶ P n"
                },
                {
                    "args": "¬(n = 1)",
                    "id": "3.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 1) ⊢ ¬(n = 1)"
                },
                {
                    "args": "prime_factor",
                    "id": "3.3.2.1",
                    "prevs": [
                        "3.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1) ⊢ ∃p. prime p ∧ divides p n"
                },
                {
                    "args": "p, nat",
                    "id": "3.3.2.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p n",
                    "id": "3.3.2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p n ⊢ prime p ∧ divides p n"
                },
                {
                    "args": "p",
                    "id": "3.3.2.4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.2.5",
                    "prevs": [
                        "3.3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "3.3.2.6",
                    "prevs": [
                        "3.3.2.4",
                        "3.3.2.5"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ divides p n, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.2.7",
                    "prevs": [
                        "3.3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ divides p n"
                },
                {
                    "args": "divides_def",
                    "id": "3.3.2.8",
                    "prevs": [
                        "3.3.2.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ divides p n ⊢ ∃k. n = p * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.3.2.9",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "n = p * d",
                    "id": "3.3.2.10",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p * d ⊢ n = p * d"
                },
                {
                    "args": "d",
                    "id": "3.3.2.11",
                    "prevs": [
                        "3.3.2.6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ∧ divides p n, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(d = 0) ⟶ P d ⟶ P (p * d)"
                },
                {
                    "args": "",
                    "id": "3.3.2.12",
                    "prevs": [
                        "3.3.2.10",
                        "3.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0), n = p * d ⊢ ¬(p * d = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.2.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d = 0 ⟶ p * d = 0"
                },
                {
                    "args": "d = 0",
                    "id": "3.3.2.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 0 ⊢ d = 0"
                },
                {
                    "args": "mult_0_right, p * 0 = 0",
                    "id": "3.3.2.13.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p * 0 = 0"
                },
                {
                    "args": "p * d = 0",
                    "id": "3.3.2.13.2",
                    "prevs": [
                        "3.3.2.13.0",
                        "3.3.2.13.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, d = 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ p * d = 0"
                },
                {
                    "args": "",
                    "id": "3.3.2.13.3",
                    "prevs": [
                        "3.3.2.13.0",
                        "3.3.2.13.2"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d = 0 ⟶ p * d = 0"
                },
                {
                    "args": "double_neg, ¬¬(d = 0) ⟶ ¬¬(p * d = 0)",
                    "id": "3.3.2.14",
                    "prevs": [
                        "3.3.2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬¬(d = 0) ⟶ ¬¬(p * d = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.3.2.15",
                    "prevs": [
                        "3.3.2.12",
                        "3.3.2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(d = 0)"
                },
                {
                    "args": "prime_factor_lt",
                    "id": "3.3.2.16",
                    "prevs": [
                        "3.3.2.5",
                        "3.3.0",
                        "3.3.2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d < n"
                },
                {
                    "args": "d",
                    "id": "3.3.2.17",
                    "prevs": [
                        "3.1",
                        "3.3.2.16"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P d"
                },
                {
                    "args": "",
                    "id": "3.3.2.18",
                    "prevs": [
                        "3.3.2.11",
                        "3.3.2.15",
                        "3.3.2.17"
                    ],
                    "rule": "apply_fact",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P (p * d)"
                },
                {
                    "args": "P n",
                    "id": "3.3.2.19",
                    "prevs": [
                        "3.3.2.10",
                        "3.3.2.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "∃k. n = p * k, ∃p. prime p ∧ divides p n",
                    "id": "3.3.2.20",
                    "prevs": [
                        "3.3.2.0",
                        "3.3.2.1",
                        "3.3.2.2",
                        "3.3.2.3",
                        "3.3.2.8",
                        "3.3.2.9",
                        "3.3.2.10",
                        "3.3.2.19"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 1) ⟶ P n"
                },
                {
                    "args": "classical_cases",
                    "id": "3.3.3",
                    "prevs": [
                        "3.3.1",
                        "3.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.0",
                        "3.3.3"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 0) ⟶ P n"
                },
                {
                    "args": "classical_cases",
                    "id": "3.4",
                    "prevs": [
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. (∀m. m < n ⟶ P m) ⟶ P n"
                },
                {
                    "args": "nat_WF",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. P n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ P 1 ⟶ (∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)) ⟶ (∀n. P n)"
                }
            ],
            "prop": "P 0 ⟶ P 1 ⟶ (∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)) ⟶ (∀n. P n)",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_WF"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "case": "n=0",
                    "goal_id": "3.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "case": "n=1",
                    "goal_id": "3.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.1.0"
                    ],
                    "goal_id": "3.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.2.0"
                    ],
                    "goal_id": "3.3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_factor"
                },
                {
                    "fact_ids": [
                        "3.3.2.1"
                    ],
                    "goal_id": "3.3.2.2",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3.3.2.4",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "3.3.2.3"
                    ],
                    "goal_id": "3.3.2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.2.4",
                        "3.3.2.5"
                    ],
                    "goal_id": "3.3.2.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.3.2.3"
                    ],
                    "goal_id": "3.3.2.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3.2.7"
                    ],
                    "goal_id": "3.3.2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3.3.2.8"
                    ],
                    "goal_id": "3.3.2.9",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.3.2.6"
                    ],
                    "goal_id": "3.3.2.11",
                    "method_name": "forall_elim",
                    "s": "d"
                },
                {
                    "fact_ids": [
                        "3.3.2.10"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.11"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.10",
                        "3.3.0"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.12"
                    ],
                    "goal_id": "3.3.2.13",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.3.2.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "3.3.2.13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.2.13.0"
                    ],
                    "goal_id": "3.3.2.13.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.2.13.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.3.2.16",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.3.2.16",
                    "method_name": "apply_backward_step",
                    "param_p": "p",
                    "theorem": "prime_factor_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "complete_factor_induct",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "P 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 1 ⊢ P 1"
                },
                {
                    "args": "∀p. prime p ⟶ P p",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. prime p ⟶ P p ⊢ ∀p. prime p ⟶ P p"
                },
                {
                    "args": "∀m. ∀n. P m ⟶ P n ⟶ P (m * n)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀m. ∀n. P m ⟶ P n ⟶ P (m * n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "p, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "n, nat",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "prime p",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "P n",
                    "id": "4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P n ⊢ P n"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "2",
                        "4.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, ∀p. prime p ⟶ P p ⊢ P p"
                },
                {
                    "args": "p, n",
                    "id": "4.6",
                    "prevs": [
                        "3",
                        "4.5",
                        "4.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P n, prime p, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ P (p * n)"
                },
                {
                    "args": "",
                    "id": "4.7",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "4.4",
                        "4.6"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "prime_factor_induct",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀n. P n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ P 1 ⟶ (∀p. prime p ⟶ P p) ⟶ (∀m. ∀n. P m ⟶ P n ⟶ P (m * n)) ⟶ (∀n. P n)"
                }
            ],
            "prop": "P 0 ⟶ P 1 ⟶ (∀p. prime p ⟶ P p) ⟶ (∀m. ∀n. P m ⟶ P n ⟶ P (m * n)) ⟶ (∀n. P n)",
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_factor_induct"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "p,n"
                },
                {
                    "fact_ids": [
                        "2",
                        "4.2"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.5",
                        "4.4"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euclid_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime_factor, {n: fact n + 1}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact n + 1 = 1) ⟶ (∃p. prime p ∧ divides p (fact n + 1))"
                },
                {
                    "args": "∀n::nat. 0 < n ⟶ ¬(n + 1 = 1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀n::nat. 0 < n ⟶ ¬(n + 1 = 1)"
                },
                {
                    "args": "fact_lt, {n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact n"
                },
                {
                    "args": "fact n",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ ¬(fact n + 1 = 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∃p. prime p ∧ divides p (fact n + 1)"
                },
                {
                    "args": "p, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p (fact n + 1)",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p ∧ divides p (fact n + 1)"
                },
                {
                    "args": "conjD1",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "8",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n + 1)"
                },
                {
                    "args": "divides_sum2",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ⟶ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ⟶ p = 1"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ n ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "p ≤ n",
                    "id": "11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ n ⊢ p ≤ n"
                },
                {
                    "args": "",
                    "id": "11.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(1 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬(1 ≤ p)",
                    "id": "11.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(1 ≤ p) ⊢ ¬(1 ≤ p)"
                },
                {
                    "args": "not_le",
                    "id": "11.1.1",
                    "prevs": [
                        "11.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p < 1"
                },
                {
                    "args": "nat_one_def",
                    "id": "11.1.2",
                    "prevs": [
                        "11.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p < Suc 0"
                },
                {
                    "args": "less_Suc_lesseq",
                    "id": "11.1.3",
                    "prevs": [
                        "11.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p ≤ 0"
                },
                {
                    "args": "nat_less_eq_def_1",
                    "id": "11.1.4",
                    "prevs": [
                        "11.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p = 0"
                },
                {
                    "args": "prime_0",
                    "id": "11.1.5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "11.1.6",
                    "prevs": [
                        "11.1.4",
                        "11.1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p ≤ n, ¬(1 ≤ p), prime p ∧ divides p (fact n + 1) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "11.1.7",
                    "prevs": [
                        "11.1.0",
                        "11.1.6"
                    ],
                    "rule": "intros",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(1 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "11.2",
                    "prevs": [
                        "7",
                        "11.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ 1 ≤ p"
                },
                {
                    "args": "divides_fact",
                    "id": "11.3",
                    "prevs": [
                        "11.2",
                        "11.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "11.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬¬(p = 1)",
                    "id": "11.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(p = 1) ⊢ ¬¬(p = 1)"
                },
                {
                    "args": "double_neg",
                    "id": "11.4.1",
                    "prevs": [
                        "11.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(p = 1) ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "11.4.2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "11.4.3",
                    "prevs": [
                        "11.4.1",
                        "11.4.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p ≤ n, ¬¬(p = 1), prime p ∧ divides p (fact n + 1) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "11.4.4",
                    "prevs": [
                        "11.4.0",
                        "11.4.3"
                    ],
                    "rule": "intros",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "11.5",
                    "prevs": [
                        "7",
                        "11.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjI",
                    "id": "11.6",
                    "prevs": [
                        "11.3",
                        "11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ∧ ¬(p = 1)"
                },
                {
                    "args": "not_imp, ¬(divides p (fact n) ⟶ p = 1)",
                    "id": "11.7",
                    "prevs": [
                        "11.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "",
                    "id": "11.8",
                    "prevs": [
                        "11.0",
                        "11.7"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ n ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "not_lt, ¬(n < p) ⟶ ¬(divides p (fact n) ⟶ p = 1)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ ¬(n < p) ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "13",
                    "prevs": [
                        "10",
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ n < p"
                },
                {
                    "args": "divides_le",
                    "id": "14",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ∨ fact n + 1 = 0"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "p ≤ fact n + 1",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ fact n + 1 ⊢ p ≤ fact n + 1"
                },
                {
                    "args": "add_1_right, p ≤ Suc (fact n)",
                    "id": "15.1",
                    "prevs": [
                        "15.0"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "p ≤ fact n + 1, prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "15.2",
                    "prevs": [
                        "15.0",
                        "15.1"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ fact n + 1 = 0 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "fact n + 1 = 0",
                    "id": "16.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "fact n + 1 = 0 ⊢ fact n + 1 = 0"
                },
                {
                    "args": "add_is_zero",
                    "id": "16.1",
                    "prevs": [
                        "16.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0 ⊢ fact n = 0 ∧ (1::nat) = 0"
                },
                {
                    "args": "conjD2",
                    "id": "16.2",
                    "prevs": [
                        "16.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0 ⊢ (1::nat) = 0"
                },
                {
                    "args": "",
                    "id": "16.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ ¬(p ≤ Suc (fact n)) ⟶ ¬((1::nat) = 0)"
                },
                {
                    "args": "¬(p ≤ Suc (fact n))",
                    "id": "16.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ≤ Suc (fact n)) ⊢ ¬(p ≤ Suc (fact n))"
                },
                {
                    "args": "¬((1::nat) = 0)",
                    "id": "16.3.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((1::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "16.3.2",
                    "prevs": [
                        "16.3.0",
                        "16.3.1"
                    ],
                    "rule": "intros",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ ¬(p ≤ Suc (fact n)) ⟶ ¬((1::nat) = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "16.4",
                    "prevs": [
                        "16.2",
                        "16.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "16.5",
                    "prevs": [
                        "16.0",
                        "16.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ fact n + 1 = 0 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "disjE",
                    "id": "17",
                    "prevs": [
                        "14",
                        "15",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjI",
                    "id": "18",
                    "prevs": [
                        "13",
                        "17"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjI",
                    "id": "19",
                    "prevs": [
                        "7",
                        "18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ n < p ∧ p ≤ Suc (fact n), a: p}",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ ∃a1. prime a1 ∧ n < a1 ∧ a1 ≤ Suc (fact n)"
                },
                {
                    "args": "∃p. prime p ∧ divides p (fact n + 1)",
                    "id": "21",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "20"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                }
            ],
            "prop": "∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "fact n + 1",
                    "theorem": "prime_factor"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal": "¬(fact n + 1 = 1)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal": "!n::nat. 0 < n --> ~(n + 1 = 1)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "fact_ids": [
                        "0",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "7",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_sum2"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_lt"
                },
                {
                    "goal_id": "11",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_fact"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "11.1.0"
                    ],
                    "goal_id": "11.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "11.1.1"
                    ],
                    "goal_id": "11.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "fact_ids": [
                        "11.1.2"
                    ],
                    "goal_id": "11.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_Suc_lesseq"
                },
                {
                    "fact_ids": [
                        "11.1.3"
                    ],
                    "goal_id": "11.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "fact_ids": [
                        "11.1.4"
                    ],
                    "goal_id": "11.1.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "11.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "11.4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "11.4.0"
                    ],
                    "goal_id": "11.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "11.4.1"
                    ],
                    "goal_id": "11.4.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "11.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "14",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "16",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "16.0"
                    ],
                    "goal_id": "16.1",
                    "method_name": "apply_forward_step",
                    "theorem": "add_is_zero"
                },
                {
                    "fact_ids": [
                        "16.1"
                    ],
                    "goal_id": "16.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "16.2"
                    ],
                    "goal_id": "16.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "16.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "16.3.1",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euclid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "euclid_bound, {n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "p, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ n < p ∧ p ≤ Suc (fact n)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjD1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjD1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ n < p"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p ∧ n < p"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ n < p, a: p}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ ∃a1. prime a1 ∧ n < a1"
                },
                {
                    "args": "greater_def, ∃p. prime p ∧ p > n",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ ∃p. prime p ∧ p > n"
                },
                {
                    "args": "∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃p. prime p ∧ p > n"
                }
            ],
            "prop": "∃p. prime p ∧ p > n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "greater_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "euclid_bound"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_infinite",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ¬(∀x1. prime x1 ⟶ x1 ≤ x)"
                },
                {
                    "args": "n, nat",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "euclid, {n: n}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃p. prime p ∧ p > n"
                },
                {
                    "args": "greater_def, ∃x. prime x ∧ n < x",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ ∃x. prime x ∧ n < x"
                },
                {
                    "args": "not_le, ∃x. prime x ∧ ¬(x ≤ n)",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃x. prime x ∧ ¬(x ≤ n)"
                },
                {
                    "args": "not_imp, ∃x. ¬(prime x ⟶ x ≤ n)",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃x. ¬(prime x ⟶ x ≤ n)"
                },
                {
                    "args": "not_all, ¬(∀x. prime x ⟶ x ≤ n)",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∀x. prime x ⟶ x ≤ n)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. ¬(∀x. prime x ⟶ x ≤ n)"
                },
                {
                    "args": "not_exists, ¬(∃a. ∀x. prime x ⟶ x ≤ a)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∃a. ∀x. prime x ⟶ x ≤ a)"
                },
                {
                    "args": "member_collect, ¬(∃a. ∀x. x ∈ {p. prime p} ⟶ x ≤ a)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∃a. ∀x. x ∈ {p. prime p} ⟶ x ≤ a)"
                },
                {
                    "args": "nat_finite, ¬(finite ({p. prime p}))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(finite ({p. prime p}))"
                },
                {
                    "args": "infinite_def, infinite ({p. prime p})",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ infinite ({p. prime p})"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ infinite ({p. prime p})"
                }
            ],
            "prop": "infinite ({p. prime p})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "infinite_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_finite"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "greater_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "euclid"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ prime p ⟶ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "prime p",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ divides p a ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "divides p a",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "coprime_def",
                    "id": "1.1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, divides p a ⊢ divides p b ⟶ ¬(prime p)"
                },
                {
                    "args": "divides p b",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p b ⊢ divides p b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.1",
                    "prevs": [
                        "1.1.0",
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p a, divides p b ⊢ divides p a ∧ divides p b"
                },
                {
                    "args": "",
                    "id": "1.1.2.2",
                    "prevs": [
                        "1.1.1",
                        "1.1.2.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, divides p a, divides p b ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "1.1.2.3",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.1.2.4",
                    "prevs": [
                        "1.1.2.2",
                        "1.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, divides p a, divides p b ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, divides p a ⊢ divides p b ⟶ ¬(prime p)"
                },
                {
                    "args": "double_neg, ¬¬(divides p b) ⟶ ¬(prime p)",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime a b, divides p a ⊢ ¬¬(divides p b) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.1.4",
                    "prevs": [
                        "1.0",
                        "1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, divides p a ⊢ ¬(divides p b)"
                },
                {
                    "args": "disjI2, {A: ¬(divides p a), B: ¬(divides p b)}",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, divides p a ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ divides p a ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "¬(divides p a)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a) ⊢ ¬(divides p a)"
                },
                {
                    "args": "disjI1, {A: ¬(divides p a), B: ¬(divides p b)}",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, ¬(divides p a) ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "de_morgan_thm1, ¬(divides p a ∧ divides p b)",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "disjI2, {A: ¬(prime p), B: ¬(divides p a ∧ divides p b)}",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b ⊢ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ prime p ⟶ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ ¬(prime p) ⟶ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime p) ⊢ ¬(prime p)"
                },
                {
                    "args": "disjI1, {A: ¬(prime p), B: ¬(divides p a ∧ divides p b)}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(prime p), coprime a b ⊢ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ ¬(prime p) ⟶ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b ⊢ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "de_morgan_thm1, ¬(prime p ∧ divides p a ∧ divides p b)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b ⊢ ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ ¬(prime p ∧ divides p a ∧ divides p b)"
                }
            ],
            "prop": "coprime a b ⟶ ¬(prime p ∧ divides p a ∧ divides p b)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "case": "(prime p)",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "case": "divides p a",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0",
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.1.1",
                        "1.1.2.1"
                    ],
                    "goal_id": "1.1.2.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.2.2"
                    ],
                    "goal_id": "1.1.2.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_prime_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ coprime a b ⟶ (∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "coprime a b",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b ⊢ ∀p. ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "p, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "coprime_prime, {a: a, b: b, p: p}",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b ⊢ ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "coprime a b ⊢ ∀p. ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ (∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀p. ¬(prime p ∧ divides p a ∧ divides p b)) ⟶ coprime a b"
                },
                {
                    "args": "∀p. ¬(prime p ∧ divides p a ∧ divides p b)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ∀p. ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ¬(coprime a b) ⟶ ¬(∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "¬(coprime a b)",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(coprime a b) ⊢ ¬(coprime a b)"
                },
                {
                    "args": "coprime_def",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(coprime a b) ⊢ ¬(∀d. divides d a ∧ divides d b ⟷ d = 1)"
                },
                {
                    "args": "not_all",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(coprime a b) ⊢ ∃x. ¬(divides x a ∧ divides x b ⟷ x = 1)"
                },
                {
                    "args": "x, nat",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "¬(divides x a ∧ divides x b ⟷ x = 1)",
                    "id": "1.1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ ¬(divides x a ∧ divides x b ⟷ x = 1)"
                },
                {
                    "args": "prime_factor, {n: x}",
                    "id": "1.1.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(x = 1) ⟶ (∃p. prime p ∧ divides p x)"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ x = 1 ⟶ (∃x1. prime x1 ∧ divides x1 a ∧ divides x1 b)"
                },
                {
                    "args": "x = 1",
                    "id": "1.1.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 1 ⊢ x = 1"
                },
                {
                    "args": "",
                    "id": "1.1.6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ (1::nat) = 1 ⟶ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "(1::nat) = 1",
                    "id": "1.1.6.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(1::nat) = 1 ⊢ (1::nat) = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "1.1.6.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides_1, {x: b}",
                    "id": "1.1.6.1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.6.1.3",
                    "prevs": [
                        "1.1.6.1.1",
                        "1.1.6.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = 1, (1::nat) = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "",
                    "id": "1.1.6.1.4",
                    "prevs": [
                        "1.1.6.1.0",
                        "1.1.6.1.3"
                    ],
                    "rule": "intros",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ (1::nat) = 1 ⟶ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "",
                    "id": "1.1.6.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ divides 1 a ∧ divides 1 b ⟶ (1::nat) = 1"
                },
                {
                    "args": "divides 1 a ∧ divides 1 b",
                    "id": "1.1.6.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 a ∧ divides 1 b ⊢ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "1.1.6.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "",
                    "id": "1.1.6.2.2",
                    "prevs": [
                        "1.1.6.2.0",
                        "1.1.6.2.1"
                    ],
                    "rule": "intros",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ divides 1 a ∧ divides 1 b ⟶ (1::nat) = 1"
                },
                {
                    "args": "iffI",
                    "id": "1.1.6.3",
                    "prevs": [
                        "1.1.6.1",
                        "1.1.6.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ (1::nat) = 1 ⟷ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "x = 1 ⟷ divides x a ∧ divides x b",
                    "id": "1.1.6.4",
                    "prevs": [
                        "1.1.6.0",
                        "1.1.6.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ x = 1 ⟷ divides x a ∧ divides x b"
                },
                {
                    "args": "eq_sym_eq, divides x a ∧ divides x b ⟷ x = 1",
                    "id": "1.1.6.5",
                    "prevs": [
                        "1.1.6.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ divides x a ∧ divides x b ⟷ x = 1"
                },
                {
                    "args": "negE_gen, {A: divides x a ∧ divides x b ⟷ x = 1, C: ∃x. prime x ∧ divides x a ∧ divides x b}",
                    "id": "1.1.6.6",
                    "prevs": [
                        "1.1.4",
                        "1.1.6.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x = 1, ¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ∃x. prime x ∧ divides x a ∧ divides x b"
                },
                {
                    "args": "",
                    "id": "1.1.6.7",
                    "prevs": [
                        "1.1.6.0",
                        "1.1.6.6"
                    ],
                    "rule": "intros",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ x = 1 ⟶ (∃x1. prime x1 ∧ divides x1 a ∧ divides x1 b)"
                },
                {
                    "args": "",
                    "id": "1.1.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ¬(x = 1) ⟶ (∃x1. prime x1 ∧ divides x1 a ∧ divides x1 b)"
                },
                {
                    "args": "¬(x = 1)",
                    "id": "1.1.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 1) ⊢ ¬(x = 1)"
                },
                {
                    "args": "",
                    "id": "1.1.7.1",
                    "prevs": [
                        "1.1.5",
                        "1.1.7.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(x = 1) ⊢ ∃p. prime p ∧ divides p x"
                },
                {
                    "args": "p, nat",
                    "id": "1.1.7.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p x",
                    "id": "1.1.7.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p x ⊢ prime p ∧ divides p x"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.7.4",
                    "prevs": [
                        "1.1.7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p x ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.7.5",
                    "prevs": [
                        "1.1.7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p x ⊢ divides p x"
                },
                {
                    "args": "∀p. ∀q. ¬(p ⟷ q) ⟷ p ⟷ ¬q",
                    "id": "1.1.7.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀p. ∀q. ¬(p ⟷ q) ⟷ p ⟷ ¬q"
                },
                {
                    "args": "",
                    "id": "1.1.7.7",
                    "prevs": [
                        "1.1.7.6",
                        "1.1.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides x a ∧ divides x b ⟷ ¬(x = 1)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.1.7.8",
                    "prevs": [
                        "1.1.7.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ ¬(x = 1) ⟷ divides x a ∧ divides x b"
                },
                {
                    "args": "",
                    "id": "1.1.7.9",
                    "prevs": [
                        "1.1.7.8",
                        "1.1.7.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(x = 1), ¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides x a ∧ divides x b"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.7.10",
                    "prevs": [
                        "1.1.7.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 1), ¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides x a"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.7.11",
                    "prevs": [
                        "1.1.7.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 1), ¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides x b"
                },
                {
                    "args": "divides_trans",
                    "id": "1.1.7.12",
                    "prevs": [
                        "1.1.7.5",
                        "1.1.7.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 1), prime p ∧ divides p x, ¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides p a"
                },
                {
                    "args": "divides_trans",
                    "id": "1.1.7.13",
                    "prevs": [
                        "1.1.7.5",
                        "1.1.7.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(x = 1), prime p ∧ divides p x, ¬(divides x a ∧ divides x b ⟷ x = 1) ⊢ divides p b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.7.14",
                    "prevs": [
                        "1.1.7.12",
                        "1.1.7.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(coprime a b), ¬(x = 1), prime p ∧ divides p x, ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ divides p a ∧ divides p b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.7.15",
                    "prevs": [
                        "1.1.7.4",
                        "1.1.7.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(coprime a b), ¬(x = 1), prime p ∧ divides p x, ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ prime p ∧ divides p a ∧ divides p b"
                },
                {
                    "args": "exI, {P: λx. prime x ∧ divides x a ∧ divides x b, a: p}",
                    "id": "1.1.7.16",
                    "prevs": [
                        "1.1.7.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(coprime a b), ¬(x = 1), prime p ∧ divides p x, ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ∃a1. prime a1 ∧ divides a1 a ∧ divides a1 b"
                },
                {
                    "args": "∃p. prime p ∧ divides p x",
                    "id": "1.1.7.17",
                    "prevs": [
                        "1.1.7.0",
                        "1.1.7.1",
                        "1.1.7.2",
                        "1.1.7.3",
                        "1.1.7.16"
                    ],
                    "rule": "intros",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ¬(x = 1) ⟶ (∃x1. prime x1 ∧ divides x1 a ∧ divides x1 b)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.1.8",
                    "prevs": [
                        "1.1.6",
                        "1.1.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ∃x. prime x ∧ divides x a ∧ divides x b"
                },
                {
                    "args": "double_neg, ∃x. ¬¬(prime x ∧ divides x a ∧ divides x b)",
                    "id": "1.1.9",
                    "prevs": [
                        "1.1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ∃x. ¬¬(prime x ∧ divides x a ∧ divides x b)"
                },
                {
                    "args": "not_all, ¬(∀p. ¬(prime p ∧ divides p a ∧ divides p b))",
                    "id": "1.1.10",
                    "prevs": [
                        "1.1.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(coprime a b), ¬(divides x a ∧ divides x b ⟷ x = 1), ∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ¬(∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "∃x. ¬(divides x a ∧ divides x b ⟷ x = 1)",
                    "id": "1.1.11",
                    "prevs": [
                        "1.1.0",
                        "1.1.2",
                        "1.1.3",
                        "1.1.4",
                        "1.1.10"
                    ],
                    "rule": "intros",
                    "th": "∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ ¬(coprime a b) ⟶ ¬(∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀p. ¬(prime p ∧ divides p a ∧ divides p b) ⊢ coprime a b"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. ¬(prime p ∧ divides p a ∧ divides p b)) ⟶ coprime a b"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ coprime a b ⟷ (∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ (∀p. ¬(prime p ∧ divides p a ∧ divides p b))"
                }
            ],
            "prop": "coprime a b ⟷ (∀p. ¬(prime p ∧ divides p a ∧ divides p b))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_prime"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "exists_elim",
                    "names": "x"
                },
                {
                    "goal_id": "1.1.5",
                    "method_name": "apply_forward_step",
                    "param_n": "x",
                    "theorem": "prime_factor"
                },
                {
                    "case": "x=1",
                    "goal_id": "1.1.6",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.4"
                    ],
                    "goal_id": "1.1.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1.6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.1.6.0"
                    ],
                    "goal_id": "1.1.6.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.6.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.6.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.6.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.1.6.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.1.6.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.6.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1.1.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.5",
                        "1.1.7.0"
                    ],
                    "goal_id": "1.1.7.1",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.7.1"
                    ],
                    "goal_id": "1.1.7.2",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "1.1.7.4",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.1.7.3"
                    ],
                    "goal_id": "1.1.7.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.7.3"
                    ],
                    "goal_id": "1.1.7.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.7.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.7.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal": "!p. !q. ~(p<-->q) <--> (p <--> ~q)",
                    "goal_id": "1.1.7.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.7.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1.7.6",
                        "1.1.4"
                    ],
                    "goal_id": "1.1.7.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.7.7"
                    ],
                    "goal_id": "1.1.7.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.1.7.8",
                        "1.1.7.0"
                    ],
                    "goal_id": "1.1.7.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.7.9"
                    ],
                    "goal_id": "1.1.7.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.7.9"
                    ],
                    "goal_id": "1.1.7.11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.7.5",
                        "1.1.7.10"
                    ],
                    "goal_id": "1.1.7.12",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                },
                {
                    "fact_ids": [
                        "1.1.7.5",
                        "1.1.7.11"
                    ],
                    "goal_id": "1.1.7.13",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_coprime_strong",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ divides p n ⟶ divides p n ∨ coprime p n"
                },
                {
                    "args": "divides p n",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "disjI1, {A: divides p n, B: coprime p n}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p n ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ divides p n ⟶ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ coprime p n"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "coprime p n",
                    "id": "3.1",
                    "prevs": [
                        "1",
                        "3.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(divides p n) ⊢ coprime p n"
                },
                {
                    "args": "disjI2, {A: divides p n, B: coprime p n}",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p n) ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ coprime p n"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p n ∨ coprime p n"
                }
            ],
            "prop": "prime p ⟶ divides p n ∨ coprime p n",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "case": "divides p n",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_coprime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_coprime_strong, {n: n, p: p}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "disjI2, {A: n = 1, B: divides p n ∨ coprime p n}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ n = 1 ∨ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ n = 1 ∨ divides p n ∨ coprime p n"
                }
            ],
            "prop": "prime p ⟶ n = 1 ∨ divides p n ∨ coprime p n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_coprime_strong"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_prime_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ divides p n ⟶ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "divides p n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "gcd_equal_left",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p n ⊢ gcd p n = p"
                },
                {
                    "args": "if_P, gcd p n = (if divides p n then p else 1)",
                    "id": "1.2",
                    "prevs": [
                        "1.1",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, divides p n ⊢ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ divides p n ⟶ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(divides p n) ⟶ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "2.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. ¬(divides p n) ⟷ coprime p n"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.2",
                        "2.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, ¬(divides p n) ⊢ coprime p n"
                },
                {
                    "args": "coprime_gcd",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, ¬(divides p n) ⊢ gcd p n = 1"
                },
                {
                    "args": "if_not_P, gcd p n = (if divides p n then p else 1)",
                    "id": "2.5",
                    "prevs": [
                        "2.4",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(divides p n) ⊢ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(divides p n) ⟶ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ gcd p n = (if divides p n then p else 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ gcd p n = (if divides p n then p else 1)"
                }
            ],
            "prop": "prime p ⟶ gcd p n = (if divides p n then p else 1)",
            "steps": [
                {
                    "case": "divides p n",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_equal_left"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.2",
                        "2.0"
                    ],
                    "goal_id": "2.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "gcd_2_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime_2",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "gcd_prime_cases, {n: n, p: (2::nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ gcd 2 n = (if divides 2 n then 2 else 1)"
                },
                {
                    "args": "divides_2, gcd 2 n = (if even n then 2 else 1)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ gcd 2 n = (if even n then 2 else 1)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd 2 n = (if even n then 2 else 1)"
                }
            ],
            "prop": "gcd 2 n = (if even n then 2 else 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "divides_2"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_prime_cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_primepow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(k = 0) ⊢ coprime m p ∨ k = 0 ⟶ ¬(divides p m)"
                },
                {
                    "args": "coprime m p ∨ k = 0",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m p ∨ k = 0 ⊢ coprime m p ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(k = 0), coprime m p ∨ k = 0 ⊢ coprime m p ⟶ ¬(divides p m)"
                },
                {
                    "args": "coprime m p",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime m p ⊢ coprime m p"
                },
                {
                    "args": "coprime_sym",
                    "id": "3.1.1",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime m p ⊢ coprime p m"
                },
                {
                    "args": "",
                    "id": "3.1.2",
                    "prevs": [
                        "2",
                        "3.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, coprime m p ⊢ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "3.1.3",
                    "prevs": [
                        "3.1.0",
                        "3.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(k = 0), coprime m p ∨ k = 0 ⊢ coprime m p ⟶ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(k = 0), coprime m p ∨ k = 0 ⊢ k = 0 ⟶ ¬(divides p m)"
                },
                {
                    "args": "k = 0",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "negE_gen, {A: k = 0, C: ¬(divides p m)}",
                    "id": "3.2.1",
                    "prevs": [
                        "1",
                        "3.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(k = 0) ⊢ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(k = 0), coprime m p ∨ k = 0 ⊢ k = 0 ⟶ ¬(divides p m)"
                },
                {
                    "args": "disjE",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(k = 0), coprime m p ∨ k = 0 ⊢ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(k = 0) ⊢ coprime m p ∨ k = 0 ⟶ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(k = 0) ⊢ ¬(divides p m) ⟶ coprime m p ∨ k = 0"
                },
                {
                    "args": "¬(divides p m)",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p m) ⊢ ¬(divides p m)"
                },
                {
                    "args": "coprime p m",
                    "id": "4.1",
                    "prevs": [
                        "2",
                        "4.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(divides p m), ¬(k = 0) ⊢ coprime p m"
                },
                {
                    "args": "coprime_sym, coprime m p",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(divides p m), ¬(k = 0) ⊢ coprime m p"
                },
                {
                    "args": "disjI1, {A: coprime m p, B: k = 0}",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p m), ¬(k = 0) ⊢ coprime m p ∨ k = 0"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(k = 0) ⊢ ¬(divides p m) ⟶ coprime m p ∨ k = 0"
                },
                {
                    "args": "iffI",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(k = 0) ⊢ coprime m p ∨ k = 0 ⟷ ¬(divides p m)"
                },
                {
                    "args": "coprime_rexp, coprime m (p ^ k) ⟷ ¬(divides p m)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(k = 0) ⊢ coprime m (p ^ k) ⟷ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(k = 0) ⟶ coprime m (p ^ k) ⟷ ¬(divides p m)"
                }
            ],
            "prop": "prime p ⟶ ¬(k = 0) ⟶ coprime m (p ^ k) ⟷ ¬(divides p m)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rexp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "2",
                        "3.1.1"
                    ],
                    "goal_id": "3.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_bezout_strong",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "¬(b = 1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(b = 1) ⊢ ¬(b = 1)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd a b = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ 1 = gcd a b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(b = 1) ⊢ a = 0 ⟶ b = 1"
                },
                {
                    "args": "a = 0",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = 0 ⊢ a = 0"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [
                        "4.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a b, a = 0 ⊢ coprime 0 b"
                },
                {
                    "args": "coprime_sym",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b, a = 0 ⊢ coprime b 0"
                },
                {
                    "args": "coprime_0",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b, a = 0 ⊢ b = 1"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(b = 1) ⊢ a = 0 ⟶ b = 1"
                },
                {
                    "args": "double_neg, ¬¬(a = 0) ⟶ ¬¬(b = 1)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, ¬(b = 1) ⊢ ¬¬(a = 0) ⟶ ¬¬(b = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "6",
                    "prevs": [
                        "1",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(b = 1) ⊢ ¬(a = 0)"
                },
                {
                    "args": "bezout_gcd_strong, {a: a, b: b}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(b = 1) ⊢ ∃x. ∃y. a * x = b * y + gcd a b"
                },
                {
                    "args": "∃x. ∃y. a * x = b * y + 1",
                    "id": "8",
                    "prevs": [
                        "3",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(b = 1) ⊢ ∃x. ∃y. a * x = b * y + 1"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ ¬(b = 1) ⟶ (∃x. ∃y. a * x = b * y + 1)"
                }
            ],
            "prop": "coprime a b ⟶ ¬(b = 1) ⟶ (∃x. ∃y. a * x = b * y + 1)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "bezout_gcd_strong"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0",
                        "0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_bezout_alt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "¬(a = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a = 0) ⊢ ¬(a = 0)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd a b = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ 1 = gcd a b"
                },
                {
                    "args": "bezout_gcd_strong, {a: a, b: b}",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, ¬(a = 0) ⊢ ∃x. ∃y. a * x = b * y + gcd a b"
                },
                {
                    "args": "∃x. ∃y. a * x = b * y + 1",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, ¬(a = 0) ⊢ ∃x. ∃y. a * x = b * y + 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ ¬(a = 0) ⟶ (∃x. ∃y. a * x = b * y + 1)"
                }
            ],
            "prop": "coprime a b ⟶ ¬(a = 0) ⟶ (∃x. ∃y. a * x = b * y + 1)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "bezout_gcd_strong"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "bezout_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(divides p a)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a) ⊢ ¬(divides p a)"
                },
                {
                    "args": "prime_coprime_strong, {n: a}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p a ∨ coprime p a"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p a) ⊢ divides p a ⟶ coprime a p"
                },
                {
                    "args": "divides p a",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "negE_gen, {A: divides p a, C: coprime a p}",
                    "id": "3.1",
                    "prevs": [
                        "1",
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p a, ¬(divides p a) ⊢ coprime a p"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p a) ⊢ divides p a ⟶ coprime a p"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p a) ⊢ coprime p a ⟶ coprime a p"
                },
                {
                    "args": "coprime p a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p a ⊢ coprime p a"
                },
                {
                    "args": "coprime_sym, coprime a p",
                    "id": "4.1",
                    "prevs": [
                        "4.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p a, ¬(divides p a) ⊢ coprime a p"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p a) ⊢ coprime p a ⟶ coprime a p"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p a) ⊢ coprime a p"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p a) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬¬(p = 1)",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(p = 1) ⊢ ¬¬(p = 1)"
                },
                {
                    "args": "double_neg",
                    "id": "6.1",
                    "prevs": [
                        "6.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(p = 1) ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "6.3",
                    "prevs": [
                        "6.1",
                        "6.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(divides p a), ¬¬(p = 1) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "6.4",
                    "prevs": [
                        "6.0",
                        "6.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p a) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p a) ⊢ ¬(p = 1)"
                },
                {
                    "args": "coprime_bezout_strong",
                    "id": "8",
                    "prevs": [
                        "5",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p a) ⊢ ∃x. ∃y. a * x = p * y + 1"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(divides p a) ⟶ (∃x. ∃y. a * x = p * y + 1)"
                }
            ],
            "prop": "prime p ⟶ ¬(divides p a) ⟶ (∃x. ∃y. a * x = p * y + 1)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_bezout_strong"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_n": "a",
                    "theorem": "prime_coprime_strong"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.0"
                    ],
                    "goal_id": "6.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "6.1"
                    ],
                    "goal_id": "6.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides p (a * b)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a * b) ⊢ divides p (a * b)"
                },
                {
                    "args": "prime_coprime_strong, {n: b}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p b ∨ coprime p b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b) ⊢ divides p b ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "divides p b",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p b ⊢ divides p b"
                },
                {
                    "args": "disjI2, {A: divides p a, B: divides p b}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p b, divides p (a * b) ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b) ⊢ divides p b ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b) ⊢ coprime p b ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "coprime p b",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p b ⊢ coprime p b"
                },
                {
                    "args": "mult_comm, divides p (b * a)",
                    "id": "4.1",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p b, divides p (a * b) ⊢ divides p (b * a)"
                },
                {
                    "args": "coprime_divprod",
                    "id": "4.2",
                    "prevs": [
                        "4.1",
                        "4.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p b, divides p (a * b) ⊢ divides p a"
                },
                {
                    "args": "disjI1, {A: divides p a, B: divides p b}",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime p b, divides p (a * b) ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b) ⊢ coprime p b ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a * b) ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p (a * b) ⟶ divides p a ∨ divides p b"
                }
            ],
            "prop": "prime p ⟶ divides p (a * b) ⟶ divides p a ∨ divides p b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_n": "b",
                    "theorem": "prime_coprime_strong"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "param_a": "b",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_divprod_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "disjI2, {A: p = 1, B: prime p}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "zero_one_or_prime_divprod, {a: a, b: b, p: p}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                }
            ],
            "prop": "prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "zero_one_or_prime_divprod"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divexp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ divides p 1 ⟶ divides p a"
                },
                {
                    "args": "divides p 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p 1 ⊢ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p 1 ⊢ p = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides p a",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides p 1 ⊢ divides p a"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ divides p 1 ⟶ divides p a"
                },
                {
                    "args": "nat_nat_power_def_1, divides p (a ^ (0::nat)) ⟶ divides p a",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ divides p (a ^ (0::nat)) ⟶ divides p a"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀n. (divides p (a ^ n) ⟶ divides p a) ⟶ divides p (a ^ Suc n) ⟶ divides p a"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides p (a ^ n) ⟶ divides p a",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a ^ n) ⟶ divides p a ⊢ divides p (a ^ n) ⟶ divides p a"
                },
                {
                    "args": "divides p (a ^ Suc n)",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a ^ Suc n) ⊢ divides p (a ^ Suc n)"
                },
                {
                    "args": "nat_nat_power_def_2",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p (a ^ Suc n) ⊢ divides p (a * a ^ n)"
                },
                {
                    "args": "prime_divprod",
                    "id": "3.4",
                    "prevs": [
                        "0",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a ^ Suc n) ⊢ divides p a ∨ divides p (a ^ n)"
                },
                {
                    "args": "divides p a ⟶ divides p a",
                    "id": "3.5",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ divides p a ⟶ divides p a"
                },
                {
                    "args": "disjE",
                    "id": "3.6",
                    "prevs": [
                        "3.4",
                        "3.5",
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a ^ Suc n), divides p (a ^ n) ⟶ divides p a ⊢ divides p a"
                },
                {
                    "args": "",
                    "id": "3.7",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.6"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀n. (divides p (a ^ n) ⟶ divides p a) ⟶ divides p (a ^ Suc n) ⟶ divides p a"
                },
                {
                    "args": "nat_induct, {P: λn::nat. divides p (a ^ n) ⟶ divides p a, x: n}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p (a ^ n) ⟶ divides p a"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p (a ^ n) ⟶ divides p a"
                }
            ],
            "prop": "prime p ⟶ divides p (a ^ n) ⟶ divides p a",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "0",
                        "3.3"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_divprod"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divexp_n",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides p (a ^ n)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a ^ n) ⊢ divides p (a ^ n)"
                },
                {
                    "args": "prime_divexp",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a ^ n) ⊢ divides p a"
                },
                {
                    "args": "divides_exp, {n: n, x: p, y: a}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p (a ^ n) ⊢ divides (p ^ n) (a ^ n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p (a ^ n) ⟶ divides (p ^ n) (a ^ n)"
                }
            ],
            "prop": "prime p ⟶ divides p (a ^ n) ⟶ divides (p ^ n) (a ^ n)",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_exp"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divexp"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_divexp_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ n = 0 ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "n = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, n = 0 ⊢ p = 1 ⟶ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "p = 1",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, n = 0, p = 1 ⊢ ¬(divides p a ∧ ¬((0::nat) = 0)) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(divides p a ∧ ¬((0::nat) = 0))",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a ∧ ¬((0::nat) = 0)) ⊢ ¬(divides p a ∧ ¬((0::nat) = 0))"
                },
                {
                    "args": "prime_1",
                    "id": "1.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "1.1.2.2",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, n = 0, p = 1 ⊢ ¬(divides p a ∧ ¬((0::nat) = 0)) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, n = 0, p = 1 ⊢ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.0",
                        "1.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, n = 0 ⊢ p = 1 ⟶ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, n = 0 ⊢ divides p a ∧ ¬((0::nat) = 0) ⟶ p = 1"
                },
                {
                    "args": "divides p a ∧ ¬((0::nat) = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ∧ ¬((0::nat) = 0) ⊢ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p a ∧ ¬((0::nat) = 0) ⊢ ¬((0::nat) = 0)"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "negE_gen, {A: (0::nat) = 0, C: p = 1}",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, n = 0, divides p a ∧ ¬((0::nat) = 0) ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, n = 0 ⊢ divides p a ∧ ¬((0::nat) = 0) ⟶ p = 1"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, n = 0 ⊢ p = 1 ⟷ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "divides_one, divides p 1 ⟷ divides p a ∧ ¬((0::nat) = 0)",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, n = 0 ⊢ divides p 1 ⟷ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "nat_nat_power_def_1, divides p (a ^ (0::nat)) ⟷ divides p a ∧ ¬((0::nat) = 0)",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, n = 0 ⊢ divides p (a ^ (0::nat)) ⟷ divides p a ∧ ¬((0::nat) = 0)"
                },
                {
                    "args": "divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, n = 0 ⊢ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ n = 0 ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(n = 0) ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0) ⊢ divides p (a ^ n) ⟶ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "divides p (a ^ n)",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a ^ n) ⊢ divides p (a ^ n)"
                },
                {
                    "args": "prime_divexp",
                    "id": "2.1.1",
                    "prevs": [
                        "0",
                        "2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a ^ n) ⊢ divides p a"
                },
                {
                    "args": "conjI",
                    "id": "2.1.2",
                    "prevs": [
                        "2.1.1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), divides p (a ^ n) ⊢ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.0",
                        "2.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0) ⊢ divides p (a ^ n) ⟶ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0) ⊢ divides p a ∧ ¬(n = 0) ⟶ divides p (a ^ n)"
                },
                {
                    "args": "divides p a ∧ ¬(n = 0)",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ∧ ¬(n = 0) ⊢ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "2.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p a ∧ ¬(n = 0) ⊢ divides p a"
                },
                {
                    "args": "divides_rexp",
                    "id": "2.2.2",
                    "prevs": [
                        "2.2.1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), divides p a ∧ ¬(n = 0) ⊢ divides p (a ^ n)"
                },
                {
                    "args": "",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.0",
                        "2.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0) ⊢ divides p a ∧ ¬(n = 0) ⟶ divides p (a ^ n)"
                },
                {
                    "args": "iffI",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0) ⊢ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(n = 0) ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)"
                }
            ],
            "prop": "prime p ⟶ divides p (a ^ n) ⟷ divides p a ∧ ¬(n = 0)",
            "steps": [
                {
                    "case": "n = 0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0",
                        "0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0",
                        "2.1.0"
                    ],
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divexp"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rexp"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "parity_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ divides 2 (a ^ Suc n) ⟶ divides 2 a"
                },
                {
                    "args": "divides 2 (a ^ Suc n)",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 2 (a ^ Suc n) ⊢ divides 2 (a ^ Suc n)"
                },
                {
                    "args": "prime_2",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "prime_divexp",
                    "id": "0.2",
                    "prevs": [
                        "0.1",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides 2 (a ^ Suc n) ⊢ divides 2 a"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides 2 (a ^ Suc n) ⟶ divides 2 a"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ divides 2 a ⟶ divides 2 (a ^ Suc n)"
                },
                {
                    "args": "divides 2 a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 2 a ⊢ divides 2 a"
                },
                {
                    "args": "divides_rmul, {a: a, d: (2::nat), x: a ^ n}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides 2 a ⊢ divides 2 (a * a ^ n)"
                },
                {
                    "args": "nat_nat_power_def_2, divides 2 (a ^ Suc n)",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides 2 a ⊢ divides 2 (a ^ Suc n)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides 2 a ⟶ divides 2 (a ^ Suc n)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides 2 (a ^ Suc n) ⟷ divides 2 a"
                },
                {
                    "args": "divides_2, even (a ^ Suc n) ⟷ even a",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ even (a ^ Suc n) ⟷ even a"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ even (a ^ Suc n) ⟷ even a"
                }
            ],
            "prop": "even (a ^ Suc n) ⟷ even a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "divides_2"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "param_n": "Suc n",
                    "theorem": "prime_divexp"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "coprime_sos",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime x y",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime x y ⊢ coprime x y"
                },
                {
                    "args": "coprime_exp, {a: y, d: x, n: (2::nat)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime x y ⊢ coprime x (y ^ (2::nat))"
                },
                {
                    "args": "coprime_gcd, gcd x (y ^ (2::nat)) = 1",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime x y ⊢ gcd x (y ^ (2::nat)) = 1"
                },
                {
                    "args": "exp_2, gcd x (y * y) = 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime x y ⊢ gcd x (y * y) = 1"
                },
                {
                    "args": "gcd_mod, gcd x (x * x + y * y) = 1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ gcd x (x * x + y * y) = 1"
                },
                {
                    "args": "coprime_gcd, coprime x (x * x + y * y)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ coprime x (x * x + y * y)"
                },
                {
                    "args": "coprime_sym, coprime y x",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ coprime y x"
                },
                {
                    "args": "coprime_exp, {a: x, d: y, n: (2::nat)}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime x y ⊢ coprime y (x ^ (2::nat))"
                },
                {
                    "args": "coprime_gcd, gcd y (x ^ (2::nat)) = 1",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime x y ⊢ gcd y (x ^ (2::nat)) = 1"
                },
                {
                    "args": "exp_2, gcd y (x * x) = 1",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime x y ⊢ gcd y (x * x) = 1"
                },
                {
                    "args": "gcd_mod, gcd y (y * y + x * x) = 1",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ gcd y (y * y + x * x) = 1"
                },
                {
                    "args": "add_comm, gcd y (x * x + y * y) = 1",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ gcd y (x * x + y * y) = 1"
                },
                {
                    "args": "coprime_gcd, coprime y (x * x + y * y)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ coprime y (x * x + y * y)"
                },
                {
                    "args": "conjI",
                    "id": "13",
                    "prevs": [
                        "5",
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime x y ⊢ coprime x (x * x + y * y) ∧ coprime y (x * x + y * y)"
                },
                {
                    "args": "coprime_lmul, coprime (x * y) (x * x + y * y)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ coprime (x * y) (x * x + y * y)"
                },
                {
                    "args": "exp_2, coprime (x * y) (x ^ (2::nat) + y ^ (2::nat))",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime x y ⊢ coprime (x * y) (x ^ (2::nat) + y ^ (2::nat))"
                },
                {
                    "args": "",
                    "id": "16",
                    "prevs": [
                        "0",
                        "15"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime x y ⟶ coprime (x * y) (x ^ (2::nat) + y ^ (2::nat))"
                }
            ],
            "prop": "coprime x y ⟶ coprime (x * y) (x ^ (2::nat) + y ^ (2::nat))",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_2"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_lmul"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_mod"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "exp_2"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_mod"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "exp_2"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp"
                },
                {
                    "goal_id": "6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "nat",
                "y": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_imp_nz",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬¬(p = 0) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬¬(p = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(p = 0) ⊢ ¬¬(p = 0)"
                },
                {
                    "args": "double_neg",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(p = 0) ⊢ p = 0"
                },
                {
                    "args": "prime_0",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬¬(p = 0) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬¬(p = 0) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(p = 0)"
                }
            ],
            "prop": "prime p ⟶ ¬(p = 0)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "distinct_prime_coprime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime q",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "¬(p = q)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = q) ⊢ ¬(p = q)"
                },
                {
                    "args": "prime_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "prime_def",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime q ⊢ ¬(q = 1) ∧ (∀x. divides x q ⟶ x = 1 ∨ x = q)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, ¬(p = q) ⊢ ∀d. divides d p ∧ divides d q ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, ¬(p = q) ⊢ divides d p ∧ divides d q ⟶ d = 1"
                },
                {
                    "args": "divides d p ∧ divides d q",
                    "id": "5.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d p ∧ divides d q ⊢ divides d p ∧ divides d q"
                },
                {
                    "args": "conjD1",
                    "id": "5.1.1",
                    "prevs": [
                        "5.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d q ⊢ divides d p"
                },
                {
                    "args": "conjD2",
                    "id": "5.1.2",
                    "prevs": [
                        "5.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d q ⊢ divides d q"
                },
                {
                    "args": "conjD2",
                    "id": "5.1.3",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "5.1.4",
                    "prevs": [
                        "5.1.3",
                        "5.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, divides d p ∧ divides d q ⊢ d = 1 ∨ d = p"
                },
                {
                    "args": "d = 1 ⟶ d = 1",
                    "id": "5.1.5",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 1 ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "5.1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, ¬(p = q), divides d p ∧ divides d q ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "d = p",
                    "id": "5.1.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ⊢ d = p"
                },
                {
                    "args": "conjD2",
                    "id": "5.1.6.1",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q ⊢ ∀x. divides x q ⟶ x = 1 ∨ x = q"
                },
                {
                    "args": "",
                    "id": "5.1.6.2",
                    "prevs": [
                        "5.1.6.1",
                        "5.1.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime q, divides d p ∧ divides d q ⊢ d = 1 ∨ d = q"
                },
                {
                    "args": "d = 1 ⟶ d = 1",
                    "id": "5.1.6.3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 1 ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "5.1.6.4",
                    "prevs": [
                        "5.1.6.2",
                        "5.1.5",
                        "5.1.6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, d = p, ¬(p = q), divides d p ∧ divides d q ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "5.1.6.5",
                    "prevs": [
                        "5.1.6.0",
                        "5.1.6.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, ¬(p = q), divides d p ∧ divides d q ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "5.1.7",
                    "prevs": [
                        "5.1.4",
                        "5.1.5",
                        "5.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, ¬(p = q), divides d p ∧ divides d q ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "5.1.8",
                    "prevs": [
                        "5.1.0",
                        "5.1.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, ¬(p = q) ⊢ divides d p ∧ divides d q ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, ¬(p = q) ⊢ d = 1 ⟶ divides d p ∧ divides d q"
                },
                {
                    "args": "d = 1",
                    "id": "5.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: p}",
                    "id": "5.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 p"
                },
                {
                    "args": "divides_1, {x: q}",
                    "id": "5.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 q"
                },
                {
                    "args": "conjI",
                    "id": "5.2.3",
                    "prevs": [
                        "5.2.1",
                        "5.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, d = 1, ¬(p = q) ⊢ divides 1 p ∧ divides 1 q"
                },
                {
                    "args": "divides d p ∧ divides d q",
                    "id": "5.2.4",
                    "prevs": [
                        "5.2.0",
                        "5.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, d = 1, ¬(p = q) ⊢ divides d p ∧ divides d q"
                },
                {
                    "args": "",
                    "id": "5.2.5",
                    "prevs": [
                        "5.2.0",
                        "5.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, ¬(p = q) ⊢ d = 1 ⟶ divides d p ∧ divides d q"
                },
                {
                    "args": "iffI",
                    "id": "5.3",
                    "prevs": [
                        "5.1",
                        "5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, ¬(p = q) ⊢ divides d p ∧ divides d q ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "5.4",
                    "prevs": [
                        "5.0",
                        "5.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, ¬(p = q) ⊢ ∀d. divides d p ∧ divides d q ⟷ d = 1"
                },
                {
                    "args": "coprime_def, coprime p q",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, prime q, ¬(p = q) ⊢ coprime p q"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ prime q ⟶ ¬(p = q) ⟶ coprime p q"
                }
            ],
            "prop": "prime p ⟶ prime q ⟶ ¬(p = q) ⟶ coprime p q",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.1.0"
                    ],
                    "goal_id": "5.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.1.0"
                    ],
                    "goal_id": "5.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.1.3",
                        "5.1.1"
                    ],
                    "goal_id": "5.1.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.1.4"
                    ],
                    "goal_id": "5.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.1.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5.1.6.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.1.6.1",
                        "5.1.2"
                    ],
                    "goal_id": "5.1.6.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.1.6.2"
                    ],
                    "goal_id": "5.1.6.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.2.0"
                    ],
                    "goal_id": "5.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "5.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat",
                "q": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_coprime_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "0 < x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < x ⊢ 0 < x"
                },
                {
                    "args": "x < p",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x < p ⊢ x < p"
                },
                {
                    "args": "prime_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x < p, 0 < x ⊢ ∀d. divides d x ∧ divides d p ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x < p, 0 < x ⊢ divides d x ∧ divides d p ⟶ d = 1"
                },
                {
                    "args": "divides d x ∧ divides d p",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d x ∧ divides d p ⊢ divides d x ∧ divides d p"
                },
                {
                    "args": "conjD2",
                    "id": "4.1.1",
                    "prevs": [
                        "4.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d x ∧ divides d p ⊢ divides d p"
                },
                {
                    "args": "conjD2",
                    "id": "4.1.2",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "4.1.3",
                    "prevs": [
                        "4.1.2",
                        "4.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, divides d x ∧ divides d p ⊢ d = 1 ∨ d = p"
                },
                {
                    "args": "d = 1 ⟶ d = 1",
                    "id": "4.1.4",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 1 ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "d = p",
                    "id": "4.1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ⊢ d = p"
                },
                {
                    "args": "conjD1",
                    "id": "4.1.5.1",
                    "prevs": [
                        "4.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d x ∧ divides d p ⊢ divides d x"
                },
                {
                    "args": "divides_le",
                    "id": "4.1.5.2",
                    "prevs": [
                        "4.1.5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d x ∧ divides d p ⊢ d ≤ x ∨ x = 0"
                },
                {
                    "args": "",
                    "id": "4.1.5.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, d = p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d ≤ x ⟶ d = 1"
                },
                {
                    "args": "d ≤ x",
                    "id": "4.1.5.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d ≤ x ⊢ d ≤ x"
                },
                {
                    "args": "",
                    "id": "4.1.5.3.1",
                    "prevs": [
                        "4.1.5.0",
                        "4.1.5.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "d = p, d ≤ x ⊢ p ≤ x"
                },
                {
                    "args": "",
                    "id": "4.1.5.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, d = p, x < p, 0 < x, d ≤ x, divides d x ∧ divides d p ⊢ ¬(d = 1) ⟶ x < p"
                },
                {
                    "args": "¬(d = 1)",
                    "id": "4.1.5.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(d = 1) ⊢ ¬(d = 1)"
                },
                {
                    "args": "",
                    "id": "4.1.5.3.2.1",
                    "prevs": [
                        "4.1.5.3.2.0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "prime p, d = p, x < p, 0 < x, d ≤ x, divides d x ∧ divides d p ⊢ ¬(d = 1) ⟶ x < p"
                },
                {
                    "args": "not_le, ¬(d = 1) ⟶ ¬(p ≤ x)",
                    "id": "4.1.5.3.3",
                    "prevs": [
                        "4.1.5.3.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, d = p, x < p, 0 < x, d ≤ x, divides d x ∧ divides d p ⊢ ¬(d = 1) ⟶ ¬(p ≤ x)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.1.5.3.4",
                    "prevs": [
                        "4.1.5.3.1",
                        "4.1.5.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, d = p, x < p, 0 < x, d ≤ x, divides d x ∧ divides d p ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.5.3.5",
                    "prevs": [
                        "4.1.5.3.0",
                        "4.1.5.3.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, d = p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d ≤ x ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.5.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, d = p, x < p, 0 < x, divides d x ∧ divides d p ⊢ x = 0 ⟶ d = 1"
                },
                {
                    "args": "x = 0",
                    "id": "4.1.5.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "",
                    "id": "4.1.5.4.1",
                    "prevs": [
                        "4.1.5.4.0",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x = 0, 0 < x ⊢ (0::nat) < 0"
                },
                {
                    "args": "nat_less_def_1",
                    "id": "4.1.5.4.2",
                    "prevs": [
                        "4.1.5.4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x = 0, 0 < x ⊢ false"
                },
                {
                    "args": "not_false_res, d = 1",
                    "id": "4.1.5.4.3",
                    "prevs": [
                        "4.1.5.4.2"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x = 0, 0 < x ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.5.4.4",
                    "prevs": [
                        "4.1.5.4.0",
                        "4.1.5.4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, d = p, x < p, 0 < x, divides d x ∧ divides d p ⊢ x = 0 ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "4.1.5.5",
                    "prevs": [
                        "4.1.5.2",
                        "4.1.5.3",
                        "4.1.5.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, d = p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.5.6",
                    "prevs": [
                        "4.1.5.0",
                        "4.1.5.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "4.1.6",
                    "prevs": [
                        "4.1.3",
                        "4.1.4",
                        "4.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x < p, 0 < x, divides d x ∧ divides d p ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "4.1.7",
                    "prevs": [
                        "4.1.0",
                        "4.1.6"
                    ],
                    "rule": "intros",
                    "th": "prime p, x < p, 0 < x ⊢ divides d x ∧ divides d p ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x < p, 0 < x ⊢ d = 1 ⟶ divides d x ∧ divides d p"
                },
                {
                    "args": "d = 1",
                    "id": "4.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: x}",
                    "id": "4.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 x"
                },
                {
                    "args": "divides_1, {x: p}",
                    "id": "4.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 p"
                },
                {
                    "args": "conjI",
                    "id": "4.2.3",
                    "prevs": [
                        "4.2.1",
                        "4.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, d = 1, x < p, 0 < x ⊢ divides 1 x ∧ divides 1 p"
                },
                {
                    "args": "divides d x ∧ divides d p",
                    "id": "4.2.4",
                    "prevs": [
                        "4.2.0",
                        "4.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, d = 1, x < p, 0 < x ⊢ divides d x ∧ divides d p"
                },
                {
                    "args": "",
                    "id": "4.2.5",
                    "prevs": [
                        "4.2.0",
                        "4.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, x < p, 0 < x ⊢ d = 1 ⟶ divides d x ∧ divides d p"
                },
                {
                    "args": "iffI",
                    "id": "4.3",
                    "prevs": [
                        "4.1",
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x < p, 0 < x ⊢ divides d x ∧ divides d p ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, x < p, 0 < x ⊢ ∀d. divides d x ∧ divides d p ⟷ d = 1"
                },
                {
                    "args": "coprime_def, coprime x p",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, x < p, 0 < x ⊢ coprime x p"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ 0 < x ⟶ x < p ⟶ coprime x p"
                }
            ],
            "prop": "prime p ⟶ 0 < x ⟶ x < p ⟶ coprime x p",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.1.0"
                    ],
                    "goal_id": "4.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.1.2",
                        "4.1.1"
                    ],
                    "goal_id": "4.1.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4.1.3"
                    ],
                    "goal_id": "4.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.1.0"
                    ],
                    "goal_id": "4.1.5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.1.5.1"
                    ],
                    "goal_id": "4.1.5.2",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "4.1.5.2"
                    ],
                    "goal_id": "4.1.5.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.1.5.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.1.5.0",
                        "4.1.5.3.0"
                    ],
                    "goal_id": "4.1.5.3.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4.1.5.3.1"
                    ],
                    "goal_id": "4.1.5.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.1.5.3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "4.1.5.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1.5.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.1.5.4.0",
                        "1"
                    ],
                    "goal_id": "4.1.5.4.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4.1.5.4.1"
                    ],
                    "goal_id": "4.1.5.4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_def_1"
                },
                {
                    "fact_ids": [
                        "4.1.5.4.2"
                    ],
                    "goal_id": "4.1.5.4.3",
                    "method_name": "apply_resolve_step",
                    "theorem": "not_false_res"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.0"
                    ],
                    "goal_id": "4.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "4.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat",
                "x": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "divides_prime_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime q",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. ¬(divides p n) ⟷ coprime p n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ divides p q ⟶ p = q"
                },
                {
                    "args": "divides p q",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p q ⊢ divides p q"
                },
                {
                    "args": "double_neg",
                    "id": "4.1",
                    "prevs": [
                        "4.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "divides p q ⊢ ¬¬(divides p q)"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "3",
                        "4.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides p q ⊢ ¬(coprime p q)"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, divides p q ⊢ ¬(p = q) ⟶ ¬¬(coprime p q)"
                },
                {
                    "args": "¬(p = q)",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = q) ⊢ ¬(p = q)"
                },
                {
                    "args": "distinct_prime_coprime",
                    "id": "4.3.1",
                    "prevs": [
                        "0",
                        "1",
                        "4.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, divides p q, ¬(p = q) ⊢ coprime p q"
                },
                {
                    "args": "double_neg, ¬¬(coprime p q)",
                    "id": "4.3.2",
                    "prevs": [
                        "4.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, prime q, divides p q, ¬(p = q) ⊢ ¬¬(coprime p q)"
                },
                {
                    "args": "",
                    "id": "4.3.3",
                    "prevs": [
                        "4.3.0",
                        "4.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, divides p q ⊢ ¬(p = q) ⟶ ¬¬(coprime p q)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.4",
                    "prevs": [
                        "4.2",
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, divides p q ⊢ p = q"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ divides p q ⟶ p = q"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ p = q ⟶ divides p q"
                },
                {
                    "args": "p = q",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = q ⊢ p = q"
                },
                {
                    "args": "divides_self, {n: q}",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides q q"
                },
                {
                    "args": "divides p q",
                    "id": "5.2",
                    "prevs": [
                        "5.0",
                        "5.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, p = q ⊢ divides p q"
                },
                {
                    "args": "",
                    "id": "5.3",
                    "prevs": [
                        "5.0",
                        "5.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ p = q ⟶ divides p q"
                },
                {
                    "args": "iffI",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q ⊢ divides p q ⟷ p = q"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ prime q ⟶ divides p q ⟷ p = q"
                }
            ],
            "prop": "prime p ⟶ prime q ⟶ divides p q ⟷ p = q",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "distinct_prime_coprime"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.0"
                    ],
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat",
                "q": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_prime_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime q",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "divides_prime_prime",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q ⊢ divides p q ⟷ p = q"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, prime q ⊢ p = q ⟷ divides p q"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "4",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "q",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "prime p ⊢ coprime p q ⟷ ¬(divides p q)"
                },
                {
                    "args": "coprime p q ⟷ ¬(p = q)",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q ⊢ coprime p q ⟷ ¬(p = q)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ prime q ⟶ coprime p q ⟷ ¬(p = q)"
                }
            ],
            "prop": "prime p ⟶ prime q ⟶ coprime p q ⟷ ¬(p = q)",
            "steps": [
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_prime_prime"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat",
                "q": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "divides_prime_exp_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime q",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ divides 1 (q ^ n) ⟶ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "divides 1 (q ^ n)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 (q ^ n) ⊢ divides 1 (q ^ n)"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "disjI1, {A: (0::nat) = 0, B: p = q ∧ 0 ≤ n}",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q, divides 1 (q ^ n) ⊢ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ divides 1 (q ^ n) ⟶ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n ⟶ divides 1 (q ^ n)"
                },
                {
                    "args": "(0::nat) = 0 ∨ p = q ∧ 0 ≤ n",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) = 0 ∨ p = q ∧ 0 ≤ n ⊢ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "divides_1, {x: q ^ n}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 (q ^ n)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n ⟶ divides 1 (q ^ n)"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q ⊢ divides 1 (q ^ n) ⟷ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "nat_nat_power_def_1, divides (p ^ (0::nat)) (q ^ n) ⟷ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, prime q ⊢ divides (p ^ (0::nat)) (q ^ n) ⟷ (0::nat) = 0 ∨ p = q ∧ 0 ≤ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ ∀n1. divides (p ^ n1) (q ^ n) ⟷ n1 = 0 ∨ p = q ∧ n1 ≤ n ⟶ divides (p ^ Suc n1) (q ^ n) ⟷ Suc n1 = 0 ∨ p = q ∧ Suc n1 ≤ n"
                },
                {
                    "args": "m, nat",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n) ⟶ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "divides (p ^ Suc m) (q ^ n)",
                    "id": "6.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ Suc m) (q ^ n) ⊢ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "nat_nat_power_def_2",
                    "id": "6.2.1",
                    "prevs": [
                        "6.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (p ^ Suc m) (q ^ n) ⊢ divides (p * p ^ m) (q ^ n)"
                },
                {
                    "args": "divides_rmul2",
                    "id": "6.2.2",
                    "prevs": [
                        "6.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ Suc m) (q ^ n) ⊢ divides p (q ^ n)"
                },
                {
                    "args": "divides_prime_prime",
                    "id": "6.2.3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q ⊢ divides p q ⟷ p = q"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "6.2.4",
                    "prevs": [
                        "6.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, prime q ⊢ p = q ⟷ divides p q"
                },
                {
                    "args": "prime_divexp",
                    "id": "6.2.5",
                    "prevs": [
                        "0",
                        "6.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides (p ^ Suc m) (q ^ n) ⊢ divides p q"
                },
                {
                    "args": "p = q",
                    "id": "6.2.6",
                    "prevs": [
                        "6.2.4",
                        "6.2.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, divides (p ^ Suc m) (q ^ n), divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ p = q"
                },
                {
                    "args": "",
                    "id": "6.2.7",
                    "prevs": [
                        "6.2.6",
                        "6.2.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, divides (p ^ Suc m) (q ^ n), divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (q ^ Suc m) (q ^ n)"
                },
                {
                    "args": "prime_ge_2",
                    "id": "6.2.8",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q ⊢ 2 ≤ q"
                },
                {
                    "args": "divides_exp_le, {m: Suc m, n: n}",
                    "id": "6.2.9",
                    "prevs": [
                        "6.2.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime q ⊢ divides (q ^ Suc m) (q ^ n) ⟷ Suc m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.2.10",
                    "prevs": [
                        "6.2.9",
                        "6.2.7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, divides (p ^ Suc m) (q ^ n), divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "6.2.11",
                    "prevs": [
                        "6.2.6",
                        "6.2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, divides (p ^ Suc m) (q ^ n), divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "disjI2, {A: Suc m = 0, B: p = q ∧ Suc m ≤ n}",
                    "id": "6.2.12",
                    "prevs": [
                        "6.2.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q, divides (p ^ Suc m) (q ^ n), divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.2.13",
                    "prevs": [
                        "6.2.0",
                        "6.2.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n) ⟶ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m = 0 ∨ p = q ∧ Suc m ≤ n ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "Suc m = 0 ∨ p = q ∧ Suc m ≤ n",
                    "id": "6.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc m = 0 ∨ p = q ∧ Suc m ≤ n ⊢ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m = 0 ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "Suc m = 0",
                    "id": "6.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc m = 0 ⊢ Suc m = 0"
                },
                {
                    "args": "",
                    "id": "6.3.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, Suc m = 0, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ ¬(divides (p ^ Suc m) (q ^ n)) ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "¬(divides (p ^ Suc m) (q ^ n))",
                    "id": "6.3.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides (p ^ Suc m) (q ^ n)) ⊢ ¬(divides (p ^ Suc m) (q ^ n))"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: m}",
                    "id": "6.3.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc m)"
                },
                {
                    "args": "ineq_sym",
                    "id": "6.3.1.1.2",
                    "prevs": [
                        "6.3.1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, Suc m = 0, ¬(divides (p ^ Suc m) (q ^ n)), Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ ¬(Suc m = 0)"
                },
                {
                    "args": "",
                    "id": "6.3.1.1.3",
                    "prevs": [
                        "6.3.1.1.0",
                        "6.3.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, Suc m = 0, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ ¬(divides (p ^ Suc m) (q ^ n)) ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "6.3.1.2",
                    "prevs": [
                        "6.3.1.0",
                        "6.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, Suc m = 0, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "",
                    "id": "6.3.1.3",
                    "prevs": [
                        "6.3.1.0",
                        "6.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m = 0 ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "",
                    "id": "6.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ p = q ∧ Suc m ≤ n ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "p = q ∧ Suc m ≤ n",
                    "id": "6.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = q ∧ Suc m ≤ n ⊢ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "6.3.2.1",
                    "prevs": [
                        "6.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ Suc m ≤ n ⊢ p = q"
                },
                {
                    "args": "conjD2",
                    "id": "6.3.2.2",
                    "prevs": [
                        "6.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ Suc m ≤ n ⊢ Suc m ≤ n"
                },
                {
                    "args": "divides_exp_le_imp, {m: Suc m, n: n, p: q}",
                    "id": "6.3.2.3",
                    "prevs": [
                        "6.3.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = q ∧ Suc m ≤ n ⊢ divides (q ^ Suc m) (q ^ n)"
                },
                {
                    "args": "divides (p ^ Suc m) (q ^ n)",
                    "id": "6.3.2.4",
                    "prevs": [
                        "6.3.2.1",
                        "6.3.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, p = q ∧ Suc m ≤ n, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "",
                    "id": "6.3.2.5",
                    "prevs": [
                        "6.3.2.0",
                        "6.3.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ p = q ∧ Suc m ≤ n ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "disjE",
                    "id": "6.3.3",
                    "prevs": [
                        "6.3.0",
                        "6.3.1",
                        "6.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, Suc m = 0 ∨ p = q ∧ Suc m ≤ n, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "",
                    "id": "6.3.4",
                    "prevs": [
                        "6.3.0",
                        "6.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ Suc m = 0 ∨ p = q ∧ Suc m ≤ n ⟶ divides (p ^ Suc m) (q ^ n)"
                },
                {
                    "args": "iffI",
                    "id": "6.4",
                    "prevs": [
                        "6.2",
                        "6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⊢ divides (p ^ Suc m) (q ^ n) ⟷ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "",
                    "id": "6.5",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ ∀m. divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n ⟶ divides (p ^ Suc m) (q ^ n) ⟷ Suc m = 0 ∨ p = q ∧ Suc m ≤ n"
                },
                {
                    "args": "nat_induct, {P: λm. divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n, x: m}",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q ⊢ divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ prime q ⟶ divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n"
                }
            ],
            "prop": "prime p ⟶ prime q ⟶ divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "m"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "6.2.0"
                    ],
                    "goal_id": "6.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "6.2.1"
                    ],
                    "goal_id": "6.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_rmul2"
                },
                {
                    "goal_id": "6.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "6.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_prime_prime"
                },
                {
                    "fact_ids": [
                        "6.2.3"
                    ],
                    "goal_id": "6.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "6.2.4"
                    ],
                    "goal_id": "6.2.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0",
                        "6.2.2"
                    ],
                    "goal_id": "6.2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divexp"
                },
                {
                    "fact_ids": [
                        "6.2.6",
                        "6.2.0"
                    ],
                    "goal_id": "6.2.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "6.2.8",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "fact_ids": [
                        "6.2.8"
                    ],
                    "goal_id": "6.2.9",
                    "method_name": "apply_forward_step",
                    "param_m": "Suc m",
                    "param_n": "n",
                    "theorem": "divides_exp_le"
                },
                {
                    "fact_ids": [
                        "6.2.9",
                        "6.2.7"
                    ],
                    "goal_id": "6.2.10",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "6.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.3.0"
                    ],
                    "goal_id": "6.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "6.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.3.1.0"
                    ],
                    "goal_id": "6.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "6.3.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "6.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "6.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.3.2.0"
                    ],
                    "goal_id": "6.3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.3.2.0"
                    ],
                    "goal_id": "6.3.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "6.3.2.1"
                    ],
                    "goal_id": "6.3.2.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "6.3.2.2"
                    ],
                    "goal_id": "6.3.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_exp_le_imp"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat",
                "q": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "eq_prime_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime q",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ p ^ m = q ^ n ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "p ^ m = q ^ n",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ m = q ^ n ⊢ p ^ m = q ^ n"
                },
                {
                    "args": "divides_prime_exp_le, {m: m, n: n}",
                    "id": "2.1",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q ⊢ divides (p ^ m) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ divides (q ^ n) (q ^ n) ⟷ m = 0 ∨ p = q ∧ m ≤ n"
                },
                {
                    "args": "divides_self, {n: q ^ n}",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (q ^ n) (q ^ n)"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.2",
                        "2.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ m = 0 ∨ p = q ∧ m ≤ n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.5",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ m = q ^ n ⊢ q ^ n = p ^ m"
                },
                {
                    "args": "divides_prime_exp_le, {m: n, n: m}",
                    "id": "2.6",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q ⊢ divides (q ^ n) (p ^ m) ⟷ n = 0 ∨ q = p ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.7",
                    "prevs": [
                        "2.5",
                        "2.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ divides (p ^ m) (p ^ m) ⟷ n = 0 ∨ q = p ∧ n ≤ m"
                },
                {
                    "args": "divides_self, {n: p ^ m}",
                    "id": "2.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ m) (p ^ m)"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.7",
                        "2.8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ n = 0 ∨ q = p ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ m = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "m = 0",
                    "id": "2.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ⊢ m = 0"
                },
                {
                    "args": "",
                    "id": "2.10.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, m = 0, p ^ m = q ^ n ⊢ n = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "n = 0",
                    "id": "2.10.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "conjI",
                    "id": "2.10.1.1",
                    "prevs": [
                        "2.10.0",
                        "2.10.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, m = 0, n = 0, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0"
                },
                {
                    "args": "disjI1, {A: m = 0 ∧ n = 0, B: p = q ∧ m = n}",
                    "id": "2.10.1.2",
                    "prevs": [
                        "2.10.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q, m = 0, n = 0, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.10.1.3",
                    "prevs": [
                        "2.10.1.0",
                        "2.10.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, m = 0, p ^ m = q ^ n ⊢ n = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.10.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, m = 0, p ^ m = q ^ n ⊢ ¬(n = 0) ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2.10.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "2.10.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, m = 0, ¬(n = 0), p ^ m = q ^ n ⊢ q = p ∧ n ≤ m ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "q = p ∧ n ≤ m",
                    "id": "2.10.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "q = p ∧ n ≤ m ⊢ q = p ∧ n ≤ m"
                },
                {
                    "args": "conjD2",
                    "id": "2.10.2.1.1",
                    "prevs": [
                        "2.10.2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "q = p ∧ n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.10.2.1.2",
                    "prevs": [
                        "2.10.0",
                        "2.10.2.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "m = 0, q = p ∧ n ≤ m ⊢ n ≤ 0"
                },
                {
                    "args": "nat_less_eq_def_1",
                    "id": "2.10.2.1.3",
                    "prevs": [
                        "2.10.2.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m = 0, q = p ∧ n ≤ m ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: m = 0 ∧ n = 0 ∨ p = q ∧ m = n}",
                    "id": "2.10.2.1.4",
                    "prevs": [
                        "2.10.2.0",
                        "2.10.2.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = 0, ¬(n = 0), q = p ∧ n ≤ m ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.10.2.1.5",
                    "prevs": [
                        "2.10.2.1.0",
                        "2.10.2.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, m = 0, ¬(n = 0), p ^ m = q ^ n ⊢ q = p ∧ n ≤ m ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "disjE",
                    "id": "2.10.2.2",
                    "prevs": [
                        "2.9",
                        "2.10.1",
                        "2.10.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, m = 0, ¬(n = 0), p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.10.2.3",
                    "prevs": [
                        "2.10.2.0",
                        "2.10.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, m = 0, p ^ m = q ^ n ⊢ ¬(n = 0) ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "classical_cases",
                    "id": "2.10.3",
                    "prevs": [
                        "2.10.1",
                        "2.10.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, m = 0, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.10.4",
                    "prevs": [
                        "2.10.0",
                        "2.10.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ m = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ p = q ∧ m ≤ n ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "p = q ∧ m ≤ n",
                    "id": "2.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = q ∧ m ≤ n ⊢ p = q ∧ m ≤ n"
                },
                {
                    "args": "",
                    "id": "2.11.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ n = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "n = 0",
                    "id": "2.11.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "conjD2",
                    "id": "2.11.1.1",
                    "prevs": [
                        "2.11.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "",
                    "id": "2.11.1.2",
                    "prevs": [
                        "2.11.1.0",
                        "2.11.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = 0, p = q ∧ m ≤ n ⊢ m ≤ 0"
                },
                {
                    "args": "nat_less_eq_def_1",
                    "id": "2.11.1.3",
                    "prevs": [
                        "2.11.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n = 0, p = q ∧ m ≤ n ⊢ m = 0"
                },
                {
                    "args": "conjI",
                    "id": "2.11.1.4",
                    "prevs": [
                        "2.11.1.3",
                        "2.11.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, n = 0, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0"
                },
                {
                    "args": "disjI1, {A: m = 0 ∧ n = 0, B: p = q ∧ m = n}",
                    "id": "2.11.1.5",
                    "prevs": [
                        "2.11.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q, n = 0, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.11.1.6",
                    "prevs": [
                        "2.11.1.0",
                        "2.11.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ n = 0 ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.11.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ q = p ∧ n ≤ m ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "q = p ∧ n ≤ m",
                    "id": "2.11.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "q = p ∧ n ≤ m ⊢ q = p ∧ n ≤ m"
                },
                {
                    "args": "conjD1",
                    "id": "2.11.2.1",
                    "prevs": [
                        "2.11.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m ≤ n ⊢ p = q"
                },
                {
                    "args": "conjD2",
                    "id": "2.11.2.2",
                    "prevs": [
                        "2.11.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "conjD2",
                    "id": "2.11.2.3",
                    "prevs": [
                        "2.11.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "q = p ∧ n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "conjI",
                    "id": "2.11.2.4",
                    "prevs": [
                        "2.11.2.2",
                        "2.11.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m ≤ n, q = p ∧ n ≤ m ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "le_antisym",
                    "id": "2.11.2.5",
                    "prevs": [
                        "2.11.2.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = q ∧ m ≤ n, q = p ∧ n ≤ m ⊢ m = n"
                },
                {
                    "args": "conjI",
                    "id": "2.11.2.6",
                    "prevs": [
                        "2.11.2.1",
                        "2.11.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, q = p ∧ n ≤ m, p ^ m = q ^ n ⊢ p = q ∧ m = n"
                },
                {
                    "args": "disjI2, {A: m = 0 ∧ n = 0, B: p = q ∧ m = n}",
                    "id": "2.11.2.7",
                    "prevs": [
                        "2.11.2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, q = p ∧ n ≤ m, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.11.2.8",
                    "prevs": [
                        "2.11.2.0",
                        "2.11.2.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ q = p ∧ n ≤ m ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "disjE",
                    "id": "2.11.3",
                    "prevs": [
                        "2.9",
                        "2.11.1",
                        "2.11.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, p = q ∧ m ≤ n, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.11.4",
                    "prevs": [
                        "2.11.0",
                        "2.11.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ p = q ∧ m ≤ n ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "disjE",
                    "id": "2.12",
                    "prevs": [
                        "2.4",
                        "2.10",
                        "2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, p ^ m = q ^ n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "2.13",
                    "prevs": [
                        "2.0",
                        "2.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ p ^ m = q ^ n ⟶ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "m = 0 ∧ n = 0 ∨ p = q ∧ m = n",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ m = 0 ∧ n = 0 ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "m = 0 ∧ n = 0",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ∧ n = 0 ⊢ m = 0 ∧ n = 0"
                },
                {
                    "args": "conjD1",
                    "id": "3.1.1",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = 0 ∧ n = 0 ⊢ m = 0"
                },
                {
                    "args": "conjD2",
                    "id": "3.1.2",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m = 0 ∧ n = 0 ⊢ n = 0"
                },
                {
                    "args": "nat_nat_power_def_1, p ^ (0::nat) = q ^ (0::nat)",
                    "id": "3.1.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p ^ (0::nat) = q ^ (0::nat)"
                },
                {
                    "args": "p ^ (0::nat) = q ^ n",
                    "id": "3.1.4",
                    "prevs": [
                        "3.1.2",
                        "3.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, m = 0 ∧ n = 0, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p ^ (0::nat) = q ^ n"
                },
                {
                    "args": "p ^ m = q ^ n",
                    "id": "3.1.5",
                    "prevs": [
                        "3.1.1",
                        "3.1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, m = 0 ∧ n = 0, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p ^ m = q ^ n"
                },
                {
                    "args": "",
                    "id": "3.1.6",
                    "prevs": [
                        "3.1.0",
                        "3.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ m = 0 ∧ n = 0 ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime q, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p = q ∧ m = n ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "p = q ∧ m = n",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = q ∧ m = n ⊢ p = q ∧ m = n"
                },
                {
                    "args": "conjD1",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m = n ⊢ p = q"
                },
                {
                    "args": "conjD2",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = q ∧ m = n ⊢ m = n"
                },
                {
                    "args": "q ^ m = q ^ n",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = q ∧ m = n ⊢ q ^ m = q ^ n"
                },
                {
                    "args": "p ^ m = q ^ n",
                    "id": "3.2.4",
                    "prevs": [
                        "3.2.1",
                        "3.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime q, p = q ∧ m = n, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p ^ m = q ^ n"
                },
                {
                    "args": "",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.0",
                        "3.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p = q ∧ m = n ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "disjE",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q, m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⊢ p ^ m = q ^ n"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime q ⊢ m = 0 ∧ n = 0 ∨ p = q ∧ m = n ⟶ p ^ m = q ^ n"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime q ⊢ p ^ m = q ^ n ⟷ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ prime q ⟶ p ^ m = q ^ n ⟷ m = 0 ∧ n = 0 ∨ p = q ∧ m = n"
                }
            ],
            "prop": "prime p ⟶ prime q ⟶ p ^ m = q ^ n ⟷ m = 0 ∧ n = 0 ∨ p = q ∧ m = n",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "param_m": "m",
                    "param_n": "n",
                    "theorem": "divides_prime_exp_le"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "divides (q ^ n) (q ^ n)",
                    "goal_id": "2.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "2.2",
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2.6",
                    "method_name": "apply_forward_step",
                    "param_m": "n",
                    "param_n": "m",
                    "theorem": "divides_prime_exp_le"
                },
                {
                    "fact_ids": [
                        "2.5",
                        "2.6"
                    ],
                    "goal_id": "2.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "divides (p ^ m) (p ^ m)",
                    "goal_id": "2.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "2.7",
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "introduction"
                },
                {
                    "case": "n=0",
                    "goal_id": "2.10.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2.10.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.10.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.10.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.10.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.9"
                    ],
                    "goal_id": "2.10.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.10.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.10.2.1.0"
                    ],
                    "goal_id": "2.10.2.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.10.0",
                        "2.10.2.1.1"
                    ],
                    "goal_id": "2.10.2.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.10.2.1.2"
                    ],
                    "goal_id": "2.10.2.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "fact_ids": [
                        "2.10.2.0",
                        "2.10.2.1.3"
                    ],
                    "goal_id": "2.10.2.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.9"
                    ],
                    "goal_id": "2.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.11.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.11.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.11.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.11.0"
                    ],
                    "goal_id": "2.11.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.11.1.0",
                        "2.11.1.1"
                    ],
                    "goal_id": "2.11.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.11.1.2"
                    ],
                    "goal_id": "2.11.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "2.11.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.11.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.11.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.11.0"
                    ],
                    "goal_id": "2.11.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.11.0"
                    ],
                    "goal_id": "2.11.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.11.2.0"
                    ],
                    "goal_id": "2.11.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.11.2.2",
                        "2.11.2.3"
                    ],
                    "goal_id": "2.11.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.11.2.4"
                    ],
                    "goal_id": "2.11.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_antisym"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.1.1"
                    ],
                    "goal_id": "3.1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.1.2"
                    ],
                    "goal_id": "3.1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.2.1"
                    ],
                    "goal_id": "3.2.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.2.2"
                    ],
                    "goal_id": "3.2.3",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat",
                "q": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_odd",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "(2::nat)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ⊢ divides 2 p ⟶ (2::nat) = 1 ∨ 2 = p"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ even p ⟶ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "even p",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even p ⊢ even p"
                },
                {
                    "args": "divides_2",
                    "id": "4.1",
                    "prevs": [
                        "4.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "even p ⊢ divides 2 p"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "3",
                        "4.1"
                    ],
                    "rule": "apply_fact",
                    "th": "even p, prime p ⊢ (2::nat) = 1 ∨ 2 = p"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even p, prime p ⊢ (2::nat) = 1 ⟶ p = 2"
                },
                {
                    "args": "(2::nat) = 1",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(2::nat) = 1 ⊢ (2::nat) = 1"
                },
                {
                    "args": "p = 2",
                    "id": "4.3.1",
                    "prevs": [
                        "4.3.0"
                    ],
                    "rule": "z3",
                    "th": "(2::nat) = 1 ⊢ p = 2"
                },
                {
                    "args": "",
                    "id": "4.3.2",
                    "prevs": [
                        "4.3.0",
                        "4.3.1"
                    ],
                    "rule": "intros",
                    "th": "even p, prime p ⊢ (2::nat) = 1 ⟶ p = 2"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even p, prime p ⊢ 2 = p ⟶ p = 2"
                },
                {
                    "args": "2 = p",
                    "id": "4.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "2 = p ⊢ 2 = p"
                },
                {
                    "args": "eq_sym_eq, p = 2",
                    "id": "4.4.1",
                    "prevs": [
                        "4.4.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even p, prime p, 2 = p ⊢ p = 2"
                },
                {
                    "args": "",
                    "id": "4.4.2",
                    "prevs": [
                        "4.4.0",
                        "4.4.1"
                    ],
                    "rule": "intros",
                    "th": "even p, prime p ⊢ 2 = p ⟶ p = 2"
                },
                {
                    "args": "disjE",
                    "id": "4.5",
                    "prevs": [
                        "4.2",
                        "4.3",
                        "4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "even p, prime p ⊢ p = 2"
                },
                {
                    "args": "disjI1, {A: p = 2, B: ¬(even p)}",
                    "id": "4.6",
                    "prevs": [
                        "4.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even p, prime p ⊢ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "",
                    "id": "4.7",
                    "prevs": [
                        "4.0",
                        "4.6"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ even p ⟶ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(even p) ⟶ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "¬(even p)",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(even p) ⊢ ¬(even p)"
                },
                {
                    "args": "disjI2, {A: p = 2, B: ¬(even p)}",
                    "id": "5.1",
                    "prevs": [
                        "5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(even p) ⊢ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [
                        "5.0",
                        "5.1"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(even p) ⟶ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "classical_cases",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ p = 2 ∨ ¬(even p)"
                },
                {
                    "args": "not_even, p = 2 ∨ odd p",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "prime p ⊢ p = 2 ∨ odd p"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ p = 2 ∨ odd p"
                }
            ],
            "prop": "prime p ⟶ p = 2 ∨ odd p",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "forall_elim",
                    "s": "(2::nat)"
                },
                {
                    "case": "even p",
                    "goal_id": "4",
                    "method_name": "cases"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "divides_2"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.1"
                    ],
                    "goal_id": "4.2",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.0"
                    ],
                    "goal_id": "4.3.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "odd_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p = 0 ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "p = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 0 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 0 ⊢ ¬(odd p ⟷ 3 ≤ p) ⟶ ¬(prime 0)"
                },
                {
                    "args": "¬(odd p ⟷ 3 ≤ p)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(odd p ⟷ 3 ≤ p) ⊢ ¬(odd p ⟷ 3 ≤ p)"
                },
                {
                    "args": "prime_0",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 0 ⊢ ¬(odd p ⟷ 3 ≤ p) ⟶ ¬(prime 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 0 ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p = 0 ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(p = 0) ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 0) ⊢ 1 ≤ p"
                },
                {
                    "args": "le_lt",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p = 0) ⊢ 1 < p ∨ 1 = p"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0) ⊢ 1 < p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "1 < p",
                    "id": "2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 < p ⊢ 1 < p"
                },
                {
                    "args": "",
                    "id": "2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 < p, ¬(p = 0) ⊢ p = 2 ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "p = 2",
                    "id": "2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 2 ⊢ p = 2"
                },
                {
                    "args": "",
                    "id": "2.3.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ odd 2 ⟶ (3::nat) ≤ 2"
                },
                {
                    "args": "odd 2",
                    "id": "2.3.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd 2 ⊢ odd 2"
                },
                {
                    "args": "not_even",
                    "id": "2.3.1.1.1",
                    "prevs": [
                        "2.3.1.1.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "odd 2 ⊢ ¬(even 2)"
                },
                {
                    "args": "mult_1_right, (2::nat) = 2 * 1",
                    "id": "2.3.1.1.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (2::nat) = 2 * 1"
                },
                {
                    "args": "exI, {P: λm::nat. 2 = 2 * m, a: (1::nat)}",
                    "id": "2.3.1.1.3",
                    "prevs": [
                        "2.3.1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, 1 < p, ¬(p = 0), odd 2, p = 2 ⊢ ∃a1::nat. 2 = 2 * a1"
                },
                {
                    "args": "even_exists, even 2",
                    "id": "2.3.1.1.4",
                    "prevs": [
                        "2.3.1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, 1 < p, ¬(p = 0), odd 2, p = 2 ⊢ even 2"
                },
                {
                    "args": "negE_gen, {A: even 2, C: (3::nat) ≤ 2}",
                    "id": "2.3.1.1.5",
                    "prevs": [
                        "2.3.1.1.1",
                        "2.3.1.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, 1 < p, ¬(p = 0), odd 2, p = 2 ⊢ (3::nat) ≤ 2"
                },
                {
                    "args": "",
                    "id": "2.3.1.1.6",
                    "prevs": [
                        "2.3.1.1.0",
                        "2.3.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ odd 2 ⟶ (3::nat) ≤ 2"
                },
                {
                    "args": "",
                    "id": "2.3.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ (3::nat) ≤ 2 ⟶ odd 2"
                },
                {
                    "args": "(3::nat) ≤ 2",
                    "id": "2.3.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(3::nat) ≤ 2 ⊢ (3::nat) ≤ 2"
                },
                {
                    "args": "odd 2",
                    "id": "2.3.1.2.1",
                    "prevs": [
                        "2.3.1.2.0"
                    ],
                    "rule": "z3",
                    "th": "(3::nat) ≤ 2 ⊢ odd 2"
                },
                {
                    "args": "",
                    "id": "2.3.1.2.2",
                    "prevs": [
                        "2.3.1.2.0",
                        "2.3.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ (3::nat) ≤ 2 ⟶ odd 2"
                },
                {
                    "args": "iffI",
                    "id": "2.3.1.3",
                    "prevs": [
                        "2.3.1.1",
                        "2.3.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ odd 2 ⟷ (3::nat) ≤ 2"
                },
                {
                    "args": "odd p ⟷ 3 ≤ p",
                    "id": "2.3.1.4",
                    "prevs": [
                        "2.3.1.0",
                        "2.3.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, 1 < p, ¬(p = 0), p = 2 ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.1.5",
                    "prevs": [
                        "2.3.1.0",
                        "2.3.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0) ⊢ p = 2 ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 < p, ¬(p = 0) ⊢ ¬(p = 2) ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "¬(p = 2)",
                    "id": "2.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 2) ⊢ ¬(p = 2)"
                },
                {
                    "args": "prime_odd",
                    "id": "2.3.2.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ p = 2 ∨ odd p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "odd p",
                    "id": "2.3.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd p ⊢ odd p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd p, prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟶ 3 ≤ p"
                },
                {
                    "args": "3 ≤ p",
                    "id": "2.3.2.2.1.0",
                    "prevs": [
                        "2.3.2.0",
                        "2.3.0"
                    ],
                    "rule": "z3",
                    "th": "1 < p, ¬(p = 2) ⊢ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2.1.1",
                    "prevs": [
                        "2.3.2.2.0",
                        "2.3.2.2.1.0"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟶ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd p, prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ 3 ≤ p ⟶ odd p"
                },
                {
                    "args": "3 ≤ p",
                    "id": "2.3.2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "3 ≤ p ⊢ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2.2.1",
                    "prevs": [
                        "2.3.2.2.2.0",
                        "2.3.2.2.0"
                    ],
                    "rule": "intros",
                    "th": "odd p, prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ 3 ≤ p ⟶ odd p"
                },
                {
                    "args": "iffI",
                    "id": "2.3.2.2.3",
                    "prevs": [
                        "2.3.2.2.1",
                        "2.3.2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd p, prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2.2.4",
                    "prevs": [
                        "2.3.2.2.0",
                        "2.3.2.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "disjE",
                    "id": "2.3.2.3",
                    "prevs": [
                        "2.3.2.1",
                        "2.3.1",
                        "2.3.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, 1 < p, ¬(p = 0), ¬(p = 2) ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.2.4",
                    "prevs": [
                        "2.3.2.0",
                        "2.3.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 < p, ¬(p = 0) ⊢ ¬(p = 2) ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "classical_cases",
                    "id": "2.3.3",
                    "prevs": [
                        "2.3.1",
                        "2.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, 1 < p, ¬(p = 0) ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.3.4",
                    "prevs": [
                        "2.3.0",
                        "2.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0) ⊢ 1 < p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0) ⊢ 1 = p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "1 = p",
                    "id": "2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 = p ⊢ 1 = p"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.4.1",
                    "prevs": [
                        "2.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 = p ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.4.2",
                    "prevs": [
                        "2.4.1",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, 1 = p ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "2.4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, 1 = p, ¬(p = 0) ⊢ ¬(odd p ⟷ 3 ≤ p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(odd p ⟷ 3 ≤ p)",
                    "id": "2.4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(odd p ⟷ 3 ≤ p) ⊢ ¬(odd p ⟷ 3 ≤ p)"
                },
                {
                    "args": "prime_1",
                    "id": "2.4.3.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "2.4.3.2",
                    "prevs": [
                        "2.4.3.0",
                        "2.4.3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, 1 = p, ¬(p = 0) ⊢ ¬(odd p ⟷ 3 ≤ p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.4.4",
                    "prevs": [
                        "2.4.2",
                        "2.4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, 1 = p, ¬(p = 0) ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.4.5",
                    "prevs": [
                        "2.4.0",
                        "2.4.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0) ⊢ 1 = p ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "disjE",
                    "id": "2.5",
                    "prevs": [
                        "2.2",
                        "2.3",
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0) ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(p = 0) ⟶ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ odd p ⟷ 3 ≤ p"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ odd p ⟷ 3 ≤ p"
                }
            ],
            "prop": "prime p ⟶ odd p ⟷ 3 ≤ p",
            "steps": [
                {
                    "case": "p=0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_lt"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "introduction"
                },
                {
                    "case": "p=2",
                    "goal_id": "2.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.3.1.0"
                    ],
                    "goal_id": "2.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.3.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.3.1.1.0"
                    ],
                    "goal_id": "2.3.1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "fact_ids": [
                        "2.3.1.1.1"
                    ],
                    "goal_id": "2.3.1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.3.1.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_exists"
                },
                {
                    "goal_id": "2.3.1.1.2",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "2.3.1.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "goal_id": "2.3.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.3.1.2.0"
                    ],
                    "goal_id": "2.3.1.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_odd"
                },
                {
                    "fact_ids": [
                        "2.3.2.1"
                    ],
                    "goal_id": "2.3.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.3.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.3.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.3.2.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.3.2.0",
                        "2.3.0"
                    ],
                    "goal_id": "2.3.2.2.1.0",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.3.2.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.4.0"
                    ],
                    "goal_id": "2.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.4.1",
                        "0"
                    ],
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.4.2"
                    ],
                    "goal_id": "2.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "divides_fact_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀n. divides p (fact n) ⟷ p ≤ n"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ divides p 1 ⟶ p = 0"
                },
                {
                    "args": "divides p 1",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p 1 ⊢ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides p 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p 1 ⊢ ¬(p = 0) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "prime_1",
                    "id": "1.1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "1.1.3.2",
                    "prevs": [
                        "1.1.3.0",
                        "1.1.3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p 1 ⊢ ¬(p = 0) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.2",
                        "1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p 1 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ divides p 1 ⟶ p = 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p = 0 ⟶ divides p 1"
                },
                {
                    "args": "p = 0",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 0 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 0 ⊢ ¬(divides p 1) ⟶ ¬(prime 0)"
                },
                {
                    "args": "¬(divides p 1)",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p 1) ⊢ ¬(divides p 1)"
                },
                {
                    "args": "prime_0",
                    "id": "1.2.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 0 ⊢ ¬(divides p 1) ⟶ ¬(prime 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 0 ⊢ divides p 1"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p = 0 ⟶ divides p 1"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ divides p 1 ⟷ p = 0"
                },
                {
                    "args": "fact_def_1, divides p (fact 0) ⟷ p = 0",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ divides p (fact 0) ⟷ p = 0"
                },
                {
                    "args": "nat_less_eq_def_1, divides p (fact 0) ⟷ p ≤ 0",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ divides p (fact 0) ⟷ p ≤ 0"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀n. divides p (fact n) ⟷ p ≤ n ⟶ divides p (fact (Suc n)) ⟷ p ≤ Suc n"
                },
                {
                    "args": "divides p (fact n) ⟷ p ≤ n",
                    "id": "1.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (fact n) ⟷ p ≤ n ⊢ divides p (fact n) ⟷ p ≤ n"
                },
                {
                    "args": "",
                    "id": "1.6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "divides p (Suc n * fact n)",
                    "id": "1.6.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (Suc n * fact n) ⊢ divides p (Suc n * fact n)"
                },
                {
                    "args": "prime_divprod_eq, {a: Suc n, b: fact n}",
                    "id": "1.6.1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p (Suc n * fact n) ⟷ divides p (Suc n) ∨ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.1.2",
                    "prevs": [
                        "1.6.1.1",
                        "1.6.1.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides p (Suc n * fact n) ⊢ divides p (Suc n) ∨ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "divides p (Suc n)",
                    "id": "1.6.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (Suc n) ⊢ divides p (Suc n)"
                },
                {
                    "args": "divides_le",
                    "id": "1.6.1.3.1",
                    "prevs": [
                        "1.6.1.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p (Suc n) ⊢ p ≤ Suc n ∨ Suc n = 0"
                },
                {
                    "args": "p ≤ Suc n ⟶ p ≤ Suc n",
                    "id": "1.6.1.3.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ p ≤ Suc n ⟶ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (Suc n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ Suc n = 0 ⟶ p ≤ Suc n"
                },
                {
                    "args": "Suc n = 0",
                    "id": "1.6.1.3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc n = 0 ⊢ Suc n = 0"
                },
                {
                    "args": "",
                    "id": "1.6.1.3.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (Suc n), Suc n = 0, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ ¬(p ≤ Suc n) ⟶ ¬(Suc n = 0)"
                },
                {
                    "args": "¬(p ≤ Suc n)",
                    "id": "1.6.1.3.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ≤ Suc n) ⊢ ¬(p ≤ Suc n)"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: n}",
                    "id": "1.6.1.3.3.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc n)"
                },
                {
                    "args": "ineq_sym",
                    "id": "1.6.1.3.3.1.2",
                    "prevs": [
                        "1.6.1.3.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (Suc n), Suc n = 0, ¬(p ≤ Suc n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "1.6.1.3.3.1.3",
                    "prevs": [
                        "1.6.1.3.3.1.0",
                        "1.6.1.3.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (Suc n), Suc n = 0, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ ¬(p ≤ Suc n) ⟶ ¬(Suc n = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.6.1.3.3.2",
                    "prevs": [
                        "1.6.1.3.3.0",
                        "1.6.1.3.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (Suc n), Suc n = 0, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.3.3.3",
                    "prevs": [
                        "1.6.1.3.3.0",
                        "1.6.1.3.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (Suc n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ Suc n = 0 ⟶ p ≤ Suc n"
                },
                {
                    "args": "disjE",
                    "id": "1.6.1.3.4",
                    "prevs": [
                        "1.6.1.3.1",
                        "1.6.1.3.2",
                        "1.6.1.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (Suc n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.3.5",
                    "prevs": [
                        "1.6.1.3.0",
                        "1.6.1.3.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ divides p (fact n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "divides p (fact n)",
                    "id": "1.6.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (fact n) ⊢ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.1.4.1",
                    "prevs": [
                        "1.6.0",
                        "1.6.1.4.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides p (fact n), divides p (fact n) ⟷ p ≤ n ⊢ p ≤ n"
                },
                {
                    "args": "disjI2, {A: p = Suc n, B: p ≤ n}",
                    "id": "1.6.1.4.2",
                    "prevs": [
                        "1.6.1.4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p (fact n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ p = Suc n ∨ p ≤ n"
                },
                {
                    "args": "nat_less_eq_def_2, p ≤ Suc n",
                    "id": "1.6.1.4.3",
                    "prevs": [
                        "1.6.1.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, divides p (fact n), divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.4.4",
                    "prevs": [
                        "1.6.1.4.0",
                        "1.6.1.4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ divides p (fact n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "disjE",
                    "id": "1.6.1.5",
                    "prevs": [
                        "1.6.1.2",
                        "1.6.1.3",
                        "1.6.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (Suc n * fact n), divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.1.6",
                    "prevs": [
                        "1.6.1.0",
                        "1.6.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n) ⟶ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "p ≤ Suc n",
                    "id": "1.6.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ Suc n ⊢ p ≤ Suc n"
                },
                {
                    "args": "nat_less_eq_def_2",
                    "id": "1.6.2.1",
                    "prevs": [
                        "1.6.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ≤ Suc n ⊢ p = Suc n ∨ p ≤ n"
                },
                {
                    "args": "",
                    "id": "1.6.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ p = Suc n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "p = Suc n",
                    "id": "1.6.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = Suc n ⊢ p = Suc n"
                },
                {
                    "args": "divides_self, {n: Suc n}",
                    "id": "1.6.2.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (Suc n) (Suc n)"
                },
                {
                    "args": "divides_rmul, {a: Suc n, d: Suc n, x: fact n}",
                    "id": "1.6.2.2.2",
                    "prevs": [
                        "1.6.2.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p = Suc n, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ divides (Suc n) (Suc n * fact n)"
                },
                {
                    "args": "divides p (Suc n * fact n)",
                    "id": "1.6.2.2.3",
                    "prevs": [
                        "1.6.2.2.0",
                        "1.6.2.2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = Suc n, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.2.2.4",
                    "prevs": [
                        "1.6.2.2.0",
                        "1.6.2.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ p = Suc n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ p ≤ n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "p ≤ n",
                    "id": "1.6.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ n ⊢ p ≤ n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.6.2.3.1",
                    "prevs": [
                        "1.6.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p (fact n) ⟷ p ≤ n ⊢ p ≤ n ⟷ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.2.3.2",
                    "prevs": [
                        "1.6.2.3.1",
                        "1.6.2.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p ≤ n, divides p (fact n) ⟷ p ≤ n ⊢ divides p (fact n)"
                },
                {
                    "args": "divides_lmul, {a: fact n, d: p, x: Suc n}",
                    "id": "1.6.2.3.3",
                    "prevs": [
                        "1.6.2.3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p ≤ n, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.2.3.4",
                    "prevs": [
                        "1.6.2.3.0",
                        "1.6.2.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ p ≤ n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "disjE",
                    "id": "1.6.2.4",
                    "prevs": [
                        "1.6.2.1",
                        "1.6.2.2",
                        "1.6.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p ≤ Suc n, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n)"
                },
                {
                    "args": "",
                    "id": "1.6.2.5",
                    "prevs": [
                        "1.6.2.0",
                        "1.6.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ p ≤ Suc n ⟶ divides p (Suc n * fact n)"
                },
                {
                    "args": "iffI",
                    "id": "1.6.3",
                    "prevs": [
                        "1.6.1",
                        "1.6.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ divides p (Suc n * fact n) ⟷ p ≤ Suc n"
                },
                {
                    "args": "fact_def_2, divides p (fact (Suc n)) ⟷ p ≤ Suc n",
                    "id": "1.6.4",
                    "prevs": [
                        "1.6.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, divides p (fact n) ⟷ p ≤ n ⊢ divides p (fact (Suc n)) ⟷ p ≤ Suc n"
                },
                {
                    "args": "",
                    "id": "1.6.5",
                    "prevs": [
                        "1.0",
                        "1.6.0",
                        "1.6.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀n. divides p (fact n) ⟷ p ≤ n ⟶ divides p (fact (Suc n)) ⟷ p ≤ Suc n"
                },
                {
                    "args": "nat_induct, {P: λn. divides p (fact n) ⟷ p ≤ n, x: n}",
                    "id": "1.7",
                    "prevs": [
                        "1.5",
                        "1.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides p (fact n) ⟷ p ≤ n"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀n. divides p (fact n) ⟷ p ≤ n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ (∀n. divides p (fact n) ⟷ p ≤ n)"
                }
            ],
            "prop": "prime p ⟶ (∀n. divides p (fact n) ⟷ p ≤ n)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "1.1.1",
                        "0"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0",
                        "0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_2"
                },
                {
                    "goal_id": "1.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.6.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.6.1.1",
                    "method_name": "apply_forward_step",
                    "param_a": "Suc n",
                    "param_b": "fact n",
                    "theorem": "prime_divprod_eq"
                },
                {
                    "fact_ids": [
                        "1.6.1.1",
                        "1.6.1.0"
                    ],
                    "goal_id": "1.6.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.6.1.2"
                    ],
                    "goal_id": "1.6.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.6.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.1.3.0"
                    ],
                    "goal_id": "1.6.1.3.1",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.6.1.3.1"
                    ],
                    "goal_id": "1.6.1.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.6.1.3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.1.3.3.0"
                    ],
                    "goal_id": "1.6.1.3.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.6.1.3.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.6.1.3.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "1.6.1.3.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "1.6.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.0",
                        "1.6.1.4.0"
                    ],
                    "goal_id": "1.6.1.4.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.6.1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_2"
                },
                {
                    "goal_id": "1.6.1.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.6.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.2.0"
                    ],
                    "goal_id": "1.6.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_2"
                },
                {
                    "fact_ids": [
                        "1.6.2.1"
                    ],
                    "goal_id": "1.6.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.6.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.2.2.0"
                    ],
                    "goal_id": "1.6.2.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.6.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "1.6.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.6.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.6.0"
                    ],
                    "goal_id": "1.6.2.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.6.2.3.1",
                        "1.6.2.3.0"
                    ],
                    "goal_id": "1.6.2.3.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.6.2.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "eq_prime_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p = 0 ⟶ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "p = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 0 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 0 ⊢ ¬((if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m) ⟶ ¬(prime 0)"
                },
                {
                    "args": "¬((if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m) ⊢ ¬((if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m)"
                },
                {
                    "args": "prime_0",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 0 ⊢ ¬((if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m) ⟶ ¬(prime 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 0 ⊢ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p = 0 ⟶ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(p = 0) ⟶ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0) ⊢ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "(p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m)",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m)"
                },
                {
                    "args": "conjD1",
                    "id": "2.1.1",
                    "prevs": [
                        "2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ p = 1 ∨ m ≤ n"
                },
                {
                    "args": "conjD2",
                    "id": "2.1.2",
                    "prevs": [
                        "2.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ p = 1 ∨ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ p = 1 ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "p = 1",
                    "id": "2.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.1.3.1",
                    "prevs": [
                        "2.1.3.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "2.1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ ¬(m ≤ n ∧ n ≤ m) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(m ≤ n ∧ n ≤ m)",
                    "id": "2.1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m ≤ n ∧ n ≤ m) ⊢ ¬(m ≤ n ∧ n ≤ m)"
                },
                {
                    "args": "prime_1",
                    "id": "2.1.3.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "2.1.3.2.2",
                    "prevs": [
                        "2.1.3.2.0",
                        "2.1.3.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ ¬(m ≤ n ∧ n ≤ m) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.1.3.3",
                    "prevs": [
                        "2.1.3.1",
                        "2.1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.3.4",
                    "prevs": [
                        "2.1.3.0",
                        "2.1.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ p = 1 ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "m ≤ n",
                    "id": "2.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "",
                    "id": "2.1.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ n ≤ m ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "n ≤ m",
                    "id": "2.1.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "conjI",
                    "id": "2.1.4.1.1",
                    "prevs": [
                        "2.1.4.0",
                        "2.1.4.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, n ≤ m, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.4.1.2",
                    "prevs": [
                        "2.1.4.1.0",
                        "2.1.4.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ n ≤ m ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "disjE",
                    "id": "2.1.4.2",
                    "prevs": [
                        "2.1.2",
                        "2.1.3",
                        "2.1.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.4.3",
                    "prevs": [
                        "2.1.4.0",
                        "2.1.4.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "disjE",
                    "id": "2.1.5",
                    "prevs": [
                        "2.1.1",
                        "2.1.3",
                        "2.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0), (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.1.6",
                    "prevs": [
                        "2.1.0",
                        "2.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0) ⊢ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⟶ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0) ⊢ m ≤ n ∧ n ≤ m ⟶ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m)"
                },
                {
                    "args": "m ≤ n ∧ n ≤ m",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ∧ n ≤ m ⊢ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "conjD1",
                    "id": "2.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ∧ n ≤ m ⊢ m ≤ n"
                },
                {
                    "args": "conjD2",
                    "id": "2.2.2",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ n ∧ n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "disjI2, {A: p = 1, B: m ≤ n}",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = 0), m ≤ n ∧ n ≤ m ⊢ p = 1 ∨ m ≤ n"
                },
                {
                    "args": "disjI2, {A: p = 1, B: n ≤ m}",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = 0), m ≤ n ∧ n ≤ m ⊢ p = 1 ∨ n ≤ m"
                },
                {
                    "args": "conjI",
                    "id": "2.2.5",
                    "prevs": [
                        "2.2.3",
                        "2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0), m ≤ n ∧ n ≤ m ⊢ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m)"
                },
                {
                    "args": "",
                    "id": "2.2.6",
                    "prevs": [
                        "2.2.0",
                        "2.2.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0) ⊢ m ≤ n ∧ n ≤ m ⟶ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m)"
                },
                {
                    "args": "iffI",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0) ⊢ (p = 1 ∨ m ≤ n) ∧ (p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "if_not_P, (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m",
                    "id": "2.4",
                    "prevs": [
                        "2.3",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p = 0) ⊢ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [
                        "2.0",
                        "2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(p = 0) ⟶ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ (if p = 0 then m = 0 ⟶ n = 0 else p = 1 ∨ m ≤ n) ∧ (if p = 0 then n = 0 ⟶ m = 0 else p = 1 ∨ n ≤ m) ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "le_exp, p ^ m ≤ p ^ n ∧ p ^ n ≤ p ^ m ⟷ m ≤ n ∧ n ≤ m",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ p ^ m ≤ p ^ n ∧ p ^ n ≤ p ^ m ⟷ m ≤ n ∧ n ≤ m"
                },
                {
                    "args": "le_antisym, p ^ m = p ^ n ⟷ m = n",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "prime p ⊢ p ^ m = p ^ n ⟷ m = n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ p ^ m = p ^ n ⟷ m = n"
                }
            ],
            "prop": "prime p ⟶ p ^ m = p ^ n ⟷ m = n",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "le_antisym"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_exp"
                },
                {
                    "case": "p=0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.0"
                    ],
                    "goal_id": "2.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1.0"
                    ],
                    "goal_id": "2.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.1.1"
                    ],
                    "goal_id": "2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.3.0",
                        "0"
                    ],
                    "goal_id": "2.1.3.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.1.3.1"
                    ],
                    "goal_id": "2.1.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.1.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "2.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.2"
                    ],
                    "goal_id": "2.1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime_2",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∀n. coprime 2 n ⟷ ¬(divides 2 n)"
                },
                {
                    "args": "divides_2, ¬(divides 2 n) ⟷ ¬(even n)",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(divides 2 n) ⟷ ¬(even n)"
                },
                {
                    "args": "not_even, ¬(divides 2 n) ⟷ odd n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ ¬(divides 2 n) ⟷ odd n"
                },
                {
                    "args": "coprime 2 n ⟷ odd n",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ coprime 2 n ⟷ odd n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime 2 n ⟷ odd n"
                }
            ],
            "prop": "coprime 2 n ⟷ odd n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "name": "divides_exp_plus1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "odd k",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd k ⊢ odd k"
                },
                {
                    "args": "odd_exists",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd k ⊢ ∃m. k = Suc (2 * m)"
                },
                {
                    "args": "m, nat",
                    "id": "2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "k = Suc (2 * m)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = Suc (2 * m) ⊢ k = Suc (2 * m)"
                },
                {
                    "args": "divides_self, {n: n + 1}",
                    "id": "4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (n + 1) (n + 1)"
                },
                {
                    "args": "mult_1_right, divides (n + 1) (n * 1 + 1)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n * 1 + 1)"
                },
                {
                    "args": "nat_nat_power_def_1, divides (n + 1) (n * n ^ (0::nat) + 1)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n * n ^ (0::nat) + 1)"
                },
                {
                    "args": "nat_nat_power_def_2, divides (n + 1) (n ^ Suc 0 + 1)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n ^ Suc 0 + 1)"
                },
                {
                    "args": "mult_0_right, divides (n + 1) (n ^ Suc (2 * 0) + 1)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n ^ Suc (2 * 0) + 1)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd k, k = Suc (2 * m) ⊢ ∀n1. divides (n + 1) (n ^ Suc (2 * n1) + 1) ⟶ divides (n + 1) (n ^ Suc (2 * Suc n1) + 1)"
                },
                {
                    "args": "m1, nat",
                    "id": "9.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m1"
                },
                {
                    "args": "divides (n + 1) (n ^ Suc (2 * m1) + 1)",
                    "id": "9.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (n + 1) (n ^ Suc (2 * m1) + 1) ⊢ divides (n + 1) (n ^ Suc (2 * m1) + 1)"
                },
                {
                    "args": "Suc (2 * Suc m1) = Suc (2 * m1) + 2",
                    "id": "9.2",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ Suc (2 * Suc m1) = Suc (2 * m1) + 2"
                },
                {
                    "args": "divides_def",
                    "id": "9.3",
                    "prevs": [
                        "9.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (n + 1) (n ^ Suc (2 * m1) + 1) ⊢ ∃k. n ^ Suc (2 * m1) + 1 = (n + 1) * k"
                },
                {
                    "args": "d, nat",
                    "id": "9.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "n ^ Suc (2 * m1) + 1 = (n + 1) * d",
                    "id": "9.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n ^ Suc (2 * m1) + 1 = (n + 1) * d"
                },
                {
                    "args": "le_add, {m: (1::nat), n: n ^ Suc (2 * m1)}",
                    "id": "9.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 1 ≤ 1 + n ^ Suc (2 * m1)"
                },
                {
                    "args": "add_comm, 1 ≤ n ^ Suc (2 * m1) + 1",
                    "id": "9.7",
                    "prevs": [
                        "9.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ 1 ≤ n ^ Suc (2 * m1) + 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "9.8",
                    "prevs": [
                        "9.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ (n + 1) * d = n ^ Suc (2 * m1) + 1"
                },
                {
                    "args": "nat_plus_minus, {x: n ^ Suc (2 * m1), y: (1::nat)}",
                    "id": "9.9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ^ Suc (2 * m1) + 1 - 1 = n ^ Suc (2 * m1)"
                },
                {
                    "args": "eq_sym_eq, n ^ Suc (2 * m1) = n ^ Suc (2 * m1) + 1 - 1",
                    "id": "9.10",
                    "prevs": [
                        "9.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n ^ Suc (2 * m1) = n ^ Suc (2 * m1) + 1 - 1"
                },
                {
                    "args": "n ^ Suc (2 * m1) = (n + 1) * d - 1",
                    "id": "9.11",
                    "prevs": [
                        "9.8",
                        "9.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n ^ Suc (2 * m1) = (n + 1) * d - 1"
                },
                {
                    "args": "∀x::nat. ∀y. ∀z. z ≤ y ⟶ y ≤ x ⟶ x - y + z = x - (y - z)",
                    "id": "9.12",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. ∀y. ∀z. z ≤ y ⟶ y ≤ x ⟶ x - y + z = x - (y - z)"
                },
                {
                    "args": "",
                    "id": "9.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n = 0 ⟶ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "n = 0",
                    "id": "9.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "divides_1, {x: 0 * 0 * (1 * d) - 0 * 0 + 1}",
                    "id": "9.13.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 (0 * 0 * (1 * d) - 0 * 0 + 1)"
                },
                {
                    "args": "nat_plus_def_1, divides (0 + 1) (0 * 0 * ((0 + 1) * d) - 0 * 0 + 1)",
                    "id": "9.13.2",
                    "prevs": [
                        "9.13.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, n = 0, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (0 + 1) (0 * 0 * ((0 + 1) * d) - 0 * 0 + 1)"
                },
                {
                    "args": "divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)",
                    "id": "9.13.3",
                    "prevs": [
                        "9.13.0",
                        "9.13.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, n = 0, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "",
                    "id": "9.13.4",
                    "prevs": [
                        "9.13.0",
                        "9.13.3"
                    ],
                    "rule": "intros",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n = 0 ⟶ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "",
                    "id": "9.14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ ¬(n = 0) ⟶ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "9.14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "1 ≤ n * n",
                    "id": "9.14.1",
                    "prevs": [
                        "9.14.0"
                    ],
                    "rule": "z3",
                    "th": "¬(n = 0) ⊢ 1 ≤ n * n"
                },
                {
                    "args": "mult_1_right, n * n = n * n * 1",
                    "id": "9.14.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ n * n = n * n * 1"
                },
                {
                    "args": "mult_assoc, n * (n * 1) = n * n * 1",
                    "id": "9.14.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ n * (n * 1) = n * n * 1"
                },
                {
                    "args": "less_eq_refl, {n: n * n}",
                    "id": "9.14.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n * n ≤ n * n"
                },
                {
                    "args": "",
                    "id": "9.14.5",
                    "prevs": [
                        "9.5",
                        "9.7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ 1 ≤ (n + 1) * d"
                },
                {
                    "args": "le_mult2",
                    "id": "9.14.6",
                    "prevs": [
                        "9.14.4",
                        "9.14.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * n * 1 ≤ n * n * ((n + 1) * d)"
                },
                {
                    "args": "n * (n * 1) ≤ n * n * ((n + 1) * d)",
                    "id": "9.14.7",
                    "prevs": [
                        "9.14.3",
                        "9.14.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * (n * 1) ≤ n * n * ((n + 1) * d)"
                },
                {
                    "args": "mult_1_left, n * (n * 1) ≤ n * n * (1 * ((n + 1) * d))",
                    "id": "9.14.8",
                    "prevs": [
                        "9.14.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * (n * 1) ≤ n * n * (1 * ((n + 1) * d))"
                },
                {
                    "args": "mult_assoc, n * n * 1 ≤ n * n * 1 * ((n + 1) * d)",
                    "id": "9.14.9",
                    "prevs": [
                        "9.14.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * n * 1 ≤ n * n * 1 * ((n + 1) * d)"
                },
                {
                    "args": "n * n ≤ n * n * ((n + 1) * d)",
                    "id": "9.14.10",
                    "prevs": [
                        "9.14.2",
                        "9.14.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * n ≤ n * n * ((n + 1) * d)"
                },
                {
                    "args": "",
                    "id": "9.14.11",
                    "prevs": [
                        "9.12",
                        "9.14.1",
                        "9.14.10"
                    ],
                    "rule": "apply_fact",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ n * n * ((n + 1) * d) - n * n + 1 = n * n * ((n + 1) * d) - (n * n - 1)"
                },
                {
                    "args": "divides_rmul, {a: n + 1, d: n + 1, x: d}",
                    "id": "9.14.12",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) ((n + 1) * d)"
                },
                {
                    "args": "divides_lmul, {a: (n + 1) * d, d: n + 1, x: n * n}",
                    "id": "9.14.13",
                    "prevs": [
                        "9.14.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d))"
                },
                {
                    "args": "n * n - 1 = (n + 1) * (n - 1)",
                    "id": "9.14.14",
                    "prevs": [
                        "9.14.0"
                    ],
                    "rule": "z3",
                    "th": "¬(n = 0) ⊢ n * n - 1 = (n + 1) * (n - 1)"
                },
                {
                    "args": "divides_rmul, {a: n + 1, d: n + 1, x: n - 1}",
                    "id": "9.14.15",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) ((n + 1) * (n - 1))"
                },
                {
                    "args": "divides (n + 1) (n * n - 1)",
                    "id": "9.14.16",
                    "prevs": [
                        "9.14.14",
                        "9.14.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n - 1)"
                },
                {
                    "args": "divides_sub",
                    "id": "9.14.17",
                    "prevs": [
                        "9.14.13",
                        "9.14.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d) - (n * n - 1))"
                },
                {
                    "args": "divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)",
                    "id": "9.14.18",
                    "prevs": [
                        "9.14.11",
                        "9.14.17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, ¬(n = 0), k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "",
                    "id": "9.14.19",
                    "prevs": [
                        "9.14.0",
                        "9.14.18"
                    ],
                    "rule": "intros",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ ¬(n = 0) ⟶ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "9.15",
                    "prevs": [
                        "9.13",
                        "9.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d) - n * n + 1)"
                },
                {
                    "args": "mult_1_right, divides (n + 1) (n * n * ((n + 1) * d) - n * n * 1 + 1)",
                    "id": "9.16",
                    "prevs": [
                        "9.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d) - n * n * 1 + 1)"
                },
                {
                    "args": "left_sub_distrib, divides (n + 1) (n * n * ((n + 1) * d - 1) + 1)",
                    "id": "9.17",
                    "prevs": [
                        "9.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n * n * ((n + 1) * d - 1) + 1)"
                },
                {
                    "args": "mult_comm, divides (n + 1) (((n + 1) * d - 1) * (n * n) + 1)",
                    "id": "9.18",
                    "prevs": [
                        "9.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (((n + 1) * d - 1) * (n * n) + 1)"
                },
                {
                    "args": "divides (n + 1) (n ^ Suc (2 * m1) * (n * n) + 1)",
                    "id": "9.19",
                    "prevs": [
                        "9.11",
                        "9.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n ^ Suc (2 * m1) * (n * n) + 1)"
                },
                {
                    "args": "exp_2, divides (n + 1) (n ^ Suc (2 * m1) * n ^ (2::nat) + 1)",
                    "id": "9.20",
                    "prevs": [
                        "9.19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n ^ Suc (2 * m1) * n ^ (2::nat) + 1)"
                },
                {
                    "args": "nat_power_add, divides (n + 1) (n ^ (Suc (2 * m1) + 2) + 1)",
                    "id": "9.21",
                    "prevs": [
                        "9.20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n ^ (Suc (2 * m1) + 2) + 1)"
                },
                {
                    "args": "divides (n + 1) (n ^ Suc (2 * Suc m1) + 1)",
                    "id": "9.22",
                    "prevs": [
                        "9.2",
                        "9.21"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, k = Suc (2 * m), divides (n + 1) (n ^ Suc (2 * m1) + 1), n ^ Suc (2 * m1) + 1 = (n + 1) * d ⊢ divides (n + 1) (n ^ Suc (2 * Suc m1) + 1)"
                },
                {
                    "args": "∃k. n ^ Suc (2 * m1) + 1 = (n + 1) * k",
                    "id": "9.23",
                    "prevs": [
                        "9.0",
                        "9.1",
                        "9.3",
                        "9.4",
                        "9.5",
                        "9.22"
                    ],
                    "rule": "intros",
                    "th": "odd k, k = Suc (2 * m) ⊢ ∀m1. divides (n + 1) (n ^ Suc (2 * m1) + 1) ⟶ divides (n + 1) (n ^ Suc (2 * Suc m1) + 1)"
                },
                {
                    "args": "nat_induct, {P: λm. divides (n + 1) (n ^ Suc (2 * m) + 1), x: m}",
                    "id": "10",
                    "prevs": [
                        "8",
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n ^ Suc (2 * m) + 1)"
                },
                {
                    "args": "divides (n + 1) (n ^ k + 1)",
                    "id": "11",
                    "prevs": [
                        "3",
                        "10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd k, k = Suc (2 * m) ⊢ divides (n + 1) (n ^ k + 1)"
                },
                {
                    "args": "∃m. k = Suc (2 * m)",
                    "id": "12",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "11"
                    ],
                    "rule": "intros",
                    "th": "⊢ odd k ⟶ divides (n + 1) (n ^ k + 1)"
                }
            ],
            "prop": "odd k ⟶ divides (n + 1) (n ^ k + 1)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "odd_exists"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "m"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "9",
                    "method_name": "introduction",
                    "names": "m1"
                },
                {
                    "goal": "Suc (2 * Suc m1) = Suc (2 * m1) + 2",
                    "goal_id": "9.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9.2",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "9.2"
                    ],
                    "goal_id": "9.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_power_add"
                },
                {
                    "goal_id": "9.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_2"
                },
                {
                    "fact_ids": [
                        "9.1"
                    ],
                    "goal_id": "9.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "9.3"
                    ],
                    "goal_id": "9.4",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "9.5"
                    ],
                    "goal": "1 <= n ^ Suc (2 * m1) + 1",
                    "goal_id": "9.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "9.6",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                },
                {
                    "goal": "n ^ Suc (2 * m1) = (n + 1) * d - 1",
                    "goal_id": "9.8",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "9.5"
                    ],
                    "goal_id": "9.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "9.8"
                    ],
                    "goal_id": "9.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "9.9",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_plus_minus"
                },
                {
                    "fact_ids": [
                        "9.11"
                    ],
                    "goal_id": "9.12",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "9.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "left_sub_distrib"
                },
                {
                    "goal": "∀x::nat. ∀y. ∀z. z ≤ y --> y <= x ⟶ x - y + z = x - (y - z)",
                    "goal_id": "9.12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9.12",
                    "method_name": "z3"
                },
                {
                    "goal_id": "9.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "case": "n=0",
                    "goal_id": "9.13",
                    "method_name": "cases"
                },
                {
                    "goal_id": "9.13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "9.13.0"
                    ],
                    "goal_id": "9.13.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.13.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "goal_id": "9.13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "9.14",
                    "method_name": "introduction"
                },
                {
                    "goal": "1 <= n*n",
                    "goal_id": "9.14.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "9.14.0"
                    ],
                    "goal_id": "9.14.1",
                    "method_name": "z3"
                },
                {
                    "goal": "n * n <= n * n * ((n + 1) * d)",
                    "goal_id": "9.14.2",
                    "method_name": "cut"
                },
                {
                    "goal": "n * n = n * n * 1",
                    "goal_id": "9.14.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9.14.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "9.14.2"
                    ],
                    "goal_id": "9.14.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.14.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "goal_id": "9.14.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal": "n * (n * 1) = n * n * 1",
                    "goal_id": "9.14.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9.14.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "9.14.3"
                    ],
                    "goal_id": "9.14.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.14.4",
                    "method_name": "apply_backward_step",
                    "theorem": "le_mult2"
                },
                {
                    "goal_id": "9.14.4",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "fact_ids": [
                        "9.5",
                        "9.7"
                    ],
                    "goal_id": "9.14.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9.12",
                        "9.14.1",
                        "9.14.10"
                    ],
                    "goal_id": "9.14.11",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "9.14.11"
                    ],
                    "goal_id": "9.14.12",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.14.12",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_sub"
                },
                {
                    "goal_id": "9.14.12",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "9.14.12",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal": "(n * n - 1) = (n+1)*(n-1)",
                    "goal_id": "9.14.14",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "9.14.0"
                    ],
                    "goal_id": "9.14.14",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "9.14.14"
                    ],
                    "goal_id": "9.14.15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9.14.15",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "divides_exp_minus1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n = 0 ⟶ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "n = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ k = 0 ⟶ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "k = 0",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "less_eq_refl, {n: (1::nat)}",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) ≤ 1"
                },
                {
                    "args": "sub_eq_0, (1::nat) - 1 = 0",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, n = 0 ⊢ (1::nat) - 1 = 0"
                },
                {
                    "args": "divides_0, divides 0 (1 - 1)",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, n = 0 ⊢ divides 0 (1 - 1)"
                },
                {
                    "args": "nat_minus_l0, divides (0 - 1) (1 - 1)",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, n = 0 ⊢ divides (0 - 1) (1 - 1)"
                },
                {
                    "args": "if_P, divides (0 - 1) ((if k = 0 then 1 else 0) - 1)",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.4",
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, n = 0 ⊢ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "",
                    "id": "0.1.6",
                    "prevs": [
                        "0.1.0",
                        "0.1.5"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ k = 0 ⟶ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ ¬(k = 0) ⟶ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "divides_self, {n: (0::nat) - 1}",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (0 - 1) (0 - 1)"
                },
                {
                    "args": "if_not_P, divides (0 - 1) ((if k = 0 then 1 else 0) - 1)",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1",
                        "0.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0, ¬(k = 0) ⊢ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ ¬(k = 0) ⟶ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ⊢ divides (0 - 1) ((if k = 0 then 1 else 0) - 1)"
                },
                {
                    "args": "exp_zero, divides (0 - 1) (0 ^ k - 1)",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ⊢ divides (0 - 1) (0 ^ k - 1)"
                },
                {
                    "args": "divides (n - 1) (n ^ k - 1)",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = 0 ⊢ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ n = 0 ⟶ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(n = 0) ⟶ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "divides_zero, {n: n - 1}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (n - 1) 0"
                },
                {
                    "args": "nat_minus_refl, divides (n - 1) (1 - 1)",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0) ⊢ divides (n - 1) (1 - 1)"
                },
                {
                    "args": "nat_nat_power_def_1, divides (n - 1) (n ^ (0::nat) - 1)",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0) ⊢ divides (n - 1) (n ^ (0::nat) - 1)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ∀n1. divides (n - 1) (n ^ n1 - 1) ⟶ divides (n - 1) (n ^ Suc n1 - 1)"
                },
                {
                    "args": "k, nat",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "divides (n - 1) (n ^ k - 1)",
                    "id": "1.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "mult_1_right, n = n * 1",
                    "id": "1.4.2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ n = n * 1"
                },
                {
                    "args": "less_eq_refl, {n: n}",
                    "id": "1.4.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ≤ n"
                },
                {
                    "args": "disjI1, {A: ¬(n = 0), B: ¬¬(k = 0)}",
                    "id": "1.4.4",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ ¬(n = 0) ∨ ¬¬(k = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(n = 0 ∧ ¬(k = 0))",
                    "id": "1.4.5",
                    "prevs": [
                        "1.4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ ¬(n = 0 ∧ ¬(k = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(n ^ k = 0)",
                    "id": "1.4.6",
                    "prevs": [
                        "1.4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ ¬(n ^ k = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "1.4.7",
                    "prevs": [
                        "1.4.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ 1 ≤ n ^ k"
                },
                {
                    "args": "mult_1_right, 1 ≤ (n * 1) ^ k",
                    "id": "1.4.8",
                    "prevs": [
                        "1.4.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ 1 ≤ (n * 1) ^ k"
                },
                {
                    "args": "le_mult2",
                    "id": "1.4.9",
                    "prevs": [
                        "1.4.3",
                        "1.4.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * 1 ≤ n * (n * 1) ^ k"
                },
                {
                    "args": "mult_1_left, n * 1 ≤ n * (1 * (n * 1) ^ k)",
                    "id": "1.4.10",
                    "prevs": [
                        "1.4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * 1 ≤ n * (1 * (n * 1) ^ k)"
                },
                {
                    "args": "mult_assoc, n * 1 ≤ n * 1 * (n * 1) ^ k",
                    "id": "1.4.11",
                    "prevs": [
                        "1.4.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * 1 ≤ n * 1 * (n * 1) ^ k"
                },
                {
                    "args": "n ≤ n * n ^ k",
                    "id": "1.4.12",
                    "prevs": [
                        "1.4.2",
                        "1.4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n ≤ n * n ^ k"
                },
                {
                    "args": "sub_add",
                    "id": "1.4.13",
                    "prevs": [
                        "1.4.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * n ^ k - n + n = n * n ^ k"
                },
                {
                    "args": "eq_sym_eq, n * n ^ k = n * n ^ k - n + n",
                    "id": "1.4.14",
                    "prevs": [
                        "1.4.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * n ^ k = n * n ^ k - n + n"
                },
                {
                    "args": "mult_1_right, n * n ^ k - n = n * n ^ k - n * 1",
                    "id": "1.4.15",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ n * n ^ k - n = n * n ^ k - n * 1"
                },
                {
                    "args": "left_sub_distrib, n * n ^ k - n = n * (n ^ k - 1)",
                    "id": "1.4.16",
                    "prevs": [
                        "1.4.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * n ^ k - n = n * (n ^ k - 1)"
                },
                {
                    "args": "",
                    "id": "1.4.17",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ ∀x. x + n - 1 = x + (n - 1)"
                },
                {
                    "args": "x, nat",
                    "id": "1.4.17.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x + n - 1 = x + (n - 1)",
                    "id": "1.4.17.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "¬(n = 0) ⊢ x + n - 1 = x + (n - 1)"
                },
                {
                    "args": "",
                    "id": "1.4.17.2",
                    "prevs": [
                        "1.4.17.0",
                        "1.4.17.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ ∀x. x + n - 1 = x + (n - 1)"
                },
                {
                    "args": "n * (n ^ k - 1)",
                    "id": "1.4.18",
                    "prevs": [
                        "1.4.17"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ n * (n ^ k - 1) + n - 1 = n * (n ^ k - 1) + (n - 1)"
                },
                {
                    "args": "divides_lmul, {a: n ^ k - 1, d: n - 1, x: n}",
                    "id": "1.4.19",
                    "prevs": [
                        "1.4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n * (n ^ k - 1))"
                },
                {
                    "args": "divides_self, {n: n - 1}",
                    "id": "1.4.20",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (n - 1) (n - 1)"
                },
                {
                    "args": "divides_sum",
                    "id": "1.4.21",
                    "prevs": [
                        "1.4.19",
                        "1.4.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n * (n ^ k - 1) + (n - 1))"
                },
                {
                    "args": "divides (n - 1) (n * (n ^ k - 1) + n - 1)",
                    "id": "1.4.22",
                    "prevs": [
                        "1.4.18",
                        "1.4.21"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n * (n ^ k - 1) + n - 1)"
                },
                {
                    "args": "divides (n - 1) (n * n ^ k - n + n - 1)",
                    "id": "1.4.23",
                    "prevs": [
                        "1.4.16",
                        "1.4.22"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n * n ^ k - n + n - 1)"
                },
                {
                    "args": "divides (n - 1) (n * n ^ k - 1)",
                    "id": "1.4.24",
                    "prevs": [
                        "1.4.14",
                        "1.4.23"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n * n ^ k - 1)"
                },
                {
                    "args": "nat_nat_power_def_2, divides (n - 1) (n ^ Suc k - 1)",
                    "id": "1.4.25",
                    "prevs": [
                        "1.4.24"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (n - 1) (n ^ k - 1) ⊢ divides (n - 1) (n ^ Suc k - 1)"
                },
                {
                    "args": "",
                    "id": "1.4.26",
                    "prevs": [
                        "1.4.0",
                        "1.4.1",
                        "1.4.25"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ∀k. divides (n - 1) (n ^ k - 1) ⟶ divides (n - 1) (n ^ Suc k - 1)"
                },
                {
                    "args": "nat_induct, {P: λk::nat. divides (n - 1) (n ^ k - 1), x: k}",
                    "id": "1.5",
                    "prevs": [
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0) ⊢ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides (n - 1) (n ^ k - 1)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides (n - 1) (n ^ k - 1)"
                }
            ],
            "prop": "divides (n - 1) (n ^ k - 1)",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "case": "k = 0",
                    "goal_id": "0.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_minus_l0"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sub_eq_0"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "k"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_minus_refl"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal": "n * n ^ k = n * n ^ k - n + n",
                    "goal_id": "1.4.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_add"
                },
                {
                    "goal": "n = n * 1",
                    "goal_id": "1.4.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "1.4.2"
                    ],
                    "goal_id": "1.4.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "goal_id": "1.4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal_id": "1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "le_mult2"
                },
                {
                    "goal_id": "1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "1.4.14"
                    ],
                    "goal_id": "1.4.15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "n * n ^ k - n = n * (n ^ k - 1)",
                    "goal_id": "1.4.15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.4.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "left_sub_distrib"
                },
                {
                    "goal_id": "1.4.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "1.4.16"
                    ],
                    "goal_id": "1.4.17",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "(n * (n ^ k - 1) + n - 1) = n * (n ^ k - 1) + (n - 1)",
                    "goal_id": "1.4.17",
                    "method_name": "cut"
                },
                {
                    "goal": "!x. x + n - 1 = x + (n - 1)  ",
                    "goal_id": "1.4.17",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.4.17",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.4.17.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.4.17"
                    ],
                    "goal_id": "1.4.18",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.4.18"
                    ],
                    "goal_id": "1.4.19",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.19",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_sum"
                },
                {
                    "goal_id": "1.4.19",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "1.4.20",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime_irreducible",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "p > 1 ⟷ ¬(p = 0) ∧ ¬(p = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ p > 1 ⟷ ¬(p = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ prime p ⟶ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "prime p",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 0)"
                },
                {
                    "args": "prime_def",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjI",
                    "id": "1.4",
                    "prevs": [
                        "1.1",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: prime p}",
                    "id": "1.5",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "conjI",
                    "id": "1.7",
                    "prevs": [
                        "1.4",
                        "1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⟶ prime p"
                },
                {
                    "args": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "conjD1",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ ¬(p = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ ¬(p = 0)"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjD2",
                    "id": "2.4",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 0 ⟶ prime p"
                },
                {
                    "args": "p = 0",
                    "id": "2.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: prime p}",
                    "id": "2.5.1",
                    "prevs": [
                        "2.2",
                        "2.5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0, (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.5.2",
                    "prevs": [
                        "2.5.0",
                        "2.5.1"
                    ],
                    "rule": "intros",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 0 ⟶ prime p"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 1 ∨ prime p ⟶ prime p"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "2.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "2.6.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p, (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 1 ⟶ prime p"
                },
                {
                    "args": "p = 1",
                    "id": "2.6.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "negE_gen, {A: p = 1, C: prime p}",
                    "id": "2.6.1.1",
                    "prevs": [
                        "2.3",
                        "2.6.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.6.1.2",
                    "prevs": [
                        "2.6.1.0",
                        "2.6.1.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p, (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 1 ⟶ prime p"
                },
                {
                    "args": "prime p ⟶ prime p",
                    "id": "2.6.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ prime p ⟶ prime p"
                },
                {
                    "args": "disjE",
                    "id": "2.6.3",
                    "prevs": [
                        "2.6.0",
                        "2.6.1",
                        "2.6.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ prime p, (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.6.4",
                    "prevs": [
                        "2.6.0",
                        "2.6.3"
                    ],
                    "rule": "intros",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ p = 1 ∨ prime p ⟶ prime p"
                },
                {
                    "args": "disjE",
                    "id": "2.7",
                    "prevs": [
                        "2.4",
                        "2.5",
                        "2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "(¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.0",
                        "2.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p) ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ prime p ⟷ (¬(p = 0) ∧ ¬(p = 1)) ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "prime p ⟷ p > 1 ∧ (p = 0 ∨ p = 1 ∨ prime p)",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ prime p ⟷ p > 1 ∧ (p = 0 ∨ p = 1 ∨ prime p)"
                },
                {
                    "args": "zero_one_or_prime, prime p ⟷ p > 1 ∧ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ prime p ⟷ p > 1 ∧ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟷ p > 1 ∧ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)"
                }
            ],
            "prop": "prime p ⟷ p > 1 ∧ (∀a. ∀b. divides p (a * b) ⟶ divides p a ∨ divides p b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "zero_one_or_prime"
                },
                {
                    "goal": "p > 1 <--> ~(p=0) & ~(p=1)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2",
                        "2.5.0"
                    ],
                    "goal_id": "2.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.6.0"
                    ],
                    "goal_id": "2.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.6.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.3",
                        "2.6.1.0"
                    ],
                    "goal_id": "2.6.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_exp_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides (d ^ n) (a * b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (d ^ n) (a * b) ⊢ divides (d ^ n) (a * b)"
                },
                {
                    "args": "coprime d a",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ⊢ coprime d a"
                },
                {
                    "args": "disjI1, {A: coprime d a, B: n = 0}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime d a, divides (d ^ n) (a * b) ⊢ coprime d a ∨ n = 0"
                },
                {
                    "args": "coprime_lexp, coprime (d ^ n) a",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime d a, divides (d ^ n) (a * b) ⊢ coprime (d ^ n) a"
                },
                {
                    "args": "coprime_divprod",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime d a, divides (d ^ n) (a * b) ⊢ divides (d ^ n) b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides (d ^ n) (a * b) ⟶ coprime d a ⟶ divides (d ^ n) b"
                }
            ],
            "prop": "divides (d ^ n) (a * b) ⟶ coprime d a ⟶ divides (d ^ n) b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_lexp"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_coprime_cases",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "coprime a b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "coprime_prime, {p: p}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b ⊢ ¬(prime p ∧ divides p a ∧ divides p b)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ ¬(prime p) ∨ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ ¬(prime p) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime p) ⊢ ¬(prime p)"
                },
                {
                    "args": "negE_gen, {A: prime p, C: ¬(divides p a) ∨ ¬(divides p b)}",
                    "id": "5.1",
                    "prevs": [
                        "5.0",
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(prime p) ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [
                        "5.0",
                        "5.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ ¬(prime p) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a ∧ divides p b) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "¬(divides p a ∧ divides p b)",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a ∧ divides p b) ⊢ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "6.1",
                    "prevs": [
                        "6.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides p a ∧ divides p b) ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "6.2",
                    "prevs": [
                        "6.0",
                        "6.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a ∧ divides p b) ⟶ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "disjE",
                    "id": "7",
                    "prevs": [
                        "4",
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "coprime p a ∨ coprime p b",
                    "id": "8",
                    "prevs": [
                        "3",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b ⊢ coprime p a ∨ coprime p b"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ coprime a b ⟶ coprime p a ∨ coprime p b"
                }
            ],
            "prop": "prime p ⟶ coprime a b ⟶ coprime p a ∨ coprime p b",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_p": "p",
                    "theorem": "coprime_prime"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.0",
                        "0"
                    ],
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.0"
                    ],
                    "goal_id": "6.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divprod_pow_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(divides p (gcd a b))",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p (gcd a b)) ⊢ ¬(divides p (gcd a b))"
                },
                {
                    "args": "divides (p ^ n) (a * b)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) (a * b) ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "divides_gcd",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides p (gcd a b)) ⊢ ¬(divides p a ∧ divides p b)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "5",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. ¬(divides p n) ⟷ coprime p n"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "6",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides p (gcd a b)) ⊢ ¬(divides p a) ∨ ¬(divides p b)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ coprime p a ∨ coprime p b"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p a ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "coprime p a",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p a ⊢ coprime p a"
                },
                {
                    "args": "disjI1, {A: coprime p a, B: n = 0}",
                    "id": "8.1",
                    "prevs": [
                        "8.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime p a, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p a ∨ n = 0"
                },
                {
                    "args": "coprime_lexp, coprime (p ^ n) a",
                    "id": "8.2",
                    "prevs": [
                        "8.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p a, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime (p ^ n) a"
                },
                {
                    "args": "coprime_divprod",
                    "id": "8.3",
                    "prevs": [
                        "2",
                        "8.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p a, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) b"
                },
                {
                    "args": "disjI2, {A: divides (p ^ n) a, B: divides (p ^ n) b}",
                    "id": "8.4",
                    "prevs": [
                        "8.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime p a, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "8.5",
                    "prevs": [
                        "8.0",
                        "8.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p a ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p b ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "coprime p b",
                    "id": "9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p b ⊢ coprime p b"
                },
                {
                    "args": "mult_comm, divides (p ^ n) (b * a)",
                    "id": "9.1",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p b, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) (b * a)"
                },
                {
                    "args": "disjI1, {A: coprime p b, B: n = 0}",
                    "id": "9.2",
                    "prevs": [
                        "9.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime p b, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p b ∨ n = 0"
                },
                {
                    "args": "coprime_lexp, coprime (p ^ n) b",
                    "id": "9.3",
                    "prevs": [
                        "9.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p b, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime (p ^ n) b"
                },
                {
                    "args": "coprime_divprod",
                    "id": "9.4",
                    "prevs": [
                        "9.1",
                        "9.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p b, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) a"
                },
                {
                    "args": "disjI1, {A: divides (p ^ n) a, B: divides (p ^ n) b}",
                    "id": "9.5",
                    "prevs": [
                        "9.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime p b, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "9.6",
                    "prevs": [
                        "9.0",
                        "9.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ coprime p b ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "disjE",
                    "id": "10",
                    "prevs": [
                        "7",
                        "8",
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(divides p (gcd a b)) ⟶ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ ¬(divides p (gcd a b)) ",
                "   ⟶ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_gcd"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "5",
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "8.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "8.1",
                    "method_name": "apply_backward_step",
                    "param_a": "a",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "8.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_lexp"
                },
                {
                    "goal_id": "8.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "9",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "9.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "9.1",
                    "method_name": "apply_backward_step",
                    "param_a": "b",
                    "theorem": "coprime_divprod"
                },
                {
                    "goal_id": "9.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "9.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_lexp"
                },
                {
                    "goal_id": "9.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divprod_pow_gen_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(divides p (gcd a b))",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p (gcd a b)) ⊢ ¬(divides p (gcd a b))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "divides (p ^ n) (a * b)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) (a * b) ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "prime_divprod_pow_gen",
                    "id": "2.1",
                    "prevs": [
                        "0",
                        "1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) a ∨ divides (p ^ n) b",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) a",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) a ⊢ divides (p ^ n) a"
                },
                {
                    "args": "divides_rmul, {a: a, d: p ^ n, x: b}",
                    "id": "3.1.1",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ n) a, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.1.2",
                    "prevs": [
                        "3.1.0",
                        "3.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) b",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) b ⊢ divides (p ^ n) b"
                },
                {
                    "args": "divides_lmul, {a: b, d: p ^ n, x: a}",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ n) b, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "disjE",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p (gcd a b)), divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p (gcd a b)) ⊢ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(divides p (gcd a b)) ⟶ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ ¬(divides p (gcd a b)) ",
                "   ⟶ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divprod_pow_gen"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divprod_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "coprime a b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "divides (p ^ n) (a * b)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) (a * b) ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "prime_coprime_cases",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b ⊢ coprime p a ∨ coprime p b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ coprime p a ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "coprime p a",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p a ⊢ coprime p a"
                },
                {
                    "args": "coprime_exp_divprod",
                    "id": "4.1",
                    "prevs": [
                        "2",
                        "4.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime p a, divides (p ^ n) (a * b) ⊢ divides (p ^ n) b"
                },
                {
                    "args": "disjI2, {A: divides (p ^ n) a, B: divides (p ^ n) b}",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime p a, divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [
                        "4.0",
                        "4.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ coprime p a ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ coprime p b ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "coprime p b",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p b ⊢ coprime p b"
                },
                {
                    "args": "mult_comm",
                    "id": "5.1",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (p ^ n) (a * b) ⊢ divides (p ^ n) (b * a)"
                },
                {
                    "args": "coprime_exp_divprod",
                    "id": "5.2",
                    "prevs": [
                        "5.1",
                        "5.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime p b, divides (p ^ n) (a * b) ⊢ divides (p ^ n) a"
                },
                {
                    "args": "disjI1, {A: divides (p ^ n) a, B: divides (p ^ n) b}",
                    "id": "5.3",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime p b, divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "5.4",
                    "prevs": [
                        "5.0",
                        "5.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ coprime p b ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ coprime a b ⟶ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ coprime a b ⟶ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_coprime_cases"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "2",
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp_divprod"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "fact_ids": [
                        "5.1",
                        "5.0"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp_divprod"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_divprod_pow_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "coprime a b",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "divides (p ^ n) (a * b)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) (a * b) ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "prime_divprod_pow",
                    "id": "2.1",
                    "prevs": [
                        "0",
                        "1",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, divides (p ^ n) (a * b) ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ divides (p ^ n) (a * b) ⟶ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b ⊢ divides (p ^ n) a ∨ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) a ∨ divides (p ^ n) b",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) a",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) a ⊢ divides (p ^ n) a"
                },
                {
                    "args": "divides_rmul, {a: a, d: p ^ n, x: b}",
                    "id": "3.1.1",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, divides (p ^ n) a, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.1.2",
                    "prevs": [
                        "3.1.0",
                        "3.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) a ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "divides (p ^ n) b",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) b ⊢ divides (p ^ n) b"
                },
                {
                    "args": "divides_lmul, {a: b, d: p ^ n, x: a}",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, divides (p ^ n) b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "disjE",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, divides (p ^ n) a ∨ divides (p ^ n) b ⊢ divides (p ^ n) (a * b)"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b ⊢ divides (p ^ n) a ∨ divides (p ^ n) b ⟶ divides (p ^ n) (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b ⊢ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ coprime a b ⟶ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ coprime a b ⟶ divides (p ^ n) (a * b) ⟷ divides (p ^ n) a ∨ divides (p ^ n) b"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "1",
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divprod_pow"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_factor_partition",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ¬((0::nat) = 0) ⟶ (∃n1. ∃n2. n1 * n2 = 0 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "¬((0::nat) = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((0::nat) = 0) ⊢ ¬((0::nat) = 0)"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "negE_gen, {A: (0::nat) = 0, C: ∃n1. ∃n2. n1 * n2 = 0 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))}",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬((0::nat) = 0) ⊢ ∃n1. ∃n2. n1 * n2 = 0 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ¬((0::nat) = 0) ⟶ (∃n1. ∃n2. n1 * n2 = 0 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ¬((1::nat) = 0) ⟶ (∃n1. ∃n2. n1 * n2 = 1 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "¬((1::nat) = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((1::nat) = 0) ⊢ ¬((1::nat) = 0)"
                },
                {
                    "args": "mult_1_left, (1::nat) * 1 = 1",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::nat) * 1 = 1"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∀p. prime p ⟶ divides p 1 ⟶ Q p"
                },
                {
                    "args": "p, nat",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides p 1",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p 1 ⊢ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.3",
                        "2.2.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides p 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "2.2.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ ¬(Q p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(Q p)",
                    "id": "2.2.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(Q p) ⊢ ¬(Q p)"
                },
                {
                    "args": "prime_1",
                    "id": "2.2.5.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "2.2.5.2",
                    "prevs": [
                        "2.2.5.0",
                        "2.2.5.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ ¬(Q p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.2.6",
                    "prevs": [
                        "2.2.4",
                        "2.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ Q p"
                },
                {
                    "args": "",
                    "id": "2.2.7",
                    "prevs": [
                        "2.2.0",
                        "2.2.1",
                        "2.2.2",
                        "2.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∀p. prime p ⟶ divides p 1 ⟶ Q p"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∀p. prime p ⟶ divides p 1 ⟶ ¬(Q p)"
                },
                {
                    "args": "p, nat",
                    "id": "2.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p",
                    "id": "2.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides p 1",
                    "id": "2.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p 1 ⊢ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "2.3.3",
                    "prevs": [
                        "2.3.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides p 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.3.4",
                    "prevs": [
                        "2.3.3",
                        "2.3.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides p 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "2.3.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ ¬¬(Q p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬¬(Q p)",
                    "id": "2.3.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(Q p) ⊢ ¬¬(Q p)"
                },
                {
                    "args": "prime_1",
                    "id": "2.3.5.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "2.3.5.2",
                    "prevs": [
                        "2.3.5.0",
                        "2.3.5.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ ¬¬(Q p) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.3.6",
                    "prevs": [
                        "2.3.4",
                        "2.3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p 1, ¬(n = 0), ¬((1::nat) = 0) ⊢ ¬(Q p)"
                },
                {
                    "args": "",
                    "id": "2.3.7",
                    "prevs": [
                        "2.3.0",
                        "2.3.1",
                        "2.3.2",
                        "2.3.6"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∀p. prime p ⟶ divides p 1 ⟶ ¬(Q p)"
                },
                {
                    "args": "conjI",
                    "id": "2.4",
                    "prevs": [
                        "2.2",
                        "2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ (∀p. prime p ⟶ divides p 1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p 1 ⟶ ¬(Q p))"
                },
                {
                    "args": "conjI",
                    "id": "2.5",
                    "prevs": [
                        "2.1",
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ (1::nat) * 1 = 1 ∧ (∀p. prime p ⟶ divides p 1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p 1 ⟶ ¬(Q p))"
                },
                {
                    "args": "exI, {P: λn2. 1 * n2 = 1 ∧ (∀p. prime p ⟶ divides p 1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), a: (1::nat)}",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∃a1. 1 * a1 = 1 ∧ (∀p. prime p ⟶ divides p 1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p a1 ⟶ ¬(Q p))"
                },
                {
                    "args": "exI, {P: λn1. ∃n2. n1 * n2 = 1 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), a: (1::nat)}",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬((1::nat) = 0) ⊢ ∃a1. ∃n2. a1 * n2 = 1 ∧ (∀p. prime p ⟶ divides p a1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.0",
                        "2.7"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ¬((1::nat) = 0) ⟶ (∃n1. ∃n2. n1 * n2 = 1 ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ (¬(n = 0) ⟶ (∃n1. ∃n2. n1 * n2 = n ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))) ⟶ ¬(p * n = 0) ⟶ (∃n1. ∃n2. n1 * n2 = p * n ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "p, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "m, nat",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "prime p",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(m = 0)",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⊢ ¬(m = 0)"
                },
                {
                    "args": "¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "¬(p * m = 0)",
                    "id": "3.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p * m = 0) ⊢ ¬(p * m = 0)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.4",
                        "3.3"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(m = 0), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "n1, nat",
                    "id": "3.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "n2, nat",
                    "id": "3.8",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n2"
                },
                {
                    "args": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))",
                    "id": "3.9",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "conjD1",
                    "id": "3.10",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ n1 * n2 = m"
                },
                {
                    "args": "conjD2",
                    "id": "3.11",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "conjD1",
                    "id": "3.12",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ ∀p. prime p ⟶ divides p n1 ⟶ Q p"
                },
                {
                    "args": "conjD2",
                    "id": "3.13",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ ∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)"
                },
                {
                    "args": "",
                    "id": "3.14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ Q p ⟶ (∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "Q p",
                    "id": "3.14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Q p ⊢ Q p"
                },
                {
                    "args": "p * (n1 * n2) = p * m",
                    "id": "3.14.1",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ p * (n1 * n2) = p * m"
                },
                {
                    "args": "mult_assoc, p * n1 * n2 = p * m",
                    "id": "3.14.2",
                    "prevs": [
                        "3.14.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ p * n1 * n2 = p * m"
                },
                {
                    "args": "",
                    "id": "3.14.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1"
                },
                {
                    "args": "p1, nat",
                    "id": "3.14.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p1"
                },
                {
                    "args": "prime p1",
                    "id": "3.14.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p1 ⊢ prime p1"
                },
                {
                    "args": "divides p1 (p * n1)",
                    "id": "3.14.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 (p * n1) ⊢ divides p1 (p * n1)"
                },
                {
                    "args": "prime_divprod_eq, {a: p, b: n1}",
                    "id": "3.14.3.3",
                    "prevs": [
                        "3.14.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p1 ⊢ divides p1 (p * n1) ⟷ divides p1 p ∨ divides p1 n1"
                },
                {
                    "args": "",
                    "id": "3.14.3.4",
                    "prevs": [
                        "3.14.3.3",
                        "3.14.3.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p1, divides p1 (p * n1) ⊢ divides p1 p ∨ divides p1 n1"
                },
                {
                    "args": "",
                    "id": "3.14.3.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q p, prime p, prime p1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 p ⟶ Q p1"
                },
                {
                    "args": "divides p1 p",
                    "id": "3.14.3.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 p ⊢ divides p1 p"
                },
                {
                    "args": "divides_prime_prime",
                    "id": "3.14.3.5.1",
                    "prevs": [
                        "3.14.3.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime p1 ⊢ divides p1 p ⟷ p1 = p"
                },
                {
                    "args": "",
                    "id": "3.14.3.5.2",
                    "prevs": [
                        "3.14.3.5.1",
                        "3.14.3.5.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime p1, divides p1 p ⊢ p1 = p"
                },
                {
                    "args": "Q p1",
                    "id": "3.14.3.5.3",
                    "prevs": [
                        "3.14.3.5.2",
                        "3.14.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "Q p, prime p, prime p1, divides p1 p, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ Q p1"
                },
                {
                    "args": "",
                    "id": "3.14.3.5.4",
                    "prevs": [
                        "3.14.3.5.0",
                        "3.14.3.5.3"
                    ],
                    "rule": "intros",
                    "th": "Q p, prime p, prime p1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 p ⟶ Q p1"
                },
                {
                    "args": "",
                    "id": "3.14.3.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q p, prime p, prime p1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 n1 ⟶ Q p1"
                },
                {
                    "args": "divides p1 n1",
                    "id": "3.14.3.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 n1 ⊢ divides p1 n1"
                },
                {
                    "args": "p1",
                    "id": "3.14.3.6.1",
                    "prevs": [
                        "3.12",
                        "3.14.3.1",
                        "3.14.3.6.0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "Q p, prime p, prime p1, divides p1 n1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ Q p1"
                },
                {
                    "args": "",
                    "id": "3.14.3.6.2",
                    "prevs": [
                        "3.14.3.6.0",
                        "3.14.3.6.1"
                    ],
                    "rule": "intros",
                    "th": "Q p, prime p, prime p1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 n1 ⟶ Q p1"
                },
                {
                    "args": "disjE",
                    "id": "3.14.3.7",
                    "prevs": [
                        "3.14.3.4",
                        "3.14.3.5",
                        "3.14.3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "Q p, prime p, prime p1, ¬(m = 0), ¬(n = 0), divides p1 (p * n1), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ Q p1"
                },
                {
                    "args": "",
                    "id": "3.14.3.8",
                    "prevs": [
                        "3.14.3.0",
                        "3.14.3.1",
                        "3.14.3.2",
                        "3.14.3.7"
                    ],
                    "rule": "intros",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1"
                },
                {
                    "args": "conjI",
                    "id": "3.14.4",
                    "prevs": [
                        "3.14.3",
                        "3.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ (∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1))"
                },
                {
                    "args": "conjI",
                    "id": "3.14.5",
                    "prevs": [
                        "3.14.2",
                        "3.14.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ p * n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1))"
                },
                {
                    "args": "exI, {P: λn2. p * n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)), a: n2}",
                    "id": "3.14.6",
                    "prevs": [
                        "3.14.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃a1. p * n1 * a1 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 (p * n1) ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 a1 ⟶ ¬(Q p1))"
                },
                {
                    "args": "exI, {P: λn1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)), a: p * n1}",
                    "id": "3.14.7",
                    "prevs": [
                        "3.14.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "Q p, prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃a1. ∃n2. a1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 a1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1))"
                },
                {
                    "args": "",
                    "id": "3.14.8",
                    "prevs": [
                        "3.14.0",
                        "3.14.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ Q p ⟶ (∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "",
                    "id": "3.15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(Q p) ⟶ (∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "¬(Q p)",
                    "id": "3.15.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(Q p) ⊢ ¬(Q p)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3.15.1",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)) ⊢ m = n1 * n2"
                },
                {
                    "args": "n1 * (p * n2) = p * (n1 * n2)",
                    "id": "3.15.2",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ n1 * (p * n2) = p * (n1 * n2)"
                },
                {
                    "args": "n1 * (p * n2) = p * m",
                    "id": "3.15.3",
                    "prevs": [
                        "3.15.1",
                        "3.15.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ n1 * (p * n2) = p * m"
                },
                {
                    "args": "",
                    "id": "3.15.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∀p1. prime p1 ⟶ divides p1 (p * n2) ⟶ ¬(Q p1)"
                },
                {
                    "args": "p1, nat",
                    "id": "3.15.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p1"
                },
                {
                    "args": "prime p1",
                    "id": "3.15.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p1 ⊢ prime p1"
                },
                {
                    "args": "divides p1 (p * n2)",
                    "id": "3.15.4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 (p * n2) ⊢ divides p1 (p * n2)"
                },
                {
                    "args": "prime_divprod_eq, {a: p, b: n2}",
                    "id": "3.15.4.3",
                    "prevs": [
                        "3.15.4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p1 ⊢ divides p1 (p * n2) ⟷ divides p1 p ∨ divides p1 n2"
                },
                {
                    "args": "",
                    "id": "3.15.4.4",
                    "prevs": [
                        "3.15.4.3",
                        "3.15.4.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p1, divides p1 (p * n2) ⊢ divides p1 p ∨ divides p1 n2"
                },
                {
                    "args": "",
                    "id": "3.15.4.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime p1, ¬(Q p), ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 p ⟶ ¬(Q p1)"
                },
                {
                    "args": "divides p1 p",
                    "id": "3.15.4.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 p ⊢ divides p1 p"
                },
                {
                    "args": "divides_prime_prime",
                    "id": "3.15.4.5.1",
                    "prevs": [
                        "3.15.4.1",
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime p1 ⊢ divides p1 p ⟷ p1 = p"
                },
                {
                    "args": "",
                    "id": "3.15.4.5.2",
                    "prevs": [
                        "3.15.4.5.1",
                        "3.15.4.5.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, prime p1, divides p1 p ⊢ p1 = p"
                },
                {
                    "args": "¬(Q p1)",
                    "id": "3.15.4.5.3",
                    "prevs": [
                        "3.15.4.5.2",
                        "3.15.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, prime p1, ¬(Q p), divides p1 p, ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(Q p1)"
                },
                {
                    "args": "",
                    "id": "3.15.4.5.4",
                    "prevs": [
                        "3.15.4.5.0",
                        "3.15.4.5.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime p1, ¬(Q p), ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 p ⟶ ¬(Q p1)"
                },
                {
                    "args": "",
                    "id": "3.15.4.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, prime p1, ¬(Q p), ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 n2 ⟶ ¬(Q p1)"
                },
                {
                    "args": "divides p1 n2",
                    "id": "3.15.4.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p1 n2 ⊢ divides p1 n2"
                },
                {
                    "args": "p1",
                    "id": "3.15.4.6.1",
                    "prevs": [
                        "3.13",
                        "3.15.4.1",
                        "3.15.4.6.0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "prime p, prime p1, ¬(Q p), divides p1 n2, ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(Q p1)"
                },
                {
                    "args": "",
                    "id": "3.15.4.6.2",
                    "prevs": [
                        "3.15.4.6.0",
                        "3.15.4.6.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, prime p1, ¬(Q p), ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ divides p1 n2 ⟶ ¬(Q p1)"
                },
                {
                    "args": "disjE",
                    "id": "3.15.4.7",
                    "prevs": [
                        "3.15.4.4",
                        "3.15.4.5",
                        "3.15.4.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, prime p1, ¬(Q p), ¬(m = 0), ¬(n = 0), divides p1 (p * n2), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(Q p1)"
                },
                {
                    "args": "",
                    "id": "3.15.4.8",
                    "prevs": [
                        "3.15.4.0",
                        "3.15.4.1",
                        "3.15.4.2",
                        "3.15.4.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∀p1. prime p1 ⟶ divides p1 (p * n2) ⟶ ¬(Q p1)"
                },
                {
                    "args": "conjI",
                    "id": "3.15.5",
                    "prevs": [
                        "3.12",
                        "3.15.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 (p * n2) ⟶ ¬(Q p1))"
                },
                {
                    "args": "conjI",
                    "id": "3.15.6",
                    "prevs": [
                        "3.15.3",
                        "3.15.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ n1 * (p * n2) = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 (p * n2) ⟶ ¬(Q p1))"
                },
                {
                    "args": "exI, {P: λn2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)), a: p * n2}",
                    "id": "3.15.7",
                    "prevs": [
                        "3.15.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃a1. n1 * a1 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 a1 ⟶ ¬(Q p1))"
                },
                {
                    "args": "exI, {P: λn1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)), a: n1}",
                    "id": "3.15.8",
                    "prevs": [
                        "3.15.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(Q p), ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃a1. ∃n2. a1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 a1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1))"
                },
                {
                    "args": "",
                    "id": "3.15.9",
                    "prevs": [
                        "3.15.0",
                        "3.15.8"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ¬(Q p) ⟶ (∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "classical_cases",
                    "id": "3.16",
                    "prevs": [
                        "3.14",
                        "3.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), ¬(p * m = 0), n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)), ¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))) ⊢ ∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1))"
                },
                {
                    "args": "∃n1. ∃n2. n1 * n2 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))",
                    "id": "3.17",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.4",
                        "3.5",
                        "3.6",
                        "3.7",
                        "3.8",
                        "3.9",
                        "3.16"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ∀p. ∀m. prime p ⟶ ¬(m = 0) ⟶ (¬(m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))) ⟶ ¬(p * m = 0) ⟶ (∃n1. ∃n2. n1 * n2 = p * m ∧ (∀p1. prime p1 ⟶ divides p1 n1 ⟶ Q p1) ∧ (∀p1. prime p1 ⟶ divides p1 n2 ⟶ ¬(Q p1)))"
                },
                {
                    "args": "prime_factor_induct",
                    "id": "4",
                    "prevs": [
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ ∀n. ¬(n = 0) ⟶ (∃n1. ∃n2. n1 * n2 = n ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                },
                {
                    "args": "n",
                    "id": "5",
                    "prevs": [
                        "4",
                        "0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(n = 0) ⊢ ∃n1. ∃n2. n1 * n2 = n ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ (∃n1. ∃n2. n1 * n2 = n ∧ (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
                }
            ],
            "prop": [
                "¬(n = 0) ",
                "⟶ (∃n1. ∃n2. n1 * n2 = n ∧ ",
                "        (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))"
            ],
            "steps": [
                {
                    "goal": "!n. ¬(n = 0) \n⟶ (∃n1. ∃n2. n1 * n2 = n ∧ \n        (∀p. prime p ⟶ divides p n1 ⟶ Q p) ∧ (∀p. prime p ⟶ divides p n2 ⟶ ¬(Q p)))",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_factor_induct"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "2.2.2"
                    ],
                    "goal_id": "2.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "2.2.3",
                        "2.2.1"
                    ],
                    "goal_id": "2.2.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.2.4"
                    ],
                    "goal_id": "2.2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.2.5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "2.3.2"
                    ],
                    "goal_id": "2.3.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "2.3.3",
                        "2.3.1"
                    ],
                    "goal_id": "2.3.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.3.4"
                    ],
                    "goal_id": "2.3.5",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.3.5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.3.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "p,m"
                },
                {
                    "fact_ids": [
                        "3.4",
                        "3.3"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "exists_elim",
                    "names": "n1,n2"
                },
                {
                    "fact_ids": [
                        "3.9"
                    ],
                    "goal_id": "3.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.9"
                    ],
                    "goal_id": "3.11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.11"
                    ],
                    "goal_id": "3.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.11"
                    ],
                    "goal_id": "3.13",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "case": "Q p",
                    "goal_id": "3.14",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.14",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.14.1",
                    "method_name": "inst_exists_goal",
                    "s": "p * n1"
                },
                {
                    "goal_id": "3.14.1",
                    "method_name": "inst_exists_goal",
                    "s": "n2"
                },
                {
                    "goal_id": "3.14.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.14.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "3.10"
                    ],
                    "goal_id": "3.14.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.14.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.14.3",
                    "method_name": "introduction",
                    "names": "p1"
                },
                {
                    "fact_ids": [
                        "3.14.3.1"
                    ],
                    "goal_id": "3.14.3.3",
                    "method_name": "apply_forward_step",
                    "param_a": "p",
                    "param_b": "n1",
                    "theorem": "prime_divprod_eq"
                },
                {
                    "fact_ids": [
                        "3.14.3.3",
                        "3.14.3.2"
                    ],
                    "goal_id": "3.14.3.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.14.3.4"
                    ],
                    "goal_id": "3.14.3.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.14.3.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.14.3.1",
                        "3.2"
                    ],
                    "goal_id": "3.14.3.5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_prime_prime"
                },
                {
                    "fact_ids": [
                        "3.14.3.5.1",
                        "3.14.3.5.0"
                    ],
                    "goal_id": "3.14.3.5.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.14.3.5.2"
                    ],
                    "goal_id": "3.14.3.5.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.14.3.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.12"
                    ],
                    "goal_id": "3.14.3.6.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.15",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.15.1",
                    "method_name": "inst_exists_goal",
                    "s": "n1"
                },
                {
                    "goal_id": "3.15.1",
                    "method_name": "inst_exists_goal",
                    "s": "p*n2"
                },
                {
                    "goal_id": "3.15.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.10"
                    ],
                    "goal_id": "3.15.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3.15.1"
                    ],
                    "goal_id": "3.15.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.15.2",
                    "method_name": "nat_norm"
                },
                {
                    "goal_id": "3.15.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.15.4",
                    "method_name": "introduction",
                    "names": "p1"
                },
                {
                    "fact_ids": [
                        "3.15.4.1"
                    ],
                    "goal_id": "3.15.4.3",
                    "method_name": "apply_forward_step",
                    "param_a": "p",
                    "param_b": "n2",
                    "theorem": "prime_divprod_eq"
                },
                {
                    "fact_ids": [
                        "3.15.4.3",
                        "3.15.4.2"
                    ],
                    "goal_id": "3.15.4.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.15.4.4"
                    ],
                    "goal_id": "3.15.4.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.15.4.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.15.4.1",
                        "3.2"
                    ],
                    "goal_id": "3.15.4.5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_prime_prime"
                },
                {
                    "fact_ids": [
                        "3.15.4.5.1",
                        "3.15.4.5.0"
                    ],
                    "goal_id": "3.15.4.5.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.15.4.5.2"
                    ],
                    "goal_id": "3.15.4.5.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.15.4.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.13"
                    ],
                    "goal_id": "3.15.4.6.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "Q": "nat ⇒ bool",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_pair_decomp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime n1 n2",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime n1 n2 ⊢ coprime n1 n2"
                },
                {
                    "args": "¬(m = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⊢ ¬(m = 0)"
                },
                {
                    "args": "prime_factor_partition, {Q: λp. divides p n2, n: m}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(m = 0) ⟶ (∃n1. ∃n21. n1 * n21 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p n21 ⟶ ¬(divides p n2)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(m = 0) ⊢ ∃n1. ∃n21. n1 * n21 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p n21 ⟶ ¬(divides p n2))"
                },
                {
                    "args": "m1, nat",
                    "id": "4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m1"
                },
                {
                    "args": "m2, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m2"
                },
                {
                    "args": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2))",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2))"
                },
                {
                    "args": "conjD1",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ m1 * m2 = m"
                },
                {
                    "args": "conjD2",
                    "id": "8",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2))"
                },
                {
                    "args": "conjD1",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. prime p ⟶ divides p m1 ⟶ divides p n2"
                },
                {
                    "args": "conjD2",
                    "id": "10",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)"
                },
                {
                    "args": "coprime_prime_eq",
                    "id": "11",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime n1 n2 ⊢ ∀p. ¬(prime p ∧ divides p n1 ∧ divides p n2)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m1 ∧ divides p n1)"
                },
                {
                    "args": "p, nat",
                    "id": "12.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "p",
                    "id": "12.1",
                    "prevs": [
                        "11"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime n1 n2 ⊢ ¬(prime p ∧ divides p n1 ∧ divides p n2)"
                },
                {
                    "args": "",
                    "id": "12.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m1 ∧ divides p n1 ⟶ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "prime p ∧ divides p m1 ∧ divides p n1",
                    "id": "12.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p m1 ∧ divides p n1 ⊢ prime p ∧ divides p m1 ∧ divides p n1"
                },
                {
                    "args": "conjD1",
                    "id": "12.2.1",
                    "prevs": [
                        "12.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p n1 ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "12.2.2",
                    "prevs": [
                        "12.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p n1 ⊢ divides p m1 ∧ divides p n1"
                },
                {
                    "args": "conjD1",
                    "id": "12.2.3",
                    "prevs": [
                        "12.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p n1 ⊢ divides p m1"
                },
                {
                    "args": "conjD2",
                    "id": "12.2.4",
                    "prevs": [
                        "12.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p n1 ⊢ divides p n1"
                },
                {
                    "args": "p",
                    "id": "12.2.5",
                    "prevs": [
                        "9",
                        "12.2.1",
                        "12.2.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "coprime n1 n2, ¬(m = 0), prime p ∧ divides p m1 ∧ divides p n1, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ divides p n2"
                },
                {
                    "args": "conjI",
                    "id": "12.2.6",
                    "prevs": [
                        "12.2.4",
                        "12.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), prime p ∧ divides p m1 ∧ divides p n1, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "conjI",
                    "id": "12.2.7",
                    "prevs": [
                        "12.2.1",
                        "12.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), prime p ∧ divides p m1 ∧ divides p n1, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "",
                    "id": "12.2.8",
                    "prevs": [
                        "12.2.0",
                        "12.2.7"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m1 ∧ divides p n1 ⟶ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "double_neg, ¬¬(prime p ∧ divides p m1 ∧ divides p n1) ⟶ ¬¬(prime p ∧ divides p n1 ∧ divides p n2)",
                    "id": "12.3",
                    "prevs": [
                        "12.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬¬(prime p ∧ divides p m1 ∧ divides p n1) ⟶ ¬¬(prime p ∧ divides p n1 ∧ divides p n2)"
                },
                {
                    "args": "contrapositive",
                    "id": "12.4",
                    "prevs": [
                        "12.1",
                        "12.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(prime p ∧ divides p m1 ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "12.5",
                    "prevs": [
                        "12.0",
                        "12.4"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m1 ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m2 ∧ divides p n2)"
                },
                {
                    "args": "p, nat",
                    "id": "13.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "p",
                    "id": "13.1",
                    "prevs": [
                        "12"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(prime p ∧ divides p m1 ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "13.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m2 ∧ divides p n2 ⟶ prime p ∧ divides p m1 ∧ divides p n1"
                },
                {
                    "args": "prime p ∧ divides p m2 ∧ divides p n2",
                    "id": "13.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2 ⊢ prime p ∧ divides p m2 ∧ divides p n2"
                },
                {
                    "args": "conjD1",
                    "id": "13.2.1",
                    "prevs": [
                        "13.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2 ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "13.2.2",
                    "prevs": [
                        "13.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2 ⊢ divides p m2 ∧ divides p n2"
                },
                {
                    "args": "conjD1",
                    "id": "13.2.3",
                    "prevs": [
                        "13.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2 ⊢ divides p m2"
                },
                {
                    "args": "conjD2",
                    "id": "13.2.4",
                    "prevs": [
                        "13.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2 ⊢ divides p n2"
                },
                {
                    "args": "",
                    "id": "13.2.5",
                    "prevs": [
                        "10",
                        "13.2.1",
                        "13.2.3"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(divides p n2)"
                },
                {
                    "args": "negE_gen, {A: divides p n2, C: prime p ∧ divides p m1 ∧ divides p n1}",
                    "id": "13.2.6",
                    "prevs": [
                        "13.2.5",
                        "13.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ divides p m2 ∧ divides p n2, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m1 ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "13.2.7",
                    "prevs": [
                        "13.2.0",
                        "13.2.6"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m2 ∧ divides p n2 ⟶ prime p ∧ divides p m1 ∧ divides p n1"
                },
                {
                    "args": "double_neg, ¬¬(prime p ∧ divides p m2 ∧ divides p n2) ⟶ ¬¬(prime p ∧ divides p m1 ∧ divides p n1)",
                    "id": "13.3",
                    "prevs": [
                        "13.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬¬(prime p ∧ divides p m2 ∧ divides p n2) ⟶ ¬¬(prime p ∧ divides p m1 ∧ divides p n1)"
                },
                {
                    "args": "contrapositive",
                    "id": "13.4",
                    "prevs": [
                        "13.1",
                        "13.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(prime p ∧ divides p m2 ∧ divides p n2)"
                },
                {
                    "args": "",
                    "id": "13.5",
                    "prevs": [
                        "13.0",
                        "13.4"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m2 ∧ divides p n2)"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m1 ∧ divides p m2)"
                },
                {
                    "args": "p, nat",
                    "id": "14.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "p",
                    "id": "14.1",
                    "prevs": [
                        "11"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime n1 n2 ⊢ ¬(prime p ∧ divides p n1 ∧ divides p n2)"
                },
                {
                    "args": "",
                    "id": "14.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m1 ∧ divides p m2 ⟶ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "prime p ∧ divides p m1 ∧ divides p m2",
                    "id": "14.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2 ⊢ prime p ∧ divides p m1 ∧ divides p m2"
                },
                {
                    "args": "conjD1",
                    "id": "14.2.1",
                    "prevs": [
                        "14.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2 ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "14.2.2",
                    "prevs": [
                        "14.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2 ⊢ divides p m1 ∧ divides p m2"
                },
                {
                    "args": "conjD1",
                    "id": "14.2.3",
                    "prevs": [
                        "14.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2 ⊢ divides p m1"
                },
                {
                    "args": "conjD2",
                    "id": "14.2.4",
                    "prevs": [
                        "14.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2 ⊢ divides p m2"
                },
                {
                    "args": "",
                    "id": "14.2.5",
                    "prevs": [
                        "9",
                        "14.2.1",
                        "14.2.3"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ divides p n2"
                },
                {
                    "args": "",
                    "id": "14.2.6",
                    "prevs": [
                        "10",
                        "14.2.1",
                        "14.2.4"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(divides p n2)"
                },
                {
                    "args": "negE_gen, {A: divides p n2, C: prime p ∧ divides p n1 ∧ divides p n2}",
                    "id": "14.2.7",
                    "prevs": [
                        "14.2.6",
                        "14.2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ divides p m1 ∧ divides p m2, m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "",
                    "id": "14.2.8",
                    "prevs": [
                        "14.2.0",
                        "14.2.7"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ prime p ∧ divides p m1 ∧ divides p m2 ⟶ prime p ∧ divides p n1 ∧ divides p n2"
                },
                {
                    "args": "double_neg, ¬¬(prime p ∧ divides p m1 ∧ divides p m2) ⟶ ¬¬(prime p ∧ divides p n1 ∧ divides p n2)",
                    "id": "14.3",
                    "prevs": [
                        "14.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬¬(prime p ∧ divides p m1 ∧ divides p m2) ⟶ ¬¬(prime p ∧ divides p n1 ∧ divides p n2)"
                },
                {
                    "args": "contrapositive",
                    "id": "14.4",
                    "prevs": [
                        "14.1",
                        "14.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ¬(prime p ∧ divides p m1 ∧ divides p m2)"
                },
                {
                    "args": "",
                    "id": "14.5",
                    "prevs": [
                        "14.0",
                        "14.4"
                    ],
                    "rule": "intros",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∀p. ¬(prime p ∧ divides p m1 ∧ divides p m2)"
                },
                {
                    "args": "conjI",
                    "id": "15",
                    "prevs": [
                        "14",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ (∀p. ¬(prime p ∧ divides p m1 ∧ divides p m2)) ∧ m1 * m2 = m"
                },
                {
                    "args": "conjI",
                    "id": "16",
                    "prevs": [
                        "13",
                        "15"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ (∀p. ¬(prime p ∧ divides p m2 ∧ divides p n2)) ∧ (∀p. ¬(prime p ∧ divides p m1 ∧ divides p m2)) ∧ m1 * m2 = m"
                },
                {
                    "args": "conjI",
                    "id": "17",
                    "prevs": [
                        "12",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ (∀p. ¬(prime p ∧ divides p m1 ∧ divides p n1)) ∧ (∀p. ¬(prime p ∧ divides p m2 ∧ divides p n2)) ∧ (∀p. ¬(prime p ∧ divides p m1 ∧ divides p m2)) ∧ m1 * m2 = m"
                },
                {
                    "args": "coprime_prime_eq, coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m"
                },
                {
                    "args": "exI, {P: λm2. coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m, a: m2}",
                    "id": "19",
                    "prevs": [
                        "18"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∃a1. coprime m1 n1 ∧ coprime a1 n2 ∧ coprime m1 a1 ∧ m1 * a1 = m"
                },
                {
                    "args": "exI, {P: λm1. ∃m2. coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m, a: m1}",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime n1 n2, ¬(m = 0), m1 * m2 = m ∧ (∀p. prime p ⟶ divides p m1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p m2 ⟶ ¬(divides p n2)) ⊢ ∃a1. ∃m2. coprime a1 n1 ∧ coprime m2 n2 ∧ coprime a1 m2 ∧ a1 * m2 = m"
                },
                {
                    "args": "∃n1. ∃n21. n1 * n21 = m ∧ (∀p. prime p ⟶ divides p n1 ⟶ divides p n2) ∧ (∀p. prime p ⟶ divides p n21 ⟶ ¬(divides p n2))",
                    "id": "21",
                    "prevs": [
                        "0",
                        "1",
                        "3",
                        "4",
                        "5",
                        "6",
                        "20"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime n1 n2 ⟶ ¬(m = 0) ⟶ (∃m1. ∃m2. coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m)"
                }
            ],
            "prop": [
                "coprime n1 n2 ",
                "⟶ ¬(m = 0) ",
                "   ⟶ (∃m1. ∃m2. coprime m1 n1 ∧ coprime m2 n2 ∧ coprime m1 m2 ∧ m1 * m2 = m)"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_Q": "(%p. divides p n2)",
                    "param_n": "m",
                    "theorem": "prime_factor_partition"
                },
                {
                    "fact_ids": [
                        "2",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "exists_elim",
                    "names": "m1,m2"
                },
                {
                    "goal_id": "7",
                    "method_name": "inst_exists_goal",
                    "s": "m1"
                },
                {
                    "goal_id": "7",
                    "method_name": "inst_exists_goal",
                    "s": "m2"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_prime_eq"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_prime_eq"
                },
                {
                    "goal_id": "12",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "12",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "12.1",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "12.1"
                    ],
                    "goal_id": "12.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "12.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "12.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "12.2.0"
                    ],
                    "goal_id": "12.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "12.2.0"
                    ],
                    "goal_id": "12.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "12.2.2"
                    ],
                    "goal_id": "12.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "12.2.2"
                    ],
                    "goal_id": "12.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "12.2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "12.2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "12.2.5",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "13",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13.1",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "13.1"
                    ],
                    "goal_id": "13.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "13.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "13.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "13.2.0"
                    ],
                    "goal_id": "13.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "13.2.0"
                    ],
                    "goal_id": "13.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "13.2.2"
                    ],
                    "goal_id": "13.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "13.2.2"
                    ],
                    "goal_id": "13.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "10",
                        "13.2.1",
                        "13.2.3"
                    ],
                    "goal_id": "13.2.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "13.2.5",
                        "13.2.4"
                    ],
                    "goal_id": "13.2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "14",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "14",
                    "method_name": "introduction",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "14.1",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "14.1"
                    ],
                    "goal_id": "14.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "14.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "14.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "14.2.0"
                    ],
                    "goal_id": "14.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "14.2.0"
                    ],
                    "goal_id": "14.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "14.2.2"
                    ],
                    "goal_id": "14.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "14.2.2"
                    ],
                    "goal_id": "14.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "9",
                        "14.2.1",
                        "14.2.3"
                    ],
                    "goal_id": "14.2.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "10",
                        "14.2.1",
                        "14.2.4"
                    ],
                    "goal_id": "14.2.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "14.2.6",
                        "14.2.5"
                    ],
                    "goal_id": "14.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n1": "nat",
                "n2": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "exp_mult_exists",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(m = 0)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⊢ ¬(m = 0)"
                },
                {
                    "args": "m ^ k * n = p ^ k",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ^ k * n = p ^ k ⊢ m ^ k * n = p ^ k"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m = 0), m ^ k * n = p ^ k ⊢ k = 0 ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "k = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [
                        "2.0",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "k = 0, m ^ k * n = p ^ k ⊢ m ^ (0::nat) * n = p ^ (0::nat)"
                },
                {
                    "args": "nat_nat_power_def_1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "k = 0, m ^ k * n = p ^ k ⊢ 1 * n = 1"
                },
                {
                    "args": "mult_1_left",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "k = 0, m ^ k * n = p ^ k ⊢ n = 1"
                },
                {
                    "args": "exI, {P: λq::nat. n = 1, a: k}",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(m = 0), m ^ k * n = p ^ k ⊢ ∃a1::nat. n = 1"
                },
                {
                    "args": "nat_nat_power_def_1, ∃q. n = q ^ (0::nat)",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, ¬(m = 0), m ^ k * n = p ^ k ⊢ ∃q. n = q ^ (0::nat)"
                },
                {
                    "args": "∃q. n = q ^ k",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "k = 0, ¬(m = 0), m ^ k * n = p ^ k ⊢ ∃q. n = q ^ k"
                },
                {
                    "args": "",
                    "id": "2.7",
                    "prevs": [
                        "2.0",
                        "2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(m = 0), m ^ k * n = p ^ k ⊢ k = 0 ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m = 0), m ^ k * n = p ^ k ⊢ ¬(k = 0) ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "divides_exp2_rev, {a: m, b: p, n: k}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (m ^ k) (p ^ k) ⟶ ¬(k = 0) ⟶ divides m p"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3.2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ^ k * n = p ^ k ⊢ p ^ k = m ^ k * n"
                },
                {
                    "args": "divides_self, {n: m ^ k}",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (m ^ k) (m ^ k)"
                },
                {
                    "args": "divides_rmul, {a: m ^ k, d: m ^ k, x: n}",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(k = 0), ¬(m = 0), m ^ k * n = p ^ k ⊢ divides (m ^ k) (m ^ k * n)"
                },
                {
                    "args": "divides (m ^ k) (p ^ k)",
                    "id": "3.5",
                    "prevs": [
                        "3.2",
                        "3.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(k = 0), ¬(m = 0), m ^ k * n = p ^ k ⊢ divides (m ^ k) (p ^ k)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.1",
                        "3.5",
                        "3.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(k = 0), ¬(m = 0), m ^ k * n = p ^ k ⊢ divides m p"
                },
                {
                    "args": "divides_def",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(k = 0), ¬(m = 0), m ^ k * n = p ^ k ⊢ ∃k. p = m * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.8",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "p = m * d",
                    "id": "3.9",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = m * d ⊢ p = m * d"
                },
                {
                    "args": "",
                    "id": "3.10",
                    "prevs": [
                        "3.9",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = m * d, m ^ k * n = p ^ k ⊢ m ^ k * n = (m * d) ^ k"
                },
                {
                    "args": "mult_exp",
                    "id": "3.11",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = m * d, m ^ k * n = p ^ k ⊢ m ^ k * n = m ^ k * d ^ k"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "3.12",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = m * d, m ^ k * n = p ^ k ⊢ m ^ k = 0 ∨ n = d ^ k"
                },
                {
                    "args": "",
                    "id": "3.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), ¬(m = 0), p = m * d, m ^ k * n = p ^ k ⊢ m ^ k = 0 ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "m ^ k = 0",
                    "id": "3.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ^ k = 0 ⊢ m ^ k = 0"
                },
                {
                    "args": "exp_eq_0",
                    "id": "3.13.1",
                    "prevs": [
                        "3.13.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ^ k = 0 ⊢ m = 0 ∧ ¬(k = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "3.13.2",
                    "prevs": [
                        "3.13.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ^ k = 0 ⊢ m = 0"
                },
                {
                    "args": "negE_gen, {A: m = 0, C: ∃q. n = q ^ k}",
                    "id": "3.13.3",
                    "prevs": [
                        "0",
                        "3.13.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m = 0), m ^ k = 0 ⊢ ∃q. n = q ^ k"
                },
                {
                    "args": "",
                    "id": "3.13.4",
                    "prevs": [
                        "3.13.0",
                        "3.13.3"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), ¬(m = 0), p = m * d, m ^ k * n = p ^ k ⊢ m ^ k = 0 ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "",
                    "id": "3.14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), ¬(m = 0), p = m * d, m ^ k * n = p ^ k ⊢ n = d ^ k ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "n = d ^ k",
                    "id": "3.14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = d ^ k ⊢ n = d ^ k"
                },
                {
                    "args": "exI, {P: λa1. n = a1 ^ k, a: d}",
                    "id": "3.14.1",
                    "prevs": [
                        "3.14.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = d ^ k ⊢ ∃a1. n = a1 ^ k"
                },
                {
                    "args": "",
                    "id": "3.14.2",
                    "prevs": [
                        "3.14.0",
                        "3.14.1"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), ¬(m = 0), p = m * d, m ^ k * n = p ^ k ⊢ n = d ^ k ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "disjE",
                    "id": "3.15",
                    "prevs": [
                        "3.12",
                        "3.13",
                        "3.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), ¬(m = 0), p = m * d, m ^ k * n = p ^ k ⊢ ∃q. n = q ^ k"
                },
                {
                    "args": "∃k. p = m * k",
                    "id": "3.16",
                    "prevs": [
                        "3.0",
                        "3.7",
                        "3.8",
                        "3.9",
                        "3.15"
                    ],
                    "rule": "intros",
                    "th": "¬(m = 0), m ^ k * n = p ^ k ⊢ ¬(k = 0) ⟶ (∃q. n = q ^ k)"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m = 0), m ^ k * n = p ^ k ⊢ ∃q. n = q ^ k"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(m = 0) ⟶ m ^ k * n = p ^ k ⟶ (∃q. n = q ^ k)"
                }
            ],
            "prop": "¬(m = 0) ⟶ m ^ k * n = p ^ k ⟶ (∃q. n = q ^ k)",
            "steps": [
                {
                    "case": "k=0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "1"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "inst_exists_goal",
                    "s": "k"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_forward_step",
                    "param_a": "m",
                    "param_b": "p",
                    "param_n": "k",
                    "theorem": "divides_exp2_rev"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal": "divides (m ^ k) (p ^ k)",
                    "goal_id": "3.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "3.1",
                        "3.5",
                        "3.0"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.9",
                        "1"
                    ],
                    "goal_id": "3.10",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.10"
                    ],
                    "goal_id": "3.11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "fact_ids": [
                        "3.11"
                    ],
                    "goal_id": "3.12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "3.12"
                    ],
                    "goal_id": "3.13",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.13.0"
                    ],
                    "goal_id": "3.13.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "fact_ids": [
                        "3.13.1"
                    ],
                    "goal_id": "3.13.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0",
                        "3.13.2"
                    ],
                    "goal_id": "3.13.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "3.14",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.14.0"
                    ],
                    "goal_id": "3.14.1",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "a * b = c ^ n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a * b = c ^ n ⊢ a * b = c ^ n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a * b = c ^ n ⊢ n = 0 ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "n = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [
                        "2.0",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = 0, a * b = c ^ n ⊢ a * b = c ^ (0::nat)"
                },
                {
                    "args": "nat_nat_power_def_1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n = 0, a * b = c ^ n ⊢ a * b = 1"
                },
                {
                    "args": "mult_eq_1",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n = 0, a * b = c ^ n ⊢ a = 1 ∧ b = 1"
                },
                {
                    "args": "exI, {P: λs::nat. a = 1 ∧ b = 1, a: b}",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, n = 0, a * b = c ^ n ⊢ ∃a1::nat. a = 1 ∧ b = 1"
                },
                {
                    "args": "exI, {P: λr::nat. ∃s::nat. a = 1 ∧ b = 1, a: a}",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, n = 0, a * b = c ^ n ⊢ ∃a1::nat. ∃s::nat. a = 1 ∧ b = 1"
                },
                {
                    "args": "nat_nat_power_def_1, ∃r. ∃s. a = r ^ (0::nat) ∧ b = s ^ (0::nat)",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, n = 0, a * b = c ^ n ⊢ ∃r. ∃s. a = r ^ (0::nat) ∧ b = s ^ (0::nat)"
                },
                {
                    "args": "∃r. ∃s. a = r ^ n ∧ b = s ^ n",
                    "id": "2.7",
                    "prevs": [
                        "2.0",
                        "2.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, n = 0, a * b = c ^ n ⊢ ∃r. ∃s. a = r ^ n ∧ b = s ^ n"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.0",
                        "2.7"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a * b = c ^ n ⊢ n = 0 ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a * b = c ^ n ⊢ ¬(n = 0) ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀a. ∀b. coprime a b ⟶ a * b = 0 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "a1, nat",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a1"
                },
                {
                    "args": "b1, nat",
                    "id": "3.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b1"
                },
                {
                    "args": "coprime a1 b1",
                    "id": "3.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a1 b1 ⊢ coprime a1 b1"
                },
                {
                    "args": "a1 * b1 = 0 ^ n",
                    "id": "3.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 * b1 = 0 ^ n ⊢ a1 * b1 = 0 ^ n"
                },
                {
                    "args": "exp_zero",
                    "id": "3.1.4",
                    "prevs": [
                        "3.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 * b1 = 0 ^ n ⊢ a1 * b1 = (if n = 0 then 1 else 0)"
                },
                {
                    "args": "if_not_P",
                    "id": "3.1.5",
                    "prevs": [
                        "3.1.4",
                        "3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), a1 * b1 = 0 ^ n ⊢ a1 * b1 = 0"
                },
                {
                    "args": "mult_eq_0",
                    "id": "3.1.6",
                    "prevs": [
                        "3.1.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0), a1 * b1 = 0 ^ n ⊢ a1 = 0 ∨ b1 = 0"
                },
                {
                    "args": "",
                    "id": "3.1.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "a1 = 0",
                    "id": "3.1.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 = 0 ⊢ a1 = 0"
                },
                {
                    "args": "",
                    "id": "3.1.7.1",
                    "prevs": [
                        "3.1.7.0",
                        "3.1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a1 b1, a1 = 0 ⊢ coprime 0 b1"
                },
                {
                    "args": "coprime_sym",
                    "id": "3.1.7.2",
                    "prevs": [
                        "3.1.7.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, a1 = 0 ⊢ coprime b1 0"
                },
                {
                    "args": "coprime_0",
                    "id": "3.1.7.3",
                    "prevs": [
                        "3.1.7.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, a1 = 0 ⊢ b1 = 1"
                },
                {
                    "args": "if_not_P, a1 = (if n = 0 then 1 else 0)",
                    "id": "3.1.7.4",
                    "prevs": [
                        "3.1.7.0",
                        "3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = (if n = 0 then 1 else 0)"
                },
                {
                    "args": "exp_zero, a1 = 0 ^ n",
                    "id": "3.1.7.5",
                    "prevs": [
                        "3.1.7.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 0 ^ n"
                },
                {
                    "args": "exp_one, b1 = 1 ^ n",
                    "id": "3.1.7.6",
                    "prevs": [
                        "3.1.7.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ b1 = 1 ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.1.7.7",
                    "prevs": [
                        "3.1.7.5",
                        "3.1.7.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 0 ^ n ∧ b1 = 1 ^ n"
                },
                {
                    "args": "exI, {P: λs. a1 = 0 ^ n ∧ b1 = s ^ n, a: (1::nat)}",
                    "id": "3.1.7.8",
                    "prevs": [
                        "3.1.7.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ ∃a11. a1 = 0 ^ n ∧ b1 = a11 ^ n"
                },
                {
                    "args": "exI, {P: λr. ∃s. a1 = r ^ n ∧ b1 = s ^ n, a: (0::nat)}",
                    "id": "3.1.7.9",
                    "prevs": [
                        "3.1.7.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, a1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ ∃a11. ∃s. a1 = a11 ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.1.7.10",
                    "prevs": [
                        "3.1.7.0",
                        "3.1.7.9"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.1.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ b1 = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "b1 = 0",
                    "id": "3.1.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b1 = 0 ⊢ b1 = 0"
                },
                {
                    "args": "",
                    "id": "3.1.8.1",
                    "prevs": [
                        "3.1.8.0",
                        "3.1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a1 b1, b1 = 0 ⊢ coprime a1 0"
                },
                {
                    "args": "coprime_0",
                    "id": "3.1.8.2",
                    "prevs": [
                        "3.1.8.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, b1 = 0 ⊢ a1 = 1"
                },
                {
                    "args": "exp_one, a1 = 1 ^ n",
                    "id": "3.1.8.3",
                    "prevs": [
                        "3.1.8.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 1 ^ n"
                },
                {
                    "args": "if_not_P, b1 = (if n = 0 then 1 else 0)",
                    "id": "3.1.8.4",
                    "prevs": [
                        "3.1.8.0",
                        "3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ b1 = (if n = 0 then 1 else 0)"
                },
                {
                    "args": "exp_zero, b1 = 0 ^ n",
                    "id": "3.1.8.5",
                    "prevs": [
                        "3.1.8.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ b1 = 0 ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.1.8.6",
                    "prevs": [
                        "3.1.8.3",
                        "3.1.8.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ a1 = 1 ^ n ∧ b1 = 0 ^ n"
                },
                {
                    "args": "exI, {P: λs. a1 = 1 ^ n ∧ b1 = s ^ n, a: (0::nat)}",
                    "id": "3.1.8.7",
                    "prevs": [
                        "3.1.8.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ ∃a11. a1 = 1 ^ n ∧ b1 = a11 ^ n"
                },
                {
                    "args": "exI, {P: λr. ∃s. a1 = r ^ n ∧ b1 = s ^ n, a: (1::nat)}",
                    "id": "3.1.8.8",
                    "prevs": [
                        "3.1.8.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, b1 = 0, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ ∃a11. ∃s. a1 = a11 ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.1.8.9",
                    "prevs": [
                        "3.1.8.0",
                        "3.1.8.8"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ b1 = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "disjE",
                    "id": "3.1.9",
                    "prevs": [
                        "3.1.6",
                        "3.1.7",
                        "3.1.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 0 ^ n ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.1.10",
                    "prevs": [
                        "3.1.0",
                        "3.1.1",
                        "3.1.2",
                        "3.1.3",
                        "3.1.9"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀a1. ∀b1. coprime a1 b1 ⟶ a1 * b1 = 0 ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀a. ∀b. coprime a b ⟶ a * b = 1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "a1, nat",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a1"
                },
                {
                    "args": "b1, nat",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b1"
                },
                {
                    "args": "coprime a1 b1",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a1 b1 ⊢ coprime a1 b1"
                },
                {
                    "args": "a1 * b1 = 1 ^ n",
                    "id": "3.2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 * b1 = 1 ^ n ⊢ a1 * b1 = 1 ^ n"
                },
                {
                    "args": "exp_one",
                    "id": "3.2.4",
                    "prevs": [
                        "3.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 * b1 = 1 ^ n ⊢ a1 * b1 = 1"
                },
                {
                    "args": "mult_eq_1",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 * b1 = 1 ^ n ⊢ a1 = 1 ∧ b1 = 1"
                },
                {
                    "args": "exp_one, a1 = 1 ^ n ∧ b1 = 1 ^ n",
                    "id": "3.2.6",
                    "prevs": [
                        "3.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 1 ^ n ⊢ a1 = 1 ^ n ∧ b1 = 1 ^ n"
                },
                {
                    "args": "exI, {P: λs. a1 = 1 ^ n ∧ b1 = s ^ n, a: (1::nat)}",
                    "id": "3.2.7",
                    "prevs": [
                        "3.2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 1 ^ n ⊢ ∃a11. a1 = 1 ^ n ∧ b1 = a11 ^ n"
                },
                {
                    "args": "exI, {P: λr. ∃s. a1 = r ^ n ∧ b1 = s ^ n, a: (1::nat)}",
                    "id": "3.2.8",
                    "prevs": [
                        "3.2.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime a b, coprime a1 b1, ¬(n = 0), a * b = c ^ n, a1 * b1 = 1 ^ n ⊢ ∃a11. ∃s. a1 = a11 ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.2.9",
                    "prevs": [
                        "3.2.0",
                        "3.2.1",
                        "3.2.2",
                        "3.2.3",
                        "3.2.8"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀a1. ∀b1. coprime a1 b1 ⟶ a1 * b1 = 1 ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀p. ∀n1. prime p ⟶ ¬(n1 = 0) ⟶ (∀a. ∀b. coprime a b ⟶ a * b = n1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)) ⟶ (∀a. ∀b. coprime a b ⟶ a * b = (p * n1) ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n))"
                },
                {
                    "args": "p, nat",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "c1, nat",
                    "id": "3.3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c1"
                },
                {
                    "args": "prime p",
                    "id": "3.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(c1 = 0)",
                    "id": "3.3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(c1 = 0) ⊢ ¬(c1 = 0)"
                },
                {
                    "args": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)",
                    "id": "3.3.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∀a. ∀b. coprime a b ⟶ a * b = (p * c1) ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "a1, nat",
                    "id": "3.3.5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a1"
                },
                {
                    "args": "b1, nat",
                    "id": "3.3.5.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b1"
                },
                {
                    "args": "coprime a1 b1",
                    "id": "3.3.5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a1 b1 ⊢ coprime a1 b1"
                },
                {
                    "args": "a1 * b1 = (p * c1) ^ n",
                    "id": "3.3.5.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 * b1 = (p * c1) ^ n ⊢ a1 * b1 = (p * c1) ^ n"
                },
                {
                    "args": "mult_exp",
                    "id": "3.3.5.4",
                    "prevs": [
                        "3.3.5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 * b1 = (p * c1) ^ n ⊢ a1 * b1 = p ^ n * c1 ^ n"
                },
                {
                    "args": "divides_self, {n: p ^ n}",
                    "id": "3.3.5.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ n) (p ^ n)"
                },
                {
                    "args": "divides_rmul, {a: p ^ n, d: p ^ n, x: c1 ^ n}",
                    "id": "3.3.5.6",
                    "prevs": [
                        "3.3.5.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ divides (p ^ n) (p ^ n * c1 ^ n)"
                },
                {
                    "args": "divides (p ^ n) (a1 * b1)",
                    "id": "3.3.5.7",
                    "prevs": [
                        "3.3.5.4",
                        "3.3.5.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ divides (p ^ n) (a1 * b1)"
                },
                {
                    "args": "prime_divprod_pow",
                    "id": "3.3.5.8",
                    "prevs": [
                        "3.3.2",
                        "3.3.5.2",
                        "3.3.5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ divides (p ^ n) a1 ∨ divides (p ^ n) b1"
                },
                {
                    "args": "divides_def",
                    "id": "3.3.5.9",
                    "prevs": [
                        "3.3.5.8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ (∃k. a1 = p ^ n * k) ∨ (∃k. b1 = p ^ n * k)"
                },
                {
                    "args": "",
                    "id": "3.3.5.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ (∃k. a1 = p ^ n * k) ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "∃k. a1 = p ^ n * k",
                    "id": "3.3.5.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃k. a1 = p ^ n * k ⊢ ∃k. a1 = p ^ n * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.3.5.10.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "a1 = p ^ n * d",
                    "id": "3.3.5.10.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 = p ^ n * d ⊢ a1 = p ^ n * d"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.3",
                    "prevs": [
                        "3.3.5.10.2",
                        "3.3.5.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a1 b1, a1 = p ^ n * d ⊢ coprime (p ^ n * d) b1"
                },
                {
                    "args": "coprime_lmul",
                    "id": "3.3.5.10.4",
                    "prevs": [
                        "3.3.5.10.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, a1 = p ^ n * d ⊢ coprime (p ^ n) b1 ∧ coprime d b1"
                },
                {
                    "args": "coprime_lexp",
                    "id": "3.3.5.10.5",
                    "prevs": [
                        "3.3.5.10.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, a1 = p ^ n * d ⊢ (coprime p b1 ∨ n = 0) ∧ coprime d b1"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.10.6",
                    "prevs": [
                        "3.3.5.10.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a1 b1, a1 = p ^ n * d ⊢ coprime p b1 ∨ n = 0"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.5.10.7",
                    "prevs": [
                        "3.3.5.10.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a1 b1, a1 = p ^ n * d ⊢ coprime d b1"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime p b1 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "coprime p b1",
                    "id": "3.3.5.10.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p b1 ⊢ coprime p b1"
                },
                {
                    "args": "d",
                    "id": "3.3.5.10.8.1",
                    "prevs": [
                        "3.3.4"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∀b. coprime d b ⟶ d * b = c1 ^ n ⟶ (∃r. ∃s. d = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "b1",
                    "id": "3.3.5.10.8.2",
                    "prevs": [
                        "3.3.5.10.8.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime d b1 ⟶ d * b1 = c1 ^ n ⟶ (∃r. ∃s. d = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.3",
                    "prevs": [
                        "3.3.5.10.8.2",
                        "3.3.5.10.7"
                    ],
                    "rule": "apply_fact",
                    "th": "coprime a1 b1, a1 = p ^ n * d, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ d * b1 = c1 ^ n ⟶ (∃r. ∃s. d = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.4",
                    "prevs": [
                        "3.3.5.10.2",
                        "3.3.5.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "a1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ p ^ n * d * b1 = p ^ n * c1 ^ n"
                },
                {
                    "args": "mult_assoc",
                    "id": "3.3.5.10.8.5",
                    "prevs": [
                        "3.3.5.10.8.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ p ^ n * (d * b1) = p ^ n * c1 ^ n"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "3.3.5.10.8.6",
                    "prevs": [
                        "3.3.5.10.8.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ p ^ n = 0 ∨ d * b1 = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n = 0 ⟶ d * b1 = c1 ^ n"
                },
                {
                    "args": "p ^ n = 0",
                    "id": "3.3.5.10.8.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ n = 0 ⊢ p ^ n = 0"
                },
                {
                    "args": "exp_eq_0",
                    "id": "3.3.5.10.8.7.1",
                    "prevs": [
                        "3.3.5.10.8.7.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ n = 0 ⊢ p = 0 ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.10.8.7.2",
                    "prevs": [
                        "3.3.5.10.8.7.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ n = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.7.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(d * b1 = c1 ^ n) ⟶ ¬(p = 0)"
                },
                {
                    "args": "¬(d * b1 = c1 ^ n)",
                    "id": "3.3.5.10.8.7.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(d * b1 = c1 ^ n) ⊢ ¬(d * b1 = c1 ^ n)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "3.3.5.10.8.7.3.1",
                    "prevs": [
                        "3.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, a1 = p ^ n * d, a * b = c ^ n, ¬(d * b1 = c1 ^ n), ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.7.3.2",
                    "prevs": [
                        "3.3.5.10.8.7.3.0",
                        "3.3.5.10.8.7.3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(d * b1 = c1 ^ n) ⟶ ¬(p = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.3.5.10.8.7.4",
                    "prevs": [
                        "3.3.5.10.8.7.2",
                        "3.3.5.10.8.7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ d * b1 = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.7.5",
                    "prevs": [
                        "3.3.5.10.8.7.0",
                        "3.3.5.10.8.7.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n = 0 ⟶ d * b1 = c1 ^ n"
                },
                {
                    "args": "d * b1 = c1 ^ n ⟶ d * b1 = c1 ^ n",
                    "id": "3.3.5.10.8.8",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d * b1 = c1 ^ n ⟶ d * b1 = c1 ^ n"
                },
                {
                    "args": "disjE",
                    "id": "3.3.5.10.8.9",
                    "prevs": [
                        "3.3.5.10.8.6",
                        "3.3.5.10.8.7",
                        "3.3.5.10.8.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ d * b1 = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.8.10",
                    "prevs": [
                        "3.3.5.10.8.3",
                        "3.3.5.10.8.9"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. d = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "r, nat",
                    "id": "3.3.5.10.8.11",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR r"
                },
                {
                    "args": "s, nat",
                    "id": "3.3.5.10.8.12",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "d = r ^ n ∧ b1 = s ^ n",
                    "id": "3.3.5.10.8.13",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = r ^ n ∧ b1 = s ^ n ⊢ d = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.10.8.14",
                    "prevs": [
                        "3.3.5.10.8.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = r ^ n ∧ b1 = s ^ n ⊢ d = r ^ n"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.5.10.8.15",
                    "prevs": [
                        "3.3.5.10.8.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = r ^ n ∧ b1 = s ^ n ⊢ b1 = s ^ n"
                },
                {
                    "args": "mult_exp, p ^ n * r ^ n = (p * r) ^ n",
                    "id": "3.3.5.10.8.16",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p ^ n * r ^ n = (p * r) ^ n"
                },
                {
                    "args": "p ^ n * d = (p * r) ^ n",
                    "id": "3.3.5.10.8.17",
                    "prevs": [
                        "3.3.5.10.8.14",
                        "3.3.5.10.8.16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, d = r ^ n ∧ b1 = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n * d = (p * r) ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.3.5.10.8.18",
                    "prevs": [
                        "3.3.5.10.8.17",
                        "3.3.5.10.8.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, d = r ^ n ∧ b1 = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n * d = (p * r) ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "exI, {P: λs. p ^ n * d = (p * r) ^ n ∧ b1 = s ^ n, a: s}",
                    "id": "3.3.5.10.8.19",
                    "prevs": [
                        "3.3.5.10.8.18"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, d = r ^ n ∧ b1 = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃a1. p ^ n * d = (p * r) ^ n ∧ b1 = a1 ^ n"
                },
                {
                    "args": "exI, {P: λr. ∃s. p ^ n * d = r ^ n ∧ b1 = s ^ n, a: p * r}",
                    "id": "3.3.5.10.8.20",
                    "prevs": [
                        "3.3.5.10.8.19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, d = r ^ n ∧ b1 = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃a1. ∃s. p ^ n * d = a1 ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n",
                    "id": "3.3.5.10.8.21",
                    "prevs": [
                        "3.3.5.10.2",
                        "3.3.5.10.8.20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime p b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, d = r ^ n ∧ b1 = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "∃r. ∃s. d = r ^ n ∧ b1 = s ^ n",
                    "id": "3.3.5.10.8.22",
                    "prevs": [
                        "3.3.5.10.8.0",
                        "3.3.5.10.8.10",
                        "3.3.5.10.8.11",
                        "3.3.5.10.8.12",
                        "3.3.5.10.8.13",
                        "3.3.5.10.8.21"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime p b1 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ n = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "n = 0",
                    "id": "3.3.5.10.9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n}",
                    "id": "3.3.5.10.9.1",
                    "prevs": [
                        "3.0",
                        "3.3.5.10.9.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(n = 0) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.10.9.2",
                    "prevs": [
                        "3.3.5.10.9.0",
                        "3.3.5.10.9.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ n = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "disjE",
                    "id": "3.3.5.10.10",
                    "prevs": [
                        "3.3.5.10.6",
                        "3.3.5.10.8",
                        "3.3.5.10.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a1 = p ^ n * d, a * b = c ^ n, ∃k. a1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "∃k. a1 = p ^ n * k",
                    "id": "3.3.5.10.11",
                    "prevs": [
                        "3.3.5.10.0",
                        "3.3.5.10.0",
                        "3.3.5.10.1",
                        "3.3.5.10.2",
                        "3.3.5.10.10"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ (∃k. a1 = p ^ n * k) ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ (∃k. b1 = p ^ n * k) ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "∃k. b1 = p ^ n * k",
                    "id": "3.3.5.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃k. b1 = p ^ n * k ⊢ ∃k. b1 = p ^ n * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.3.5.11.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "b1 = p ^ n * d",
                    "id": "3.3.5.11.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b1 = p ^ n * d ⊢ b1 = p ^ n * d"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.3",
                    "prevs": [
                        "3.3.5.11.2",
                        "3.3.5.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime a1 b1, b1 = p ^ n * d ⊢ coprime a1 (p ^ n * d)"
                },
                {
                    "args": "coprime_rmul",
                    "id": "3.3.5.11.4",
                    "prevs": [
                        "3.3.5.11.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, b1 = p ^ n * d ⊢ coprime a1 (p ^ n) ∧ coprime a1 d"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.11.5",
                    "prevs": [
                        "3.3.5.11.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a1 b1, b1 = p ^ n * d ⊢ coprime a1 (p ^ n)"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.5.11.6",
                    "prevs": [
                        "3.3.5.11.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a1 b1, b1 = p ^ n * d ⊢ coprime a1 d"
                },
                {
                    "args": "coprime_rexp",
                    "id": "3.3.5.11.7",
                    "prevs": [
                        "3.3.5.11.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a1 b1, b1 = p ^ n * d ⊢ coprime a1 p ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime a1 p ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "coprime a1 p",
                    "id": "3.3.5.11.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a1 p ⊢ coprime a1 p"
                },
                {
                    "args": "a1",
                    "id": "3.3.5.11.8.1",
                    "prevs": [
                        "3.3.4"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∀b. coprime a1 b ⟶ a1 * b = c1 ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "d",
                    "id": "3.3.5.11.8.2",
                    "prevs": [
                        "3.3.5.11.8.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime a1 d ⟶ a1 * d = c1 ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ d = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.3",
                    "prevs": [
                        "3.3.5.11.8.2",
                        "3.3.5.11.6"
                    ],
                    "rule": "apply_fact",
                    "th": "coprime a1 b1, b1 = p ^ n * d, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ a1 * d = c1 ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ d = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.4",
                    "prevs": [
                        "3.3.5.11.2",
                        "3.3.5.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "b1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ a1 * (p ^ n * d) = p ^ n * c1 ^ n"
                },
                {
                    "args": "a1 * (p ^ n * d) = p ^ n * (a1 * d)",
                    "id": "3.3.5.11.8.5",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ a1 * (p ^ n * d) = p ^ n * (a1 * d)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.6",
                    "prevs": [
                        "3.3.5.11.8.5",
                        "3.3.5.11.8.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "b1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ p ^ n * (a1 * d) = p ^ n * c1 ^ n"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "3.3.5.11.8.7",
                    "prevs": [
                        "3.3.5.11.8.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "b1 = p ^ n * d, a1 * b1 = (p * c1) ^ n ⊢ p ^ n = 0 ∨ a1 * d = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n = 0 ⟶ a1 * d = c1 ^ n"
                },
                {
                    "args": "p ^ n = 0",
                    "id": "3.3.5.11.8.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ n = 0 ⊢ p ^ n = 0"
                },
                {
                    "args": "exp_eq_0",
                    "id": "3.3.5.11.8.8.1",
                    "prevs": [
                        "3.3.5.11.8.8.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ n = 0 ⊢ p = 0 ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.11.8.8.2",
                    "prevs": [
                        "3.3.5.11.8.8.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ n = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.8.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(a1 * d = c1 ^ n) ⟶ ¬(p = 0)"
                },
                {
                    "args": "¬(a1 * d = c1 ^ n)",
                    "id": "3.3.5.11.8.8.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a1 * d = c1 ^ n) ⊢ ¬(a1 * d = c1 ^ n)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "3.3.5.11.8.8.3.1",
                    "prevs": [
                        "3.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, b1 = p ^ n * d, a * b = c ^ n, ¬(a1 * d = c1 ^ n), ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.8.3.2",
                    "prevs": [
                        "3.3.5.11.8.8.3.0",
                        "3.3.5.11.8.8.3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ¬(a1 * d = c1 ^ n) ⟶ ¬(p = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.3.5.11.8.8.4",
                    "prevs": [
                        "3.3.5.11.8.8.2",
                        "3.3.5.11.8.8.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), p ^ n = 0, b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ a1 * d = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.8.5",
                    "prevs": [
                        "3.3.5.11.8.8.0",
                        "3.3.5.11.8.8.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n = 0 ⟶ a1 * d = c1 ^ n"
                },
                {
                    "args": "a1 * d = c1 ^ n ⟶ a1 * d = c1 ^ n",
                    "id": "3.3.5.11.8.9",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ a1 * d = c1 ^ n ⟶ a1 * d = c1 ^ n"
                },
                {
                    "args": "disjE",
                    "id": "3.3.5.11.8.10",
                    "prevs": [
                        "3.3.5.11.8.7",
                        "3.3.5.11.8.8",
                        "3.3.5.11.8.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ a1 * d = c1 ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.8.11",
                    "prevs": [
                        "3.3.5.11.8.3",
                        "3.3.5.11.8.10"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. a1 = r ^ n ∧ d = s ^ n"
                },
                {
                    "args": "r, nat",
                    "id": "3.3.5.11.8.12",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR r"
                },
                {
                    "args": "s, nat",
                    "id": "3.3.5.11.8.13",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "a1 = r ^ n ∧ d = s ^ n",
                    "id": "3.3.5.11.8.14",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a1 = r ^ n ∧ d = s ^ n ⊢ a1 = r ^ n ∧ d = s ^ n"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.5.11.8.15",
                    "prevs": [
                        "3.3.5.11.8.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "a1 = r ^ n ∧ d = s ^ n ⊢ a1 = r ^ n"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.5.11.8.16",
                    "prevs": [
                        "3.3.5.11.8.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "a1 = r ^ n ∧ d = s ^ n ⊢ d = s ^ n"
                },
                {
                    "args": "mult_exp, p ^ n * s ^ n = (p * s) ^ n",
                    "id": "3.3.5.11.8.17",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p ^ n * s ^ n = (p * s) ^ n"
                },
                {
                    "args": "p ^ n * d = (p * s) ^ n",
                    "id": "3.3.5.11.8.18",
                    "prevs": [
                        "3.3.5.11.8.16",
                        "3.3.5.11.8.17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, a1 = r ^ n ∧ d = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ p ^ n * d = (p * s) ^ n"
                },
                {
                    "args": "conjI",
                    "id": "3.3.5.11.8.19",
                    "prevs": [
                        "3.3.5.11.8.15",
                        "3.3.5.11.8.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, a1 = r ^ n ∧ d = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ a1 = r ^ n ∧ p ^ n * d = (p * s) ^ n"
                },
                {
                    "args": "exI, {P: λs. a1 = r ^ n ∧ p ^ n * d = s ^ n, a: p * s}",
                    "id": "3.3.5.11.8.20",
                    "prevs": [
                        "3.3.5.11.8.19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, a1 = r ^ n ∧ d = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃a11. a1 = r ^ n ∧ p ^ n * d = a11 ^ n"
                },
                {
                    "args": "∃s. a1 = r ^ n ∧ b1 = s ^ n",
                    "id": "3.3.5.11.8.21",
                    "prevs": [
                        "3.3.5.11.2",
                        "3.3.5.11.8.20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, a1 = r ^ n ∧ d = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "exI, {P: λr. ∃s. a1 = r ^ n ∧ b1 = s ^ n, a: r}",
                    "id": "3.3.5.11.8.22",
                    "prevs": [
                        "3.3.5.11.8.21"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, coprime a b, coprime a1 b1, coprime a1 p, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, a1 = r ^ n ∧ d = s ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃a11. ∃s. a1 = a11 ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "∃r. ∃s. a1 = r ^ n ∧ d = s ^ n",
                    "id": "3.3.5.11.8.23",
                    "prevs": [
                        "3.3.5.11.8.0",
                        "3.3.5.11.8.11",
                        "3.3.5.11.8.12",
                        "3.3.5.11.8.13",
                        "3.3.5.11.8.14",
                        "3.3.5.11.8.22"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ coprime a1 p ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ n = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "n = 0",
                    "id": "3.3.5.11.9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n}",
                    "id": "3.3.5.11.9.1",
                    "prevs": [
                        "3.0",
                        "3.3.5.11.9.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(n = 0) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.11.9.2",
                    "prevs": [
                        "3.3.5.11.9.0",
                        "3.3.5.11.9.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ n = 0 ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "disjE",
                    "id": "3.3.5.11.10",
                    "prevs": [
                        "3.3.5.11.7",
                        "3.3.5.11.8",
                        "3.3.5.11.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), b1 = p ^ n * d, a * b = c ^ n, ∃k. b1 = p ^ n * k, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "∃k. b1 = p ^ n * k",
                    "id": "3.3.5.11.11",
                    "prevs": [
                        "3.3.5.11.0",
                        "3.3.5.11.0",
                        "3.3.5.11.1",
                        "3.3.5.11.2",
                        "3.3.5.11.10"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ (∃k. b1 = p ^ n * k) ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "disjE",
                    "id": "3.3.5.12",
                    "prevs": [
                        "3.3.5.9",
                        "3.3.5.10",
                        "3.3.5.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime a b, coprime a1 b1, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, a1 * b1 = (p * c1) ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.3.5.13",
                    "prevs": [
                        "3.3.5.0",
                        "3.3.5.1",
                        "3.3.5.2",
                        "3.3.5.3",
                        "3.3.5.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime a b, ¬(c1 = 0), ¬(n = 0), a * b = c ^ n, ∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n) ⊢ ∀a1. ∀b1. coprime a1 b1 ⟶ a1 * b1 = (p * c1) ^ n ⟶ (∃r. ∃s. a1 = r ^ n ∧ b1 = s ^ n)"
                },
                {
                    "args": "",
                    "id": "3.3.6",
                    "prevs": [
                        "3.3.0",
                        "3.3.1",
                        "3.3.2",
                        "3.3.3",
                        "3.3.4",
                        "3.3.5"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀p. ∀c1. prime p ⟶ ¬(c1 = 0) ⟶ (∀a. ∀b. coprime a b ⟶ a * b = c1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)) ⟶ (∀a. ∀b. coprime a b ⟶ a * b = (p * c1) ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n))"
                },
                {
                    "args": "prime_factor_induct",
                    "id": "3.4",
                    "prevs": [
                        "3.1",
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∀n1. ∀a. ∀b. coprime a b ⟶ a * b = n1 ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "c, a, b",
                    "id": "3.5",
                    "prevs": [
                        "3.4",
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "coprime a b, ¬(n = 0), a * b = c ^ n ⊢ ∃r. ∃s. a = r ^ n ∧ b = s ^ n"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a * b = c ^ n ⊢ ¬(n = 0) ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a * b = c ^ n ⊢ ∃r. ∃s. a = r ^ n ∧ b = s ^ n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ a * b = c ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)"
                }
            ],
            "prop": "coprime a b ⟶ a * b = c ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "1"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_1"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "inst_exists_goal",
                    "s": "a"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal": "∀c. ∀a. ∀b. coprime a b ⟶ a * b = c ^ n ⟶ (∃r. ∃s. a = r ^ n ∧ b = s ^ n)",
                    "goal_id": "3.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_factor_induct"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction",
                    "names": "a1,b1"
                },
                {
                    "fact_ids": [
                        "3.1.3"
                    ],
                    "goal_id": "3.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "fact_ids": [
                        "3.1.4",
                        "3.0"
                    ],
                    "goal_id": "3.1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3.1.5"
                    ],
                    "goal_id": "3.1.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "fact_ids": [
                        "3.1.6"
                    ],
                    "goal_id": "3.1.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.1.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.7.0",
                        "3.1.2"
                    ],
                    "goal_id": "3.1.7.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.1.7.1"
                    ],
                    "goal_id": "3.1.7.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "fact_ids": [
                        "3.1.7.2"
                    ],
                    "goal_id": "3.1.7.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_0"
                },
                {
                    "goal_id": "3.1.7.4",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "3.1.7.4",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3.1.7.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.1.7.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1.7.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "3.1.7.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "goal_id": "3.1.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.8.0",
                        "3.1.2"
                    ],
                    "goal_id": "3.1.8.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.1.8.1"
                    ],
                    "goal_id": "3.1.8.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_0"
                },
                {
                    "goal_id": "3.1.8.3",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3.1.8.3",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "3.1.8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.1.8.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "goal_id": "3.1.8.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1.8.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction",
                    "names": "a1,b1"
                },
                {
                    "fact_ids": [
                        "3.2.3"
                    ],
                    "goal_id": "3.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "fact_ids": [
                        "3.2.4"
                    ],
                    "goal_id": "3.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_1"
                },
                {
                    "goal_id": "3.2.6",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3.2.6",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3.2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction",
                    "names": "p,c1"
                },
                {
                    "goal_id": "3.3.5",
                    "method_name": "introduction",
                    "names": "a1,b1"
                },
                {
                    "fact_ids": [
                        "3.3.5.3"
                    ],
                    "goal_id": "3.3.5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "goal": "divides (p ^ n) a1 | divides (p ^ n) b1",
                    "goal_id": "3.3.5.5",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.3.2",
                        "3.3.5.2"
                    ],
                    "goal_id": "3.3.5.5",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divprod_pow"
                },
                {
                    "fact_ids": [
                        "3.3.5.4"
                    ],
                    "goal_id": "3.3.5.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.5.5",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "3.3.5.5",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "3.3.5.8"
                    ],
                    "goal_id": "3.3.5.9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3.3.5.9"
                    ],
                    "goal_id": "3.3.5.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.3.5.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.0"
                    ],
                    "goal_id": "3.3.5.10.1",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.2",
                        "3.3.5.2"
                    ],
                    "goal_id": "3.3.5.10.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.3"
                    ],
                    "goal_id": "3.3.5.10.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_lmul"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.4"
                    ],
                    "goal_id": "3.3.5.10.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_lexp"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.5"
                    ],
                    "goal_id": "3.3.5.10.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.5"
                    ],
                    "goal_id": "3.3.5.10.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.6"
                    ],
                    "goal_id": "3.3.5.10.8",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.3.5.10.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.4"
                    ],
                    "goal_id": "3.3.5.10.8.1",
                    "method_name": "forall_elim",
                    "s": "d"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.1"
                    ],
                    "goal_id": "3.3.5.10.8.2",
                    "method_name": "forall_elim",
                    "s": "b1"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.2",
                        "3.3.5.10.7"
                    ],
                    "goal_id": "3.3.5.10.8.3",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "d * b1 = c1 ^ n",
                    "goal_id": "3.3.5.10.8.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.2",
                        "3.3.5.4"
                    ],
                    "goal_id": "3.3.5.10.8.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.4"
                    ],
                    "goal_id": "3.3.5.10.8.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.5"
                    ],
                    "goal_id": "3.3.5.10.8.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.6"
                    ],
                    "goal_id": "3.3.5.10.8.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.3.5.10.8.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.7.0"
                    ],
                    "goal_id": "3.3.5.10.8.7.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.7.1"
                    ],
                    "goal_id": "3.3.5.10.8.7.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.7.2"
                    ],
                    "goal_id": "3.3.5.10.8.7.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.3.5.10.8.7.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.3.5.10.8.7.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.3",
                        "3.3.5.10.8.9"
                    ],
                    "goal_id": "3.3.5.10.8.10",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.10"
                    ],
                    "goal_id": "3.3.5.10.8.11",
                    "method_name": "exists_elim",
                    "names": "r,s"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.2"
                    ],
                    "goal_id": "3.3.5.10.8.14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.13"
                    ],
                    "goal_id": "3.3.5.10.8.14",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.13"
                    ],
                    "goal_id": "3.3.5.10.8.15",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.3.5.10.8.16",
                    "method_name": "inst_exists_goal",
                    "s": "p * r"
                },
                {
                    "goal_id": "3.3.5.10.8.16",
                    "method_name": "inst_exists_goal",
                    "s": "s"
                },
                {
                    "goal_id": "3.3.5.10.8.16",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.3.5.10.8.14"
                    ],
                    "goal_id": "3.3.5.10.8.16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.5.10.8.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "goal_id": "3.3.5.10.9",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0",
                        "3.3.5.10.9.0"
                    ],
                    "goal_id": "3.3.5.10.9.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "3.3.5.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.0"
                    ],
                    "goal_id": "3.3.5.11.1",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.2",
                        "3.3.5.2"
                    ],
                    "goal_id": "3.3.5.11.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.3"
                    ],
                    "goal_id": "3.3.5.11.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_rmul"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.4"
                    ],
                    "goal_id": "3.3.5.11.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.4"
                    ],
                    "goal_id": "3.3.5.11.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.5"
                    ],
                    "goal_id": "3.3.5.11.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_rexp"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.7"
                    ],
                    "goal_id": "3.3.5.11.8",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.3.5.11.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.4"
                    ],
                    "goal_id": "3.3.5.11.8.1",
                    "method_name": "forall_elim",
                    "s": "a1"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.1"
                    ],
                    "goal_id": "3.3.5.11.8.2",
                    "method_name": "forall_elim",
                    "s": "d"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.2",
                        "3.3.5.11.6"
                    ],
                    "goal_id": "3.3.5.11.8.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.3"
                    ],
                    "goal": "a1 * d = c1 ^ n",
                    "goal_id": "3.3.5.11.8.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.2",
                        "3.3.5.4"
                    ],
                    "goal_id": "3.3.5.11.8.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "a1 * (p ^ n * d) = p ^ n * (a1 * d)",
                    "goal_id": "3.3.5.11.8.5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.3.5.11.8.5",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.5",
                        "3.3.5.11.8.4"
                    ],
                    "goal_id": "3.3.5.11.8.6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.6"
                    ],
                    "goal_id": "3.3.5.11.8.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.7"
                    ],
                    "goal_id": "3.3.5.11.8.8",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.3.5.11.8.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.8.0"
                    ],
                    "goal_id": "3.3.5.11.8.8.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.8.1"
                    ],
                    "goal_id": "3.3.5.11.8.8.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.8.2"
                    ],
                    "goal_id": "3.3.5.11.8.8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.3.5.11.8.8.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.3.5.11.8.8.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.3",
                        "3.3.5.11.8.10"
                    ],
                    "goal_id": "3.3.5.11.8.11",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.11"
                    ],
                    "goal_id": "3.3.5.11.8.12",
                    "method_name": "exists_elim",
                    "names": "r,s"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.14"
                    ],
                    "goal_id": "3.3.5.11.8.15",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.14"
                    ],
                    "goal_id": "3.3.5.11.8.16",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "inst_exists_goal",
                    "s": "r"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.2"
                    ],
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "inst_exists_goal",
                    "s": "p * s"
                },
                {
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.3.5.11.8.16"
                    ],
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.5.11.8.17",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_exp"
                },
                {
                    "goal_id": "3.3.5.11.9",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0",
                        "3.3.5.11.9.0"
                    ],
                    "goal_id": "3.3.5.11.9.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_prev",
                    "param_n": "c"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ prime 1 ⟶ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "prime 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime 1 ⊢ ¬(prime p ∧ (0::nat) = 1) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p ∧ (0::nat) = 1)",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime p ∧ (0::nat) = 1) ⊢ ¬(prime p ∧ (0::nat) = 1)"
                },
                {
                    "args": "prime_1",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime 1 ⊢ ¬(prime p ∧ (0::nat) = 1) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 1 ⊢ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime 1 ⟶ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ prime p ∧ (0::nat) = 1 ⟶ prime 1"
                },
                {
                    "args": "prime p ∧ (0::nat) = 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ (0::nat) = 1 ⊢ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "conjD2",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ (0::nat) = 1 ⊢ (0::nat) = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ (0::nat) = 1 ⊢ ¬(prime 1) ⟶ ¬((0::nat) = 1)"
                },
                {
                    "args": "¬(prime 1)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime 1) ⊢ ¬(prime 1)"
                },
                {
                    "args": "¬((0::nat) = 1)",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((0::nat) = 1)"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ (0::nat) = 1 ⊢ ¬(prime 1) ⟶ ¬((0::nat) = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ (0::nat) = 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ∧ (0::nat) = 1 ⟶ prime 1"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 1 ⟷ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "nat_nat_power_def_1, prime (p ^ (0::nat)) ⟷ prime p ∧ (0::nat) = 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ prime (p ^ (0::nat)) ⟷ prime p ∧ (0::nat) = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. prime (p ^ n) ⟷ prime p ∧ n = 1 ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "n, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "prime (p ^ n) ⟷ prime p ∧ n = 1",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ n) ⟷ prime p ∧ n = 1"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ p = 0 ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "p = 0",
                    "id": "4.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: n}",
                    "id": "4.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc n)"
                },
                {
                    "args": "ineq_sym",
                    "id": "4.2.2",
                    "prevs": [
                        "4.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "",
                    "id": "4.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ⟶ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "prime 0",
                    "id": "4.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 0 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "4.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime 0, p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ¬(prime 0 ∧ Suc n = 1) ⟶ ¬(prime 0)"
                },
                {
                    "args": "¬(prime 0 ∧ Suc n = 1)",
                    "id": "4.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime 0 ∧ Suc n = 1) ⊢ ¬(prime 0 ∧ Suc n = 1)"
                },
                {
                    "args": "prime_0",
                    "id": "4.2.3.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "4.2.3.1.2",
                    "prevs": [
                        "4.2.3.1.0",
                        "4.2.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime 0, p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ¬(prime 0 ∧ Suc n = 1) ⟶ ¬(prime 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.2.3.2",
                    "prevs": [
                        "4.2.3.0",
                        "4.2.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 0, p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.2.3.3",
                    "prevs": [
                        "4.2.3.0",
                        "4.2.3.2"
                    ],
                    "rule": "intros",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ⟶ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ∧ Suc n = 1 ⟶ prime 0"
                },
                {
                    "args": "prime 0 ∧ Suc n = 1",
                    "id": "4.2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 0 ∧ Suc n = 1 ⊢ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "conjD1",
                    "id": "4.2.4.1",
                    "prevs": [
                        "4.2.4.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 0 ∧ Suc n = 1 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "4.2.4.2",
                    "prevs": [
                        "4.2.4.0",
                        "4.2.4.1"
                    ],
                    "rule": "intros",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ∧ Suc n = 1 ⟶ prime 0"
                },
                {
                    "args": "iffI",
                    "id": "4.2.5",
                    "prevs": [
                        "4.2.3",
                        "4.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime 0 ⟷ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "if_not_P, prime (if Suc n = 0 then 1 else 0) ⟷ prime 0 ∧ Suc n = 1",
                    "id": "4.2.6",
                    "prevs": [
                        "4.2.5",
                        "4.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (if Suc n = 0 then 1 else 0) ⟷ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "exp_zero, prime (0 ^ Suc n) ⟷ prime 0 ∧ Suc n = 1",
                    "id": "4.2.7",
                    "prevs": [
                        "4.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (0 ^ Suc n) ⟷ prime 0 ∧ Suc n = 1"
                },
                {
                    "args": "prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1",
                    "id": "4.2.8",
                    "prevs": [
                        "4.2.0",
                        "4.2.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 0, prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.2.9",
                    "prevs": [
                        "4.2.0",
                        "4.2.8"
                    ],
                    "rule": "intros",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ p = 0 ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ¬(p = 0) ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ⟶ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "prime p",
                    "id": "4.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "4.3.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "conjI",
                    "id": "4.3.1.2",
                    "prevs": [
                        "4.3.1.0",
                        "4.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.1.3",
                    "prevs": [
                        "4.3.1.0",
                        "4.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ⟶ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ∧ (1::nat) = 1 ⟶ prime p"
                },
                {
                    "args": "prime p ∧ (1::nat) = 1",
                    "id": "4.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ (1::nat) = 1 ⊢ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "conjD1",
                    "id": "4.3.2.1",
                    "prevs": [
                        "4.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ (1::nat) = 1 ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "4.3.2.2",
                    "prevs": [
                        "4.3.2.0",
                        "4.3.2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ∧ (1::nat) = 1 ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "4.3.3",
                    "prevs": [
                        "4.3.1",
                        "4.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime p ⟷ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "exp_1, prime (p ^ (1::nat)) ⟷ prime p ∧ (1::nat) = 1",
                    "id": "4.3.4",
                    "prevs": [
                        "4.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ (1::nat)) ⟷ prime p ∧ (1::nat) = 1"
                },
                {
                    "args": "nat_plus_def_1, prime (p ^ ((0::nat) + 1)) ⟷ prime p ∧ (0::nat) + 1 = 1",
                    "id": "4.3.5",
                    "prevs": [
                        "4.3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ ((0::nat) + 1)) ⟷ prime p ∧ (0::nat) + 1 = 1"
                },
                {
                    "args": "add_1_right, prime (p ^ Suc 0) ⟷ prime p ∧ Suc 0 = 1",
                    "id": "4.3.6",
                    "prevs": [
                        "4.3.5"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ Suc 0) ⟷ prime p ∧ Suc 0 = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ∀n. prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1 ⟶ prime (p ^ Suc (Suc n)) ⟷ prime p ∧ Suc (Suc n) = 1"
                },
                {
                    "args": "m, nat",
                    "id": "4.3.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1",
                    "id": "4.3.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 1 ⟶ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "p = 1",
                    "id": "4.3.7.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ⟶ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "prime 1",
                    "id": "4.3.7.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime 1, p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime 1 ∧ Suc (Suc m) = 1) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(prime 1 ∧ Suc (Suc m) = 1)",
                    "id": "4.3.7.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime 1 ∧ Suc (Suc m) = 1) ⊢ ¬(prime 1 ∧ Suc (Suc m) = 1)"
                },
                {
                    "args": "prime_1",
                    "id": "4.3.7.2.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.1.1.2",
                    "prevs": [
                        "4.3.7.2.1.1.0",
                        "4.3.7.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime 1, p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime 1 ∧ Suc (Suc m) = 1) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.7.2.1.2",
                    "prevs": [
                        "4.3.7.2.1.0",
                        "4.3.7.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 1, p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.1.3",
                    "prevs": [
                        "4.3.7.2.1.0",
                        "4.3.7.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ⟶ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ∧ Suc (Suc m) = 1 ⟶ prime 1"
                },
                {
                    "args": "prime 1 ∧ Suc (Suc m) = 1",
                    "id": "4.3.7.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 1 ∧ Suc (Suc m) = 1 ⊢ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "conjD1",
                    "id": "4.3.7.2.2.1",
                    "prevs": [
                        "4.3.7.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 1 ∧ Suc (Suc m) = 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.2.2",
                    "prevs": [
                        "4.3.7.2.2.0",
                        "4.3.7.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ∧ Suc (Suc m) = 1 ⟶ prime 1"
                },
                {
                    "args": "iffI",
                    "id": "4.3.7.2.3",
                    "prevs": [
                        "4.3.7.2.1",
                        "4.3.7.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime 1 ⟷ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "exp_one, prime (1 ^ Suc (Suc m)) ⟷ prime 1 ∧ Suc (Suc m) = 1",
                    "id": "4.3.7.2.4",
                    "prevs": [
                        "4.3.7.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (1 ^ Suc (Suc m)) ⟷ prime 1 ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1",
                    "id": "4.3.7.2.5",
                    "prevs": [
                        "4.3.7.2.0",
                        "4.3.7.2.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.2.6",
                    "prevs": [
                        "4.3.7.2.0",
                        "4.3.7.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 1 ⟶ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(p = 1) ⟶ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "4.3.7.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p * p ^ Suc m) ⟶ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "prime (p * p ^ Suc m)",
                    "id": "4.3.7.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime (p * p ^ Suc m) ⊢ prime (p * p ^ Suc m)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime p ∧ Suc (Suc m) = 1) ⟶ ¬(prime (p * p ^ Suc m))"
                },
                {
                    "args": "¬(prime p ∧ Suc (Suc m) = 1)",
                    "id": "4.3.7.3.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime p ∧ Suc (Suc m) = 1) ⊢ ¬(prime p ∧ Suc (Suc m) = 1)"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "4.3.7.3.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "divides_rmul, {a: p, d: p, x: p ^ Suc m}",
                    "id": "4.3.7.3.1.1.2",
                    "prevs": [
                        "4.3.7.3.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ divides p (p * p ^ Suc m)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = p * p ^ Suc m ⟶ false"
                },
                {
                    "args": "p = p * p ^ Suc m",
                    "id": "4.3.7.3.1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = p * p ^ Suc m ⊢ p = p * p ^ Suc m"
                },
                {
                    "args": "mult_1_right, p = p * 1",
                    "id": "4.3.7.3.1.1.3.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p = p * 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.1",
                        "4.3.7.3.1.1.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = p * p ^ Suc m ⊢ p * 1 = p * 1 * (p * 1) ^ Suc m"
                },
                {
                    "args": "mult_assoc",
                    "id": "4.3.7.3.1.1.3.3",
                    "prevs": [
                        "4.3.7.3.1.1.3.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = p * p ^ Suc m ⊢ p * 1 = p * (1 * (p * 1) ^ Suc m)"
                },
                {
                    "args": "mult_1_left",
                    "id": "4.3.7.3.1.1.3.4",
                    "prevs": [
                        "4.3.7.3.1.1.3.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = p * p ^ Suc m ⊢ p * 1 = p * (p * 1) ^ Suc m"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "4.3.7.3.1.1.3.5",
                    "prevs": [
                        "4.3.7.3.1.1.3.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = p * p ^ Suc m ⊢ p = 0 ∨ 1 = (p * 1) ^ Suc m"
                },
                {
                    "args": "mult_1_right",
                    "id": "4.3.7.3.1.1.3.6",
                    "prevs": [
                        "4.3.7.3.1.1.3.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = p * p ^ Suc m ⊢ p = 0 ∨ 1 = p ^ Suc m"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 0 ⟶ false"
                },
                {
                    "args": "p = 0",
                    "id": "4.3.7.3.1.1.3.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.7.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, ¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬false ⟶ ¬(p = 0)"
                },
                {
                    "args": "¬false",
                    "id": "4.3.7.3.1.1.3.7.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.7.1.1",
                    "prevs": [
                        "4.3.7.3.1.1.3.7.1.0",
                        "4.3.0"
                    ],
                    "rule": "intros",
                    "th": "p = 0, ¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬false ⟶ ¬(p = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.7.3.1.1.3.7.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.7.0",
                        "4.3.7.3.1.1.3.7.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.7.3",
                    "prevs": [
                        "4.3.7.3.1.1.3.7.0",
                        "4.3.7.3.1.1.3.7.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 0 ⟶ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ 1 = p ^ Suc m ⟶ false"
                },
                {
                    "args": "1 = p ^ Suc m",
                    "id": "4.3.7.3.1.1.3.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 = p ^ Suc m ⊢ 1 = p ^ Suc m"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4.3.7.3.1.1.3.8.1",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 = p ^ Suc m ⊢ p ^ Suc m = 1"
                },
                {
                    "args": "exp_eq_1",
                    "id": "4.3.7.3.1.1.3.8.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 = p ^ Suc m ⊢ p = 1 ∨ Suc m = 0"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 1 ⟶ false"
                },
                {
                    "args": "p = 1",
                    "id": "4.3.7.3.1.1.3.8.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "negE_gen, {A: p = 1, C: false}",
                    "id": "4.3.7.3.1.1.3.8.3.1",
                    "prevs": [
                        "4.3.7.3.0",
                        "4.3.7.3.1.1.3.8.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 1) ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.3.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.3.0",
                        "4.3.7.3.1.1.3.8.3.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = 1 ⟶ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ Suc m = 0 ⟶ false"
                },
                {
                    "args": "Suc m = 0",
                    "id": "4.3.7.3.1.1.3.8.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc m = 0 ⊢ Suc m = 0"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), Suc m = 0, 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬false ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "¬false",
                    "id": "4.3.7.3.1.1.3.8.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: m}",
                    "id": "4.3.7.3.1.1.3.8.4.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc m)"
                },
                {
                    "args": "eq_sym_eq, ¬(Suc m = 0)",
                    "id": "4.3.7.3.1.1.3.8.4.1.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.4.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬false, ¬(p = 1), ¬(p = 0), Suc m = 0, 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(Suc m = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.4.1.3",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.4.1.0",
                        "4.3.7.3.1.1.3.8.4.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), Suc m = 0, 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬false ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.7.3.1.1.3.8.4.2",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.4.0",
                        "4.3.7.3.1.1.3.8.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), Suc m = 0, 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.4.3",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.4.0",
                        "4.3.7.3.1.1.3.8.4.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ Suc m = 0 ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "4.3.7.3.1.1.3.8.5",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.2",
                        "4.3.7.3.1.1.3.8.3",
                        "4.3.7.3.1.1.3.8.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), 1 = p ^ Suc m, prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.8.6",
                    "prevs": [
                        "4.3.7.3.1.1.3.8.0",
                        "4.3.7.3.1.1.3.8.5"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ 1 = p ^ Suc m ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "4.3.7.3.1.1.3.9",
                    "prevs": [
                        "4.3.7.3.1.1.3.6",
                        "4.3.7.3.1.1.3.7",
                        "4.3.7.3.1.1.3.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), p = p * p ^ Suc m, ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.3.10",
                    "prevs": [
                        "4.3.7.3.1.1.3.0",
                        "4.3.7.3.1.1.3.9"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ p = p * p ^ Suc m ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.3.7.3.1.1.4",
                    "prevs": [
                        "4.3.7.3.1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(p = p * p ^ Suc m)"
                },
                {
                    "args": "conjI",
                    "id": "4.3.7.3.1.1.5",
                    "prevs": [
                        "4.3.7.3.0",
                        "4.3.7.3.1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(p = 1) ∧ ¬(p = p * p ^ Suc m)"
                },
                {
                    "args": "conjI",
                    "id": "4.3.7.3.1.1.6",
                    "prevs": [
                        "4.3.7.3.1.1.2",
                        "4.3.7.3.1.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ divides p (p * p ^ Suc m) ∧ ¬(p = 1) ∧ ¬(p = p * p ^ Suc m)"
                },
                {
                    "args": "exI, {P: λx. divides x (p * p ^ Suc m) ∧ ¬(x = 1) ∧ ¬(x = p * p ^ Suc m), a: p}",
                    "id": "4.3.7.3.1.1.7",
                    "prevs": [
                        "4.3.7.3.1.1.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ∃a1. divides a1 (p * p ^ Suc m) ∧ ¬(a1 = 1) ∧ ¬(a1 = p * p ^ Suc m)"
                },
                {
                    "args": "de_morgan_thm2, ∃x. divides x (p * p ^ Suc m) ∧ ¬(x = 1 ∨ x = p * p ^ Suc m)",
                    "id": "4.3.7.3.1.1.8",
                    "prevs": [
                        "4.3.7.3.1.1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ∃x. divides x (p * p ^ Suc m) ∧ ¬(x = 1 ∨ x = p * p ^ Suc m)"
                },
                {
                    "args": "not_imp, ∃x. ¬(divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)",
                    "id": "4.3.7.3.1.1.9",
                    "prevs": [
                        "4.3.7.3.1.1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ∃x. ¬(divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)"
                },
                {
                    "args": "not_all, ¬(∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)",
                    "id": "4.3.7.3.1.1.10",
                    "prevs": [
                        "4.3.7.3.1.1.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)"
                },
                {
                    "args": "disjI2, {A: ¬¬(p * p ^ Suc m = 1), B: ¬(∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)}",
                    "id": "4.3.7.3.1.1.11",
                    "prevs": [
                        "4.3.7.3.1.1.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬¬(p * p ^ Suc m = 1) ∨ ¬(∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬(p * p ^ Suc m = 1) ∧ (∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m))",
                    "id": "4.3.7.3.1.1.12",
                    "prevs": [
                        "4.3.7.3.1.1.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(¬(p * p ^ Suc m = 1) ∧ (∀x. divides x (p * p ^ Suc m) ⟶ x = 1 ∨ x = p * p ^ Suc m))"
                },
                {
                    "args": "prime_def, ¬(prime (p * p ^ Suc m))",
                    "id": "4.3.7.3.1.1.13",
                    "prevs": [
                        "4.3.7.3.1.1.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), ¬(prime p ∧ Suc (Suc m) = 1), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime (p * p ^ Suc m))"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.1.14",
                    "prevs": [
                        "4.3.7.3.1.1.0",
                        "4.3.7.3.1.1.13"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime p ∧ Suc (Suc m) = 1) ⟶ ¬(prime (p * p ^ Suc m))"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.7.3.1.2",
                    "prevs": [
                        "4.3.7.3.1.0",
                        "4.3.7.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p * p ^ Suc m), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.1.3",
                    "prevs": [
                        "4.3.7.3.1.0",
                        "4.3.7.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p * p ^ Suc m) ⟶ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime p ∧ Suc (Suc m) = 1 ⟶ prime (p * p ^ Suc m)"
                },
                {
                    "args": "prime p ∧ Suc (Suc m) = 1",
                    "id": "4.3.7.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ Suc (Suc m) = 1 ⊢ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "conjD2",
                    "id": "4.3.7.3.2.1",
                    "prevs": [
                        "4.3.7.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ Suc (Suc m) = 1 ⊢ Suc (Suc m) = 1"
                },
                {
                    "args": "nat_one_def",
                    "id": "4.3.7.3.2.2",
                    "prevs": [
                        "4.3.7.3.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ Suc (Suc m) = 1 ⊢ Suc (Suc m) = Suc 0"
                },
                {
                    "args": "nat_Suc_inject",
                    "id": "4.3.7.3.2.3",
                    "prevs": [
                        "4.3.7.3.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ Suc (Suc m) = 1 ⊢ Suc m = 0"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), prime p ∧ Suc (Suc m) = 1, prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime (p * p ^ Suc m)) ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "¬(prime (p * p ^ Suc m))",
                    "id": "4.3.7.3.2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime (p * p ^ Suc m)) ⊢ ¬(prime (p * p ^ Suc m))"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: m}",
                    "id": "4.3.7.3.2.4.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc m)"
                },
                {
                    "args": "ineq_sym",
                    "id": "4.3.7.3.2.4.2",
                    "prevs": [
                        "4.3.7.3.2.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), ¬(prime (p * p ^ Suc m)), prime p ∧ Suc (Suc m) = 1, prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(Suc m = 0)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.2.4.3",
                    "prevs": [
                        "4.3.7.3.2.4.0",
                        "4.3.7.3.2.4.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime p ∧ Suc (Suc m) = 1, prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(prime (p * p ^ Suc m)) ⟶ ¬(Suc m = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.3.7.3.2.5",
                    "prevs": [
                        "4.3.7.3.2.3",
                        "4.3.7.3.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime p ∧ Suc (Suc m) = 1, prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p * p ^ Suc m)"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.2.6",
                    "prevs": [
                        "4.3.7.3.2.0",
                        "4.3.7.3.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime p ∧ Suc (Suc m) = 1 ⟶ prime (p * p ^ Suc m)"
                },
                {
                    "args": "iffI",
                    "id": "4.3.7.3.3",
                    "prevs": [
                        "4.3.7.3.1",
                        "4.3.7.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p * p ^ Suc m) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "nat_nat_power_def_2, prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1",
                    "id": "4.3.7.3.4",
                    "prevs": [
                        "4.3.7.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.3.5",
                    "prevs": [
                        "4.3.7.3.0",
                        "4.3.7.3.4"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ ¬(p = 1) ⟶ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "classical_cases",
                    "id": "4.3.7.4",
                    "prevs": [
                        "4.3.7.2",
                        "4.3.7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1, prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⊢ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "",
                    "id": "4.3.7.5",
                    "prevs": [
                        "4.3.7.0",
                        "4.3.7.1",
                        "4.3.7.4"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ∀m. prime (p ^ Suc m) ⟷ prime p ∧ Suc m = 1 ⟶ prime (p ^ Suc (Suc m)) ⟷ prime p ∧ Suc (Suc m) = 1"
                },
                {
                    "args": "nat_induct, {P: λn. prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1, x: n}",
                    "id": "4.3.8",
                    "prevs": [
                        "4.3.6",
                        "4.3.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 0), prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.3.9",
                    "prevs": [
                        "4.3.0",
                        "4.3.8"
                    ],
                    "rule": "intros",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ ¬(p = 0) ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "classical_cases",
                    "id": "4.4",
                    "prevs": [
                        "4.2",
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime (p ^ n) ⟷ prime p ∧ n = 1 ⊢ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. prime (p ^ n) ⟷ prime p ∧ n = 1 ⟶ prime (p ^ Suc n) ⟷ prime p ∧ Suc n = 1"
                },
                {
                    "args": "nat_induct, {P: λn::nat. prime (p ^ n) ⟷ prime p ∧ n = 1, x: n}",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ prime (p ^ n) ⟷ prime p ∧ n = 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime (p ^ n) ⟷ prime p ∧ n = 1"
                }
            ],
            "prop": "prime (p ^ n) ⟷ prime p ∧ n = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "case": "p=0",
                    "goal_id": "4.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.0"
                    ],
                    "goal_id": "4.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "goal": "~(Suc n = 0)",
                    "goal_id": "4.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "fact_ids": [
                        "4.2.2"
                    ],
                    "goal_id": "4.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "4.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.3.0"
                    ],
                    "goal_id": "4.2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "4.2.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.4.0"
                    ],
                    "goal_id": "4.2.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "4.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.2.0"
                    ],
                    "goal_id": "4.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4.3.7",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "case": "p=1",
                    "goal_id": "4.3.7.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "4.3.7.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.2.0"
                    ],
                    "goal_id": "4.3.7.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.3.7.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "goal_id": "4.3.7.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.3.7.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.2.1.0"
                    ],
                    "goal_id": "4.3.7.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.7.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "4.3.7.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.2.2.0"
                    ],
                    "goal_id": "4.3.7.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "4.3.7.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "4.3.7.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "4.3.7.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.0"
                    ],
                    "goal_id": "4.3.7.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.7.3.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "4.3.7.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.0"
                    ],
                    "goal": "p = p * 1",
                    "goal_id": "4.3.7.3.1.1.3.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.1",
                        "4.3.7.3.1.1.3.0"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.2"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.3"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.4"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.5"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.6"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.7.0"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.7.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.8.0"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.8.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.8.1"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.8.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_1"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.8.2"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.8.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.0",
                        "4.3.7.3.1.1.3.8.3.0"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.8.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.1.1.3.8.4.0"
                    ],
                    "goal_id": "4.3.7.3.1.1.3.8.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8.4.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "4.3.7.3.1.1.3.8.4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "4.3.7.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.2.0"
                    ],
                    "goal_id": "4.3.7.3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.2.1"
                    ],
                    "goal_id": "4.3.7.3.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.2.2"
                    ],
                    "goal_id": "4.3.7.3.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "nat_Suc_inject"
                },
                {
                    "fact_ids": [
                        "4.3.7.3.2.3"
                    ],
                    "goal_id": "4.3.7.3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.3.7.3.2.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.7.3.2.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "4.3.7.3.2.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_power_mult",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "x * y = p ^ k",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x * y = p ^ k ⊢ x * y = p ^ k"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x * y = p ^ k ⊢ ∀x. ∀y. x * y = p ^ (0::nat) ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)"
                },
                {
                    "args": "x1, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "y1, nat",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y1"
                },
                {
                    "args": "x1 * y1 = p ^ (0::nat)",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 * y1 = p ^ (0::nat) ⊢ x1 * y1 = p ^ (0::nat)"
                },
                {
                    "args": "nat_nat_power_def_1",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 * y1 = p ^ (0::nat) ⊢ x1 * y1 = 1"
                },
                {
                    "args": "mult_eq_1",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 * y1 = p ^ (0::nat) ⊢ x1 = 1 ∧ y1 = 1"
                },
                {
                    "args": "nat_nat_power_def_1, x1 = p ^ (0::nat) ∧ y1 = p ^ (0::nat)",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ (0::nat) ⊢ x1 = p ^ (0::nat) ∧ y1 = p ^ (0::nat)"
                },
                {
                    "args": "exI, {P: λj::nat. x1 = p ^ (0::nat) ∧ y1 = p ^ j, a: (0::nat)}",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ (0::nat) ⊢ ∃a1::nat. x1 = p ^ (0::nat) ∧ y1 = p ^ a1"
                },
                {
                    "args": "exI, {P: λi::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j, a: (0::nat)}",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ (0::nat) ⊢ ∃a1::nat. ∃j::nat. x1 = p ^ a1 ∧ y1 = p ^ j"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, x * y = p ^ k ⊢ ∀x1. ∀y1. x1 * y1 = p ^ (0::nat) ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x * y = p ^ k ⊢ ∀n. (∀x. ∀y. x * y = p ^ n ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)) ⟶ (∀x. ∀y. x * y = p ^ Suc n ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j))"
                },
                {
                    "args": "k1, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x * y = p ^ k, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∀x. ∀y. x * y = p ^ Suc k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)"
                },
                {
                    "args": "x1, nat",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x1"
                },
                {
                    "args": "y1, nat",
                    "id": "3.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y1"
                },
                {
                    "args": "x1 * y1 = p ^ Suc k1",
                    "id": "3.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 * y1 = p ^ Suc k1 ⊢ x1 * y1 = p ^ Suc k1"
                },
                {
                    "args": "nat_nat_power_def_2",
                    "id": "3.2.3",
                    "prevs": [
                        "3.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 * y1 = p ^ Suc k1 ⊢ x1 * y1 = p * p ^ k1"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "3.2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "divides_rmul, {a: p, d: p, x: p ^ k1}",
                    "id": "3.2.5",
                    "prevs": [
                        "3.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ divides p (p * p ^ k1)"
                },
                {
                    "args": "divides p (x1 * y1)",
                    "id": "3.2.6",
                    "prevs": [
                        "3.2.3",
                        "3.2.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ divides p (x1 * y1)"
                },
                {
                    "args": "prime_divprod",
                    "id": "3.2.7",
                    "prevs": [
                        "0",
                        "3.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ divides p x1 ∨ divides p y1"
                },
                {
                    "args": "divides_def",
                    "id": "3.2.8",
                    "prevs": [
                        "3.2.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ (∃k. x1 = p * k) ∨ (∃k. y1 = p * k)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "3.2.9",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "3.2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ (∃k. x1 = p * k) ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "∃k. x1 = p * k",
                    "id": "3.2.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃k. x1 = p * k ⊢ ∃k. x1 = p * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.2.10.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "x1 = p * d",
                    "id": "3.2.10.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 = p * d ⊢ x1 = p * d"
                },
                {
                    "args": "",
                    "id": "3.2.10.3",
                    "prevs": [
                        "3.2.10.2",
                        "3.2.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ p * d * y1 = p * p ^ k1"
                },
                {
                    "args": "mult_assoc",
                    "id": "3.2.10.4",
                    "prevs": [
                        "3.2.10.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ p * (d * y1) = p * p ^ k1"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "3.2.10.5",
                    "prevs": [
                        "3.2.10.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ p = 0 ∨ d * y1 = p ^ k1"
                },
                {
                    "args": "",
                    "id": "3.2.10.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p = 0 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "p = 0",
                    "id": "3.2.10.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j}",
                    "id": "3.2.10.6.1",
                    "prevs": [
                        "3.2.9",
                        "3.2.10.6.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p = 0, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "",
                    "id": "3.2.10.6.2",
                    "prevs": [
                        "3.2.10.6.0",
                        "3.2.10.6.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p = 0 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.2.10.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ d * y1 = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "d * y1 = p ^ k1",
                    "id": "3.2.10.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d * y1 = p ^ k1 ⊢ d * y1 = p ^ k1"
                },
                {
                    "args": "d",
                    "id": "3.2.10.7.1",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∀y. d * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. d = p ^ i ∧ y = p ^ j)"
                },
                {
                    "args": "y1",
                    "id": "3.2.10.7.2",
                    "prevs": [
                        "3.2.10.7.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ d * y1 = p ^ k1 ⟶ (∃i::nat. ∃j::nat. d = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.2.10.7.3",
                    "prevs": [
                        "3.2.10.7.2",
                        "3.2.10.7.0"
                    ],
                    "rule": "apply_fact",
                    "th": "d * y1 = p ^ k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. d = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "i, nat",
                    "id": "3.2.10.7.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "j, nat",
                    "id": "3.2.10.7.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "d = p ^ i ∧ y1 = p ^ j",
                    "id": "3.2.10.7.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ^ i ∧ y1 = p ^ j ⊢ d = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "3.2.10.7.7",
                    "prevs": [
                        "3.2.10.7.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = p ^ i ∧ y1 = p ^ j ⊢ d = p ^ i"
                },
                {
                    "args": "conjD2",
                    "id": "3.2.10.7.8",
                    "prevs": [
                        "3.2.10.7.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = p ^ i ∧ y1 = p ^ j ⊢ y1 = p ^ j"
                },
                {
                    "args": "nat_nat_power_def_2, p * p ^ i = p ^ Suc i",
                    "id": "3.2.10.7.9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p * p ^ i = p ^ Suc i"
                },
                {
                    "args": "p * d = p ^ Suc i",
                    "id": "3.2.10.7.10",
                    "prevs": [
                        "3.2.10.7.7",
                        "3.2.10.7.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, d * y1 = p ^ k1, x * y = p ^ k, x1 * y1 = p ^ Suc k1, d = p ^ i ∧ y1 = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p * d = p ^ Suc i"
                },
                {
                    "args": "conjI",
                    "id": "3.2.10.7.11",
                    "prevs": [
                        "3.2.10.7.10",
                        "3.2.10.7.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, d * y1 = p ^ k1, x * y = p ^ k, x1 * y1 = p ^ Suc k1, d = p ^ i ∧ y1 = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p * d = p ^ Suc i ∧ y1 = p ^ j"
                },
                {
                    "args": "exI, {P: λj::nat. p * d = p ^ Suc i ∧ y1 = p ^ j, a: j}",
                    "id": "3.2.10.7.12",
                    "prevs": [
                        "3.2.10.7.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, d * y1 = p ^ k1, x * y = p ^ k, x1 * y1 = p ^ Suc k1, d = p ^ i ∧ y1 = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃a1::nat. p * d = p ^ Suc i ∧ y1 = p ^ a1"
                },
                {
                    "args": "exI, {P: λi::nat. ∃j::nat. p * d = p ^ i ∧ y1 = p ^ j, a: Suc i}",
                    "id": "3.2.10.7.13",
                    "prevs": [
                        "3.2.10.7.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, d * y1 = p ^ k1, x * y = p ^ k, x1 * y1 = p ^ Suc k1, d = p ^ i ∧ y1 = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃a1::nat. ∃j::nat. p * d = p ^ a1 ∧ y1 = p ^ j"
                },
                {
                    "args": "∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j",
                    "id": "3.2.10.7.14",
                    "prevs": [
                        "3.2.10.2",
                        "3.2.10.7.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, d * y1 = p ^ k1, x * y = p ^ k, x1 * y1 = p ^ Suc k1, d = p ^ i ∧ y1 = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "∃i::nat. ∃j::nat. d = p ^ i ∧ y1 = p ^ j",
                    "id": "3.2.10.7.15",
                    "prevs": [
                        "3.2.10.7.0",
                        "3.2.10.7.3",
                        "3.2.10.7.4",
                        "3.2.10.7.5",
                        "3.2.10.7.6",
                        "3.2.10.7.14"
                    ],
                    "rule": "intros",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ d * y1 = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "disjE",
                    "id": "3.2.10.8",
                    "prevs": [
                        "3.2.10.5",
                        "3.2.10.6",
                        "3.2.10.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x1 = p * d, ∃k. x1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "∃k. x1 = p * k",
                    "id": "3.2.10.9",
                    "prevs": [
                        "3.2.10.0",
                        "3.2.10.0",
                        "3.2.10.1",
                        "3.2.10.2",
                        "3.2.10.8"
                    ],
                    "rule": "intros",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ (∃k. x1 = p * k) ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.2.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ (∃k. y1 = p * k) ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "∃k. y1 = p * k",
                    "id": "3.2.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃k. y1 = p * k ⊢ ∃k. y1 = p * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.2.11.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "y1 = p * d",
                    "id": "3.2.11.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y1 = p * d ⊢ y1 = p * d"
                },
                {
                    "args": "",
                    "id": "3.2.11.3",
                    "prevs": [
                        "3.2.11.2",
                        "3.2.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "y1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ x1 * (p * d) = p * p ^ k1"
                },
                {
                    "args": "x1 * (p * d) = p * (x1 * d)",
                    "id": "3.2.11.4",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ x1 * (p * d) = p * (x1 * d)"
                },
                {
                    "args": "",
                    "id": "3.2.11.5",
                    "prevs": [
                        "3.2.11.4",
                        "3.2.11.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "y1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ p * (x1 * d) = p * p ^ k1"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "3.2.11.6",
                    "prevs": [
                        "3.2.11.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "y1 = p * d, x1 * y1 = p ^ Suc k1 ⊢ p = 0 ∨ x1 * d = p ^ k1"
                },
                {
                    "args": "",
                    "id": "3.2.11.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p = 0 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "p = 0",
                    "id": "3.2.11.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j}",
                    "id": "3.2.11.7.1",
                    "prevs": [
                        "3.2.9",
                        "3.2.11.7.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p = 0, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "",
                    "id": "3.2.11.7.2",
                    "prevs": [
                        "3.2.11.7.0",
                        "3.2.11.7.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p = 0 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.2.11.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ x1 * d = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "x1 * d = p ^ k1",
                    "id": "3.2.11.8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 * d = p ^ k1 ⊢ x1 * d = p ^ k1"
                },
                {
                    "args": "",
                    "id": "3.2.11.8.1",
                    "prevs": [
                        "3.1",
                        "3.2.11.8.0"
                    ],
                    "rule": "apply_fact",
                    "th": "x1 * d = p ^ k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ d = p ^ j"
                },
                {
                    "args": "i, nat",
                    "id": "3.2.11.8.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "j, nat",
                    "id": "3.2.11.8.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "x1 = p ^ i ∧ d = p ^ j",
                    "id": "3.2.11.8.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x1 = p ^ i ∧ d = p ^ j ⊢ x1 = p ^ i ∧ d = p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "3.2.11.8.5",
                    "prevs": [
                        "3.2.11.8.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 = p ^ i ∧ d = p ^ j ⊢ x1 = p ^ i"
                },
                {
                    "args": "conjD2",
                    "id": "3.2.11.8.6",
                    "prevs": [
                        "3.2.11.8.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x1 = p ^ i ∧ d = p ^ j ⊢ d = p ^ j"
                },
                {
                    "args": "nat_nat_power_def_2, p * p ^ j = p ^ Suc j",
                    "id": "3.2.11.8.7",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p * p ^ j = p ^ Suc j"
                },
                {
                    "args": "p * d = p ^ Suc j",
                    "id": "3.2.11.8.8",
                    "prevs": [
                        "3.2.11.8.6",
                        "3.2.11.8.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * d = p ^ k1, x1 * y1 = p ^ Suc k1, x1 = p ^ i ∧ d = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ p * d = p ^ Suc j"
                },
                {
                    "args": "y1 = p ^ Suc j",
                    "id": "3.2.11.8.9",
                    "prevs": [
                        "3.2.11.2",
                        "3.2.11.8.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * d = p ^ k1, x1 * y1 = p ^ Suc k1, x1 = p ^ i ∧ d = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ y1 = p ^ Suc j"
                },
                {
                    "args": "conjI",
                    "id": "3.2.11.8.10",
                    "prevs": [
                        "3.2.11.8.5",
                        "3.2.11.8.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * d = p ^ k1, x1 * y1 = p ^ Suc k1, x1 = p ^ i ∧ d = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ x1 = p ^ i ∧ y1 = p ^ Suc j"
                },
                {
                    "args": "exI, {P: λj::nat. x1 = p ^ i ∧ y1 = p ^ j, a: Suc j}",
                    "id": "3.2.11.8.11",
                    "prevs": [
                        "3.2.11.8.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * d = p ^ k1, x1 * y1 = p ^ Suc k1, x1 = p ^ i ∧ d = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃a1::nat. x1 = p ^ i ∧ y1 = p ^ a1"
                },
                {
                    "args": "exI, {P: λi::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j, a: i}",
                    "id": "3.2.11.8.12",
                    "prevs": [
                        "3.2.11.8.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * d = p ^ k1, x1 * y1 = p ^ Suc k1, x1 = p ^ i ∧ d = p ^ j, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃a1::nat. ∃j::nat. x1 = p ^ a1 ∧ y1 = p ^ j"
                },
                {
                    "args": "∃i::nat. ∃j::nat. x1 = p ^ i ∧ d = p ^ j",
                    "id": "3.2.11.8.13",
                    "prevs": [
                        "3.2.11.8.0",
                        "3.2.11.8.1",
                        "3.2.11.8.2",
                        "3.2.11.8.3",
                        "3.2.11.8.4",
                        "3.2.11.8.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ x1 * d = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "disjE",
                    "id": "3.2.11.9",
                    "prevs": [
                        "3.2.11.6",
                        "3.2.11.7",
                        "3.2.11.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, y1 = p * d, ∃k. y1 = p * k, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "∃k. y1 = p * k",
                    "id": "3.2.11.10",
                    "prevs": [
                        "3.2.11.0",
                        "3.2.11.0",
                        "3.2.11.1",
                        "3.2.11.2",
                        "3.2.11.9"
                    ],
                    "rule": "intros",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ (∃k. y1 = p * k) ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "disjE",
                    "id": "3.2.12",
                    "prevs": [
                        "3.2.8",
                        "3.2.10",
                        "3.2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x * y = p ^ k, x1 * y1 = p ^ Suc k1, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j"
                },
                {
                    "args": "",
                    "id": "3.2.13",
                    "prevs": [
                        "3.2.0",
                        "3.2.1",
                        "3.2.2",
                        "3.2.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, x * y = p ^ k, ∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j) ⊢ ∀x1. ∀y1. x1 * y1 = p ^ Suc k1 ⟶ (∃i::nat. ∃j::nat. x1 = p ^ i ∧ y1 = p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, x * y = p ^ k ⊢ ∀k1. (∀x. ∀y. x * y = p ^ k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)) ⟶ (∀x. ∀y. x * y = p ^ Suc k1 ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j))"
                },
                {
                    "args": "nat_induct, {P: λk::nat. ∀x. ∀y. x * y = p ^ k ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j), x: k}",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x * y = p ^ k ⊢ ∀x. ∀y. x * y = p ^ k ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)"
                },
                {
                    "args": "x, y",
                    "id": "5",
                    "prevs": [
                        "4",
                        "1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "prime p, x * y = p ^ k ⊢ ∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ x * y = p ^ k ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)"
                }
            ],
            "prop": "prime p ⟶ x * y = p ^ k ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)",
            "steps": [
                {
                    "goal": "!x. !y. x * y = p ^ k ⟶ (∃i::nat. ∃j::nat. x = p ^ i ∧ y = p ^ j)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "k"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x1,y1"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_1"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "inst_exists_goal",
                    "s": "(0::nat)"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "k1"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction",
                    "names": "x1,y1"
                },
                {
                    "fact_ids": [
                        "3.2.2"
                    ],
                    "goal_id": "3.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal": "divides p x1 | divides p y1",
                    "goal_id": "3.2.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_divprod"
                },
                {
                    "fact_ids": [
                        "3.2.3"
                    ],
                    "goal_id": "3.2.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "3.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "3.2.7"
                    ],
                    "goal_id": "3.2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "goal": "~(p=0)",
                    "goal_id": "3.2.9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.2.9",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "3.2.8"
                    ],
                    "goal_id": "3.2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.2.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.10.0"
                    ],
                    "goal_id": "3.2.10.1",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.2.10.2",
                        "3.2.3"
                    ],
                    "goal_id": "3.2.10.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.2.10.3"
                    ],
                    "goal_id": "3.2.10.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "3.2.10.4"
                    ],
                    "goal_id": "3.2.10.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "3.2.10.5"
                    ],
                    "goal_id": "3.2.10.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.2.10.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.9",
                        "3.2.10.6.0"
                    ],
                    "goal_id": "3.2.10.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "3.2.10.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2.10.7.1",
                    "method_name": "forall_elim",
                    "s": "d"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.1"
                    ],
                    "goal_id": "3.2.10.7.2",
                    "method_name": "forall_elim",
                    "s": "y1"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.2",
                        "3.2.10.7.0"
                    ],
                    "goal_id": "3.2.10.7.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.3"
                    ],
                    "goal_id": "3.2.10.7.4",
                    "method_name": "exists_elim",
                    "names": "i,j"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.6"
                    ],
                    "goal_id": "3.2.10.7.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.6"
                    ],
                    "goal_id": "3.2.10.7.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.2.10.2"
                    ],
                    "goal_id": "3.2.10.7.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.10.7.9",
                    "method_name": "inst_exists_goal",
                    "s": "Suc i"
                },
                {
                    "goal_id": "3.2.10.7.9",
                    "method_name": "inst_exists_goal",
                    "s": "j"
                },
                {
                    "goal_id": "3.2.10.7.9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.2.10.7.7"
                    ],
                    "goal_id": "3.2.10.7.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.10.7.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "3.2.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.11.0"
                    ],
                    "goal_id": "3.2.11.1",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.2.11.2",
                        "3.2.3"
                    ],
                    "goal_id": "3.2.11.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "x1 * (p * d) = p * (x1 * d)",
                    "goal_id": "3.2.11.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.2.11.4",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "3.2.11.4",
                        "3.2.11.3"
                    ],
                    "goal_id": "3.2.11.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.2.11.5"
                    ],
                    "goal_id": "3.2.11.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "3.2.11.6"
                    ],
                    "goal_id": "3.2.11.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.2.11.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.9",
                        "3.2.11.7.0"
                    ],
                    "goal_id": "3.2.11.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "3.2.11.8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1",
                        "3.2.11.8.0"
                    ],
                    "goal_id": "3.2.11.8.1",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.2.11.8.1"
                    ],
                    "goal_id": "3.2.11.8.2",
                    "method_name": "exists_elim",
                    "names": "i,j"
                },
                {
                    "fact_ids": [
                        "3.2.11.8.4"
                    ],
                    "goal_id": "3.2.11.8.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.2.11.8.4"
                    ],
                    "goal_id": "3.2.11.8.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.2.11.8.7",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "goal_id": "3.2.11.8.7",
                    "method_name": "inst_exists_goal",
                    "s": "Suc j"
                },
                {
                    "goal_id": "3.2.11.8.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.2.11.2"
                    ],
                    "goal_id": "3.2.11.8.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.2.11.8.6"
                    ],
                    "goal_id": "3.2.11.8.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.2.11.8.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "p": "nat",
                "x": "nat",
                "y": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_power_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬((0::nat) = 0) ⟶ x ^ (0::nat) = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "¬((0::nat) = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((0::nat) = 0) ⊢ ¬((0::nat) = 0)"
                },
                {
                    "args": "x ^ (0::nat) = p ^ k",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ (0::nat) = p ^ k ⊢ x ^ (0::nat) = p ^ k"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "negE_gen, {A: (0::nat) = 0, C: ∃i::nat. x = p ^ i}",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬((0::nat) = 0), x ^ (0::nat) = p ^ k ⊢ ∃i::nat. x = p ^ i"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬((0::nat) = 0) ⟶ x ^ (0::nat) = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀n. (¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)) ⟶ ¬(Suc n = 0) ⟶ x ^ Suc n = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "n, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i) ⊢ ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "¬(Suc n = 0)",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(Suc n = 0) ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "x ^ Suc n = p ^ k",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ^ Suc n = p ^ k ⊢ x ^ Suc n = p ^ k"
                },
                {
                    "args": "nat_nat_power_def_2",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ^ Suc n = p ^ k ⊢ x * x ^ n = p ^ k"
                },
                {
                    "args": "prime_power_mult",
                    "id": "2.5",
                    "prevs": [
                        "0",
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x ^ Suc n = p ^ k ⊢ ∃i::nat. ∃j::nat. x = p ^ i ∧ x ^ n = p ^ j"
                },
                {
                    "args": "i, nat",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "j, nat",
                    "id": "2.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "x = p ^ i ∧ x ^ n = p ^ j",
                    "id": "2.8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = p ^ i ∧ x ^ n = p ^ j ⊢ x = p ^ i ∧ x ^ n = p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "2.9",
                    "prevs": [
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ i ∧ x ^ n = p ^ j ⊢ x = p ^ i"
                },
                {
                    "args": "exI, {P: λi::nat. x = p ^ i, a: i}",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(Suc n = 0), x ^ Suc n = p ^ k, x = p ^ i ∧ x ^ n = p ^ j, ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i) ⊢ ∃a1::nat. x = p ^ a1"
                },
                {
                    "args": "∃i::nat. ∃j::nat. x = p ^ i ∧ x ^ n = p ^ j",
                    "id": "2.11",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.5",
                        "2.6",
                        "2.7",
                        "2.8",
                        "2.10"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀n. (¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)) ⟶ ¬(Suc n = 0) ⟶ x ^ Suc n = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "nat_induct, {P: λn::nat. ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i), x: n}",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)"
                }
            ],
            "prop": "prime p ⟶ ¬(n = 0) ⟶ x ^ n = p ^ k ⟶ (∃i::nat. x = p ^ i)",
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "revert_intro"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "revert_intro"
                },
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "fact_ids": [
                        "0",
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_power_mult"
                },
                {
                    "fact_ids": [
                        "2.5"
                    ],
                    "goal_id": "2.6",
                    "method_name": "exists_elim",
                    "names": "i,j"
                },
                {
                    "fact_ids": [
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat",
                "x": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "divides_primepow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀d. divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "d, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ divides d (p ^ k) ⟶ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "divides d (p ^ k)",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d (p ^ k) ⊢ divides d (p ^ k)"
                },
                {
                    "args": "divides_def",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides d (p ^ k) ⊢ ∃k1. p ^ k = d * k1"
                },
                {
                    "args": "e, nat",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "p ^ k = d * e",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ k = d * e ⊢ p ^ k = d * e"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ k = d * e ⊢ d * e = p ^ k"
                },
                {
                    "args": "prime_power_mult",
                    "id": "1.1.5",
                    "prevs": [
                        "0",
                        "1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p ^ k = d * e ⊢ ∃i::nat. ∃j::nat. d = p ^ i ∧ e = p ^ j"
                },
                {
                    "args": "i, nat",
                    "id": "1.1.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "j, nat",
                    "id": "1.1.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "d = p ^ i ∧ e = p ^ j",
                    "id": "1.1.8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ^ i ∧ e = p ^ j ⊢ d = p ^ i ∧ e = p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.9",
                    "prevs": [
                        "1.1.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = p ^ i ∧ e = p ^ j ⊢ d = p ^ i"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.10",
                    "prevs": [
                        "1.1.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = p ^ i ∧ e = p ^ j ⊢ e = p ^ j"
                },
                {
                    "args": "",
                    "id": "1.1.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p = 0 ⟶ i ≤ k"
                },
                {
                    "args": "p = 0",
                    "id": "1.1.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.1.11.1",
                    "prevs": [
                        "1.1.11.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 0 ⊢ prime 0"
                },
                {
                    "args": "",
                    "id": "1.1.11.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 0, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(i ≤ k) ⟶ ¬(prime 0)"
                },
                {
                    "args": "¬(i ≤ k)",
                    "id": "1.1.11.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(i ≤ k) ⊢ ¬(i ≤ k)"
                },
                {
                    "args": "prime_0",
                    "id": "1.1.11.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "1.1.11.2.2",
                    "prevs": [
                        "1.1.11.2.0",
                        "1.1.11.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 0, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(i ≤ k) ⟶ ¬(prime 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.1.11.3",
                    "prevs": [
                        "1.1.11.1",
                        "1.1.11.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 0, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.11.4",
                    "prevs": [
                        "1.1.11.0",
                        "1.1.11.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p = 0 ⟶ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 0) ⟶ i ≤ k"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "1.1.12.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.12.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p = 1 ⟶ i ≤ k"
                },
                {
                    "args": "p = 1",
                    "id": "1.1.12.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.1.12.1.1",
                    "prevs": [
                        "1.1.12.1.0",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = 1 ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "1.1.12.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(i ≤ k) ⟶ ¬(prime 1)"
                },
                {
                    "args": "¬(i ≤ k)",
                    "id": "1.1.12.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(i ≤ k) ⊢ ¬(i ≤ k)"
                },
                {
                    "args": "prime_1",
                    "id": "1.1.12.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "1.1.12.1.2.2",
                    "prevs": [
                        "1.1.12.1.2.0",
                        "1.1.12.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(i ≤ k) ⟶ ¬(prime 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.1.12.1.3",
                    "prevs": [
                        "1.1.12.1.1",
                        "1.1.12.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.12.1.4",
                    "prevs": [
                        "1.1.12.1.0",
                        "1.1.12.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p = 1 ⟶ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.12.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 1) ⟶ i ≤ k"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.1.12.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "less_eq_refl, {n: d}",
                    "id": "1.1.12.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ d ≤ d"
                },
                {
                    "args": "disjI1, {A: ¬(p = 0), B: ¬¬(j = 0)}",
                    "id": "1.1.12.2.2",
                    "prevs": [
                        "1.1.12.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 0) ∨ ¬¬(j = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(p = 0 ∧ ¬(j = 0))",
                    "id": "1.1.12.2.3",
                    "prevs": [
                        "1.1.12.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 0 ∧ ¬(j = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(p ^ j = 0)",
                    "id": "1.1.12.2.4",
                    "prevs": [
                        "1.1.12.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p ^ j = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "1.1.12.2.5",
                    "prevs": [
                        "1.1.12.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ 1 ≤ p ^ j"
                },
                {
                    "args": "1 ≤ e",
                    "id": "1.1.12.2.6",
                    "prevs": [
                        "1.1.10",
                        "1.1.12.2.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ 1 ≤ e"
                },
                {
                    "args": "le_mult2",
                    "id": "1.1.12.2.7",
                    "prevs": [
                        "1.1.12.2.1",
                        "1.1.12.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ d * 1 ≤ d * e"
                },
                {
                    "args": "mult_1_right",
                    "id": "1.1.12.2.8",
                    "prevs": [
                        "1.1.12.2.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ d ≤ d * e"
                },
                {
                    "args": "",
                    "id": "1.1.12.2.9",
                    "prevs": [
                        "1.1.4",
                        "1.1.12.2.8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ d ≤ p ^ k"
                },
                {
                    "args": "",
                    "id": "1.1.12.2.10",
                    "prevs": [
                        "1.1.9",
                        "1.1.12.2.9"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p ^ i ≤ p ^ k"
                },
                {
                    "args": "le_exp",
                    "id": "1.1.12.2.11",
                    "prevs": [
                        "1.1.12.2.10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ if p = 0 then i = 0 ⟶ k = 0 else p = 1 ∨ i ≤ k"
                },
                {
                    "args": "if_not_P",
                    "id": "1.1.12.2.12",
                    "prevs": [
                        "1.1.12.2.11",
                        "1.1.12.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ p = 1 ∨ i ≤ k"
                },
                {
                    "args": "i ≤ k ⟶ i ≤ k",
                    "id": "1.1.12.2.13",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ i ≤ k ⟶ i ≤ k"
                },
                {
                    "args": "disjE",
                    "id": "1.1.12.2.14",
                    "prevs": [
                        "1.1.12.2.12",
                        "1.1.12.1",
                        "1.1.12.2.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.12.2.15",
                    "prevs": [
                        "1.1.12.2.0",
                        "1.1.12.2.14"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 1) ⟶ i ≤ k"
                },
                {
                    "args": "classical_cases",
                    "id": "1.1.12.3",
                    "prevs": [
                        "1.1.12.1",
                        "1.1.12.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 0), divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k"
                },
                {
                    "args": "",
                    "id": "1.1.12.4",
                    "prevs": [
                        "1.1.12.0",
                        "1.1.12.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ¬(p = 0) ⟶ i ≤ k"
                },
                {
                    "args": "classical_cases",
                    "id": "1.1.13",
                    "prevs": [
                        "1.1.11",
                        "1.1.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k"
                },
                {
                    "args": "conjI",
                    "id": "1.1.14",
                    "prevs": [
                        "1.1.13",
                        "1.1.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ i ≤ k ∧ d = p ^ i"
                },
                {
                    "args": "exI, {P: λi. i ≤ k ∧ d = p ^ i, a: i}",
                    "id": "1.1.15",
                    "prevs": [
                        "1.1.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides d (p ^ k), p ^ k = d * e, d = p ^ i ∧ e = p ^ j ⊢ ∃a1. a1 ≤ k ∧ d = p ^ a1"
                },
                {
                    "args": "∃i::nat. ∃j::nat. d = p ^ i ∧ e = p ^ j, ∃k1. p ^ k = d * k1",
                    "id": "1.1.16",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2",
                        "1.1.3",
                        "1.1.5",
                        "1.1.6",
                        "1.1.7",
                        "1.1.8",
                        "1.1.15"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ divides d (p ^ k) ⟶ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ (∃i. i ≤ k ∧ d = p ^ i) ⟶ divides d (p ^ k)"
                },
                {
                    "args": "∃i. i ≤ k ∧ d = p ^ i",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃i. i ≤ k ∧ d = p ^ i ⊢ ∃i. i ≤ k ∧ d = p ^ i"
                },
                {
                    "args": "i, nat",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "i ≤ k ∧ d = p ^ i",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ k ∧ d = p ^ i ⊢ i ≤ k ∧ d = p ^ i"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ≤ k ∧ d = p ^ i ⊢ i ≤ k"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ≤ k ∧ d = p ^ i ⊢ d = p ^ i"
                },
                {
                    "args": "less_eq_exist",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "i ≤ k ∧ d = p ^ i ⊢ ∃p. k = i + p"
                },
                {
                    "args": "e, nat",
                    "id": "1.2.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "k = i + e",
                    "id": "1.2.7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = i + e ⊢ k = i + e"
                },
                {
                    "args": "divides_self, {n: p ^ i}",
                    "id": "1.2.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ i) (p ^ i)"
                },
                {
                    "args": "divides_rmul, {a: p ^ i, d: p ^ i, x: p ^ e}",
                    "id": "1.2.9",
                    "prevs": [
                        "1.2.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, k = i + e, i ≤ k ∧ d = p ^ i, ∃i. i ≤ k ∧ d = p ^ i ⊢ divides (p ^ i) (p ^ i * p ^ e)"
                },
                {
                    "args": "divides d (p ^ i * p ^ e)",
                    "id": "1.2.10",
                    "prevs": [
                        "1.2.4",
                        "1.2.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, k = i + e, i ≤ k ∧ d = p ^ i, ∃i. i ≤ k ∧ d = p ^ i ⊢ divides d (p ^ i * p ^ e)"
                },
                {
                    "args": "nat_power_add, divides d (p ^ (i + e))",
                    "id": "1.2.11",
                    "prevs": [
                        "1.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, k = i + e, i ≤ k ∧ d = p ^ i, ∃i. i ≤ k ∧ d = p ^ i ⊢ divides d (p ^ (i + e))"
                },
                {
                    "args": "divides d (p ^ k)",
                    "id": "1.2.12",
                    "prevs": [
                        "1.2.7",
                        "1.2.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, k = i + e, i ≤ k ∧ d = p ^ i, ∃i. i ≤ k ∧ d = p ^ i ⊢ divides d (p ^ k)"
                },
                {
                    "args": "∃p. k = i + p, ∃i. i ≤ k ∧ d = p ^ i",
                    "id": "1.2.13",
                    "prevs": [
                        "1.2.0",
                        "1.2.0",
                        "1.2.1",
                        "1.2.2",
                        "1.2.5",
                        "1.2.6",
                        "1.2.7",
                        "1.2.12"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ (∃i. i ≤ k ∧ d = p ^ i) ⟶ divides d (p ^ k)"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀d. divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ (∀d. divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i))"
                }
            ],
            "prop": "prime p ⟶ (∀d. divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i))",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "exists_elim",
                    "names": "e"
                },
                {
                    "fact_ids": [
                        "1.1.3"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "0",
                        "1.1.4"
                    ],
                    "goal_id": "1.1.5",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_power_mult"
                },
                {
                    "fact_ids": [
                        "1.1.5"
                    ],
                    "goal_id": "1.1.6",
                    "method_name": "exists_elim",
                    "names": "i,j"
                },
                {
                    "goal_id": "1.1.9",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "fact_ids": [
                        "1.1.8"
                    ],
                    "goal_id": "1.1.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.8"
                    ],
                    "goal_id": "1.1.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.11",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "case": "p=0",
                    "goal_id": "1.1.11",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.11.0",
                        "0"
                    ],
                    "goal_id": "1.1.11.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.11.1"
                    ],
                    "goal_id": "1.1.11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1.11.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.11.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "1.1.12",
                    "method_name": "introduction"
                },
                {
                    "case": "p=1",
                    "goal_id": "1.1.12.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1.12.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.12.1.0",
                        "0"
                    ],
                    "goal_id": "1.1.12.1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.12.1.1"
                    ],
                    "goal_id": "1.1.12.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.1.12.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.12.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "goal_id": "1.1.12.2",
                    "method_name": "introduction"
                },
                {
                    "goal": "d * 1 <= d * e",
                    "goal_id": "1.1.12.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.12.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_mult2"
                },
                {
                    "goal_id": "1.1.12.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "fact_ids": [
                        "1.1.10"
                    ],
                    "goal_id": "1.1.12.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.12.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "goal_id": "1.1.12.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "1.1.12.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "1.1.12.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "1.1.12.2.7"
                    ],
                    "goal_id": "1.1.12.2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "1.1.4",
                        "1.1.12.2.8"
                    ],
                    "goal_id": "1.1.12.2.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.9",
                        "1.1.12.2.9"
                    ],
                    "goal_id": "1.1.12.2.10",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.12.2.10"
                    ],
                    "goal_id": "1.1.12.2.11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_exp"
                },
                {
                    "fact_ids": [
                        "1.1.12.2.11",
                        "1.1.12.0"
                    ],
                    "goal_id": "1.1.12.2.12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.1.12.2.12"
                    ],
                    "goal_id": "1.1.12.2.13",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "exists_elim",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "1.2.2"
                    ],
                    "goal_id": "1.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2"
                    ],
                    "goal_id": "1.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2.3"
                    ],
                    "goal_id": "1.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_eq_exist"
                },
                {
                    "fact_ids": [
                        "1.2.5"
                    ],
                    "goal_id": "1.2.6",
                    "method_name": "exists_elim",
                    "names": "e"
                },
                {
                    "fact_ids": [
                        "1.2.7"
                    ],
                    "goal_id": "1.2.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_power_add"
                },
                {
                    "fact_ids": [
                        "1.2.4"
                    ],
                    "goal_id": "1.2.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "1.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "primepow_divides_prod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides (p ^ k) (m * n)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) (m * n) ⊢ divides (p ^ k) (m * n)"
                },
                {
                    "args": "division_decomp",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ k) (m * n) ⊢ ∃b1. ∃c1. p ^ k = b1 * c1 ∧ divides b1 m ∧ divides c1 n"
                },
                {
                    "args": "b, nat",
                    "id": "3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "c, nat",
                    "id": "4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "p ^ k = b * c ∧ divides b m ∧ divides c n",
                    "id": "5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ p ^ k = b * c ∧ divides b m ∧ divides c n"
                },
                {
                    "args": "divides_primepow, {k: k}",
                    "id": "6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ ∀d. divides d (p ^ k) ⟷ (∃i. i ≤ k ∧ d = p ^ i)"
                },
                {
                    "args": "conjD1",
                    "id": "7",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ p ^ k = b * c"
                },
                {
                    "args": "b",
                    "id": "8",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ⊢ divides b (p ^ k) ⟷ (∃i. i ≤ k ∧ b = p ^ i)"
                },
                {
                    "args": "divides_self, {n: b}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides b b"
                },
                {
                    "args": "divides_rmul, {a: b, d: b, x: c}",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides b (b * c)"
                },
                {
                    "args": "divides b (p ^ k)",
                    "id": "11",
                    "prevs": [
                        "7",
                        "10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides b (p ^ k)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ ∃i. i ≤ k ∧ b = p ^ i"
                },
                {
                    "args": "c",
                    "id": "13",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ⊢ divides c (p ^ k) ⟷ (∃i. i ≤ k ∧ c = p ^ i)"
                },
                {
                    "args": "divides_self, {n: c}",
                    "id": "14",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides c c"
                },
                {
                    "args": "divides_lmul, {a: c, d: c, x: b}",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides c (b * c)"
                },
                {
                    "args": "divides c (p ^ k)",
                    "id": "16",
                    "prevs": [
                        "7",
                        "15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides c (p ^ k)"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "13",
                        "16"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ ∃i. i ≤ k ∧ c = p ^ i"
                },
                {
                    "args": "i, nat",
                    "id": "18",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "i ≤ k ∧ b = p ^ i",
                    "id": "19",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ k ∧ b = p ^ i ⊢ i ≤ k ∧ b = p ^ i"
                },
                {
                    "args": "j, nat",
                    "id": "20",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "j ≤ k ∧ c = p ^ j",
                    "id": "21",
                    "prevs": [],
                    "rule": "assume",
                    "th": "j ≤ k ∧ c = p ^ j ⊢ j ≤ k ∧ c = p ^ j"
                },
                {
                    "args": "conjD2",
                    "id": "22",
                    "prevs": [
                        "19"
                    ],
                    "rule": "apply_theorem",
                    "th": "i ≤ k ∧ b = p ^ i ⊢ b = p ^ i"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "23",
                    "prevs": [
                        "22"
                    ],
                    "rule": "rewrite_fact",
                    "th": "i ≤ k ∧ b = p ^ i ⊢ p ^ i = b"
                },
                {
                    "args": "conjD2",
                    "id": "24",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides b m ∧ divides c n"
                },
                {
                    "args": "conjD1",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides b m"
                },
                {
                    "args": "divides (p ^ i) m",
                    "id": "26",
                    "prevs": [
                        "23",
                        "25"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides (p ^ i) m"
                },
                {
                    "args": "conjD2",
                    "id": "27",
                    "prevs": [
                        "21"
                    ],
                    "rule": "apply_theorem",
                    "th": "j ≤ k ∧ c = p ^ j ⊢ c = p ^ j"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "rewrite_fact",
                    "th": "j ≤ k ∧ c = p ^ j ⊢ p ^ j = c"
                },
                {
                    "args": "conjD2",
                    "id": "29",
                    "prevs": [
                        "24"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides c n"
                },
                {
                    "args": "divides (p ^ j) n",
                    "id": "30",
                    "prevs": [
                        "28",
                        "29"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides (p ^ j) n"
                },
                {
                    "args": "",
                    "id": "31",
                    "prevs": [
                        "22",
                        "7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "i ≤ k ∧ b = p ^ i, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ p ^ k = p ^ i * c"
                },
                {
                    "args": "",
                    "id": "32",
                    "prevs": [
                        "27",
                        "31"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ p ^ k = p ^ i * p ^ j"
                },
                {
                    "args": "eq_prime_pow, {m: k, n: i + j}",
                    "id": "33",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ p ^ k = p ^ (i + j) ⟷ k = i + j"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "34",
                    "prevs": [
                        "33"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ k = i + j ⟷ p ^ k = p ^ (i + j)"
                },
                {
                    "args": "nat_power_add, p ^ k = p ^ (i + j)",
                    "id": "35",
                    "prevs": [
                        "32"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ p ^ k = p ^ (i + j)"
                },
                {
                    "args": "k = i + j",
                    "id": "36",
                    "prevs": [
                        "34",
                        "35"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ k = i + j"
                },
                {
                    "args": "conjI",
                    "id": "37",
                    "prevs": [
                        "30",
                        "36"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides (p ^ j) n ∧ k = i + j"
                },
                {
                    "args": "conjI",
                    "id": "38",
                    "prevs": [
                        "26",
                        "37"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j"
                },
                {
                    "args": "exI, {P: λj. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j, a: j}",
                    "id": "39",
                    "prevs": [
                        "38"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ ∃a1. divides (p ^ i) m ∧ divides (p ^ a1) n ∧ k = i + a1"
                },
                {
                    "args": "exI, {P: λi. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j, a: i}",
                    "id": "40",
                    "prevs": [
                        "39"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides (p ^ k) (m * n), i ≤ k ∧ b = p ^ i, j ≤ k ∧ c = p ^ j, p ^ k = b * c ∧ divides b m ∧ divides c n ⊢ ∃a1. ∃j. divides (p ^ a1) m ∧ divides (p ^ j) n ∧ k = a1 + j"
                },
                {
                    "args": "∃i. i ≤ k ∧ c = p ^ i, ∃i. i ≤ k ∧ b = p ^ i, ∃b1. ∃c1. p ^ k = b1 * c1 ∧ divides b1 m ∧ divides c1 n",
                    "id": "41",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "12",
                        "18",
                        "19",
                        "17",
                        "20",
                        "21",
                        "40"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides (p ^ k) (m * n) ⟶ (∃i. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j)"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ divides (p ^ k) (m * n) ",
                "   ⟶ (∃i. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j)"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "division_decomp"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "exists_elim",
                    "names": "b,c"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "param_k": "k",
                    "theorem": "divides_primepow"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "8",
                    "method_name": "forall_elim",
                    "s": "b"
                },
                {
                    "goal": "divides b (p ^ k)",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "8",
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "13",
                    "method_name": "forall_elim",
                    "s": "c"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal": "divides c (p ^ k)",
                    "goal_id": "14",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "14",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "14",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "13",
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "18",
                    "method_name": "exists_elim",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "20",
                    "method_name": "exists_elim",
                    "names": "j"
                },
                {
                    "goal_id": "22",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "goal_id": "22",
                    "method_name": "inst_exists_goal",
                    "s": "j"
                },
                {
                    "goal_id": "22",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "22"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "23"
                    ],
                    "goal_id": "24",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "24",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "25",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "27",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "21"
                    ],
                    "goal_id": "27",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "27"
                    ],
                    "goal_id": "28",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "28"
                    ],
                    "goal_id": "29",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "29",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "22",
                        "7"
                    ],
                    "goal_id": "31",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "27",
                        "31"
                    ],
                    "goal_id": "32",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "33",
                    "method_name": "apply_forward_step",
                    "param_m": "k",
                    "param_n": "i+j",
                    "theorem": "eq_prime_pow"
                },
                {
                    "fact_ids": [
                        "33"
                    ],
                    "goal_id": "34",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "34"
                    ],
                    "goal_id": "35",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "35",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_power_add"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "primepow_factor",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "2 ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "2 ≤ n ⊢ 2 ≤ n"
                },
                {
                    "args": "prime_factor, {n: n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                },
                {
                    "args": "¬(n = 1)",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "2 ≤ n ⊢ ¬(n = 1)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "2 ≤ n ⊢ ∃p. prime p ∧ divides p n"
                },
                {
                    "args": "p, nat",
                    "id": "4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p n",
                    "id": "5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p n ⊢ prime p ∧ divides p n"
                },
                {
                    "args": "factorization_index, {n: n, p: p}",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(n = 0) ⟶ 2 ≤ p ⟶ (∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)))"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "2 ≤ n ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "apply_fact",
                    "th": "2 ≤ n ⊢ 2 ≤ p ⟶ (∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)))"
                },
                {
                    "args": "conjD1",
                    "id": "9",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "10",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ divides p n"
                },
                {
                    "args": "prime_ge_2",
                    "id": "11",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ 2 ≤ p"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "apply_fact",
                    "th": "2 ≤ n, prime p ∧ divides p n ⊢ ∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n))"
                },
                {
                    "args": "k, nat",
                    "id": "13",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n))",
                    "id": "14",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n))"
                },
                {
                    "args": "conjD1",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k) n"
                },
                {
                    "args": "conjD2",
                    "id": "16",
                    "prevs": [
                        "14"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∀l. k < l ⟶ ¬(divides (p ^ l) n)"
                },
                {
                    "args": "divides_def",
                    "id": "17",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∃k1. n = p ^ k * k1"
                },
                {
                    "args": "m, nat",
                    "id": "18",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n = p ^ k * m",
                    "id": "19",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p ^ k * m ⊢ n = p ^ k * m"
                },
                {
                    "args": "k + 1",
                    "id": "20",
                    "prevs": [
                        "16"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ k < k + 1 ⟶ ¬(divides (p ^ (k + 1)) n)"
                },
                {
                    "args": "k < k + 1",
                    "id": "21",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ k < k + 1"
                },
                {
                    "args": "",
                    "id": "22",
                    "prevs": [
                        "20",
                        "21"
                    ],
                    "rule": "apply_fact",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(divides (p ^ (k + 1)) n)"
                },
                {
                    "args": "nat_power_add",
                    "id": "23",
                    "prevs": [
                        "22"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(divides (p ^ k * p ^ (1::nat)) n)"
                },
                {
                    "args": "exp_1",
                    "id": "24",
                    "prevs": [
                        "23"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(divides (p ^ k * p) n)"
                },
                {
                    "args": "",
                    "id": "25",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ k = 0 ⟶ divides (p ^ k * p) n"
                },
                {
                    "args": "k = 0",
                    "id": "25.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "mult_1_left, divides (1 * p) n",
                    "id": "25.1",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, 2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (1 * p) n"
                },
                {
                    "args": "nat_nat_power_def_1, divides (p ^ (0::nat) * p) n",
                    "id": "25.2",
                    "prevs": [
                        "25.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, 2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ (0::nat) * p) n"
                },
                {
                    "args": "divides (p ^ k * p) n",
                    "id": "25.3",
                    "prevs": [
                        "25.0",
                        "25.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "k = 0, 2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k * p) n"
                },
                {
                    "args": "",
                    "id": "25.4",
                    "prevs": [
                        "25.0",
                        "25.3"
                    ],
                    "rule": "intros",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ k = 0 ⟶ divides (p ^ k * p) n"
                },
                {
                    "args": "double_neg, ¬¬(k = 0) ⟶ ¬¬(divides (p ^ k * p) n)",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬¬(k = 0) ⟶ ¬¬(divides (p ^ k * p) n)"
                },
                {
                    "args": "contrapositive",
                    "id": "27",
                    "prevs": [
                        "24",
                        "26"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(k = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ 1 ≤ k"
                },
                {
                    "args": "prime_coprime_strong, {n: m}",
                    "id": "29",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ divides p n ⊢ divides p m ∨ coprime p m"
                },
                {
                    "args": "",
                    "id": "30",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides p m ⟶ coprime p m"
                },
                {
                    "args": "divides p m",
                    "id": "30.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p m ⊢ divides p m"
                },
                {
                    "args": "",
                    "id": "30.1",
                    "prevs": [
                        "19",
                        "24"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(divides (p ^ k * p) (p ^ k * m))"
                },
                {
                    "args": "divides_mult_left, {k: p ^ k, m: p, n: m}",
                    "id": "30.2",
                    "prevs": [
                        "30.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p m, 2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k * p) (p ^ k * m)"
                },
                {
                    "args": "negE_gen, {A: divides (p ^ k * p) (p ^ k * m), C: coprime p m}",
                    "id": "30.3",
                    "prevs": [
                        "30.1",
                        "30.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p m, 2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ coprime p m"
                },
                {
                    "args": "",
                    "id": "30.4",
                    "prevs": [
                        "30.0",
                        "30.3"
                    ],
                    "rule": "intros",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides p m ⟶ coprime p m"
                },
                {
                    "args": "coprime p m ⟶ coprime p m",
                    "id": "31",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ coprime p m ⟶ coprime p m"
                },
                {
                    "args": "disjE",
                    "id": "32",
                    "prevs": [
                        "29",
                        "30",
                        "31"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ coprime p m"
                },
                {
                    "args": "conjI",
                    "id": "33",
                    "prevs": [
                        "32",
                        "19"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ coprime p m ∧ n = p ^ k * m"
                },
                {
                    "args": "conjI",
                    "id": "34",
                    "prevs": [
                        "28",
                        "33"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m"
                },
                {
                    "args": "conjI",
                    "id": "35",
                    "prevs": [
                        "9",
                        "34"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m"
                },
                {
                    "args": "exI, {P: λm. prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m, a: m}",
                    "id": "36",
                    "prevs": [
                        "35"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∃a1. prime p ∧ 1 ≤ k ∧ coprime p a1 ∧ n = p ^ k * a1"
                },
                {
                    "args": "exI, {P: λk::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m, a: k}",
                    "id": "37",
                    "prevs": [
                        "36"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∃a1::nat. ∃m. prime p ∧ 1 ≤ a1 ∧ coprime p m ∧ n = p ^ a1 * m"
                },
                {
                    "args": "exI, {P: λp. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m, a: p}",
                    "id": "38",
                    "prevs": [
                        "37"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "2 ≤ n, prime p ∧ divides p n, n = p ^ k * m, divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∃a1. ∃k::nat. ∃m. prime a1 ∧ 1 ≤ k ∧ coprime a1 m ∧ n = a1 ^ k * m"
                },
                {
                    "args": "∃k1. n = p ^ k * k1, ∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)), ∃p. prime p ∧ divides p n",
                    "id": "39",
                    "prevs": [
                        "0",
                        "3",
                        "4",
                        "5",
                        "12",
                        "13",
                        "14",
                        "17",
                        "18",
                        "19",
                        "38"
                    ],
                    "rule": "intros",
                    "th": "⊢ 2 ≤ n ⟶ (∃p. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m)"
                }
            ],
            "prop": "2 ≤ n ⟶ (∃p. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ n = p ^ k * m)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "prime_factor"
                },
                {
                    "goal": "¬(n = 1)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1",
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "6",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "factorization_index"
                },
                {
                    "goal": "¬(n = 0)",
                    "goal_id": "7",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "6",
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "fact_ids": [
                        "8",
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "exists_elim",
                    "names": "k"
                },
                {
                    "goal_id": "15",
                    "method_name": "inst_exists_goal",
                    "s": "k"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "16",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "17",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "18",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "goal_id": "20",
                    "method_name": "inst_exists_goal",
                    "s": "m"
                },
                {
                    "goal_id": "20",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "20",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "20",
                    "method_name": "forall_elim",
                    "s": "k+1"
                },
                {
                    "goal": "k < k + 1",
                    "goal_id": "21",
                    "method_name": "cut"
                },
                {
                    "goal_id": "21",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "20",
                        "21"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "22"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_power_add"
                },
                {
                    "fact_ids": [
                        "23"
                    ],
                    "goal_id": "24",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "goal_id": "25",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "25",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "25",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "25.0"
                    ],
                    "goal_id": "25.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "25.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "25.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "goal_id": "29",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "29",
                    "method_name": "apply_forward_step",
                    "param_n": "m",
                    "theorem": "prime_coprime_strong"
                },
                {
                    "fact_ids": [
                        "29"
                    ],
                    "goal_id": "30",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "30",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "19",
                        "24"
                    ],
                    "goal_id": "30.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "30.1"
                    ],
                    "goal_id": "30.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "30.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mult_left"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "primepow_divisors_divides",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ divides m n ⟶ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n)"
                },
                {
                    "args": "divides m n",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides m n ⊢ divides m n"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides m n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n"
                },
                {
                    "args": "p, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "k, nat",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "prime p",
                    "id": "0.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides (p ^ k) m",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) m ⊢ divides (p ^ k) m"
                },
                {
                    "args": "divides_trans",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3",
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides m n, divides (p ^ k) m ⊢ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.1",
                        "0.1.2",
                        "0.1.3",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "divides m n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides m n ⟶ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n"
                },
                {
                    "args": "",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. (∀m. m < n ⟶ (∀n1. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n1) ⟶ divides m n1)) ⟶ (∀n1. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟶ divides (p ^ k) n1) ⟶ divides n n1)"
                },
                {
                    "args": "m1, nat",
                    "id": "1.0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m1"
                },
                {
                    "args": "∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n)",
                    "id": "1.0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n)"
                },
                {
                    "args": "",
                    "id": "1.0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n) ⟶ divides m1 n"
                },
                {
                    "args": "n1, nat",
                    "id": "1.0.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1",
                    "id": "1.0.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ m1 = 0 ⟶ divides m1 n1"
                },
                {
                    "args": "m1 = 0",
                    "id": "1.0.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m1 = 0 ⊢ m1 = 0"
                },
                {
                    "args": "euclid, {n: n1}",
                    "id": "1.0.2.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃p. prime p ∧ p > n1"
                },
                {
                    "args": "greater_def",
                    "id": "1.0.2.2.2",
                    "prevs": [
                        "1.0.2.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃p. prime p ∧ n1 < p"
                },
                {
                    "args": "p, nat",
                    "id": "1.0.2.2.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ n1 < p",
                    "id": "1.0.2.2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ n1 < p ⊢ prime p ∧ n1 < p"
                },
                {
                    "args": "p",
                    "id": "1.0.2.2.5",
                    "prevs": [
                        "1.0.2.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1"
                },
                {
                    "args": "(1::nat)",
                    "id": "1.0.2.2.6",
                    "prevs": [
                        "1.0.2.2.5"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ prime p ⟶ divides (p ^ (1::nat)) m1 ⟶ divides (p ^ (1::nat)) n1"
                },
                {
                    "args": "conjD1",
                    "id": "1.0.2.2.7",
                    "prevs": [
                        "1.0.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n1 < p ⊢ prime p"
                },
                {
                    "args": "exp_1",
                    "id": "1.0.2.2.8",
                    "prevs": [
                        "1.0.2.2.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ prime p ⟶ divides p m1 ⟶ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.2.9",
                    "prevs": [
                        "1.0.2.2.8",
                        "1.0.2.2.7"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ divides p m1 ⟶ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.2.10",
                    "prevs": [
                        "1.0.2.2.0",
                        "1.0.2.2.9"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ divides p 0 ⟶ divides p n1"
                },
                {
                    "args": "divides_zero, {n: p}",
                    "id": "1.0.2.2.11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p 0"
                },
                {
                    "args": "",
                    "id": "1.0.2.2.12",
                    "prevs": [
                        "1.0.2.2.10",
                        "1.0.2.2.11"
                    ],
                    "rule": "apply_fact",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ divides p n1"
                },
                {
                    "args": "divides_le",
                    "id": "1.0.2.2.13",
                    "prevs": [
                        "1.0.2.2.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ p ≤ n1 ∨ n1 = 0"
                },
                {
                    "args": "",
                    "id": "1.0.2.2.14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ p ≤ n1 ⟶ n1 = 0"
                },
                {
                    "args": "p ≤ n1",
                    "id": "1.0.2.2.14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ n1 ⊢ p ≤ n1"
                },
                {
                    "args": "not_lt",
                    "id": "1.0.2.2.14.1",
                    "prevs": [
                        "1.0.2.2.14.0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "p ≤ n1 ⊢ ¬(n1 < p)"
                },
                {
                    "args": "conjD2",
                    "id": "1.0.2.2.14.2",
                    "prevs": [
                        "1.0.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n1 < p ⊢ n1 < p"
                },
                {
                    "args": "negE_gen, {A: n1 < p, C: n1 = 0}",
                    "id": "1.0.2.2.14.3",
                    "prevs": [
                        "1.0.2.2.14.1",
                        "1.0.2.2.14.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p ≤ n1, prime p ∧ n1 < p ⊢ n1 = 0"
                },
                {
                    "args": "",
                    "id": "1.0.2.2.14.4",
                    "prevs": [
                        "1.0.2.2.14.0",
                        "1.0.2.2.14.3"
                    ],
                    "rule": "intros",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ p ≤ n1 ⟶ n1 = 0"
                },
                {
                    "args": "n1 = 0 ⟶ n1 = 0",
                    "id": "1.0.2.2.15",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ n1 = 0 ⟶ n1 = 0"
                },
                {
                    "args": "disjE",
                    "id": "1.0.2.2.16",
                    "prevs": [
                        "1.0.2.2.13",
                        "1.0.2.2.14",
                        "1.0.2.2.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ n1 = 0"
                },
                {
                    "args": "divides_0, divides 0 n1",
                    "id": "1.0.2.2.17",
                    "prevs": [
                        "1.0.2.2.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides 0 n1"
                },
                {
                    "args": "divides m1 n1",
                    "id": "1.0.2.2.18",
                    "prevs": [
                        "1.0.2.2.0",
                        "1.0.2.2.17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m1 = 0, prime p ∧ n1 < p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides m1 n1"
                },
                {
                    "args": "∃p. prime p ∧ n1 < p",
                    "id": "1.0.2.2.19",
                    "prevs": [
                        "1.0.2.2.0",
                        "1.0.2.2.2",
                        "1.0.2.2.3",
                        "1.0.2.2.4",
                        "1.0.2.2.18"
                    ],
                    "rule": "intros",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ m1 = 0 ⟶ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(m1 = 0) ⟶ divides m1 n1"
                },
                {
                    "args": "¬(m1 = 0)",
                    "id": "1.0.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m1 = 0) ⊢ ¬(m1 = 0)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ m1 = 1 ⟶ divides m1 n1"
                },
                {
                    "args": "m1 = 1",
                    "id": "1.0.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m1 = 1 ⊢ m1 = 1"
                },
                {
                    "args": "divides_1, {x: n1}",
                    "id": "1.0.2.3.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n1"
                },
                {
                    "args": "divides m1 n1",
                    "id": "1.0.2.3.1.2",
                    "prevs": [
                        "1.0.2.3.1.0",
                        "1.0.2.3.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m1 = 1, ¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.1.3",
                    "prevs": [
                        "1.0.2.3.1.0",
                        "1.0.2.3.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ m1 = 1 ⟶ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(m1 = 1) ⟶ divides m1 n1"
                },
                {
                    "args": "¬(m1 = 1)",
                    "id": "1.0.2.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m1 = 1) ⊢ ¬(m1 = 1)"
                },
                {
                    "args": "primepow_factor, {n: m1}",
                    "id": "1.0.2.3.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 2 ≤ m1 ⟶ (∃p. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ m1 = p ^ k * m)"
                },
                {
                    "args": "2 ≤ m1",
                    "id": "1.0.2.3.2.2",
                    "prevs": [
                        "1.0.2.3.2.0",
                        "1.0.2.3.0"
                    ],
                    "rule": "z3",
                    "th": "¬(m1 = 1), ¬(m1 = 0) ⊢ 2 ≤ m1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.3",
                    "prevs": [
                        "1.0.2.3.2.1",
                        "1.0.2.3.2.2"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(m1 = 1), ¬(m1 = 0) ⊢ ∃p. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ m1 = p ^ k * m"
                },
                {
                    "args": "p, nat",
                    "id": "1.0.2.3.2.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "k, nat",
                    "id": "1.0.2.3.2.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "r, nat",
                    "id": "1.0.2.3.2.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR r"
                },
                {
                    "args": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r",
                    "id": "1.0.2.3.2.7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r"
                },
                {
                    "args": "conjD1",
                    "id": "1.0.2.3.2.8",
                    "prevs": [
                        "1.0.2.3.2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.9",
                    "prevs": [
                        "1.0.2.1",
                        "1.0.2.3.2.8"
                    ],
                    "rule": "apply_fact",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ∀k::nat. divides (p ^ k) m1 ⟶ divides (p ^ k) n1"
                },
                {
                    "args": "k",
                    "id": "1.0.2.3.2.10",
                    "prevs": [
                        "1.0.2.3.2.9"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ divides (p ^ k) m1 ⟶ divides (p ^ k) n1"
                },
                {
                    "args": "conjD2",
                    "id": "1.0.2.3.2.11",
                    "prevs": [
                        "1.0.2.3.2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r"
                },
                {
                    "args": "conjD2",
                    "id": "1.0.2.3.2.12",
                    "prevs": [
                        "1.0.2.3.2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ coprime p r ∧ m1 = p ^ k * r"
                },
                {
                    "args": "conjD2",
                    "id": "1.0.2.3.2.13",
                    "prevs": [
                        "1.0.2.3.2.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ m1 = p ^ k * r"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.14",
                    "prevs": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.10"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ divides (p ^ k) (p ^ k * r) ⟶ divides (p ^ k) n1"
                },
                {
                    "args": "divides_self, {n: p ^ k}",
                    "id": "1.0.2.3.2.15",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ k) (p ^ k)"
                },
                {
                    "args": "divides_rmul, {a: p ^ k, d: p ^ k, x: r}",
                    "id": "1.0.2.3.2.16",
                    "prevs": [
                        "1.0.2.3.2.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (p ^ k) (p ^ k * r)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.17",
                    "prevs": [
                        "1.0.2.3.2.14",
                        "1.0.2.3.2.16"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (p ^ k) n1"
                },
                {
                    "args": "divides_def",
                    "id": "1.0.2.3.2.18",
                    "prevs": [
                        "1.0.2.3.2.17"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∃k1. n1 = p ^ k * k1"
                },
                {
                    "args": "s, nat",
                    "id": "1.0.2.3.2.19",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR s"
                },
                {
                    "args": "n1 = p ^ k * s",
                    "id": "1.0.2.3.2.20",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 = p ^ k * s ⊢ n1 = p ^ k * s"
                },
                {
                    "args": "r",
                    "id": "1.0.2.3.2.21",
                    "prevs": [
                        "1.0.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ r < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) r ⟶ divides (p ^ k) n) ⟶ divides r n)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.22",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ r = 0 ⟶ divides r s"
                },
                {
                    "args": "r = 0",
                    "id": "1.0.2.3.2.22.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "r = 0 ⊢ r = 0"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.22.1",
                    "prevs": [
                        "1.0.2.3.2.22.0",
                        "1.0.2.3.2.13"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "r = 0, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ m1 = p ^ k * 0"
                },
                {
                    "args": "mult_0_right",
                    "id": "1.0.2.3.2.22.2",
                    "prevs": [
                        "1.0.2.3.2.22.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "r = 0, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ m1 = 0"
                },
                {
                    "args": "negE_gen, {A: m1 = 0, C: s = 0}",
                    "id": "1.0.2.3.2.22.3",
                    "prevs": [
                        "1.0.2.3.0",
                        "1.0.2.3.2.22.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "r = 0, ¬(m1 = 0), prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ s = 0"
                },
                {
                    "args": "divides_0, divides 0 s",
                    "id": "1.0.2.3.2.22.4",
                    "prevs": [
                        "1.0.2.3.2.22.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "r = 0, ¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides 0 s"
                },
                {
                    "args": "divides r s",
                    "id": "1.0.2.3.2.22.5",
                    "prevs": [
                        "1.0.2.3.2.22.0",
                        "1.0.2.3.2.22.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "r = 0, ¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides r s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.22.6",
                    "prevs": [
                        "1.0.2.3.2.22.0",
                        "1.0.2.3.2.22.5"
                    ],
                    "rule": "intros",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ r = 0 ⟶ divides r s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(r = 0) ⟶ divides r s"
                },
                {
                    "args": "¬(r = 0)",
                    "id": "1.0.2.3.2.23.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(r = 0) ⊢ ¬(r = 0)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.1",
                    "prevs": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.21"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ r < p ^ k * r ⟶ (∀n. (∀p1. ∀k1::nat. prime p1 ⟶ divides (p1 ^ k1) r ⟶ divides (p1 ^ k1) n) ⟶ divides r n)"
                },
                {
                    "args": "prime_def",
                    "id": "1.0.2.3.2.23.2",
                    "prevs": [
                        "1.0.2.3.2.8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD1",
                    "id": "1.0.2.3.2.23.3",
                    "prevs": [
                        "1.0.2.3.2.23.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjD1",
                    "id": "1.0.2.3.2.23.4",
                    "prevs": [
                        "1.0.2.3.2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ 1 ≤ k"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1.0.2.3.2.23.5",
                    "prevs": [
                        "1.0.2.3.2.23.4"
                    ],
                    "rule": "z3",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ¬(k = 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.0.2.3.2.23.6",
                    "prevs": [
                        "1.0.2.3.2.23.3",
                        "1.0.2.3.2.23.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p = 1) ∧ ¬(k = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(p = 1 ∨ k = 0)",
                    "id": "1.0.2.3.2.23.7",
                    "prevs": [
                        "1.0.2.3.2.23.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p = 1 ∨ k = 0)"
                },
                {
                    "args": "exp_eq_1, ¬(p ^ k = 1)",
                    "id": "1.0.2.3.2.23.8",
                    "prevs": [
                        "1.0.2.3.2.23.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = 1)"
                },
                {
                    "args": "nat_plus_def_1, ¬(p ^ k = 0 + 1)",
                    "id": "1.0.2.3.2.23.9",
                    "prevs": [
                        "1.0.2.3.2.23.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = 0 + 1)"
                },
                {
                    "args": "add_1_right, ¬(p ^ k = Suc 0)",
                    "id": "1.0.2.3.2.23.10",
                    "prevs": [
                        "1.0.2.3.2.23.9"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = Suc 0)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "1.0.2.3.2.23.11",
                    "prevs": [
                        "1.0.2.3.2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p = 0)"
                },
                {
                    "args": "disjI1, {A: ¬(p = 0), B: ¬¬(k = 0)}",
                    "id": "1.0.2.3.2.23.12",
                    "prevs": [
                        "1.0.2.3.2.23.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p = 0) ∨ ¬¬(k = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(p = 0 ∧ ¬(k = 0))",
                    "id": "1.0.2.3.2.23.13",
                    "prevs": [
                        "1.0.2.3.2.23.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p = 0 ∧ ¬(k = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(p ^ k = 0)",
                    "id": "1.0.2.3.2.23.14",
                    "prevs": [
                        "1.0.2.3.2.23.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = 0)"
                },
                {
                    "args": "nat_less_eq_def_1, ¬(p ^ k ≤ 0)",
                    "id": "1.0.2.3.2.23.15",
                    "prevs": [
                        "1.0.2.3.2.23.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k ≤ 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.0.2.3.2.23.16",
                    "prevs": [
                        "1.0.2.3.2.23.10",
                        "1.0.2.3.2.23.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = Suc 0) ∧ ¬(p ^ k ≤ 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(p ^ k = Suc 0 ∨ p ^ k ≤ 0)",
                    "id": "1.0.2.3.2.23.17",
                    "prevs": [
                        "1.0.2.3.2.23.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k = Suc 0 ∨ p ^ k ≤ 0)"
                },
                {
                    "args": "nat_less_eq_def_2, ¬(p ^ k ≤ Suc 0)",
                    "id": "1.0.2.3.2.23.18",
                    "prevs": [
                        "1.0.2.3.2.23.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(p ^ k ≤ Suc 0)"
                },
                {
                    "args": "not_lt, ¬¬(Suc 0 < p ^ k)",
                    "id": "1.0.2.3.2.23.19",
                    "prevs": [
                        "1.0.2.3.2.23.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬¬(Suc 0 < p ^ k)"
                },
                {
                    "args": "double_neg, Suc 0 < p ^ k",
                    "id": "1.0.2.3.2.23.20",
                    "prevs": [
                        "1.0.2.3.2.23.19"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ Suc 0 < p ^ k"
                },
                {
                    "args": "nat_one_def, 1 < p ^ k",
                    "id": "1.0.2.3.2.23.21",
                    "prevs": [
                        "1.0.2.3.2.23.20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ 1 < p ^ k"
                },
                {
                    "args": "conjI",
                    "id": "1.0.2.3.2.23.22",
                    "prevs": [
                        "1.0.2.3.2.23.21",
                        "1.0.2.3.2.23.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ 1 < p ^ k ∧ ¬(r = 0)"
                },
                {
                    "args": "lt_mult_rcancel, 1 * r < p ^ k * r",
                    "id": "1.0.2.3.2.23.23",
                    "prevs": [
                        "1.0.2.3.2.23.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ 1 * r < p ^ k * r"
                },
                {
                    "args": "mult_1_left",
                    "id": "1.0.2.3.2.23.24",
                    "prevs": [
                        "1.0.2.3.2.23.23"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ r < p ^ k * r"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.25",
                    "prevs": [
                        "1.0.2.3.2.23.1",
                        "1.0.2.3.2.23.24"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) r ⟶ divides (p ^ k) n) ⟶ divides r n"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) r ⟶ divides (p ^ k) s"
                },
                {
                    "args": "q, nat",
                    "id": "1.0.2.3.2.23.26.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR q"
                },
                {
                    "args": "l, nat",
                    "id": "1.0.2.3.2.23.26.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR l"
                },
                {
                    "args": "prime q",
                    "id": "1.0.2.3.2.23.26.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime q ⊢ prime q"
                },
                {
                    "args": "divides (q ^ l) r",
                    "id": "1.0.2.3.2.23.26.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (q ^ l) r ⊢ divides (q ^ l) r"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime q, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ l = 0 ⟶ divides (q ^ l) s"
                },
                {
                    "args": "l = 0",
                    "id": "1.0.2.3.2.23.26.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l = 0 ⊢ l = 0"
                },
                {
                    "args": "divides_1, {x: s}",
                    "id": "1.0.2.3.2.23.26.4.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 s"
                },
                {
                    "args": "nat_nat_power_def_1, divides (q ^ (0::nat)) s",
                    "id": "1.0.2.3.2.23.26.4.2",
                    "prevs": [
                        "1.0.2.3.2.23.26.4.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime q, l = 0, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ (0::nat)) s"
                },
                {
                    "args": "divides (q ^ l) s",
                    "id": "1.0.2.3.2.23.26.4.3",
                    "prevs": [
                        "1.0.2.3.2.23.26.4.0",
                        "1.0.2.3.2.23.26.4.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime q, l = 0, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.4.4",
                    "prevs": [
                        "1.0.2.3.2.23.26.4.0",
                        "1.0.2.3.2.23.26.4.3"
                    ],
                    "rule": "intros",
                    "th": "prime q, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ l = 0 ⟶ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime q, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(l = 0) ⟶ divides (q ^ l) s"
                },
                {
                    "args": "¬(l = 0)",
                    "id": "1.0.2.3.2.23.26.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(l = 0) ⊢ ¬(l = 0)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ q = p ⟶ divides (q ^ l) s"
                },
                {
                    "args": "q = p",
                    "id": "1.0.2.3.2.23.26.5.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "q = p ⊢ q = p"
                },
                {
                    "args": "conjD1",
                    "id": "1.0.2.3.2.23.26.5.1.1",
                    "prevs": [
                        "1.0.2.3.2.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ coprime p r"
                },
                {
                    "args": "coprime_def",
                    "id": "1.0.2.3.2.23.26.5.1.2",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ∀d. divides d p ∧ divides d r ⟷ d = 1"
                },
                {
                    "args": "p",
                    "id": "1.0.2.3.2.23.26.5.1.3",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.2"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ divides p p ∧ divides p r ⟷ p = 1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.1.4",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.0",
                        "1.0.2.3.2.23.26.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "q = p, divides (q ^ l) r ⊢ divides (p ^ l) r"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.0.2.3.2.23.26.5.1.5",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ p = 1 ⟷ divides p p ∧ divides p r"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.1.6",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.5",
                        "1.0.2.3.2.23.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ ¬(divides p p ∧ divides p r)"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "1.0.2.3.2.23.26.5.1.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "divides_rexp",
                    "id": "1.0.2.3.2.23.26.5.1.8",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.7",
                        "1.0.2.3.2.23.26.5.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, q = p, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides p (p ^ l)"
                },
                {
                    "args": "divides_trans",
                    "id": "1.0.2.3.2.23.26.5.1.9",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.8",
                        "1.0.2.3.2.23.26.5.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, q = p, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides p r"
                },
                {
                    "args": "conjI",
                    "id": "1.0.2.3.2.23.26.5.1.10",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.7",
                        "1.0.2.3.2.23.26.5.1.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, q = p, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides p p ∧ divides p r"
                },
                {
                    "args": "negE_gen, {A: divides p p ∧ divides p r, C: divides (p ^ l) s}",
                    "id": "1.0.2.3.2.23.26.5.1.11",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.6",
                        "1.0.2.3.2.23.26.5.1.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime q, q = p, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (p ^ l) s"
                },
                {
                    "args": "divides (q ^ l) s",
                    "id": "1.0.2.3.2.23.26.5.1.12",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.0",
                        "1.0.2.3.2.23.26.5.1.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime q, q = p, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.1.13",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1.0",
                        "1.0.2.3.2.23.26.5.1.12"
                    ],
                    "rule": "intros",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ q = p ⟶ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(q = p) ⟶ divides (q ^ l) s"
                },
                {
                    "args": "¬(q = p)",
                    "id": "1.0.2.3.2.23.26.5.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(q = p) ⊢ ¬(q = p)"
                },
                {
                    "args": "q",
                    "id": "1.0.2.3.2.23.26.5.2.1",
                    "prevs": [
                        "1.0.2.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ ∀k::nat. prime q ⟶ divides (q ^ k) m1 ⟶ divides (q ^ k) n1"
                },
                {
                    "args": "l",
                    "id": "1.0.2.3.2.23.26.5.2.2",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ prime q ⟶ divides (q ^ l) m1 ⟶ divides (q ^ l) n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2.3",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.2",
                        "1.0.2.3.2.23.26.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime q, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1 ⊢ divides (q ^ l) m1 ⟶ divides (q ^ l) n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2.4",
                    "prevs": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.23.26.5.2.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime q, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ divides (q ^ l) (p ^ k * r) ⟶ divides (q ^ l) n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2.5",
                    "prevs": [
                        "1.0.2.3.2.20",
                        "1.0.2.3.2.23.26.5.2.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime q, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r ⊢ divides (q ^ l) (p ^ k * r) ⟶ divides (q ^ l) (p ^ k * s)"
                },
                {
                    "args": "divides_lmul, {a: r, d: q ^ l, x: p ^ k}",
                    "id": "1.0.2.3.2.23.26.5.2.6",
                    "prevs": [
                        "1.0.2.3.2.23.26.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(q = p), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) (p ^ k * r)"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2.7",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.5",
                        "1.0.2.3.2.23.26.5.2.6"
                    ],
                    "rule": "apply_fact",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(q = p), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) (p ^ k * s)"
                },
                {
                    "args": "distinct_prime_coprime",
                    "id": "1.0.2.3.2.23.26.5.2.8",
                    "prevs": [
                        "1.0.2.3.2.23.26.2",
                        "1.0.2.3.2.8",
                        "1.0.2.3.2.23.26.5.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(q = p), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ coprime q p"
                },
                {
                    "args": "coprime_exp, {a: p, d: q, n: k}",
                    "id": "1.0.2.3.2.23.26.5.2.9",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(q = p), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ coprime q (p ^ k)"
                },
                {
                    "args": "coprime_exp_divprod",
                    "id": "1.0.2.3.2.23.26.5.2.10",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.7",
                        "1.0.2.3.2.23.26.5.2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(q = p), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.2.11",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.2.0",
                        "1.0.2.3.2.23.26.5.2.10"
                    ],
                    "rule": "intros",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(q = p) ⟶ divides (q ^ l) s"
                },
                {
                    "args": "classical_cases",
                    "id": "1.0.2.3.2.23.26.5.3",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.1",
                        "1.0.2.3.2.23.26.5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, ¬(l = 0), ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.5.4",
                    "prevs": [
                        "1.0.2.3.2.23.26.5.0",
                        "1.0.2.3.2.23.26.5.3"
                    ],
                    "rule": "intros",
                    "th": "prime q, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(l = 0) ⟶ divides (q ^ l) s"
                },
                {
                    "args": "classical_cases",
                    "id": "1.0.2.3.2.23.26.6",
                    "prevs": [
                        "1.0.2.3.2.23.26.4",
                        "1.0.2.3.2.23.26.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime q, ¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), divides (q ^ l) r, n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (q ^ l) s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.26.7",
                    "prevs": [
                        "1.0.2.3.2.23.26.0",
                        "1.0.2.3.2.23.26.1",
                        "1.0.2.3.2.23.26.2",
                        "1.0.2.3.2.23.26.3",
                        "1.0.2.3.2.23.26.6"
                    ],
                    "rule": "intros",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀q. ∀l::nat. prime q ⟶ divides (q ^ l) r ⟶ divides (q ^ l) s"
                },
                {
                    "args": "s",
                    "id": "1.0.2.3.2.23.27",
                    "prevs": [
                        "1.0.2.3.2.23.25",
                        "1.0.2.3.2.23.26"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(m1 = 1), ¬(m1 = 0), ¬(r = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides r s"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.2.23.28",
                    "prevs": [
                        "1.0.2.3.2.23.0",
                        "1.0.2.3.2.23.27"
                    ],
                    "rule": "intros",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(r = 0) ⟶ divides r s"
                },
                {
                    "args": "classical_cases",
                    "id": "1.0.2.3.2.24",
                    "prevs": [
                        "1.0.2.3.2.22",
                        "1.0.2.3.2.23"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides r s"
                },
                {
                    "args": "divides_mult_left, {k: p ^ k, m: r, n: s}",
                    "id": "1.0.2.3.2.25",
                    "prevs": [
                        "1.0.2.3.2.24"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (p ^ k * r) (p ^ k * s)"
                },
                {
                    "args": "divides (p ^ k * r) n1",
                    "id": "1.0.2.3.2.26",
                    "prevs": [
                        "1.0.2.3.2.20",
                        "1.0.2.3.2.25"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides (p ^ k * r) n1"
                },
                {
                    "args": "divides m1 n1",
                    "id": "1.0.2.3.2.27",
                    "prevs": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.26"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(m1 = 1), ¬(m1 = 0), n1 = p ^ k * s, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, prime p ∧ 1 ≤ k ∧ coprime p r ∧ m1 = p ^ k * r, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides m1 n1"
                },
                {
                    "args": "∃k1. n1 = p ^ k * k1, ∃p. ∃k::nat. ∃m. prime p ∧ 1 ≤ k ∧ coprime p m ∧ m1 = p ^ k * m",
                    "id": "1.0.2.3.2.28",
                    "prevs": [
                        "1.0.2.3.2.0",
                        "1.0.2.3.2.3",
                        "1.0.2.3.2.4",
                        "1.0.2.3.2.5",
                        "1.0.2.3.2.6",
                        "1.0.2.3.2.7",
                        "1.0.2.3.2.18",
                        "1.0.2.3.2.19",
                        "1.0.2.3.2.20",
                        "1.0.2.3.2.27"
                    ],
                    "rule": "intros",
                    "th": "¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(m1 = 1) ⟶ divides m1 n1"
                },
                {
                    "args": "classical_cases",
                    "id": "1.0.2.3.3",
                    "prevs": [
                        "1.0.2.3.1",
                        "1.0.2.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m1 = 0), ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.3.4",
                    "prevs": [
                        "1.0.2.3.0",
                        "1.0.2.3.3"
                    ],
                    "rule": "intros",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ¬(m1 = 0) ⟶ divides m1 n1"
                },
                {
                    "args": "classical_cases",
                    "id": "1.0.2.4",
                    "prevs": [
                        "1.0.2.2",
                        "1.0.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1, ∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.2.5",
                    "prevs": [
                        "1.0.2.0",
                        "1.0.2.1",
                        "1.0.2.4"
                    ],
                    "rule": "intros",
                    "th": "∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n) ⊢ ∀n1. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n1) ⟶ divides m1 n1"
                },
                {
                    "args": "",
                    "id": "1.0.3",
                    "prevs": [
                        "1.0.0",
                        "1.0.1",
                        "1.0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀m1. (∀m. m < m1 ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n)) ⟶ (∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m1 ⟶ divides (p ^ k) n) ⟶ divides m1 n)"
                },
                {
                    "args": "nat_WF",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ∀n. ∀n1. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟶ divides (p ^ k) n1) ⟶ divides n n1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n"
                },
                {
                    "args": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n"
                },
                {
                    "args": "m, n",
                    "id": "1.2.1",
                    "prevs": [
                        "1.1",
                        "1.2.0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n ⊢ divides m n"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides m n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides m n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n)"
                }
            ],
            "prop": "divides m n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "p,k"
                },
                {
                    "fact_ids": [
                        "0.1.3",
                        "0.0"
                    ],
                    "goal_id": "0.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "revert_intro"
                },
                {
                    "goal": "!m. ∀n. (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n) ⟶ divides m n",
                    "goal_id": "1.0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.0",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_WF"
                },
                {
                    "goal_id": "1.0",
                    "method_name": "introduction",
                    "names": "m1"
                },
                {
                    "goal_id": "1.0.2",
                    "method_name": "introduction",
                    "names": "n1"
                },
                {
                    "case": "m1=0",
                    "goal_id": "1.0.2.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.0.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.0"
                    ],
                    "goal_id": "1.0.2.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.0.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "1.0.2.2.1",
                    "method_name": "apply_forward_step",
                    "param_n": "n1",
                    "theorem": "euclid"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.1"
                    ],
                    "goal_id": "1.0.2.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "greater_def"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.2"
                    ],
                    "goal_id": "1.0.2.2.3",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "1.0.2.1"
                    ],
                    "goal_id": "1.0.2.2.5",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.5"
                    ],
                    "goal_id": "1.0.2.2.6",
                    "method_name": "forall_elim",
                    "s": "(1::nat)"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.4"
                    ],
                    "goal_id": "1.0.2.2.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.6"
                    ],
                    "goal_id": "1.0.2.2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.8",
                        "1.0.2.2.7"
                    ],
                    "goal_id": "1.0.2.2.9",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.0",
                        "1.0.2.2.9"
                    ],
                    "goal_id": "1.0.2.2.10",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "divides p 0",
                    "goal_id": "1.0.2.2.11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.0.2.2.11",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.10",
                        "1.0.2.2.11"
                    ],
                    "goal_id": "1.0.2.2.12",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.12"
                    ],
                    "goal_id": "1.0.2.2.13",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.13"
                    ],
                    "goal_id": "1.0.2.2.14",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.0.2.2.14",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.14.0"
                    ],
                    "goal_id": "1.0.2.2.14.1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_lt"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.4"
                    ],
                    "goal_id": "1.0.2.2.14.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.0.2.2.14.1",
                        "1.0.2.2.14.2"
                    ],
                    "goal_id": "1.0.2.2.14.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.0.2.3",
                    "method_name": "introduction"
                },
                {
                    "case": "m1=1",
                    "goal_id": "1.0.2.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.0.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.1.0"
                    ],
                    "goal_id": "1.0.2.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.0.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.0.2.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.0.2.3.2.1",
                    "method_name": "apply_forward_step",
                    "param_n": "m1",
                    "theorem": "primepow_factor"
                },
                {
                    "goal": "2 ≤ m1",
                    "goal_id": "1.0.2.3.2.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.0",
                        "1.0.2.3.0"
                    ],
                    "goal_id": "1.0.2.3.2.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.1",
                        "1.0.2.3.2.2"
                    ],
                    "goal_id": "1.0.2.3.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.3"
                    ],
                    "goal_id": "1.0.2.3.2.4",
                    "method_name": "exists_elim",
                    "names": "p,k,r"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.7"
                    ],
                    "goal_id": "1.0.2.3.2.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0.2.1",
                        "1.0.2.3.2.8"
                    ],
                    "goal_id": "1.0.2.3.2.9",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.9"
                    ],
                    "goal_id": "1.0.2.3.2.10",
                    "method_name": "forall_elim",
                    "s": "k"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.7"
                    ],
                    "goal_id": "1.0.2.3.2.11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.11"
                    ],
                    "goal_id": "1.0.2.3.2.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.12"
                    ],
                    "goal_id": "1.0.2.3.2.13",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.13"
                    ],
                    "goal_id": "1.0.2.3.2.14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.10"
                    ],
                    "goal_id": "1.0.2.3.2.14",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "divides (p ^ k) (p ^ k * r)",
                    "goal_id": "1.0.2.3.2.15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.0.2.3.2.15",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "1.0.2.3.2.15",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.14",
                        "1.0.2.3.2.16"
                    ],
                    "goal_id": "1.0.2.3.2.17",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.17"
                    ],
                    "goal_id": "1.0.2.3.2.18",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.18"
                    ],
                    "goal_id": "1.0.2.3.2.19",
                    "method_name": "exists_elim",
                    "names": "s"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.20"
                    ],
                    "goal_id": "1.0.2.3.2.21",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.0.2.3.2.21",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mult_left"
                },
                {
                    "fact_ids": [
                        "1.0.1"
                    ],
                    "goal_id": "1.0.2.3.2.21",
                    "method_name": "forall_elim",
                    "s": "r"
                },
                {
                    "case": "r=0",
                    "goal_id": "1.0.2.3.2.22",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.0.2.3.2.22",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.22.0"
                    ],
                    "goal_id": "1.0.2.3.2.22.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.0.2.3.2.22.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.22.0",
                        "1.0.2.3.2.13"
                    ],
                    "goal_id": "1.0.2.3.2.22.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.22.1"
                    ],
                    "goal_id": "1.0.2.3.2.22.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.0",
                        "1.0.2.3.2.22.2"
                    ],
                    "goal_id": "1.0.2.3.2.22.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.0.2.3.2.23",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.21"
                    ],
                    "goal_id": "1.0.2.3.2.23.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "1* r < p ^ k * r",
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "lt_mult_rcancel"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_lt"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_2"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.8"
                    ],
                    "goal_id": "1.0.2.3.2.23.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.2"
                    ],
                    "goal_id": "1.0.2.3.2.23.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.11"
                    ],
                    "goal_id": "1.0.2.3.2.23.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.4"
                    ],
                    "goal_id": "1.0.2.3.2.23.5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.0.2.3.2.23.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "1.0.2.3.2.23.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.11",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.11",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.23"
                    ],
                    "goal_id": "1.0.2.3.2.23.24",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.1",
                        "1.0.2.3.2.23.24"
                    ],
                    "goal_id": "1.0.2.3.2.23.25",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.25"
                    ],
                    "goal_id": "1.0.2.3.2.23.26",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26",
                    "method_name": "introduction",
                    "names": "q,l"
                },
                {
                    "case": "l=0",
                    "goal_id": "1.0.2.3.2.23.26.4",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.4.0"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.4.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5",
                    "method_name": "introduction"
                },
                {
                    "case": "q=p",
                    "goal_id": "1.0.2.3.2.23.26.5.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.12"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.0"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.1"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.2"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.3",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.0",
                        "1.0.2.3.2.23.26.3"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.3"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.5",
                        "1.0.2.3.2.23.3"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.1.6"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.1.7",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.1.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.1.7",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.1.8",
                    "method_name": "apply_backward_step",
                    "param_m": "p ^ l",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rexp"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0.2.1"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.1",
                    "method_name": "forall_elim",
                    "s": "q"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.2.1"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.2",
                    "method_name": "forall_elim",
                    "s": "l"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.2.2",
                        "1.0.2.3.2.23.26.2"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.13",
                        "1.0.2.3.2.23.26.5.2.3"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.20",
                        "1.0.2.3.2.23.26.5.2.4"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "divides (q ^ l) (p ^ k * r)",
                    "goal_id": "1.0.2.3.2.23.26.5.2.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.2.5",
                        "1.0.2.3.2.23.26.5.2.6"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.7",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.0.2.3.2.23.26.5.2.7"
                    ],
                    "goal_id": "1.0.2.3.2.23.26.5.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp_divprod"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_exp"
                },
                {
                    "goal_id": "1.0.2.3.2.23.26.5.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "distinct_prime_coprime"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "primepow_divisors_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ m = n ⟶ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n)"
                },
                {
                    "args": "m = n",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = n ⊢ m = n"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m = n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟷ divides (p ^ k) n"
                },
                {
                    "args": "p, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "k, nat",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "prime p",
                    "id": "0.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "eq_refl, {x: divides (p ^ k) n}",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ k) n ⟷ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.0",
                        "0.1.1",
                        "0.1.2",
                        "0.1.3"
                    ],
                    "rule": "intros",
                    "th": "m = n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟷ divides (p ^ k) n"
                },
                {
                    "args": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "m = n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ m = n ⟶ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n) ⟶ m = n"
                },
                {
                    "args": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n"
                },
                {
                    "args": "p, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "k, nat",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "prime p",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides (p ^ k) m",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) m ⊢ divides (p ^ k) m"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [
                        "1.0",
                        "1.1.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀k::nat. divides (p ^ k) m ⟷ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4",
                        "1.1.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, divides (p ^ k) m, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2",
                        "1.1.3",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟶ divides (p ^ k) n"
                },
                {
                    "args": "primepow_divisors_divides, divides m n",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ divides m n"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟶ divides (p ^ k) m"
                },
                {
                    "args": "p, nat",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "k, nat",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "prime p",
                    "id": "1.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "divides (p ^ k) n",
                    "id": "1.3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) n ⊢ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [
                        "1.0",
                        "1.3.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀k::nat. divides (p ^ k) m ⟷ divides (p ^ k) n"
                },
                {
                    "args": "divides (p ^ k) m",
                    "id": "1.3.5",
                    "prevs": [
                        "1.3.4",
                        "1.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, divides (p ^ k) n, ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ divides (p ^ k) m"
                },
                {
                    "args": "",
                    "id": "1.3.6",
                    "prevs": [
                        "1.3.0",
                        "1.3.1",
                        "1.3.2",
                        "1.3.3",
                        "1.3.5"
                    ],
                    "rule": "intros",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ ∀p. ∀k::nat. prime p ⟶ divides (p ^ k) n ⟶ divides (p ^ k) m"
                },
                {
                    "args": "primepow_divisors_divides, divides n m",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ divides n m"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.5",
                    "prevs": [
                        "1.2",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n ⊢ m = n"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n) ⟶ m = n"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ m = n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ m = n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n)"
                }
            ],
            "prop": "m = n ⟷ (∀p. ∀k::nat. prime p ⟶ divides (p ^ k) m ⟷ divides (p ^ k) n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "p,k"
                },
                {
                    "goal_id": "0.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "primepow_divisors_divides"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "p,k"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.2"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.4",
                        "1.1.3"
                    ],
                    "goal_id": "1.1.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "primepow_divisors_divides"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction",
                    "names": "p,k"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.3.2"
                    ],
                    "goal_id": "1.3.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.3.4"
                    ],
                    "goal_id": "1.3.5",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "finite_exp_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "2 ≤ p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "2 ≤ p ⊢ 2 ≤ p"
                },
                {
                    "args": "finite_natseg, {m: (0::nat), n: n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({0..n})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "2 ≤ p ⊢ ∀x. P x ∧ p ^ x ≤ n ⟶ 0 ≤ x ∧ x ≤ n"
                },
                {
                    "args": "x, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "P x ∧ p ^ x ≤ n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P x ∧ p ^ x ≤ n ⊢ P x ∧ p ^ x ≤ n"
                },
                {
                    "args": "le_0, {n: x}",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ x"
                },
                {
                    "args": "conjD2",
                    "id": "2.3",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "P x ∧ p ^ x ≤ n ⊢ p ^ x ≤ n"
                },
                {
                    "args": "lt_pow2_refl, {n: x}",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x < 2 ^ x"
                },
                {
                    "args": "lt_imp_le",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p, P x ∧ p ^ x ≤ n ⊢ x ≤ 2 ^ x"
                },
                {
                    "args": "exp_mono_le_imp, {n: x, x: (2::nat), y: p}",
                    "id": "2.6",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "2 ≤ p, P x ∧ p ^ x ≤ n ⊢ 2 ^ x ≤ p ^ x"
                },
                {
                    "args": "less_eq_trans",
                    "id": "2.7",
                    "prevs": [
                        "2.5",
                        "2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p, P x ∧ p ^ x ≤ n ⊢ x ≤ p ^ x"
                },
                {
                    "args": "less_eq_trans",
                    "id": "2.8",
                    "prevs": [
                        "2.7",
                        "2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p, P x ∧ p ^ x ≤ n ⊢ x ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "2.9",
                    "prevs": [
                        "2.2",
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p, P x ∧ p ^ x ≤ n ⊢ 0 ≤ x ∧ x ≤ n"
                },
                {
                    "args": "",
                    "id": "2.10",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.9"
                    ],
                    "rule": "intros",
                    "th": "2 ≤ p ⊢ ∀x. P x ∧ p ^ x ≤ n ⟶ 0 ≤ x ∧ x ≤ n"
                },
                {
                    "args": "member_numseg, ∀x. P x ∧ p ^ x ≤ n ⟶ x ∈ {0..n}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "2 ≤ p ⊢ ∀x. P x ∧ p ^ x ≤ n ⟶ x ∈ {0..n}"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {j. P j ∧ p ^ j ≤ n} ⟶ x ∈ {0..n}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "2 ≤ p ⊢ ∀x. x ∈ {j. P j ∧ p ^ j ≤ n} ⟶ x ∈ {0..n}"
                },
                {
                    "args": "subsetI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p ⊢ {j. P j ∧ p ^ j ≤ n} ⊆ {0..n}"
                },
                {
                    "args": "finite_subset",
                    "id": "6",
                    "prevs": [
                        "1",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "2 ≤ p ⊢ finite ({j. P j ∧ p ^ j ≤ n})"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ 2 ≤ p ⟶ finite ({j. P j ∧ p ^ j ≤ n})"
                }
            ],
            "prop": "2 ≤ p ⟶ finite ({j. P j ∧ p ^ j ≤ n})",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "param_t": "{0..n}",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_numseg"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "param_m": "p ^ x",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "param_m": "(2::nat) ^ x",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "lt_pow2_refl"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "exp_mono_le_imp"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "finite_indices",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "2 ≤ p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "2 ≤ p ⊢ 2 ≤ p"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "finite_exp_le, {P: P, n: n, p: p}",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "2 ≤ p ⊢ finite ({j. P j ∧ p ^ j ≤ n})"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), 2 ≤ p ⊢ ∀x. P x ∧ divides (p ^ x) n ⟶ P x ∧ p ^ x ≤ n"
                },
                {
                    "args": "i, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "P i ∧ divides (p ^ i) n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P i ∧ divides (p ^ i) n ⊢ P i ∧ divides (p ^ i) n"
                },
                {
                    "args": "conjD1",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "P i ∧ divides (p ^ i) n ⊢ P i"
                },
                {
                    "args": "conjD2",
                    "id": "3.3",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "P i ∧ divides (p ^ i) n ⊢ divides (p ^ i) n"
                },
                {
                    "args": "divides_le",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "P i ∧ divides (p ^ i) n ⊢ p ^ i ≤ n ∨ n = 0"
                },
                {
                    "args": "p ^ i ≤ n ⟶ p ^ i ≤ n",
                    "id": "3.5",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ p ^ i ≤ n ⟶ p ^ i ≤ n"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), 2 ≤ p, P i ∧ divides (p ^ i) n ⊢ n = 0 ⟶ p ^ i ≤ n"
                },
                {
                    "args": "n = 0",
                    "id": "3.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: p ^ i ≤ n}",
                    "id": "3.6.1",
                    "prevs": [
                        "1",
                        "3.6.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(n = 0) ⊢ p ^ i ≤ n"
                },
                {
                    "args": "",
                    "id": "3.6.2",
                    "prevs": [
                        "3.6.0",
                        "3.6.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), 2 ≤ p, P i ∧ divides (p ^ i) n ⊢ n = 0 ⟶ p ^ i ≤ n"
                },
                {
                    "args": "disjE",
                    "id": "3.7",
                    "prevs": [
                        "3.4",
                        "3.5",
                        "3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), 2 ≤ p, P i ∧ divides (p ^ i) n ⊢ p ^ i ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "3.8",
                    "prevs": [
                        "3.2",
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), 2 ≤ p, P i ∧ divides (p ^ i) n ⊢ P i ∧ p ^ i ≤ n"
                },
                {
                    "args": "",
                    "id": "3.9",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.8"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), 2 ≤ p ⊢ ∀i. P i ∧ divides (p ^ i) n ⟶ P i ∧ p ^ i ≤ n"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {j. P j ∧ divides (p ^ j) n} ⟶ x ∈ {j. P j ∧ p ^ j ≤ n}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), 2 ≤ p ⊢ ∀x. x ∈ {j. P j ∧ divides (p ^ j) n} ⟶ x ∈ {j. P j ∧ p ^ j ≤ n}"
                },
                {
                    "args": "subsetI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), 2 ≤ p ⊢ {j. P j ∧ divides (p ^ j) n} ⊆ {j. P j ∧ p ^ j ≤ n}"
                },
                {
                    "args": "finite_subset",
                    "id": "6",
                    "prevs": [
                        "2",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), 2 ≤ p ⊢ finite ({j. P j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ 2 ≤ p ⟶ ¬(n = 0) ⟶ finite ({j. P j ∧ divides (p ^ j) n})"
                }
            ],
            "prop": "2 ≤ p ⟶ ¬(n = 0) ⟶ finite ({j. P j ∧ divides (p ^ j) n})",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "param_t": "{j. P j ∧ p ^ j ≤ n}",
                    "theorem": "finite_subset"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_exp_le"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.6.0"
                    ],
                    "goal_id": "3.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index",
            "prop": [
                "index p n = ",
                "(if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
            ],
            "ty": "def",
            "type": "nat ⇒ nat ⇒ nat"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "disjI2, {A: p ≤ 1, B: (0::nat) = 0}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ p ≤ 1 ∨ (0::nat) = 0"
                },
                {
                    "args": "if_P, (if p ≤ 1 ∨ (0::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 0})) = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if p ≤ 1 ∨ (0::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 0})) = 0"
                },
                {
                    "args": "index_def, index p 0 = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ index p 0 = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ index p 0 = 0"
                }
            ],
            "prop": "index p 0 = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "goal": "p ≤ 1 ∨ (0::nat) = 0",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "primepow_divides_index",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n = 0 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "n = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ divides (p ^ k) 0 ⟶ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0"
                },
                {
                    "args": "divides (p ^ k) 0",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) 0 ⊢ divides (p ^ k) 0"
                },
                {
                    "args": "eq_refl, {x: (0::nat)}",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) = 0"
                },
                {
                    "args": "disjI1, {A: (0::nat) = 0, B: p = 1 ∨ k ≤ index p 0}",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, divides (p ^ k) 0 ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ divides (p ^ k) 0 ⟶ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0 ⟶ divides (p ^ k) 0"
                },
                {
                    "args": "(0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0 ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0"
                },
                {
                    "args": "divides_zero, {n: p ^ k}",
                    "id": "0.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ k) 0"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0 ⟶ divides (p ^ k) 0"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ⊢ divides (p ^ k) 0 ⟷ (0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0"
                },
                {
                    "args": "divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = 0 ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ n = 0 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(n = 0) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ p = 0 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "p = 0",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, ¬(n = 0) ⊢ k = 0 ⟶ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "k = 0",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ divides 1 n ⟶ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "divides 1 n",
                    "id": "1.1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 n ⊢ divides 1 n"
                },
                {
                    "args": "le_0, {n: index 0 n}",
                    "id": "1.1.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ index 0 n"
                },
                {
                    "args": "disjI2, {A: (0::nat) = 1, B: 0 ≤ index 0 n}",
                    "id": "1.1.1.1.2",
                    "prevs": [
                        "1.1.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides 1 n, k = 0, p = 0, ¬(n = 0) ⊢ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "disjI2, {A: n = 0, B: (0::nat) = 1 ∨ 0 ≤ index 0 n}",
                    "id": "1.1.1.1.3",
                    "prevs": [
                        "1.1.1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides 1 n, k = 0, p = 0, ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.1.1.4",
                    "prevs": [
                        "1.1.1.1.0",
                        "1.1.1.1.3"
                    ],
                    "rule": "intros",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ divides 1 n ⟶ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n ⟶ divides 1 n"
                },
                {
                    "args": "n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n",
                    "id": "1.1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n ⊢ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "1.1.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "",
                    "id": "1.1.1.2.2",
                    "prevs": [
                        "1.1.1.2.0",
                        "1.1.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n ⟶ divides 1 n"
                },
                {
                    "args": "iffI",
                    "id": "1.1.1.3",
                    "prevs": [
                        "1.1.1.1",
                        "1.1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ divides 1 n ⟷ n = 0 ∨ (0::nat) = 1 ∨ 0 ≤ index 0 n"
                },
                {
                    "args": "divides 1 n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n",
                    "id": "1.1.1.4",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ divides 1 n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "if_P, divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n",
                    "id": "1.1.1.5",
                    "prevs": [
                        "1.1.1.4",
                        "1.1.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0, p = 0, ¬(n = 0) ⊢ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.1.6",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "p = 0, ¬(n = 0) ⊢ k = 0 ⟶ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, ¬(n = 0) ⊢ ¬(k = 0) ⟶ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ divides 0 n ⟶ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "divides 0 n",
                    "id": "1.1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 0 n ⊢ divides 0 n"
                },
                {
                    "args": "divides_0",
                    "id": "1.1.2.1.1",
                    "prevs": [
                        "1.1.2.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides 0 n ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n}",
                    "id": "1.1.2.1.2",
                    "prevs": [
                        "1.0",
                        "1.1.2.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides 0 n, ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.2.1.3",
                    "prevs": [
                        "1.1.2.1.0",
                        "1.1.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ divides 0 n ⟶ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⟶ divides 0 n"
                },
                {
                    "args": "n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n",
                    "id": "1.1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "¬((0::nat) = 1)",
                    "id": "1.1.2.2.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((0::nat) = 1)"
                },
                {
                    "args": "le_0, {n: (1::nat)}",
                    "id": "1.1.2.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::nat) ≤ 1"
                },
                {
                    "args": "disjI1, {A: (0::nat) ≤ 1, B: n = 0}",
                    "id": "1.1.2.2.3",
                    "prevs": [
                        "1.1.2.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ (0::nat) ≤ 1 ∨ n = 0"
                },
                {
                    "args": "le_1_1",
                    "id": "1.1.2.2.4",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ 0 < k"
                },
                {
                    "args": "not_le, ¬(k ≤ 0)",
                    "id": "1.1.2.2.5",
                    "prevs": [
                        "1.1.2.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(k ≤ 0)"
                },
                {
                    "args": "if_P, ¬(k ≤ (if (0::nat) ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (0 ^ j) n})))",
                    "id": "1.1.2.2.6",
                    "prevs": [
                        "1.1.2.2.5",
                        "1.1.2.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(k ≤ (if (0::nat) ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (0 ^ j) n})))"
                },
                {
                    "args": "index_def, ¬(k ≤ index 0 n)",
                    "id": "1.1.2.2.7",
                    "prevs": [
                        "1.1.2.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(k ≤ index 0 n)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.2.8",
                    "prevs": [
                        "1.1.2.2.1",
                        "1.1.2.2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬((0::nat) = 1) ∧ ¬(k ≤ index 0 n)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.2.9",
                    "prevs": [
                        "1.0",
                        "1.1.2.2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(n = 0) ∧ ¬((0::nat) = 1) ∧ ¬(k ≤ index 0 n)"
                },
                {
                    "args": "de_morgan_thm2, ¬(n = 0) ∧ ¬((0::nat) = 1 ∨ k ≤ index 0 n)",
                    "id": "1.1.2.2.10",
                    "prevs": [
                        "1.1.2.2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(n = 0) ∧ ¬((0::nat) = 1 ∨ k ≤ index 0 n)"
                },
                {
                    "args": "de_morgan_thm2, ¬(n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n)",
                    "id": "1.1.2.2.11",
                    "prevs": [
                        "1.1.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ ¬(n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n)"
                },
                {
                    "args": "negE_gen, {A: n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n, C: divides 0 n}",
                    "id": "1.1.2.2.12",
                    "prevs": [
                        "1.1.2.2.11",
                        "1.1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0), n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⊢ divides 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.2.2.13",
                    "prevs": [
                        "1.1.2.2.0",
                        "1.1.2.2.12"
                    ],
                    "rule": "intros",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n ⟶ divides 0 n"
                },
                {
                    "args": "iffI",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.1",
                        "1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ divides 0 n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "if_not_P, divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n",
                    "id": "1.1.2.4",
                    "prevs": [
                        "1.1.2.3",
                        "1.1.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(k = 0), ¬(n = 0) ⊢ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "p = 0, ¬(n = 0) ⊢ ¬(k = 0) ⟶ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "classical_cases",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0, ¬(n = 0) ⊢ divides (if k = 0 then 1 else 0) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "exp_zero, divides (0 ^ k) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, ¬(n = 0) ⊢ divides (0 ^ k) n ⟷ n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n"
                },
                {
                    "args": "divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 0, ¬(n = 0) ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ p = 0 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ¬(p = 0) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 0) ⊢ p = 1 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0) ⊢ divides (p ^ k) n ⟶ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "divides (p ^ k) n",
                    "id": "1.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k) n ⊢ divides (p ^ k) n"
                },
                {
                    "args": "disjI1, {A: p = 1, B: k ≤ index p n}",
                    "id": "1.2.1.1.1",
                    "prevs": [
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0), divides (p ^ k) n ⊢ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ k ≤ index p n}",
                    "id": "1.2.1.1.2",
                    "prevs": [
                        "1.2.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0), divides (p ^ k) n ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.3",
                    "prevs": [
                        "1.2.1.1.0",
                        "1.2.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0) ⊢ divides (p ^ k) n ⟶ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0) ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n ⟶ divides (p ^ k) n"
                },
                {
                    "args": "n = 0 ∨ p = 1 ∨ k ≤ index p n",
                    "id": "1.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ∨ k ≤ index p n ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "1.2.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "exp_one, divides (1 ^ k) n",
                    "id": "1.2.1.2.2",
                    "prevs": [
                        "1.2.1.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ index p n ⊢ divides (1 ^ k) n"
                },
                {
                    "args": "divides (p ^ k) n",
                    "id": "1.2.1.2.3",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ index p n ⊢ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "1.2.1.2.4",
                    "prevs": [
                        "1.2.1.2.0",
                        "1.2.1.2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0) ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n ⟶ divides (p ^ k) n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.1",
                        "1.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, ¬(n = 0), ¬(p = 0) ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.4",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 0) ⊢ p = 1 ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 0) ⊢ ¬(p = 1) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "2 ≤ p",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(p = 1), ¬(p = 0) ⊢ 2 ≤ p"
                },
                {
                    "args": "factorization_index, {n: n, p: p}",
                    "id": "1.2.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(n = 0) ⟶ 2 ≤ p ⟶ (∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)))"
                },
                {
                    "args": "",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.2",
                        "1.0"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0) ⊢ 2 ≤ p ⟶ (∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n)))"
                },
                {
                    "args": "",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.3",
                        "1.2.2.1"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0) ⊢ ∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n))"
                },
                {
                    "args": "a, nat",
                    "id": "1.2.2.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n))",
                    "id": "1.2.2.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n))"
                },
                {
                    "args": "",
                    "id": "1.2.2.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∀k. divides (p ^ k) n ⟷ k ≤ a"
                },
                {
                    "args": "k1, nat",
                    "id": "1.2.2.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k1) n ⟶ k1 ≤ a"
                },
                {
                    "args": "divides (p ^ k1) n",
                    "id": "1.2.2.7.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ k1) n ⊢ divides (p ^ k1) n"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.2.7.1.1",
                    "prevs": [
                        "1.2.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∀l. a < l ⟶ ¬(divides (p ^ l) n)"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ a < k1 ⟶ ¬(divides (p ^ k1) n)"
                },
                {
                    "args": "a < k1",
                    "id": "1.2.2.7.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a < k1 ⊢ a < k1"
                },
                {
                    "args": "k1",
                    "id": "1.2.2.7.1.2.1",
                    "prevs": [
                        "1.2.2.7.1.1",
                        "1.2.2.7.1.2.0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "a < k1, ¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(divides (p ^ k1) n)"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.1.2.2",
                    "prevs": [
                        "1.2.2.7.1.2.0",
                        "1.2.2.7.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ a < k1 ⟶ ¬(divides (p ^ k1) n)"
                },
                {
                    "args": "double_neg, ¬¬(a < k1) ⟶ ¬(divides (p ^ k1) n)",
                    "id": "1.2.2.7.1.3",
                    "prevs": [
                        "1.2.2.7.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬¬(a < k1) ⟶ ¬(divides (p ^ k1) n)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.2.7.1.4",
                    "prevs": [
                        "1.2.2.7.1.0",
                        "1.2.2.7.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(a < k1)"
                },
                {
                    "args": "not_lt, k1 ≤ a",
                    "id": "1.2.2.7.1.5",
                    "prevs": [
                        "1.2.2.7.1.4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ k1) n, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k1 ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.1.6",
                    "prevs": [
                        "1.2.2.7.1.0",
                        "1.2.2.7.1.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k1) n ⟶ k1 ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k1 ≤ a ⟶ divides (p ^ k1) n"
                },
                {
                    "args": "k1 ≤ a",
                    "id": "1.2.2.7.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k1 ≤ a ⊢ k1 ≤ a"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.2.7.2.1",
                    "prevs": [
                        "1.2.2.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ a) n"
                },
                {
                    "args": "divides_exp_le_imp, {m: k1, n: a, p: p}",
                    "id": "1.2.2.7.2.2",
                    "prevs": [
                        "1.2.2.7.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k1 ≤ a, ¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k1) (p ^ a)"
                },
                {
                    "args": "divides_trans",
                    "id": "1.2.2.7.2.3",
                    "prevs": [
                        "1.2.2.7.2.2",
                        "1.2.2.7.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "k1 ≤ a, ¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k1) n"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.2.4",
                    "prevs": [
                        "1.2.2.7.2.0",
                        "1.2.2.7.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k1 ≤ a ⟶ divides (p ^ k1) n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.2.7.3",
                    "prevs": [
                        "1.2.2.7.1",
                        "1.2.2.7.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k1) n ⟷ k1 ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.7.4",
                    "prevs": [
                        "1.2.2.7.0",
                        "1.2.2.7.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ∀k1. divides (p ^ k1) n ⟷ k1 ≤ a"
                },
                {
                    "args": "¬(p ≤ 1)",
                    "id": "1.2.2.8",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(p = 1), ¬(p = 0) ⊢ ¬(p ≤ 1)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.9",
                    "prevs": [
                        "1.2.2.8",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(p ≤ 1) ∧ ¬(n = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(p ≤ 1 ∨ n = 0)",
                    "id": "1.2.2.10",
                    "prevs": [
                        "1.2.2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ ¬(p ≤ 1 ∨ n = 0)"
                },
                {
                    "args": "",
                    "id": "1.2.2.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟶ n = 0 ∨ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "k ≤ a",
                    "id": "1.2.2.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k ≤ a ⊢ k ≤ a"
                },
                {
                    "args": "disjI2, {A: p = 1, B: k ≤ a}",
                    "id": "1.2.2.11.1",
                    "prevs": [
                        "1.2.2.11.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k ≤ a, ¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ k ≤ a}",
                    "id": "1.2.2.11.2",
                    "prevs": [
                        "1.2.2.11.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k ≤ a, ¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ n = 0 ∨ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.11.3",
                    "prevs": [
                        "1.2.2.11.0",
                        "1.2.2.11.2"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟶ n = 0 ∨ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ n = 0 ∨ p = 1 ∨ k ≤ a ⟶ k ≤ a"
                },
                {
                    "args": "n = 0 ∨ p = 1 ∨ k ≤ a",
                    "id": "1.2.2.12.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ∨ k ≤ a ⊢ n = 0 ∨ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ n = 0 ⟶ k ≤ a"
                },
                {
                    "args": "n = 0",
                    "id": "1.2.2.12.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "negE_gen, {A: n = 0, C: k ≤ a}",
                    "id": "1.2.2.12.1.1",
                    "prevs": [
                        "1.0",
                        "1.2.2.12.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(n = 0) ⊢ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.1.2",
                    "prevs": [
                        "1.2.2.12.1.0",
                        "1.2.2.12.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ n = 0 ⟶ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ p = 1 ∨ k ≤ a ⟶ k ≤ a"
                },
                {
                    "args": "p = 1 ∨ k ≤ a",
                    "id": "1.2.2.12.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ k ≤ a ⊢ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), p = 1 ∨ k ≤ a, n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ p = 1 ⟶ k ≤ a"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.2.12.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "negE_gen, {A: p = 1, C: k ≤ a}",
                    "id": "1.2.2.12.2.1.1",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.12.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 1) ⊢ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.2.1.2",
                    "prevs": [
                        "1.2.2.12.2.1.0",
                        "1.2.2.12.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), p = 1 ∨ k ≤ a, n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ p = 1 ⟶ k ≤ a"
                },
                {
                    "args": "k ≤ a ⟶ k ≤ a",
                    "id": "1.2.2.12.2.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ k ≤ a ⟶ k ≤ a"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.12.2.3",
                    "prevs": [
                        "1.2.2.12.2.0",
                        "1.2.2.12.2.1",
                        "1.2.2.12.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), p = 1 ∨ k ≤ a, n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.2.4",
                    "prevs": [
                        "1.2.2.12.2.0",
                        "1.2.2.12.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ p = 1 ∨ k ≤ a ⟶ k ≤ a"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.12.3",
                    "prevs": [
                        "1.2.2.12.0",
                        "1.2.2.12.1",
                        "1.2.2.12.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), n = 0 ∨ p = 1 ∨ k ≤ a, divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a"
                },
                {
                    "args": "",
                    "id": "1.2.2.12.4",
                    "prevs": [
                        "1.2.2.12.0",
                        "1.2.2.12.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ n = 0 ∨ p = 1 ∨ k ≤ a ⟶ k ≤ a"
                },
                {
                    "args": "iffI",
                    "id": "1.2.2.13",
                    "prevs": [
                        "1.2.2.11",
                        "1.2.2.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ a"
                },
                {
                    "args": "card_natseg_1, k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({1..a})",
                    "id": "1.2.2.14",
                    "prevs": [
                        "1.2.2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({1..a})"
                },
                {
                    "args": "nat_interval_def, k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({j. 1 ≤ j ∧ j ≤ a})",
                    "id": "1.2.2.15",
                    "prevs": [
                        "1.2.2.14"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({j. 1 ≤ j ∧ j ≤ a})"
                },
                {
                    "args": "k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})",
                    "id": "1.2.2.16",
                    "prevs": [
                        "1.2.2.7",
                        "1.2.2.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "if_not_P, k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))",
                    "id": "1.2.2.17",
                    "prevs": [
                        "1.2.2.16",
                        "1.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
                },
                {
                    "args": "index_def, k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n",
                    "id": "1.2.2.18",
                    "prevs": [
                        "1.2.2.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ k ≤ a ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n",
                    "id": "1.2.2.19",
                    "prevs": [
                        "1.2.2.7",
                        "1.2.2.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), ¬(p = 1), ¬(p = 0), divides (p ^ a) n ∧ (∀l. a < l ⟶ ¬(divides (p ^ l) n)) ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "∃k::nat. divides (p ^ k) n ∧ (∀l. k < l ⟶ ¬(divides (p ^ l) n))",
                    "id": "1.2.2.20",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.4",
                        "1.2.2.5",
                        "1.2.2.6",
                        "1.2.2.19"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 0) ⊢ ¬(p = 1) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "classical_cases",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 0) ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ¬(p = 0) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                }
            ],
            "prop": "divides (p ^ k) n ⟷ n = 0 ∨ p = 1 ∨ k ≤ index p n",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p=0",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "case": "k = 0",
                    "goal_id": "1.1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "1.1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.2.1.0"
                    ],
                    "goal_id": "1.1.2.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.2.1.1"
                    ],
                    "goal_id": "1.1.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal": "~(n = 0 ∨ (0::nat) = 1 ∨ k ≤ index 0 n)",
                    "goal_id": "1.1.2.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2.2.1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "1.1.2.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "goal": "(0::nat) ≤ 1 ∨ n = 0",
                    "goal_id": "1.1.2.2.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.1.2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "1.1.2.2.3"
                    ],
                    "goal_id": "1.1.2.2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.1.2.2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "1.1.2.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "1.1.2.2.11",
                        "1.1.2.2.0"
                    ],
                    "goal_id": "1.1.2.2.12",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "case": "p = 1",
                    "goal_id": "1.2.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.0"
                    ],
                    "goal_id": "1.2.1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_one"
                },
                {
                    "goal_id": "1.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal": "2 <= p",
                    "goal_id": "1.2.2.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.2.2.0",
                        "1.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2.2.2",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "factorization_index"
                },
                {
                    "fact_ids": [
                        "1.2.2.2",
                        "1.0"
                    ],
                    "goal_id": "1.2.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.2.3",
                        "1.2.2.1"
                    ],
                    "goal_id": "1.2.2.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.2.4"
                    ],
                    "goal_id": "1.2.2.5",
                    "method_name": "exists_elim",
                    "names": "a"
                },
                {
                    "goal": "!k. divides (p ^ k) n ⟷  k <= a",
                    "goal_id": "1.2.2.7",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.7",
                    "method_name": "introduction",
                    "names": "k1"
                },
                {
                    "goal_id": "1.2.2.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.2.7.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.6"
                    ],
                    "goal_id": "1.2.2.7.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2.2.7.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "not_lt"
                },
                {
                    "fact_ids": [
                        "1.2.2.7.1.0"
                    ],
                    "goal_id": "1.2.2.7.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.2.7.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.2.7.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.7.1.1"
                    ],
                    "goal_id": "1.2.2.7.1.2.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2.2.7.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.6"
                    ],
                    "goal_id": "1.2.2.7.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.2.2.7.2.2",
                    "method_name": "apply_backward_step",
                    "param_m": "(p ^ a)",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "1.2.2.7.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_exp_le_imp"
                },
                {
                    "fact_ids": [
                        "1.2.2.7"
                    ],
                    "goal_id": "1.2.2.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "goal": "~(p ≤ 1 ∨ n = 0)",
                    "goal_id": "1.2.2.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.2.2.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.2.2.0",
                        "1.2.0"
                    ],
                    "goal_id": "1.2.2.8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.2.2.10"
                    ],
                    "goal_id": "1.2.2.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.2.2.7"
                    ],
                    "goal_id": "1.2.2.11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.2.11",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nat_interval_def"
                },
                {
                    "goal_id": "1.2.2.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "card_natseg_1"
                },
                {
                    "goal_id": "1.2.2.11",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.2.11",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.12",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.12.0"
                    ],
                    "goal_id": "1.2.2.12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.12.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.2.12.1.0"
                    ],
                    "goal_id": "1.2.2.12.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2.12.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.12.2.0"
                    ],
                    "goal_id": "1.2.2.12.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.12.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.0",
                        "1.2.2.12.2.1.0"
                    ],
                    "goal_id": "1.2.2.12.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "le_index",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n = 0 ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "n = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ k ≤ 0 ⟶ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "k ≤ 0",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k ≤ 0 ⊢ k ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0, k ≤ 0 ⊢ (0::nat) = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "(0::nat) = 0 ∨ p = 1",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) = 0 ∨ p = 1 ⊢ (0::nat) = 0 ∨ p = 1"
                },
                {
                    "args": "nat_le_zero",
                    "id": "0.1.1.1",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "k ≤ 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "n = 0, k ≤ 0 ⊢ (0::nat) = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "disjI2, {A: p = 1, B: k ≤ 0}",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, k ≤ 0 ⊢ p = 1 ∨ k ≤ 0"
                },
                {
                    "args": "disjI2, {A: (0::nat) = 0, B: p = 1 ∨ k ≤ 0}",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, k ≤ 0 ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ 0"
                },
                {
                    "args": "conjI",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.1",
                        "0.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0, k ≤ 0 ⊢ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ k ≤ 0 ⟶ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ⊢ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⟶ k ≤ 0"
                },
                {
                    "args": "((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "conjD1",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ (0::nat) = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ (0::nat) = 0 ∨ p = 1 ∨ k ≤ 0"
                },
                {
                    "args": "disj_assoc",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ ((0::nat) = 0 ∨ p = 1) ∨ k ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0, ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ (0::nat) = 0 ∨ p = 1 ⟶ k ≤ 0"
                },
                {
                    "args": "(0::nat) = 0 ∨ p = 1",
                    "id": "0.2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(0::nat) = 0 ∨ p = 1 ⊢ (0::nat) = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "0.2.4.1",
                    "prevs": [
                        "0.2.1",
                        "0.2.4.0"
                    ],
                    "rule": "apply_fact",
                    "th": "(0::nat) = 0 ∨ p = 1, ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ k = 0"
                },
                {
                    "args": "nat_less_eq_def_1, k ≤ 0",
                    "id": "0.2.4.2",
                    "prevs": [
                        "0.2.4.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0, (0::nat) = 0 ∨ p = 1, ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ k ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.2.4.3",
                    "prevs": [
                        "0.2.4.0",
                        "0.2.4.2"
                    ],
                    "rule": "intros",
                    "th": "n = 0, ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ (0::nat) = 0 ∨ p = 1 ⟶ k ≤ 0"
                },
                {
                    "args": "k ≤ 0 ⟶ k ≤ 0",
                    "id": "0.2.5",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ k ≤ 0 ⟶ k ≤ 0"
                },
                {
                    "args": "disjE",
                    "id": "0.2.6",
                    "prevs": [
                        "0.2.3",
                        "0.2.4",
                        "0.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0, ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⊢ k ≤ 0"
                },
                {
                    "args": "",
                    "id": "0.2.7",
                    "prevs": [
                        "0.2.0",
                        "0.2.6"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ⊢ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0) ⟶ k ≤ 0"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ⊢ k ≤ 0 ⟷ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "index_0, k ≤ index p 0 ⟷ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0)",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ⊢ k ≤ index p 0 ⟷ ((0::nat) = 0 ∨ p = 1 ⟶ k = 0) ∧ ((0::nat) = 0 ∨ p = 1 ∨ k ≤ index p 0)"
                },
                {
                    "args": "k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = 0 ⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ n = 0 ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(n = 0) ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ p = 1 ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "p = 1",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI2, {A: p < 1, B: p = 1}",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0) ⊢ p < 1 ∨ p = 1"
                },
                {
                    "args": "le_lt, p ≤ 1",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(n = 0) ⊢ p ≤ 1"
                },
                {
                    "args": "disjI1, {A: p ≤ 1, B: n = 0}",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0) ⊢ p ≤ 1 ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(n = 0) ⊢ k = 0 ⟶ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)"
                },
                {
                    "args": "k = 0",
                    "id": "1.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.1.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "k = 0, p = 1, ¬(n = 0) ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "1.1.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.1.4.1.1",
                    "prevs": [
                        "1.1.4.1.0",
                        "1.1.4.0"
                    ],
                    "rule": "intros",
                    "th": "k = 0, p = 1, ¬(n = 0) ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "disjI2, {A: p = 1, B: k = 0}",
                    "id": "1.1.4.2",
                    "prevs": [
                        "1.1.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, p = 1, ¬(n = 0) ⊢ p = 1 ∨ k = 0"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ k = 0}",
                    "id": "1.1.4.3",
                    "prevs": [
                        "1.1.4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, p = 1, ¬(n = 0) ⊢ n = 0 ∨ p = 1 ∨ k = 0"
                },
                {
                    "args": "conjI",
                    "id": "1.1.4.4",
                    "prevs": [
                        "1.1.4.1",
                        "1.1.4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "k = 0, p = 1, ¬(n = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.4.5",
                    "prevs": [
                        "1.1.4.0",
                        "1.1.4.4"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(n = 0) ⊢ k = 0 ⟶ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, ¬(n = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⟶ k = 0"
                },
                {
                    "args": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)",
                    "id": "1.1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.5.1",
                    "prevs": [
                        "1.1.5.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.5.2",
                    "prevs": [
                        "1.1.5.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⊢ n = 0 ∨ p = 1 ∨ k = 0"
                },
                {
                    "args": "disj_assoc",
                    "id": "1.1.5.3",
                    "prevs": [
                        "1.1.5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⊢ (n = 0 ∨ p = 1) ∨ k = 0"
                },
                {
                    "args": "k = 0 ⟶ k = 0",
                    "id": "1.1.5.4",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ k = 0 ⟶ k = 0"
                },
                {
                    "args": "disjE",
                    "id": "1.1.5.5",
                    "prevs": [
                        "1.1.5.3",
                        "1.1.5.1",
                        "1.1.5.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, ¬(n = 0), (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.1.5.6",
                    "prevs": [
                        "1.1.5.0",
                        "1.1.5.5"
                    ],
                    "rule": "intros",
                    "th": "p = 1, ¬(n = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0) ⟶ k = 0"
                },
                {
                    "args": "iffI",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.4",
                        "1.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, ¬(n = 0) ⊢ k = 0 ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k = 0)"
                },
                {
                    "args": "nat_less_eq_def_1, k ≤ 0 ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ 0)",
                    "id": "1.1.7",
                    "prevs": [
                        "1.1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(n = 0) ⊢ k ≤ 0 ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ 0)"
                },
                {
                    "args": "if_P, k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})))",
                    "id": "1.1.8",
                    "prevs": [
                        "1.1.7",
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(n = 0) ⊢ k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})))"
                },
                {
                    "args": "index_def, k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)",
                    "id": "1.1.9",
                    "prevs": [
                        "1.1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(n = 0) ⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.1.10",
                    "prevs": [
                        "1.1.0",
                        "1.1.9"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ p = 1 ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0) ⊢ ¬(p = 1) ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1) ⊢ k ≤ index p n ⟶ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "k ≤ index p n",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k ≤ index p n ⊢ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "1.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n, n = 0 ∨ p = 1 ⊢ ¬(k = 0) ⟶ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1.2.1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.1.1.1",
                    "prevs": [
                        "1.0",
                        "1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), ¬(n = 0), ¬(p = 1), k ≤ index p n, n = 0 ∨ p = 1 ⊢ ¬(n = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "de_morgan_thm2, ¬(n = 0 ∨ p = 1)",
                    "id": "1.2.1.1.1.2",
                    "prevs": [
                        "1.2.1.1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(k = 0), ¬(n = 0), ¬(p = 1), k ≤ index p n, n = 0 ∨ p = 1 ⊢ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3",
                    "prevs": [
                        "1.2.1.1.1.0",
                        "1.2.1.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n, n = 0 ∨ p = 1 ⊢ ¬(k = 0) ⟶ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.1.1.2",
                    "prevs": [
                        "1.2.1.1.0",
                        "1.2.1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n, n = 0 ∨ p = 1 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.3",
                    "prevs": [
                        "1.2.1.1.0",
                        "1.2.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "disjI2, {A: p = 1, B: k ≤ index p n}",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n ⊢ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ k ≤ index p n}",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.4",
                    "prevs": [
                        "1.2.1.1",
                        "1.2.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), k ≤ index p n ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.5",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1) ⊢ k ≤ index p n ⟶ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⟶ k ≤ index p n"
                },
                {
                    "args": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ n = 0 ∨ p = 1 ⟶ k = 0"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ n = 0 ∨ p = 1 ∨ k ≤ index p n"
                },
                {
                    "args": "disj_assoc",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ (n = 0 ∨ p = 1) ∨ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ n = 0 ∨ p = 1 ⟶ k ≤ index p n"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "1.2.2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.4.1",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.4.0"
                    ],
                    "rule": "apply_fact",
                    "th": "n = 0 ∨ p = 1, (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ k = 0"
                },
                {
                    "args": "le_0, {n: index p n}",
                    "id": "1.2.2.4.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ index p n"
                },
                {
                    "args": "k ≤ index p n",
                    "id": "1.2.2.4.3",
                    "prevs": [
                        "1.2.2.4.1",
                        "1.2.2.4.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n = 0), ¬(p = 1), n = 0 ∨ p = 1, (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.2.4.4",
                    "prevs": [
                        "1.2.2.4.0",
                        "1.2.2.4.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ n = 0 ∨ p = 1 ⟶ k ≤ index p n"
                },
                {
                    "args": "k ≤ index p n ⟶ k ≤ index p n",
                    "id": "1.2.2.5",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ k ≤ index p n ⟶ k ≤ index p n"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.3",
                        "1.2.2.4",
                        "1.2.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⊢ k ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.2.7",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1) ⊢ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n) ⟶ k ≤ index p n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1) ⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0) ⊢ ¬(p = 1) ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 0) ⟶ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ (n = 0 ∨ p = 1 ∨ k ≤ index p n)"
                },
                {
                    "args": "primepow_divides_index, k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ divides (p ^ k) n",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ divides (p ^ k) n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ divides (p ^ k) n"
                }
            ],
            "prop": "k ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ k = 0) ∧ divides (p ^ k) n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "primepow_divides_index"
                },
                {
                    "case": "n=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_0"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "nat_le_zero"
                },
                {
                    "goal_id": "0.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.2.2"
                    ],
                    "goal_id": "0.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "disj_assoc"
                },
                {
                    "fact_ids": [
                        "0.2.3"
                    ],
                    "goal_id": "0.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.1",
                        "0.2.4.0"
                    ],
                    "goal_id": "0.2.4.1",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "0.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p=1",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "goal": "p ≤ 1 ∨ n = 0",
                    "goal_id": "1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_lt"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.1.3"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.5.0"
                    ],
                    "goal_id": "1.1.5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.5.0"
                    ],
                    "goal_id": "1.1.5.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.5.2"
                    ],
                    "goal_id": "1.1.5.3",
                    "method_name": "apply_forward_step",
                    "theorem": "disj_assoc"
                },
                {
                    "fact_ids": [
                        "1.1.5.3"
                    ],
                    "goal_id": "1.1.5.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.0"
                    ],
                    "goal_id": "1.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.1.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.2.1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2.2.2"
                    ],
                    "goal_id": "1.2.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "disj_assoc"
                },
                {
                    "fact_ids": [
                        "1.2.2.3"
                    ],
                    "goal_id": "1.2.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.1",
                        "1.2.2.4.0"
                    ],
                    "goal_id": "1.2.2.4.1",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.2.4.1"
                    ],
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "exp_index_divides",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_index, {k: index p n, n: n, p: p}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ index p n ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ index p n = 0) ∧ divides (p ^ index p n) n"
                },
                {
                    "args": "less_eq_refl, {n: index p n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ index p n ≤ index p n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ (n = 0 ∨ p = 1 ⟶ index p n = 0) ∧ divides (p ^ index p n) n"
                },
                {
                    "args": "conjD2",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides (p ^ index p n) n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides (p ^ index p n) n"
                }
            ],
            "prop": "divides (p ^ index p n) n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_k": "index p n",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "le_index"
                },
                {
                    "goal": "index p n ≤ index p n",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p ≤ 1 ∨ (1::nat) = 0 ⟶ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "p ≤ 1 ∨ (1::nat) = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ 1 ∨ (1::nat) = 0 ⊢ p ≤ 1 ∨ (1::nat) = 0"
                },
                {
                    "args": "if_P, (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p ≤ 1 ∨ (1::nat) = 0 ⊢ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ p ≤ 1 ∨ (1::nat) = 0 ⟶ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(p ≤ 1 ∨ (1::nat) = 0) ⟶ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "¬(p ≤ 1 ∨ (1::nat) = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ ¬(p ≤ 1 ∨ (1::nat) = 0)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ ¬(p ≤ 1) ∧ ¬((1::nat) = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ ¬(p ≤ 1)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ ∀x::nat. x ∈ {j. 1 ≤ j ∧ divides (p ^ j) 1} ⟷ x ∈ ∅"
                },
                {
                    "args": "j, nat",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ 1 ≤ j ∧ divides (p ^ j) 1 ⟶ j ∈ ∅"
                },
                {
                    "args": "1 ≤ j ∧ divides (p ^ j) 1",
                    "id": "1.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ j ∧ divides (p ^ j) 1 ⊢ 1 ≤ j ∧ divides (p ^ j) 1"
                },
                {
                    "args": "conjD1",
                    "id": "1.3.1.1",
                    "prevs": [
                        "1.3.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ j ∧ divides (p ^ j) 1 ⊢ 1 ≤ j"
                },
                {
                    "args": "conjD2",
                    "id": "1.3.1.2",
                    "prevs": [
                        "1.3.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ j ∧ divides (p ^ j) 1 ⊢ divides (p ^ j) 1"
                },
                {
                    "args": "divides_one",
                    "id": "1.3.1.3",
                    "prevs": [
                        "1.3.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 ≤ j ∧ divides (p ^ j) 1 ⊢ p ^ j = 1"
                },
                {
                    "args": "exp_eq_1",
                    "id": "1.3.1.4",
                    "prevs": [
                        "1.3.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "1 ≤ j ∧ divides (p ^ j) 1 ⊢ p = 1 ∨ j = 0"
                },
                {
                    "args": "",
                    "id": "1.3.1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0), 1 ≤ j ∧ divides (p ^ j) 1 ⊢ p = 1 ⟶ j ∈ ∅"
                },
                {
                    "args": "p = 1",
                    "id": "1.3.1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "j ∈ ∅",
                    "id": "1.3.1.5.1",
                    "prevs": [
                        "1.3.1.5.0",
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "p = 1, ¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.1.5.2",
                    "prevs": [
                        "1.3.1.5.0",
                        "1.3.1.5.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0), 1 ≤ j ∧ divides (p ^ j) 1 ⊢ p = 1 ⟶ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0), 1 ≤ j ∧ divides (p ^ j) 1 ⊢ j = 0 ⟶ j ∈ ∅"
                },
                {
                    "args": "j = 0",
                    "id": "1.3.1.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "j = 0 ⊢ j = 0"
                },
                {
                    "args": "j ∈ ∅",
                    "id": "1.3.1.6.1",
                    "prevs": [
                        "1.3.1.6.0",
                        "1.3.1.1"
                    ],
                    "rule": "z3",
                    "th": "j = 0, 1 ≤ j ∧ divides (p ^ j) 1 ⊢ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.1.6.2",
                    "prevs": [
                        "1.3.1.6.0",
                        "1.3.1.6.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0), 1 ≤ j ∧ divides (p ^ j) 1 ⊢ j = 0 ⟶ j ∈ ∅"
                },
                {
                    "args": "disjE",
                    "id": "1.3.1.7",
                    "prevs": [
                        "1.3.1.4",
                        "1.3.1.5",
                        "1.3.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0), 1 ≤ j ∧ divides (p ^ j) 1 ⊢ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.1.8",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.7"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ 1 ≤ j ∧ divides (p ^ j) 1 ⟶ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ j ∈ ∅ ⟶ 1 ≤ j ∧ divides (p ^ j) 1"
                },
                {
                    "args": "j ∈ ∅",
                    "id": "1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "j ∈ ∅ ⊢ j ∈ ∅"
                },
                {
                    "args": "member_empty, 1 ≤ j ∧ divides (p ^ j) 1",
                    "id": "1.3.2.1",
                    "prevs": [
                        "1.3.2.0"
                    ],
                    "rule": "resolve_theorem",
                    "th": "j ∈ ∅ ⊢ 1 ≤ j ∧ divides (p ^ j) 1"
                },
                {
                    "args": "",
                    "id": "1.3.2.2",
                    "prevs": [
                        "1.3.2.0",
                        "1.3.2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ j ∈ ∅ ⟶ 1 ≤ j ∧ divides (p ^ j) 1"
                },
                {
                    "args": "iffI",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.1",
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ 1 ≤ j ∧ divides (p ^ j) 1 ⟷ j ∈ ∅"
                },
                {
                    "args": "member_collect, j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) 1} ⟷ j ∈ ∅",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) 1} ⟷ j ∈ ∅"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [
                        "1.3.0",
                        "1.3.4"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ ∀j::nat. j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) 1} ⟷ j ∈ ∅"
                },
                {
                    "args": "member_ext",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ {j::nat. 1 ≤ j ∧ divides (p ^ j) 1} = ∅"
                },
                {
                    "args": "card_empty, card (∅::nat set) = 0",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ card (∅::nat set) = 0"
                },
                {
                    "args": "card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1}) = 0",
                    "id": "1.6",
                    "prevs": [
                        "1.4",
                        "1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1}) = 0"
                },
                {
                    "args": "if_not_P, (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0",
                    "id": "1.7",
                    "prevs": [
                        "1.6",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p ≤ 1 ∨ (1::nat) = 0) ⊢ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(p ≤ 1 ∨ (1::nat) = 0) ⟶ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if p ≤ 1 ∨ (1::nat) = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) 1})) = 0"
                },
                {
                    "args": "index_def, index p 1 = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ index p 1 = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ index p 1 = 0"
                }
            ],
            "prop": "index p 1 = 0",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "case": "p ≤ 1 ∨ (1::nat) = 0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal": "{j::nat. 1 ≤ j ∧ divides (p ^ j) 1} = {}",
                    "goal_id": "1.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction",
                    "names": "j"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.0"
                    ],
                    "goal_id": "1.3.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.3.1.0"
                    ],
                    "goal_id": "1.3.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.3.1.2"
                    ],
                    "goal_id": "1.3.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "1.3.1.3"
                    ],
                    "goal_id": "1.3.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_1"
                },
                {
                    "fact_ids": [
                        "1.3.1.4"
                    ],
                    "goal_id": "1.3.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.3.1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.5.0",
                        "1.2"
                    ],
                    "goal_id": "1.3.1.5.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.3.1.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.6.0",
                        "1.3.1.1"
                    ],
                    "goal_id": "1.3.1.6.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.2.0"
                    ],
                    "goal_id": "1.3.2.1",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "card_empty"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "index_mul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(m = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m = 0) ⊢ ¬(m = 0)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "prime_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 1)"
                },
                {
                    "args": "∀m::nat. ∀n. (∀k. k ≤ m ⟶ k ≤ n) ⟶ m ≤ n",
                    "id": "5",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀m::nat. ∀n. (∀k. k ≤ m ⟶ k ≤ n) ⟶ m ≤ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ ∀k. k ≤ index p (m * n) ⟶ k ≤ index p m + index p n"
                },
                {
                    "args": "k, nat",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "k ≤ index p (m * n)",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k ≤ index p (m * n) ⊢ k ≤ index p (m * n)"
                },
                {
                    "args": "primepow_divides_prod, {k: k, m: m, n: n}",
                    "id": "6.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ divides (p ^ k) (m * n) ⟶ (∃i. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j)"
                },
                {
                    "args": "le_index",
                    "id": "6.3",
                    "prevs": [
                        "6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "k ≤ index p (m * n) ⊢ (m * n = 0 ∨ p = 1 ⟶ k = 0) ∧ divides (p ^ k) (m * n)"
                },
                {
                    "args": "conjD2",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "k ≤ index p (m * n) ⊢ divides (p ^ k) (m * n)"
                },
                {
                    "args": "",
                    "id": "6.5",
                    "prevs": [
                        "6.2",
                        "6.4"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, k ≤ index p (m * n) ⊢ ∃i. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j"
                },
                {
                    "args": "i, nat",
                    "id": "6.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "j, nat",
                    "id": "6.7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j",
                    "id": "6.8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j"
                },
                {
                    "args": "conjD1",
                    "id": "6.9",
                    "prevs": [
                        "6.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ divides (p ^ i) m"
                },
                {
                    "args": "conjD2",
                    "id": "6.10",
                    "prevs": [
                        "6.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ divides (p ^ j) n ∧ k = i + j"
                },
                {
                    "args": "conjD1",
                    "id": "6.11",
                    "prevs": [
                        "6.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ divides (p ^ j) n"
                },
                {
                    "args": "conjD2",
                    "id": "6.12",
                    "prevs": [
                        "6.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ k = i + j"
                },
                {
                    "args": "",
                    "id": "6.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ m = 0 ∨ p = 1 ⟶ i = 0"
                },
                {
                    "args": "m = 0 ∨ p = 1",
                    "id": "6.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ∨ p = 1 ⊢ m = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "6.13.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), m = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(i = 0) ⟶ ¬(m = 0 ∨ p = 1)"
                },
                {
                    "args": "¬(i = 0)",
                    "id": "6.13.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(i = 0) ⊢ ¬(i = 0)"
                },
                {
                    "args": "conjI",
                    "id": "6.13.1.1",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(i = 0), ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), m = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(m = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "de_morgan_thm2, ¬(m = 0 ∨ p = 1)",
                    "id": "6.13.1.2",
                    "prevs": [
                        "6.13.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(i = 0), ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), m = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(m = 0 ∨ p = 1)"
                },
                {
                    "args": "",
                    "id": "6.13.1.3",
                    "prevs": [
                        "6.13.1.0",
                        "6.13.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), m = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(i = 0) ⟶ ¬(m = 0 ∨ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "6.13.2",
                    "prevs": [
                        "6.13.0",
                        "6.13.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), m = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ i = 0"
                },
                {
                    "args": "",
                    "id": "6.13.3",
                    "prevs": [
                        "6.13.0",
                        "6.13.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ m = 0 ∨ p = 1 ⟶ i = 0"
                },
                {
                    "args": "conjI",
                    "id": "6.14",
                    "prevs": [
                        "6.13",
                        "6.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ (m = 0 ∨ p = 1 ⟶ i = 0) ∧ divides (p ^ i) m"
                },
                {
                    "args": "le_index, i ≤ index p m",
                    "id": "6.15",
                    "prevs": [
                        "6.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ i ≤ index p m"
                },
                {
                    "args": "",
                    "id": "6.16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ n = 0 ∨ p = 1 ⟶ j = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "6.16.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "6.16.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), n = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(j = 0) ⟶ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "¬(j = 0)",
                    "id": "6.16.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(j = 0) ⊢ ¬(j = 0)"
                },
                {
                    "args": "conjI",
                    "id": "6.16.1.1",
                    "prevs": [
                        "2",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(j = 0), ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), n = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(n = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "de_morgan_thm2, ¬(n = 0 ∨ p = 1)",
                    "id": "6.16.1.2",
                    "prevs": [
                        "6.16.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(j = 0), ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), n = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "",
                    "id": "6.16.1.3",
                    "prevs": [
                        "6.16.1.0",
                        "6.16.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), n = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ ¬(j = 0) ⟶ ¬(n = 0 ∨ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "6.16.2",
                    "prevs": [
                        "6.16.0",
                        "6.16.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), n = 0 ∨ p = 1, divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ j = 0"
                },
                {
                    "args": "",
                    "id": "6.16.3",
                    "prevs": [
                        "6.16.0",
                        "6.16.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ n = 0 ∨ p = 1 ⟶ j = 0"
                },
                {
                    "args": "conjI",
                    "id": "6.17",
                    "prevs": [
                        "6.16",
                        "6.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ (n = 0 ∨ p = 1 ⟶ j = 0) ∧ divides (p ^ j) n"
                },
                {
                    "args": "le_index, j ≤ index p n",
                    "id": "6.18",
                    "prevs": [
                        "6.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ j ≤ index p n"
                },
                {
                    "args": "le_add2",
                    "id": "6.19",
                    "prevs": [
                        "6.15",
                        "6.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ i + j ≤ index p m + index p n"
                },
                {
                    "args": "k ≤ index p m + index p n",
                    "id": "6.20",
                    "prevs": [
                        "6.12",
                        "6.19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), k ≤ index p (m * n), divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j ⊢ k ≤ index p m + index p n"
                },
                {
                    "args": "∃i. ∃j. divides (p ^ i) m ∧ divides (p ^ j) n ∧ k = i + j",
                    "id": "6.21",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.5",
                        "6.6",
                        "6.7",
                        "6.8",
                        "6.20"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ ∀k. k ≤ index p (m * n) ⟶ k ≤ index p m + index p n"
                },
                {
                    "args": "index p (m * n), index p m + index p n",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_fact_for",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ index p (m * n) ≤ index p m + index p n"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ m * n = 0 ∨ p = 1 ⟶ index p m + index p n = 0"
                },
                {
                    "args": "m * n = 0 ∨ p = 1",
                    "id": "8.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m * n = 0 ∨ p = 1 ⊢ m * n = 0 ∨ p = 1"
                },
                {
                    "args": "mult_eq_0",
                    "id": "8.1",
                    "prevs": [
                        "8.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m * n = 0 ∨ p = 1 ⊢ (m = 0 ∨ n = 0) ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "8.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1 ⊢ ¬(index p m + index p n = 0) ⟶ ¬((m = 0 ∨ n = 0) ∨ p = 1)"
                },
                {
                    "args": "¬(index p m + index p n = 0)",
                    "id": "8.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(index p m + index p n = 0) ⊢ ¬(index p m + index p n = 0)"
                },
                {
                    "args": "conjI",
                    "id": "8.2.1",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1, ¬(index p m + index p n = 0) ⊢ ¬(m = 0) ∧ ¬(n = 0)"
                },
                {
                    "args": "conjI",
                    "id": "8.2.2",
                    "prevs": [
                        "8.2.1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1, ¬(index p m + index p n = 0) ⊢ (¬(m = 0) ∧ ¬(n = 0)) ∧ ¬(p = 1)"
                },
                {
                    "args": "de_morgan_thm2, ¬(m = 0 ∨ n = 0) ∧ ¬(p = 1)",
                    "id": "8.2.3",
                    "prevs": [
                        "8.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1, ¬(index p m + index p n = 0) ⊢ ¬(m = 0 ∨ n = 0) ∧ ¬(p = 1)"
                },
                {
                    "args": "de_morgan_thm2, ¬((m = 0 ∨ n = 0) ∨ p = 1)",
                    "id": "8.2.4",
                    "prevs": [
                        "8.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1, ¬(index p m + index p n = 0) ⊢ ¬((m = 0 ∨ n = 0) ∨ p = 1)"
                },
                {
                    "args": "",
                    "id": "8.2.5",
                    "prevs": [
                        "8.2.0",
                        "8.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1 ⊢ ¬(index p m + index p n = 0) ⟶ ¬((m = 0 ∨ n = 0) ∨ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "8.3",
                    "prevs": [
                        "8.1",
                        "8.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0), m * n = 0 ∨ p = 1 ⊢ index p m + index p n = 0"
                },
                {
                    "args": "",
                    "id": "8.4",
                    "prevs": [
                        "8.0",
                        "8.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ m * n = 0 ∨ p = 1 ⟶ index p m + index p n = 0"
                },
                {
                    "args": "exp_index_divides, {n: m, p: p}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ index p m) m"
                },
                {
                    "args": "exp_index_divides, {n: n, p: p}",
                    "id": "10",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ index p n) n"
                },
                {
                    "args": "divides_mul2",
                    "id": "11",
                    "prevs": [
                        "9",
                        "10"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ divides (p ^ index p m * p ^ index p n) (m * n)"
                },
                {
                    "args": "nat_power_add, divides (p ^ (index p m + index p n)) (m * n)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ divides (p ^ (index p m + index p n)) (m * n)"
                },
                {
                    "args": "conjI",
                    "id": "13",
                    "prevs": [
                        "8",
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ (m * n = 0 ∨ p = 1 ⟶ index p m + index p n = 0) ∧ divides (p ^ (index p m + index p n)) (m * n)"
                },
                {
                    "args": "le_index, index p m + index p n ≤ index p (m * n)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ index p m + index p n ≤ index p (m * n)"
                },
                {
                    "args": "conjI",
                    "id": "15",
                    "prevs": [
                        "7",
                        "14"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ index p (m * n) ≤ index p m + index p n ∧ index p m + index p n ≤ index p (m * n)"
                },
                {
                    "args": "le_antisym, index p (m * n) = index p m + index p n",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "prime p, ¬(m = 0), ¬(n = 0) ⊢ index p (m * n) = index p m + index p n"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "16"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(m = 0) ⟶ ¬(n = 0) ⟶ index p (m * n) = index p m + index p n"
                }
            ],
            "prop": "prime p ⟶ ¬(m = 0) ⟶ ¬(n = 0) ⟶ index p (m * n) = index p m + index p n",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "le_antisym"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal": "!m. !n. (∀k::nat. k ≤ m ⟶ k ≤ n) ⟶ m ≤ n",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "6.2",
                    "method_name": "apply_forward_step",
                    "param_k": "k",
                    "param_m": "m",
                    "param_n": "n",
                    "theorem": "primepow_divides_prod"
                },
                {
                    "fact_ids": [
                        "6.1"
                    ],
                    "goal_id": "6.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "fact_ids": [
                        "6.3"
                    ],
                    "goal_id": "6.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "6.2",
                        "6.4"
                    ],
                    "goal_id": "6.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6.5"
                    ],
                    "goal_id": "6.6",
                    "method_name": "exists_elim",
                    "names": "i,j"
                },
                {
                    "fact_ids": [
                        "6.8"
                    ],
                    "goal_id": "6.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.8"
                    ],
                    "goal_id": "6.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "6.10"
                    ],
                    "goal_id": "6.11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6.10"
                    ],
                    "goal_id": "6.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "6.12"
                    ],
                    "goal_id": "6.13",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.13",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add2"
                },
                {
                    "goal_id": "6.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "goal_id": "6.13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "6.13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.13.0"
                    ],
                    "goal_id": "6.13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "6.13.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.13.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "6.13.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "6.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "goal_id": "6.16",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "6.16",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.16.0"
                    ],
                    "goal_id": "6.16.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "6.16.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "6.16.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "6.16.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "8",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "8.0"
                    ],
                    "goal_id": "8.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "fact_ids": [
                        "8.1"
                    ],
                    "goal_id": "8.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "8.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "8.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_power_add"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mul2"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "exp_index_divides"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": "exp_index_divides"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_exp",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ n = 0 ⟶ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "n = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, n = 0 ⊢ k = 0 ⟶ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "k = 0",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "mult_0_right, 0 = k * 0",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = k * 0"
                },
                {
                    "args": "index_0, 0 = k * index p 0",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, k = 0, n = 0 ⊢ 0 = k * index p 0"
                },
                {
                    "args": "index_1, index p 1 = k * index p 0",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, k = 0, n = 0 ⊢ index p 1 = k * index p 0"
                },
                {
                    "args": "if_P, index p (if k = 0 then 1 else 0) = k * index p 0",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3",
                        "1.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, k = 0, n = 0 ⊢ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, n = 0 ⊢ k = 0 ⟶ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, n = 0 ⊢ ¬(k = 0) ⟶ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "mult_0_right, 0 = k * 0",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 = k * 0"
                },
                {
                    "args": "index_0, index p 0 = k * index p 0",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, n = 0, ¬(k = 0) ⊢ index p 0 = k * index p 0"
                },
                {
                    "args": "if_not_P, index p (if k = 0 then 1 else 0) = k * index p 0",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2",
                        "1.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, n = 0, ¬(k = 0) ⊢ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, n = 0 ⊢ ¬(k = 0) ⟶ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, n = 0 ⊢ index p (if k = 0 then 1 else 0) = k * index p 0"
                },
                {
                    "args": "exp_zero, index p (0 ^ k) = k * index p 0",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, n = 0 ⊢ index p (0 ^ k) = k * index p 0"
                },
                {
                    "args": "index p (n ^ k) = k * index p n",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, n = 0 ⊢ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ n = 0 ⟶ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(n = 0) ⟶ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "index_1, index p 1 = 0",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ index p 1 = 0"
                },
                {
                    "args": "nat_times_def_1, index p 1 = 0 * index p n",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0) ⊢ index p 1 = 0 * index p n"
                },
                {
                    "args": "nat_nat_power_def_1, index p (n ^ (0::nat)) = 0 * index p n",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0) ⊢ index p (n ^ (0::nat)) = 0 * index p n"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0) ⊢ ∀n1. index p (n ^ n1) = n1 * index p n ⟶ index p (n ^ Suc n1) = Suc n1 * index p n"
                },
                {
                    "args": "k, nat",
                    "id": "2.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "index p (n ^ k) = k * index p n",
                    "id": "2.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "index p (n ^ k) = k * index p n ⊢ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.4.2",
                    "prevs": [
                        "2.4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "index p (n ^ k) = k * index p n ⊢ k * index p n = index p (n ^ k)"
                },
                {
                    "args": "disjI1, {A: ¬(n = 0), B: ¬¬(k = 0)}",
                    "id": "2.4.3",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ ¬(n = 0) ∨ ¬¬(k = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(n = 0 ∧ ¬(k = 0))",
                    "id": "2.4.4",
                    "prevs": [
                        "2.4.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ ¬(n = 0 ∧ ¬(k = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(n ^ k = 0)",
                    "id": "2.4.5",
                    "prevs": [
                        "2.4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ ¬(n ^ k = 0)"
                },
                {
                    "args": "index_mul",
                    "id": "2.4.6",
                    "prevs": [
                        "0",
                        "2.4.5",
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n ^ k * n) = index p (n ^ k) + index p n"
                },
                {
                    "args": "mult_comm, index p (n * n ^ k) = index p (n ^ k) + index p n",
                    "id": "2.4.7",
                    "prevs": [
                        "2.4.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n * n ^ k) = index p (n ^ k) + index p n"
                },
                {
                    "args": "index p (n * n ^ k) = k * index p n + index p n",
                    "id": "2.4.8",
                    "prevs": [
                        "2.4.2",
                        "2.4.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n * n ^ k) = k * index p n + index p n"
                },
                {
                    "args": "mult_1_left, index p (n * n ^ k) = k * index p n + 1 * index p n",
                    "id": "2.4.9",
                    "prevs": [
                        "2.4.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n * n ^ k) = k * index p n + 1 * index p n"
                },
                {
                    "args": "distrib_r, index p (n * n ^ k) = (k + 1) * index p n",
                    "id": "2.4.10",
                    "prevs": [
                        "2.4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n * n ^ k) = (k + 1) * index p n"
                },
                {
                    "args": "add_1_right, index p (n * n ^ k) = Suc k * index p n",
                    "id": "2.4.11",
                    "prevs": [
                        "2.4.10"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n * n ^ k) = Suc k * index p n"
                },
                {
                    "args": "nat_nat_power_def_2, index p (n ^ Suc k) = Suc k * index p n",
                    "id": "2.4.12",
                    "prevs": [
                        "2.4.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), index p (n ^ k) = k * index p n ⊢ index p (n ^ Suc k) = Suc k * index p n"
                },
                {
                    "args": "",
                    "id": "2.4.13",
                    "prevs": [
                        "2.4.0",
                        "2.4.1",
                        "2.4.12"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0) ⊢ ∀k. index p (n ^ k) = k * index p n ⟶ index p (n ^ Suc k) = Suc k * index p n"
                },
                {
                    "args": "nat_induct, {P: λk. index p (n ^ k) = k * index p n, x: k}",
                    "id": "2.5",
                    "prevs": [
                        "2.3",
                        "2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(n = 0) ⊢ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.0",
                        "2.5"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(n = 0) ⟶ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ index p (n ^ k) = k * index p n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ index p (n ^ k) = k * index p n"
                }
            ],
            "prop": "prime p ⟶ index p (n ^ k) = k * index p n",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_zero"
                },
                {
                    "case": "k = 0",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_1"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_0"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_0"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "k"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_times_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_1"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_2"
                },
                {
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "distrib_r"
                },
                {
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "2.4.1"
                    ],
                    "goal_id": "2.4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.4.2"
                    ],
                    "goal_id": "2.4.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "index_mul"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "2.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_fact",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "∀i. 1 ≤ i ⟶ i ≤ 0 ⟶ index p i = 0",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀i. 1 ≤ i ⟶ i ≤ 0 ⟶ index p i = 0"
                },
                {
                    "args": "nsum_eq_0_iff_natseg, nsum ({1..0}) (λm. index p m) = 0",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ nsum ({1..0}) (λm. index p m) = 0"
                },
                {
                    "args": "eq_sym_eq, 0 = nsum ({1..0}) (λm. index p m)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ 0 = nsum ({1..0}) (λm. index p m)"
                },
                {
                    "args": "index_1, index p 1 = nsum ({1..0}) (λm. index p m)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ index p 1 = nsum ({1..0}) (λm. index p m)"
                },
                {
                    "args": "fact_def_1, index p (fact 0) = nsum ({1..0}) (λm. index p m)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ index p (fact 0) = nsum ({1..0}) (λm. index p m)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀n. index p (fact n) = nsum ({1..n}) (λm. index p m) ⟶ index p (fact (Suc n)) = nsum ({1..Suc n}) (λm. index p m)"
                },
                {
                    "args": "n, nat",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "index p (fact n) = nsum ({1..n}) (λm. index p m)",
                    "id": "6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (fact n) = nsum ({1..n}) (λm. index p m)"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: n}",
                    "id": "6.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc n)"
                },
                {
                    "args": "ineq_sym",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ ¬(Suc n = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ 1 ≤ Suc n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "6.5",
                    "prevs": [
                        "6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ nsum ({1..n}) (λm. index p m) = index p (fact n)"
                },
                {
                    "args": "fact_nz, {n: n}",
                    "id": "6.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact n = 0)"
                },
                {
                    "args": "index_mul",
                    "id": "6.7",
                    "prevs": [
                        "0",
                        "6.3",
                        "6.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (Suc n * fact n) = index p (Suc n) + index p (fact n)"
                },
                {
                    "args": "add_comm, index p (Suc n * fact n) = index p (fact n) + index p (Suc n)",
                    "id": "6.8",
                    "prevs": [
                        "6.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (Suc n * fact n) = index p (fact n) + index p (Suc n)"
                },
                {
                    "args": "index p (Suc n * fact n) = nsum ({1..n}) (λm. index p m) + index p (Suc n)",
                    "id": "6.9",
                    "prevs": [
                        "6.5",
                        "6.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (Suc n * fact n) = nsum ({1..n}) (λm. index p m) + index p (Suc n)"
                },
                {
                    "args": "if_P, index p (Suc n * fact n) = (if 1 ≤ Suc n then nsum ({1..n}) (λm. index p m) + index p (Suc n) else nsum ({1..n}) (λm. index p m))",
                    "id": "6.10",
                    "prevs": [
                        "6.9",
                        "6.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (Suc n * fact n) = (if 1 ≤ Suc n then nsum ({1..n}) (λm. index p m) + index p (Suc n) else nsum ({1..n}) (λm. index p m))"
                },
                {
                    "args": "nsum_Suc_natseg, index p (Suc n * fact n) = nsum ({1..Suc n}) (λm. index p m)",
                    "id": "6.11",
                    "prevs": [
                        "6.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (Suc n * fact n) = nsum ({1..Suc n}) (λm. index p m)"
                },
                {
                    "args": "fact_def_2, index p (fact (Suc n)) = nsum ({1..Suc n}) (λm. index p m)",
                    "id": "6.12",
                    "prevs": [
                        "6.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, index p (fact n) = nsum ({1..n}) (λm. index p m) ⊢ index p (fact (Suc n)) = nsum ({1..Suc n}) (λm. index p m)"
                },
                {
                    "args": "",
                    "id": "6.13",
                    "prevs": [
                        "6.0",
                        "6.1",
                        "6.12"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀n. index p (fact n) = nsum ({1..n}) (λm. index p m) ⟶ index p (fact (Suc n)) = nsum ({1..Suc n}) (λm. index p m)"
                },
                {
                    "args": "nat_induct, {P: λn. index p (fact n) = nsum ({1..n}) (λm. index p m), x: n}",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ index p (fact n) = nsum ({1..n}) (λm. index p m)"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ index p (fact n) = nsum ({1..n}) (λm. index p m)"
                }
            ],
            "prop": "prime p ⟶ index p (fact n) = nsum ({1..n}) (λm. index p m)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_eq_0_iff_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_2"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nsum_Suc_natseg"
                },
                {
                    "goal": "1 ≤ Suc n",
                    "goal_id": "6.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "6.2",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "fact_ids": [
                        "6.4"
                    ],
                    "goal_id": "6.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "6.1"
                    ],
                    "goal_id": "6.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "6.5"
                    ],
                    "goal_id": "6.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_comm"
                },
                {
                    "goal_id": "6.6",
                    "method_name": "apply_backward_step",
                    "theorem": "index_mul"
                },
                {
                    "goal_id": "6.6",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_nz"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "index_fact_alt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "index_fact, {n: n}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ index p (fact n) = nsum ({1..n}) (λm. index p m)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 0)"
                },
                {
                    "args": "prime_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 1)"
                },
                {
                    "args": "prime_ge_2",
                    "id": "5",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "¬(p ≤ 1)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "z3",
                    "th": "prime p ⊢ ¬(p ≤ 1)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀i. 1 ≤ i ⟶ i ≤ n ⟶ (if p ≤ 1 ∨ i = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) i})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) i then 1 else 0)"
                },
                {
                    "args": "m, nat",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "1 ≤ m",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ m ⊢ 1 ≤ m"
                },
                {
                    "args": "m ≤ n",
                    "id": "7.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n ⊢ m ≤ n"
                },
                {
                    "args": "¬(m = 0)",
                    "id": "7.3",
                    "prevs": [
                        "7.1"
                    ],
                    "rule": "z3",
                    "th": "1 ≤ m ⊢ ¬(m = 0)"
                },
                {
                    "args": "conjI",
                    "id": "7.4",
                    "prevs": [
                        "6",
                        "7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ ¬(p ≤ 1) ∧ ¬(m = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(p ≤ 1 ∨ m = 0)",
                    "id": "7.5",
                    "prevs": [
                        "7.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ ¬(p ≤ 1 ∨ m = 0)"
                },
                {
                    "args": "finite_indices, {P: λj::nat. 1 ≤ j, n: m, p: p}",
                    "id": "7.6",
                    "prevs": [
                        "5",
                        "7.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ finite ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})"
                },
                {
                    "args": "nsum_const, {c: (1::nat)}",
                    "id": "7.7",
                    "prevs": [
                        "7.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn. 1) = card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) * 1"
                },
                {
                    "args": "mult_1_right",
                    "id": "7.8",
                    "prevs": [
                        "7.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn. 1) = card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "7.9",
                    "prevs": [
                        "7.8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) = nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn. 1)"
                },
                {
                    "args": "nsum_restrict_set, {P: λj::nat. divides (p ^ j) m, f: λn1::nat. (1::nat), s: {j::nat. 1 ≤ j ∧ p ^ j ≤ n}}",
                    "id": "7.10",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ nsum ({x::nat. x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n} ∧ divides (p ^ x) m}) (λn1. 1) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. if divides (p ^ x) m then 1 else 0)"
                },
                {
                    "args": "member_collect",
                    "id": "7.11",
                    "prevs": [
                        "7.10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ nsum ({x::nat. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}) (λn1. 1) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. if divides (p ^ x) m then 1 else 0)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "7.12",
                    "prevs": [
                        "7.11"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. if divides (p ^ x) m then 1 else 0) = nsum ({x::nat. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}) (λn1. 1)"
                },
                {
                    "args": "",
                    "id": "7.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ ∀x::nat. x ∈ {j. 1 ≤ j ∧ divides (p ^ j) m} ⟷ x ∈ {x1. (1 ≤ x1 ∧ p ^ x1 ≤ n) ∧ divides (p ^ x1) m}"
                },
                {
                    "args": "j, nat",
                    "id": "7.13.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "",
                    "id": "7.13.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ 1 ≤ j ∧ divides (p ^ j) m ⟶ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m"
                },
                {
                    "args": "1 ≤ j ∧ divides (p ^ j) m",
                    "id": "7.13.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ j ∧ divides (p ^ j) m ⊢ 1 ≤ j ∧ divides (p ^ j) m"
                },
                {
                    "args": "conjD1",
                    "id": "7.13.1.1",
                    "prevs": [
                        "7.13.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ j ∧ divides (p ^ j) m ⊢ 1 ≤ j"
                },
                {
                    "args": "conjD2",
                    "id": "7.13.1.2",
                    "prevs": [
                        "7.13.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ j ∧ divides (p ^ j) m ⊢ divides (p ^ j) m"
                },
                {
                    "args": "divides_le",
                    "id": "7.13.1.3",
                    "prevs": [
                        "7.13.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ j ∧ divides (p ^ j) m ⊢ p ^ j ≤ m ∨ m = 0"
                },
                {
                    "args": "",
                    "id": "7.13.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ p ^ j ≤ m ⟶ p ^ j ≤ n"
                },
                {
                    "args": "p ^ j ≤ m",
                    "id": "7.13.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ j ≤ m ⊢ p ^ j ≤ m"
                },
                {
                    "args": "less_eq_trans",
                    "id": "7.13.1.4.1",
                    "prevs": [
                        "7.13.1.4.0",
                        "7.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m, p ^ j ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ p ^ j ≤ n"
                },
                {
                    "args": "",
                    "id": "7.13.1.4.2",
                    "prevs": [
                        "7.13.1.4.0",
                        "7.13.1.4.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ p ^ j ≤ m ⟶ p ^ j ≤ n"
                },
                {
                    "args": "",
                    "id": "7.13.1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ m = 0 ⟶ p ^ j ≤ n"
                },
                {
                    "args": "m = 0",
                    "id": "7.13.1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ⊢ m = 0"
                },
                {
                    "args": "negE_gen, {A: m = 0, C: p ^ j ≤ n}",
                    "id": "7.13.1.5.1",
                    "prevs": [
                        "7.3",
                        "7.13.1.5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m = 0, 1 ≤ m ⊢ p ^ j ≤ n"
                },
                {
                    "args": "",
                    "id": "7.13.1.5.2",
                    "prevs": [
                        "7.13.1.5.0",
                        "7.13.1.5.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ m = 0 ⟶ p ^ j ≤ n"
                },
                {
                    "args": "disjE",
                    "id": "7.13.1.6",
                    "prevs": [
                        "7.13.1.3",
                        "7.13.1.4",
                        "7.13.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ p ^ j ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "7.13.1.7",
                    "prevs": [
                        "7.13.1.1",
                        "7.13.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ 1 ≤ j ∧ p ^ j ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "7.13.1.8",
                    "prevs": [
                        "7.13.1.7",
                        "7.13.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m, 1 ≤ j ∧ divides (p ^ j) m ⊢ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m"
                },
                {
                    "args": "",
                    "id": "7.13.1.9",
                    "prevs": [
                        "7.13.1.0",
                        "7.13.1.8"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ 1 ≤ j ∧ divides (p ^ j) m ⟶ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m"
                },
                {
                    "args": "",
                    "id": "7.13.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⟶ 1 ≤ j ∧ divides (p ^ j) m"
                },
                {
                    "args": "(1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m",
                    "id": "7.13.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⊢ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m"
                },
                {
                    "args": "conjD1",
                    "id": "7.13.2.1",
                    "prevs": [
                        "7.13.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⊢ 1 ≤ j ∧ p ^ j ≤ n"
                },
                {
                    "args": "conjD2",
                    "id": "7.13.2.2",
                    "prevs": [
                        "7.13.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⊢ divides (p ^ j) m"
                },
                {
                    "args": "conjD1",
                    "id": "7.13.2.3",
                    "prevs": [
                        "7.13.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⊢ 1 ≤ j"
                },
                {
                    "args": "conjI",
                    "id": "7.13.2.4",
                    "prevs": [
                        "7.13.2.3",
                        "7.13.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m, (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⊢ 1 ≤ j ∧ divides (p ^ j) m"
                },
                {
                    "args": "",
                    "id": "7.13.2.5",
                    "prevs": [
                        "7.13.2.0",
                        "7.13.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m ⟶ 1 ≤ j ∧ divides (p ^ j) m"
                },
                {
                    "args": "iffI",
                    "id": "7.13.3",
                    "prevs": [
                        "7.13.1",
                        "7.13.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ 1 ≤ j ∧ divides (p ^ j) m ⟷ (1 ≤ j ∧ p ^ j ≤ n) ∧ divides (p ^ j) m"
                },
                {
                    "args": "member_collect, j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) m} ⟷ j ∈ {x. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}",
                    "id": "7.13.4",
                    "prevs": [
                        "7.13.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) m} ⟷ j ∈ {x. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}"
                },
                {
                    "args": "",
                    "id": "7.13.5",
                    "prevs": [
                        "7.13.0",
                        "7.13.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ ∀j::nat. j ∈ {j1. 1 ≤ j1 ∧ divides (p ^ j1) m} ⟷ j ∈ {x. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}"
                },
                {
                    "args": "member_ext",
                    "id": "7.14",
                    "prevs": [
                        "7.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ {j::nat. 1 ≤ j ∧ divides (p ^ j) m} = {x. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}"
                },
                {
                    "args": "nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn1. 1) = nsum ({x::nat. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}) (λn1. 1)",
                    "id": "7.15",
                    "prevs": [
                        "7.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn1. 1) = nsum ({x::nat. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}) (λn1. 1)"
                },
                {
                    "args": "nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn1. 1) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)",
                    "id": "7.16",
                    "prevs": [
                        "7.12",
                        "7.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ nsum ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) (λn1. 1) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. if divides (p ^ x) m then 1 else 0)"
                },
                {
                    "args": "card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)",
                    "id": "7.17",
                    "prevs": [
                        "7.9",
                        "7.16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m}) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)"
                },
                {
                    "args": "if_not_P, (if p ≤ 1 ∨ m = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)",
                    "id": "7.18",
                    "prevs": [
                        "7.17",
                        "7.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, m ≤ n, 1 ≤ m ⊢ (if p ≤ 1 ∨ m = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)"
                },
                {
                    "args": "",
                    "id": "7.19",
                    "prevs": [
                        "7.0",
                        "7.1",
                        "7.2",
                        "7.18"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀m. 1 ≤ m ⟶ m ≤ n ⟶ (if p ≤ 1 ∨ m = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) m then 1 else 0)"
                },
                {
                    "args": "nsum_eq_natseg",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ nsum ({1..n}) (λi. if p ≤ 1 ∨ i = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) i})) = nsum ({1..n}) (λi. nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) i then 1 else 0))"
                },
                {
                    "args": "nsum_swap, {f: λj::nat. λi. if divides (p ^ j) i then (1::nat) else 0, s: {j::nat. 1 ≤ j ∧ p ^ j ≤ n}, t: {1..n}}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) ⟶ finite ({1..n}) ⟶ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λi. nsum ({1..n}) (λi1. if divides (p ^ i) i1 then 1 else 0)) = nsum ({1..n}) (λj. nsum ({j1::nat. 1 ≤ j1 ∧ p ^ j1 ≤ n}) (λi. if divides (p ^ i) j then 1 else 0))"
                },
                {
                    "args": "finite_exp_le, {P: λj::nat. 1 ≤ j, n: n, p: p}",
                    "id": "10",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ finite ({j::nat. 1 ≤ j ∧ p ^ j ≤ n})"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "9",
                        "10"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ⊢ finite ({1..n}) ⟶ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λi. nsum ({1..n}) (λi1. if divides (p ^ i) i1 then 1 else 0)) = nsum ({1..n}) (λj. nsum ({j1::nat. 1 ≤ j1 ∧ p ^ j1 ≤ n}) (λi. if divides (p ^ i) j then 1 else 0))"
                },
                {
                    "args": "finite_natseg, {m: (1::nat), n: n}",
                    "id": "12",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({1..n})"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "11",
                        "12"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ⊢ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λi. nsum ({1..n}) (λi1. if divides (p ^ i) i1 then 1 else 0)) = nsum ({1..n}) (λj. nsum ({j1::nat. 1 ≤ j1 ∧ p ^ j1 ≤ n}) (λi. if divides (p ^ i) j then 1 else 0))"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ nsum ({1..n}) (λj. nsum ({j1::nat. 1 ≤ j1 ∧ p ^ j1 ≤ n}) (λi. if divides (p ^ i) j then 1 else 0)) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λi. nsum ({1..n}) (λi1. if divides (p ^ i) i1 then 1 else 0))"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀x::nat. x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n} ⟶ nsum ({1..n}) (λi. if divides (p ^ x) i then 1 else 0) = n DIV p ^ x"
                },
                {
                    "args": "j, nat",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR j"
                },
                {
                    "args": "j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}",
                    "id": "15.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}"
                },
                {
                    "args": "member_collect",
                    "id": "15.2",
                    "prevs": [
                        "15.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ 1 ≤ j ∧ p ^ j ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "15.3",
                    "prevs": [
                        "15.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ 1 ≤ j"
                },
                {
                    "args": "conjD2",
                    "id": "15.4",
                    "prevs": [
                        "15.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ p ^ j ≤ n"
                },
                {
                    "args": "finite_restrict, {P: divides (p ^ j), s: {1..n}}",
                    "id": "15.5",
                    "prevs": [
                        "12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ finite ({x. x ∈ {1..n} ∧ divides (p ^ j) x})"
                },
                {
                    "args": "nsum_const, {c: (1::nat)}",
                    "id": "15.6",
                    "prevs": [
                        "15.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ nsum ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) (λn1. 1) = card ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) * 1"
                },
                {
                    "args": "mult_1_right",
                    "id": "15.7",
                    "prevs": [
                        "15.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ nsum ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) (λn1. 1) = card ({x. x ∈ {1..n} ∧ divides (p ^ j) x})"
                },
                {
                    "args": "",
                    "id": "15.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ ∀x. x ∈ {x1. x1 ∈ {1..n} ∧ divides (p ^ j) x1} ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})"
                },
                {
                    "args": "x, nat",
                    "id": "15.8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "",
                    "id": "15.8.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⟶ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j)"
                },
                {
                    "args": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k)",
                    "id": "15.8.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k)"
                },
                {
                    "args": "conjD1",
                    "id": "15.8.1.1",
                    "prevs": [
                        "15.8.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ 1 ≤ x ∧ x ≤ n"
                },
                {
                    "args": "conjD2",
                    "id": "15.8.1.2",
                    "prevs": [
                        "15.8.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ∃k. x = p ^ j * k"
                },
                {
                    "args": "d, nat",
                    "id": "15.8.1.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "x = p ^ j * d",
                    "id": "15.8.1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = p ^ j * d ⊢ x = p ^ j * d"
                },
                {
                    "args": "conjD1",
                    "id": "15.8.1.5",
                    "prevs": [
                        "15.8.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ 1 ≤ x"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "15.8.1.6",
                    "prevs": [
                        "15.8.1.5"
                    ],
                    "rule": "z3",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(x = 0)"
                },
                {
                    "args": "",
                    "id": "15.8.1.7",
                    "prevs": [
                        "15.8.1.4",
                        "15.8.1.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(p ^ j * d = 0)"
                },
                {
                    "args": "mult_eq_0",
                    "id": "15.8.1.8",
                    "prevs": [
                        "15.8.1.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(p ^ j = 0 ∨ d = 0)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "15.8.1.9",
                    "prevs": [
                        "15.8.1.8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(p ^ j = 0) ∧ ¬(d = 0)"
                },
                {
                    "args": "conjD2",
                    "id": "15.8.1.10",
                    "prevs": [
                        "15.8.1.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(d = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "15.8.1.11",
                    "prevs": [
                        "15.8.1.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ 1 ≤ d"
                },
                {
                    "args": "conjD1",
                    "id": "15.8.1.12",
                    "prevs": [
                        "15.8.1.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ¬(p ^ j = 0)"
                },
                {
                    "args": "le_rdiv_eq, {b: n, n: d}",
                    "id": "15.8.1.13",
                    "prevs": [
                        "15.8.1.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x = p ^ j * d, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ d ≤ n DIV p ^ j ⟷ p ^ j * d ≤ n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "15.8.1.14",
                    "prevs": [
                        "15.8.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x = p ^ j * d ⊢ p ^ j * d = x"
                },
                {
                    "args": "conjD2",
                    "id": "15.8.1.15",
                    "prevs": [
                        "15.8.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "(1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ x ≤ n"
                },
                {
                    "args": "p ^ j * d ≤ n",
                    "id": "15.8.1.16",
                    "prevs": [
                        "15.8.1.14",
                        "15.8.1.15"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ p ^ j * d ≤ n"
                },
                {
                    "args": "d ≤ n DIV p ^ j",
                    "id": "15.8.1.17",
                    "prevs": [
                        "15.8.1.13",
                        "15.8.1.16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ d ≤ n DIV p ^ j"
                },
                {
                    "args": "conjI",
                    "id": "15.8.1.18",
                    "prevs": [
                        "15.8.1.11",
                        "15.8.1.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ 1 ≤ d ∧ d ≤ n DIV p ^ j"
                },
                {
                    "args": "conjI",
                    "id": "15.8.1.19",
                    "prevs": [
                        "15.8.1.4",
                        "15.8.1.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j"
                },
                {
                    "args": "exI, {P: λx1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j, a: d}",
                    "id": "15.8.1.20",
                    "prevs": [
                        "15.8.1.19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, x = p ^ j * d, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⊢ ∃a1. x = p ^ j * a1 ∧ 1 ≤ a1 ∧ a1 ≤ n DIV p ^ j"
                },
                {
                    "args": "∃k. x = p ^ j * k",
                    "id": "15.8.1.21",
                    "prevs": [
                        "15.8.1.0",
                        "15.8.1.2",
                        "15.8.1.3",
                        "15.8.1.4",
                        "15.8.1.20"
                    ],
                    "rule": "intros",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⟶ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "15.8.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j) ⟶ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k)"
                },
                {
                    "args": "∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j",
                    "id": "15.8.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j"
                },
                {
                    "args": "d, nat",
                    "id": "15.8.2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j",
                    "id": "15.8.2.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "15.8.2.3",
                    "prevs": [
                        "15.8.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ x = p ^ j * d"
                },
                {
                    "args": "conjD2",
                    "id": "15.8.2.4",
                    "prevs": [
                        "15.8.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ 1 ≤ d ∧ d ≤ n DIV p ^ j"
                },
                {
                    "args": "conjD1",
                    "id": "15.8.2.5",
                    "prevs": [
                        "15.8.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ 1 ≤ d"
                },
                {
                    "args": "conjD2",
                    "id": "15.8.2.6",
                    "prevs": [
                        "15.8.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ d ≤ n DIV p ^ j"
                },
                {
                    "args": "disjI1, {A: ¬(p = 0), B: ¬¬(j = 0)}",
                    "id": "15.8.2.7",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p = 0) ∨ ¬¬(j = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(p = 0 ∧ ¬(j = 0))",
                    "id": "15.8.2.8",
                    "prevs": [
                        "15.8.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p = 0 ∧ ¬(j = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(p ^ j = 0)",
                    "id": "15.8.2.9",
                    "prevs": [
                        "15.8.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p ^ j = 0)"
                },
                {
                    "args": "¬(d = 0)",
                    "id": "15.8.2.10",
                    "prevs": [
                        "15.8.2.5"
                    ],
                    "rule": "z3",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ ¬(d = 0)"
                },
                {
                    "args": "conjI",
                    "id": "15.8.2.11",
                    "prevs": [
                        "15.8.2.9",
                        "15.8.2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p ^ j = 0) ∧ ¬(d = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬(p ^ j = 0 ∨ d = 0)",
                    "id": "15.8.2.12",
                    "prevs": [
                        "15.8.2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p ^ j = 0 ∨ d = 0)"
                },
                {
                    "args": "mult_eq_0, ¬(p ^ j * d = 0)",
                    "id": "15.8.2.13",
                    "prevs": [
                        "15.8.2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(p ^ j * d = 0)"
                },
                {
                    "args": "¬(x = 0)",
                    "id": "15.8.2.14",
                    "prevs": [
                        "15.8.2.3",
                        "15.8.2.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ ¬(x = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "15.8.2.15",
                    "prevs": [
                        "15.8.2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ 1 ≤ x"
                },
                {
                    "args": "le_rdiv_eq, {b: n, n: d}",
                    "id": "15.8.2.16",
                    "prevs": [
                        "15.8.2.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ d ≤ n DIV p ^ j ⟷ p ^ j * d ≤ n"
                },
                {
                    "args": "",
                    "id": "15.8.2.17",
                    "prevs": [
                        "15.8.2.16",
                        "15.8.2.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ p ^ j * d ≤ n"
                },
                {
                    "args": "x ≤ n",
                    "id": "15.8.2.18",
                    "prevs": [
                        "15.8.2.3",
                        "15.8.2.17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ x ≤ n"
                },
                {
                    "args": "conjI",
                    "id": "15.8.2.19",
                    "prevs": [
                        "15.8.2.15",
                        "15.8.2.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ 1 ≤ x ∧ x ≤ n"
                },
                {
                    "args": "exI, {P: λa1. x = p ^ j * a1, a: d}",
                    "id": "15.8.2.20",
                    "prevs": [
                        "15.8.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j ⊢ ∃a1. x = p ^ j * a1"
                },
                {
                    "args": "conjI",
                    "id": "15.8.2.21",
                    "prevs": [
                        "15.8.2.19",
                        "15.8.2.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n}, x = p ^ j * d ∧ 1 ≤ d ∧ d ≤ n DIV p ^ j, ∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j ⊢ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k)"
                },
                {
                    "args": "∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j",
                    "id": "15.8.2.22",
                    "prevs": [
                        "15.8.2.0",
                        "15.8.2.0",
                        "15.8.2.1",
                        "15.8.2.2",
                        "15.8.2.21"
                    ],
                    "rule": "intros",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j) ⟶ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k)"
                },
                {
                    "args": "iffI",
                    "id": "15.8.3",
                    "prevs": [
                        "15.8.1",
                        "15.8.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (1 ≤ x ∧ x ≤ n) ∧ (∃k. x = p ^ j * k) ⟷ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j)"
                },
                {
                    "args": "divides_def, (1 ≤ x ∧ x ≤ n) ∧ divides (p ^ j) x ⟷ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j)",
                    "id": "15.8.4",
                    "prevs": [
                        "15.8.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ (1 ≤ x ∧ x ≤ n) ∧ divides (p ^ j) x ⟷ (∃x1. x = p ^ j * x1 ∧ 1 ≤ x1 ∧ x1 ≤ n DIV p ^ j)"
                },
                {
                    "args": "member_natseg, x ∈ {1..n} ∧ divides (p ^ j) x ⟷ (∃x1. x = p ^ j * x1 ∧ x1 ∈ {1..n DIV p ^ j})",
                    "id": "15.8.5",
                    "prevs": [
                        "15.8.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ x ∈ {1..n} ∧ divides (p ^ j) x ⟷ (∃x1. x = p ^ j * x1 ∧ x1 ∈ {1..n DIV p ^ j})"
                },
                {
                    "args": "in_image, x ∈ {1..n} ∧ divides (p ^ j) x ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})",
                    "id": "15.8.6",
                    "prevs": [
                        "15.8.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ x ∈ {1..n} ∧ divides (p ^ j) x ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})"
                },
                {
                    "args": "member_collect, x ∈ {x1. x1 ∈ {1..n} ∧ divides (p ^ j) x1} ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})",
                    "id": "15.8.7",
                    "prevs": [
                        "15.8.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ x ∈ {x1. x1 ∈ {1..n} ∧ divides (p ^ j) x1} ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})"
                },
                {
                    "args": "",
                    "id": "15.8.8",
                    "prevs": [
                        "15.8.0",
                        "15.8.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ ∀x. x ∈ {x1. x1 ∈ {1..n} ∧ divides (p ^ j) x1} ⟷ x ∈ image (λq. p ^ j * q) ({1..n DIV p ^ j})"
                },
                {
                    "args": "member_ext",
                    "id": "15.9",
                    "prevs": [
                        "15.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ {x. x ∈ {1..n} ∧ divides (p ^ j) x} = image (λq. p ^ j * q) ({1..n DIV p ^ j})"
                },
                {
                    "args": "",
                    "id": "15.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ ∀x. ∀y. x ∈ {1..n DIV p ^ j} ⟶ y ∈ {1..n DIV p ^ j} ⟶ p ^ j * x = p ^ j * y ⟶ x = y"
                },
                {
                    "args": "x, nat",
                    "id": "15.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, nat",
                    "id": "15.10.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "x ∈ {1..n DIV p ^ j}",
                    "id": "15.10.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {1..n DIV p ^ j} ⊢ x ∈ {1..n DIV p ^ j}"
                },
                {
                    "args": "y ∈ {1..n DIV p ^ j}",
                    "id": "15.10.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ {1..n DIV p ^ j} ⊢ y ∈ {1..n DIV p ^ j}"
                },
                {
                    "args": "p ^ j * x = p ^ j * y",
                    "id": "15.10.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ j * x = p ^ j * y ⊢ p ^ j * x = p ^ j * y"
                },
                {
                    "args": "eq_mult_lcancel",
                    "id": "15.10.5",
                    "prevs": [
                        "15.10.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ j * x = p ^ j * y ⊢ p ^ j = 0 ∨ x = y"
                },
                {
                    "args": "",
                    "id": "15.10.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x ∈ {1..n DIV p ^ j}, y ∈ {1..n DIV p ^ j}, p ^ j * x = p ^ j * y, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ p ^ j = 0 ⟶ x = y"
                },
                {
                    "args": "p ^ j = 0",
                    "id": "15.10.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ j = 0 ⊢ p ^ j = 0"
                },
                {
                    "args": "exp_eq_0",
                    "id": "15.10.6.1",
                    "prevs": [
                        "15.10.6.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ j = 0 ⊢ p = 0 ∧ ¬(j = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "15.10.6.2",
                    "prevs": [
                        "15.10.6.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ^ j = 0 ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: x = y}",
                    "id": "15.10.6.3",
                    "prevs": [
                        "2",
                        "15.10.6.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p ^ j = 0 ⊢ x = y"
                },
                {
                    "args": "",
                    "id": "15.10.6.4",
                    "prevs": [
                        "15.10.6.0",
                        "15.10.6.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, x ∈ {1..n DIV p ^ j}, y ∈ {1..n DIV p ^ j}, p ^ j * x = p ^ j * y, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ p ^ j = 0 ⟶ x = y"
                },
                {
                    "args": "x = y ⟶ x = y",
                    "id": "15.10.7",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ x = y ⟶ x = y"
                },
                {
                    "args": "disjE",
                    "id": "15.10.8",
                    "prevs": [
                        "15.10.5",
                        "15.10.6",
                        "15.10.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x ∈ {1..n DIV p ^ j}, y ∈ {1..n DIV p ^ j}, p ^ j * x = p ^ j * y, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ x = y"
                },
                {
                    "args": "",
                    "id": "15.10.9",
                    "prevs": [
                        "15.10.0",
                        "15.10.1",
                        "15.10.2",
                        "15.10.3",
                        "15.10.4",
                        "15.10.8"
                    ],
                    "rule": "intros",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ ∀x. ∀y. x ∈ {1..n DIV p ^ j} ⟶ y ∈ {1..n DIV p ^ j} ⟶ p ^ j * x = p ^ j * y ⟶ x = y"
                },
                {
                    "args": "finite_natseg, {m: (1::nat), n: n DIV p ^ j}",
                    "id": "15.11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({1..n DIV p ^ j})"
                },
                {
                    "args": "card_image_inj",
                    "id": "15.12",
                    "prevs": [
                        "15.10",
                        "15.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ card (image (λx. p ^ j * x) ({1..n DIV p ^ j})) = card ({1..n DIV p ^ j})"
                },
                {
                    "args": "card_natseg_1",
                    "id": "15.13",
                    "prevs": [
                        "15.12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ card (image (λx. p ^ j * x) ({1..n DIV p ^ j})) = n DIV p ^ j"
                },
                {
                    "args": "card ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) = n DIV p ^ j",
                    "id": "15.14",
                    "prevs": [
                        "15.9",
                        "15.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ card ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) = n DIV p ^ j"
                },
                {
                    "args": "nsum ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) (λx. 1) = n DIV p ^ j",
                    "id": "15.15",
                    "prevs": [
                        "15.7",
                        "15.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ nsum ({x. x ∈ {1..n} ∧ divides (p ^ j) x}) (λn1. 1) = n DIV p ^ j"
                },
                {
                    "args": "nsum_restrict_set, nsum ({1..n}) (λi. if divides (p ^ j) i then 1 else 0) = n DIV p ^ j",
                    "id": "15.16",
                    "prevs": [
                        "15.15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "prime p, j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⊢ nsum ({1..n}) (λi. if divides (p ^ j) i then 1 else 0) = n DIV p ^ j"
                },
                {
                    "args": "",
                    "id": "15.17",
                    "prevs": [
                        "15.0",
                        "15.1",
                        "15.16"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀j::nat. j ∈ {j1. 1 ≤ j1 ∧ p ^ j1 ≤ n} ⟶ nsum ({1..n}) (λi. if divides (p ^ j) i then 1 else 0) = n DIV p ^ j"
                },
                {
                    "args": "nsum_eq",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. nsum ({1..n}) (λi. if divides (p ^ x) i then 1 else 0)) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. n DIV p ^ x)"
                },
                {
                    "args": "nsum ({1..n}) (λi. nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. if divides (p ^ j) i then 1 else 0)) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "17",
                    "prevs": [
                        "14",
                        "16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p ⊢ nsum ({1..n}) (λj. nsum ({j1::nat. 1 ≤ j1 ∧ p ^ j1 ≤ n}) (λi. if divides (p ^ i) j then 1 else 0)) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "nsum ({1..n}) (λm. if p ≤ 1 ∨ m = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "18",
                    "prevs": [
                        "8",
                        "17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p ⊢ nsum ({1..n}) (λi. if p ≤ 1 ∨ i = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) i})) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "index_def, nsum ({1..n}) (λm. index p m) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "19",
                    "prevs": [
                        "18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ nsum ({1..n}) (λm. index p m) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "20",
                    "prevs": [
                        "1",
                        "19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p ⊢ index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "21",
                    "prevs": [
                        "0",
                        "20"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "index_fact"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "~(p = 0)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "goal": "~(p = 1)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal": "2 <= p",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "goal": "~(p <= 1)",
                    "goal_id": "6",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "goal": "nsum ({1..n}) (λm. if p ≤ 1 ∨ m = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) m})) = nsum({1..n}) (%m. nsum {j::nat. 1 <= j & p ^ j <= n}\n                         (%j. if divides (p ^ j) m then 1 else 0))",
                    "goal_id": "7",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq_natseg"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "goal": "~(p ≤ 1 ∨ m = 0)",
                    "goal_id": "7.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "7.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "7.1"
                    ],
                    "goal_id": "7.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "7.5"
                    ],
                    "goal_id": "7.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal": "finite {j::nat. 1 ≤ j ∧ divides (p ^ j) m}",
                    "goal_id": "7.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.6",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_indices"
                },
                {
                    "fact_ids": [
                        "7.6"
                    ],
                    "goal_id": "7.7",
                    "method_name": "apply_forward_step",
                    "param_c": "(1::nat)",
                    "theorem": "nsum_const"
                },
                {
                    "fact_ids": [
                        "7.7"
                    ],
                    "goal_id": "7.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "7.8"
                    ],
                    "goal_id": "7.9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "7.9"
                    ],
                    "goal_id": "7.10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7.10",
                    "method_name": "apply_forward_step",
                    "param_P": "(%j::nat. divides (p ^ j) m)",
                    "param_f": "(λn1::nat. (1::nat))",
                    "param_s": "{j::nat. 1 ≤ j ∧ p ^ j ≤ n}",
                    "theorem": "nsum_restrict_set"
                },
                {
                    "fact_ids": [
                        "7.10"
                    ],
                    "goal_id": "7.11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "7.11"
                    ],
                    "goal_id": "7.12",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "7.12"
                    ],
                    "goal_id": "7.13",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "{j::nat. 1 ≤ j ∧ divides (p ^ j) m} = {x::nat. (1 ≤ x ∧ p ^ x ≤ n) ∧ divides (p ^ x) m}",
                    "goal_id": "7.13",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.13",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "7.13",
                    "method_name": "introduction",
                    "names": "j"
                },
                {
                    "goal_id": "7.13.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "7.13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "7.13.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "7.13.1.0"
                    ],
                    "goal_id": "7.13.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "7.13.1.0"
                    ],
                    "goal_id": "7.13.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "7.13.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "7.13.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "7.13.1.2"
                    ],
                    "goal_id": "7.13.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "7.13.1.3"
                    ],
                    "goal_id": "7.13.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "7.13.1.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "7.13.1.4.1",
                    "method_name": "apply_backward_step",
                    "param_m": "m",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "7.13.1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "7.3",
                        "7.13.1.5.0"
                    ],
                    "goal_id": "7.13.1.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "7.13.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "7.13.2.0"
                    ],
                    "goal_id": "7.13.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "7.13.2.0"
                    ],
                    "goal_id": "7.13.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "7.13.2.1"
                    ],
                    "goal_id": "7.13.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "7.13.2.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "7.14"
                    ],
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "param_f": "(λj::nat. %i. if divides (p ^ j) i then (1::nat) else 0)",
                    "param_s": "{j::nat. 1 ≤ j ∧ p ^ j ≤ n}",
                    "param_t": "{1..n}",
                    "theorem": "nsum_swap"
                },
                {
                    "goal": "finite ({j::nat. 1 ≤ j ∧ p ^ j ≤ n})",
                    "goal_id": "10",
                    "method_name": "cut"
                },
                {
                    "goal_id": "10",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_exp_le"
                },
                {
                    "fact_ids": [
                        "9",
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "finite ({1..n})",
                    "goal_id": "12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "12",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "11",
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_eq"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction",
                    "names": "j"
                },
                {
                    "fact_ids": [
                        "15.1"
                    ],
                    "goal_id": "15.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "15.2"
                    ],
                    "goal_id": "15.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "15.2"
                    ],
                    "goal_id": "15.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "15.5",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nsum_restrict_set"
                },
                {
                    "goal": "finite {x. x ∈ {1..n} ∧ divides (p ^ j) x}",
                    "goal_id": "15.5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.5",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_restrict"
                },
                {
                    "fact_ids": [
                        "15.5"
                    ],
                    "goal_id": "15.6",
                    "method_name": "apply_forward_step",
                    "param_c": "(1::nat)",
                    "theorem": "nsum_const"
                },
                {
                    "fact_ids": [
                        "15.6"
                    ],
                    "goal_id": "15.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "15.7"
                    ],
                    "goal_id": "15.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "{x. x ∈ {1..n} ∧ divides (p ^ j) x} =\n                  image (%q. (p ^ j) * q) ({1..(n DIV (p ^ j))})",
                    "goal_id": "15.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.8",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "15.8",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "15.8.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.8.1.0"
                    ],
                    "goal_id": "15.8.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "15.8.1.0"
                    ],
                    "goal_id": "15.8.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "15.8.1.2"
                    ],
                    "goal_id": "15.8.1.3",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "goal_id": "15.8.1.5",
                    "method_name": "inst_exists_goal",
                    "s": "d"
                },
                {
                    "goal_id": "15.8.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.8.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.8.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "15.8.1.1"
                    ],
                    "goal_id": "15.8.1.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal": "~(x=0)",
                    "goal_id": "15.8.1.6",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "15.8.1.5"
                    ],
                    "goal_id": "15.8.1.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "15.8.1.4",
                        "15.8.1.6"
                    ],
                    "goal_id": "15.8.1.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "15.8.1.7"
                    ],
                    "goal_id": "15.8.1.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "fact_ids": [
                        "15.8.1.8"
                    ],
                    "goal_id": "15.8.1.9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "15.8.1.9"
                    ],
                    "goal_id": "15.8.1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "15.8.1.9"
                    ],
                    "goal_id": "15.8.1.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "15.8.1.12"
                    ],
                    "goal_id": "15.8.1.13",
                    "method_name": "apply_forward_step",
                    "param_b": "n",
                    "param_n": "d",
                    "theorem": "le_rdiv_eq"
                },
                {
                    "fact_ids": [
                        "15.8.1.13"
                    ],
                    "goal_id": "15.8.1.14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "15.8.1.4"
                    ],
                    "goal_id": "15.8.1.14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "15.8.1.14"
                    ],
                    "goal_id": "15.8.1.15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "15.8.1.1"
                    ],
                    "goal_id": "15.8.1.15",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "15.8.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.8.2.0"
                    ],
                    "goal_id": "15.8.2.1",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "15.8.2.2"
                    ],
                    "goal_id": "15.8.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "15.8.2.2"
                    ],
                    "goal_id": "15.8.2.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "15.8.2.4"
                    ],
                    "goal_id": "15.8.2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "15.8.2.4"
                    ],
                    "goal_id": "15.8.2.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "15.8.2.3"
                    ],
                    "goal_id": "15.8.2.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "15.8.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "15.8.2.5"
                    ],
                    "goal_id": "15.8.2.10",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "15.8.2.9"
                    ],
                    "goal_id": "15.8.2.16",
                    "method_name": "apply_forward_step",
                    "param_b": "n",
                    "param_n": "d",
                    "theorem": "le_rdiv_eq"
                },
                {
                    "fact_ids": [
                        "15.8.2.16",
                        "15.8.2.6"
                    ],
                    "goal_id": "15.8.2.17",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "15.8.2.3"
                    ],
                    "goal_id": "15.8.2.18",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "15.8.2.3"
                    ],
                    "goal_id": "15.8.2.20",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                },
                {
                    "fact_ids": [
                        "15.9"
                    ],
                    "goal_id": "15.10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "card (image (λq. p ^ j * q) ({1..n DIV p ^ j})) = card ({1..n DIV p ^ j})",
                    "goal_id": "15.10",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.10",
                    "method_name": "apply_backward_step",
                    "theorem": "card_image_inj"
                },
                {
                    "goal_id": "15.10",
                    "method_name": "introduction",
                    "names": "x,y"
                },
                {
                    "fact_ids": [
                        "15.10.4"
                    ],
                    "goal_id": "15.10.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_lcancel"
                },
                {
                    "fact_ids": [
                        "15.10.5"
                    ],
                    "goal_id": "15.10.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "15.10.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.10.6.0"
                    ],
                    "goal_id": "15.10.6.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "fact_ids": [
                        "15.10.6.1"
                    ],
                    "goal_id": "15.10.6.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2",
                        "15.10.6.2"
                    ],
                    "goal_id": "15.10.6.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "15.11",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "fact_ids": [
                        "15.12"
                    ],
                    "goal_id": "15.13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "card_natseg_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_fact_unbounded",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "index_fact_alt, {n: n}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀x::nat. 1 ≤ x ∧ p ^ x ≤ n ⟶ 1 ≤ x"
                },
                {
                    "args": "x, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "1 ≤ x ∧ p ^ x ≤ n",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ x ∧ p ^ x ≤ n ⊢ 1 ≤ x ∧ p ^ x ≤ n"
                },
                {
                    "args": "conjD1",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ x ∧ p ^ x ≤ n ⊢ 1 ≤ x"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀x::nat. 1 ≤ x ∧ p ^ x ≤ n ⟶ 1 ≤ x"
                },
                {
                    "args": "member_collect, ∀x::nat. x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n} ⟶ x ∈ {j. 1 ≤ j}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ ∀x::nat. x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n} ⟶ x ∈ {j. 1 ≤ j}"
                },
                {
                    "args": "subsetI",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ {j::nat. 1 ≤ j ∧ p ^ j ≤ n} ⊆ {j. 1 ≤ j}"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ∀x::nat. x ∈ {j. 1 ≤ j} ⟶ ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "x, nat",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {j. 1 ≤ j}",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {j. 1 ≤ j} ⊢ x ∈ {j. 1 ≤ j}"
                },
                {
                    "args": "¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n})",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n})"
                },
                {
                    "args": "member_collect",
                    "id": "5.3",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ {j. 1 ≤ j} ⊢ 1 ≤ x"
                },
                {
                    "args": "member_collect",
                    "id": "5.4",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(1 ≤ x ∧ p ^ x ≤ n)"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(1 ≤ x) ∨ ¬(p ^ x ≤ n)"
                },
                {
                    "args": "",
                    "id": "5.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(1 ≤ x) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "¬(1 ≤ x)",
                    "id": "5.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(1 ≤ x) ⊢ ¬(1 ≤ x)"
                },
                {
                    "args": "negE_gen, {A: 1 ≤ x, C: n DIV p ^ x = 0}",
                    "id": "5.6.1",
                    "prevs": [
                        "5.6.0",
                        "5.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(1 ≤ x), x ∈ {j. 1 ≤ j} ⊢ n DIV p ^ x = 0"
                },
                {
                    "args": "",
                    "id": "5.6.2",
                    "prevs": [
                        "5.6.0",
                        "5.6.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(1 ≤ x) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "",
                    "id": "5.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p ^ x ≤ n) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "¬(p ^ x ≤ n)",
                    "id": "5.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ^ x ≤ n) ⊢ ¬(p ^ x ≤ n)"
                },
                {
                    "args": "prime_imp_nz",
                    "id": "5.7.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p = 0)"
                },
                {
                    "args": "disjI1, {A: ¬(p = 0), B: ¬¬(x = 0)}",
                    "id": "5.7.2",
                    "prevs": [
                        "5.7.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p = 0) ∨ ¬¬(x = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(p = 0 ∧ ¬(x = 0))",
                    "id": "5.7.3",
                    "prevs": [
                        "5.7.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p = 0 ∧ ¬(x = 0))"
                },
                {
                    "args": "exp_eq_0, ¬(p ^ x = 0)",
                    "id": "5.7.4",
                    "prevs": [
                        "5.7.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p ^ x = 0)"
                },
                {
                    "args": "div_eq_0, {m: n}",
                    "id": "5.7.5",
                    "prevs": [
                        "5.7.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ n DIV p ^ x = 0 ⟷ n < p ^ x"
                },
                {
                    "args": "not_le",
                    "id": "5.7.6",
                    "prevs": [
                        "5.7.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ^ x ≤ n) ⊢ n < p ^ x"
                },
                {
                    "args": "n DIV p ^ x = 0",
                    "id": "5.7.7",
                    "prevs": [
                        "5.7.5",
                        "5.7.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(p ^ x ≤ n), x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ n DIV p ^ x = 0"
                },
                {
                    "args": "",
                    "id": "5.7.8",
                    "prevs": [
                        "5.7.0",
                        "5.7.7"
                    ],
                    "rule": "intros",
                    "th": "prime p, x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ ¬(p ^ x ≤ n) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "disjE",
                    "id": "5.8",
                    "prevs": [
                        "5.5",
                        "5.6",
                        "5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, x ∈ {j. 1 ≤ j}, ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⊢ n DIV p ^ x = 0"
                },
                {
                    "args": "",
                    "id": "5.9",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2",
                        "5.8"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ∀x::nat. x ∈ {j. 1 ≤ j} ⟶ ¬(x ∈ {j. 1 ≤ j ∧ p ^ j ≤ n}) ⟶ n DIV p ^ x = 0"
                },
                {
                    "args": "nsum_superset",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ nsum ({j::nat. 1 ≤ j}) (λx. n DIV p ^ x) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λx. n DIV p ^ x)"
                },
                {
                    "args": "eq_sym_eq, nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "index p (fact n) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)",
                    "id": "8",
                    "prevs": [
                        "1",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p ⊢ index p (fact n) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ index p (fact n) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)"
                }
            ],
            "prop": "prime p ⟶ index p (fact n) = nsum ({j::nat. 1 ≤ j}) (λj. n DIV p ^ j)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "index_fact_alt"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "nsum_superset"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.2"
                    ],
                    "goal_id": "5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "5.5"
                    ],
                    "goal_id": "5.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.6.0",
                        "5.3"
                    ],
                    "goal_id": "5.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5.7",
                    "method_name": "introduction"
                },
                {
                    "goal": "¬(p ^ x = 0)",
                    "goal_id": "5.7.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.7.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_0"
                },
                {
                    "goal_id": "5.7.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "5.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "5.7.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_imp_nz"
                },
                {
                    "fact_ids": [
                        "5.7.4"
                    ],
                    "goal_id": "5.7.5",
                    "method_name": "apply_forward_step",
                    "param_m": "n",
                    "theorem": "div_eq_0"
                },
                {
                    "fact_ids": [
                        "5.7.5"
                    ],
                    "goal_id": "5.7.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "5.7.0"
                    ],
                    "goal_id": "5.7.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "primepow_divides_fact",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "index_fact_alt, {n: n}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ⊢ index p (fact n) = nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ fact n = 0 ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "fact n = 0",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "fact n = 0 ⊢ fact n = 0"
                },
                {
                    "args": "fact_nz, {n: n}",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact n = 0)"
                },
                {
                    "args": "negE_gen, {A: fact n = 0, C: k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)}",
                    "id": "2.1.2",
                    "prevs": [
                        "2.1.1",
                        "2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "fact n = 0 ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.0",
                        "2.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ fact n = 0 ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j), fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "p = 1",
                    "id": "2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "prime_def",
                    "id": "2.2.1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD1",
                    "id": "2.2.1.2",
                    "prevs": [
                        "2.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ¬(p = 1)"
                },
                {
                    "args": "negE_gen, {A: p = 1, C: k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)}",
                    "id": "2.2.1.3",
                    "prevs": [
                        "2.2.1.2",
                        "2.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, p = 1 ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.2.1.4",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j), fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "disjE",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.0",
                        "2.2.1",
                        "2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j), fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.0",
                        "2.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "disjE",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "disjI2, {A: fact n = 0, B: p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)}",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟶ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "fact n = 0 ∨ p = 1 ∨ k ≤ index p (fact n) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p ⊢ fact n = 0 ∨ p = 1 ∨ k ≤ index p (fact n) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "primepow_divides_index, divides (p ^ k) (fact n) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ divides (p ^ k) (fact n) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ divides (p ^ k) (fact n) ⟷ k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
                }
            ],
            "prop": [
                "prime p ",
                "⟶ divides (p ^ k) (fact n) ⟷ ",
                "   k ≤ nsum ({j::nat. 1 ≤ j ∧ p ^ j ≤ n}) (λj. n DIV p ^ j)"
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "primepow_divides_index"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "index_fact_alt"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "fact_nz"
                },
                {
                    "fact_ids": [
                        "2.1.1",
                        "2.1.0"
                    ],
                    "goal_id": "2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.2.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "2.2.1.1"
                    ],
                    "goal_id": "2.2.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.2.1.2",
                        "2.2.1.0"
                    ],
                    "goal_id": "2.2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index_refl",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n ≤ 1 ∨ n = 0 ⟶ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "n ≤ 1 ∨ n = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ n ≤ 1 ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ n ≤ 1 ⟶ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "n ≤ 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ 1 ⊢ n ≤ 1"
                },
                {
                    "args": "if_P, (0::nat) = (if n ≤ 1 then 0 else 1)",
                    "id": "0.1.1",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ 1 ⊢ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ n ≤ 1 ⟶ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ n = 0 ⟶ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "n = 0",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "n ≤ 1",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "z3",
                    "th": "n = 0 ⊢ n ≤ 1"
                },
                {
                    "args": "if_P, (0::nat) = (if n ≤ 1 then 0 else 1)",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ⊢ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.0",
                        "0.2.2"
                    ],
                    "rule": "intros",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ n = 0 ⟶ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ (0::nat) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "if_P, (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)",
                    "id": "0.4",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ 1 ∨ n = 0 ⊢ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ n ≤ 1 ∨ n = 0 ⟶ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(n ≤ 1 ∨ n = 0) ⟶ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "¬(n ≤ 1 ∨ n = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ ¬(n ≤ 1 ∨ n = 0)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ ¬(n ≤ 1) ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ ¬(n ≤ 1)"
                },
                {
                    "args": "2 ≤ n",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ 2 ≤ n"
                },
                {
                    "args": "divides_exp_le, {n: (1::nat)}",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ ∀m::nat. divides (n ^ m) (n ^ (1::nat)) ⟷ m ≤ 1"
                },
                {
                    "args": "exp_1",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ ∀m::nat. divides (n ^ m) n ⟷ m ≤ 1"
                },
                {
                    "args": "card_natseg_1, card ({1..1}) = 1",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ card ({1..1}) = 1"
                },
                {
                    "args": "nat_interval_def, card ({j::nat. 1 ≤ j ∧ j ≤ 1}) = 1",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ card ({j::nat. 1 ≤ j ∧ j ≤ 1}) = 1"
                },
                {
                    "args": "card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n}) = 1",
                    "id": "1.8",
                    "prevs": [
                        "1.5",
                        "1.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n}) = 1"
                },
                {
                    "args": "if_not_P, card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n}) = (if n ≤ 1 then 0 else 1)",
                    "id": "1.9",
                    "prevs": [
                        "1.8",
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n}) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "if_not_P, (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)",
                    "id": "1.10",
                    "prevs": [
                        "1.9",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n ≤ 1 ∨ n = 0) ⊢ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "1.11",
                    "prevs": [
                        "1.0",
                        "1.10"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n ≤ 1 ∨ n = 0) ⟶ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if n ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (n ^ j) n})) = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "index_def, index n n = (if n ≤ 1 then 0 else 1)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ index n n = (if n ≤ 1 then 0 else 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ index n n = (if n ≤ 1 then 0 else 1)"
                }
            ],
            "prop": "index n n = (if n ≤ 1 then 0 else 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "case": "n ≤ 1 ∨ n = 0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal": "n <= 1",
                    "goal_id": "0.2.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal": "2 <= n",
                    "goal_id": "1.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_forward_step",
                    "param_m": "",
                    "param_n": "(1::nat)",
                    "theorem": "divides_exp_le"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "fact_ids": [
                        "1.5"
                    ],
                    "goal_id": "1.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "nat_interval_def"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "card_natseg_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index_eq_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀n::nat. n = 0 ⟷ ¬(1 ≤ n)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀n::nat. n = 0 ⟷ ¬(1 ≤ n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ index p n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "index p n = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "index p n = 0 ⊢ index p n = 0"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [
                        "0",
                        "1.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "index p n = 0 ⊢ ¬(1 ≤ index p n)"
                },
                {
                    "args": "le_index",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "index p n = 0 ⊢ ¬((n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∧ divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "exp_1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "index p n = 0 ⊢ ¬((n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∧ divides p n)"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "index p n = 0 ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "index p n = 0 ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0)",
                    "id": "1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0)"
                },
                {
                    "args": "not_imp",
                    "id": "1.5.1",
                    "prevs": [
                        "1.5.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ (n = 0 ∨ p = 1) ∧ ¬((1::nat) = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "1.5.2",
                    "prevs": [
                        "1.5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.5.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "n = 0",
                    "id": "1.5.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "disjI1, {A: n = 0, B: p = 1 ∨ ¬(divides p n)}",
                    "id": "1.5.3.1",
                    "prevs": [
                        "1.5.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0 ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.5.3.2",
                    "prevs": [
                        "1.5.3.0",
                        "1.5.3.1"
                    ],
                    "rule": "intros",
                    "th": "index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.5.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ p = 1 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "p = 1",
                    "id": "1.5.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: ¬(divides p n)}",
                    "id": "1.5.4.1",
                    "prevs": [
                        "1.5.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ ¬(divides p n)}",
                    "id": "1.5.4.2",
                    "prevs": [
                        "1.5.4.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.5.4.3",
                    "prevs": [
                        "1.5.4.0",
                        "1.5.4.2"
                    ],
                    "rule": "intros",
                    "th": "index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ p = 1 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disjE",
                    "id": "1.5.5",
                    "prevs": [
                        "1.5.2",
                        "1.5.3",
                        "1.5.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "index p n = 0, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.5.6",
                    "prevs": [
                        "1.5.0",
                        "1.5.5"
                    ],
                    "rule": "intros",
                    "th": "index p n = 0 ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "index p n = 0 ⊢ ¬(divides p n) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "1.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: ¬(divides p n)}",
                    "id": "1.6.1",
                    "prevs": [
                        "1.6.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(divides p n), index p n = 0 ⊢ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ ¬(divides p n)}",
                    "id": "1.6.2",
                    "prevs": [
                        "1.6.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(divides p n), index p n = 0 ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.6.3",
                    "prevs": [
                        "1.6.0",
                        "1.6.2"
                    ],
                    "rule": "intros",
                    "th": "index p n = 0 ⊢ ¬(divides p n) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disjE",
                    "id": "1.7",
                    "prevs": [
                        "1.4",
                        "1.5",
                        "1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "index p n = 0 ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ index p n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n) ⟶ index p n = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1 ∨ ¬(divides p n)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disj_assoc",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ (n = 0 ∨ p = 1) ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ n = 0 ∨ p = 1 ⟶ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "¬((1::nat) = 0)",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((1::nat) = 0)"
                },
                {
                    "args": "conjI",
                    "id": "2.2.2",
                    "prevs": [
                        "2.2.0",
                        "2.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ∨ p = 1, n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ (n = 0 ∨ p = 1) ∧ ¬((1::nat) = 0)"
                },
                {
                    "args": "not_imp, ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0)",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ∨ p = 1, n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0)"
                },
                {
                    "args": "disjI1, {A: ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0), B: ¬(divides (p ^ (1::nat)) n)}",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0 ∨ p = 1, n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "",
                    "id": "2.2.5",
                    "prevs": [
                        "2.2.0",
                        "2.2.4"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ n = 0 ∨ p = 1 ⟶ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(divides p n) ⟶ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "exp_1, ¬(divides (p ^ (1::nat)) n)",
                    "id": "2.3.1",
                    "prevs": [
                        "2.3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(divides p n), n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "disjI2, {A: ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0), B: ¬(divides (p ^ (1::nat)) n)}",
                    "id": "2.3.2",
                    "prevs": [
                        "2.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(divides p n), n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "",
                    "id": "2.3.3",
                    "prevs": [
                        "2.3.0",
                        "2.3.2"
                    ],
                    "rule": "intros",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(divides p n) ⟶ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "disjE",
                    "id": "2.4",
                    "prevs": [
                        "2.1",
                        "2.2",
                        "2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∨ ¬(divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "de_morgan_thm1, ¬((n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∧ divides (p ^ (1::nat)) n)",
                    "id": "2.5",
                    "prevs": [
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬((n = 0 ∨ p = 1 ⟶ (1::nat) = 0) ∧ divides (p ^ (1::nat)) n)"
                },
                {
                    "args": "le_index, ¬(1 ≤ index p n)",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ ¬(1 ≤ index p n)"
                },
                {
                    "args": "index p n = 0",
                    "id": "2.7",
                    "prevs": [
                        "0",
                        "2.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n = 0 ∨ p = 1 ∨ ¬(divides p n) ⊢ index p n = 0"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.0",
                        "2.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n) ⟶ index p n = 0"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ index p n = 0 ⟷ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ index p n = 0 ⟷ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                }
            ],
            "prop": "index p n = 0 ⟷ n = 0 ∨ p = 1 ∨ ¬(divides p n)",
            "steps": [
                {
                    "goal": "∀n::nat. n = 0 ⟷ ¬(1 ≤ n)",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "1.4"
                    ],
                    "goal_id": "1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1.5.1"
                    ],
                    "goal_id": "1.5.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.5.2"
                    ],
                    "goal_id": "1.5.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.5.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.3.0"
                    ],
                    "goal_id": "1.5.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.5.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.5.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.5.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "disj_assoc"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_zero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(divides p n)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: ¬(divides p n)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(divides p n) ⊢ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ ¬(divides p n)}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(divides p n) ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p n)"
                },
                {
                    "args": "index_eq_0, index p n = 0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(divides p n) ⊢ index p n = 0"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(divides p n) ⟶ index p n = 0"
                }
            ],
            "prop": "¬(divides p n) ⟶ index p n = 0",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_eq_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "index_pow",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ k = 0 ⟶ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "k = 0",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "disjI1, {A: (1::nat) = 1, B: ¬(divides 1 n)}",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0 ⊢ (1::nat) = 1 ∨ ¬(divides 1 n)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: (1::nat) = 1 ∨ ¬(divides 1 n)}",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0 ⊢ n = 0 ∨ (1::nat) = 1 ∨ ¬(divides 1 n)"
                },
                {
                    "args": "index_eq_0, index 1 n = 0",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0 ⊢ index 1 n = 0"
                },
                {
                    "args": "div_zero, index 1 n = index p n DIV 0",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0 ⊢ index 1 n = index p n DIV 0"
                },
                {
                    "args": "nat_nat_power_def_1, index (p ^ (0::nat)) n = index p n DIV 0",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "k = 0 ⊢ index (p ^ (0::nat)) n = index p n DIV 0"
                },
                {
                    "args": "index (p ^ k) n = index p n DIV k",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.6"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "k = 0 ⊢ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ k = 0 ⟶ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(k = 0) ⟶ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(k = 0) ⊢ ¬(k = 0)"
                },
                {
                    "args": "∀m::nat. ∀n. m = n ⟷ (∀d. d ≤ m ⟷ d ≤ n)",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀m::nat. ∀n. m = n ⟷ (∀d. d ≤ m ⟷ d ≤ n)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0) ⊢ ∀d. d ≤ index (p ^ k) n ⟷ d ≤ index p n DIV k"
                },
                {
                    "args": "d, nat",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "le_rdiv_eq, {b: index p n, n: d}",
                    "id": "1.2.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(k = 0) ⊢ d ≤ index p n DIV k ⟷ k * d ≤ index p n"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0) ⊢ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⟶ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n"
                },
                {
                    "args": "(n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p ^ k = 1 ⟶ d = 0"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ divides (p ^ k ^ d) n"
                },
                {
                    "args": "",
                    "id": "1.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p = 1 ⟶ k * d = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "1.2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ⟶ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "n = 0",
                    "id": "1.2.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "disjI1, {A: n = 0, B: p ^ k = 1}",
                    "id": "1.2.2.3.1.1",
                    "prevs": [
                        "1.2.2.3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.1.2",
                    "prevs": [
                        "1.2.2.3.1.0",
                        "1.2.2.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ⟶ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ p = 1 ⟶ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.2.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: k = 0}",
                    "id": "1.2.2.3.2.1",
                    "prevs": [
                        "1.2.2.3.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ p = 1 ∨ k = 0"
                },
                {
                    "args": "exp_eq_1, p ^ k = 1",
                    "id": "1.2.2.3.2.2",
                    "prevs": [
                        "1.2.2.3.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 1, ¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ p ^ k = 1"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p ^ k = 1}",
                    "id": "1.2.2.3.2.3",
                    "prevs": [
                        "1.2.2.3.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.2.4",
                    "prevs": [
                        "1.2.2.3.2.0",
                        "1.2.2.3.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ p = 1 ⟶ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.3.3",
                    "prevs": [
                        "1.2.2.3.0",
                        "1.2.2.3.1",
                        "1.2.2.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.4",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.3.3"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ d = 0"
                },
                {
                    "args": "disjI2, {A: k = 0, B: d = 0}",
                    "id": "1.2.2.3.5",
                    "prevs": [
                        "1.2.2.3.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ k = 0 ∨ d = 0"
                },
                {
                    "args": "mult_eq_0, k * d = 0",
                    "id": "1.2.2.3.6",
                    "prevs": [
                        "1.2.2.3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(k = 0), n = 0 ∨ p = 1, (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ k * d = 0"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.7",
                    "prevs": [
                        "1.2.2.3.0",
                        "1.2.2.3.6"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ n = 0 ∨ p = 1 ⟶ k * d = 0"
                },
                {
                    "args": "exp_mult, divides (p ^ (k * d)) n",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(k = 0), (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ divides (p ^ (k * d)) n"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.5",
                    "prevs": [
                        "1.2.2.3",
                        "1.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⊢ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n"
                },
                {
                    "args": "",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0) ⊢ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⟶ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⟶ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n"
                },
                {
                    "args": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n",
                    "id": "1.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n"
                },
                {
                    "args": "conjD1",
                    "id": "1.2.3.1",
                    "prevs": [
                        "1.2.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p = 1 ⟶ k * d = 0"
                },
                {
                    "args": "conjD2",
                    "id": "1.2.3.2",
                    "prevs": [
                        "1.2.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ divides (p ^ (k * d)) n"
                },
                {
                    "args": "exp_mult",
                    "id": "1.2.3.3",
                    "prevs": [
                        "1.2.3.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ divides (p ^ k ^ d) n"
                },
                {
                    "args": "",
                    "id": "1.2.3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p ^ k = 1 ⟶ d = 0"
                },
                {
                    "args": "n = 0 ∨ p ^ k = 1",
                    "id": "1.2.3.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p ^ k = 1 ⊢ n = 0 ∨ p ^ k = 1"
                },
                {
                    "args": "mult_eq_0",
                    "id": "1.2.3.4.1",
                    "prevs": [
                        "1.2.3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p = 1 ⟶ k = 0 ∨ d = 0"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ⟶ n = 0 ∨ p = 1"
                },
                {
                    "args": "n = 0",
                    "id": "1.2.3.4.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "disjI1, {A: n = 0, B: p = 1}",
                    "id": "1.2.3.4.2.1",
                    "prevs": [
                        "1.2.3.4.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, ¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.2.2",
                    "prevs": [
                        "1.2.3.4.2.0",
                        "1.2.3.4.2.1"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ⟶ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ p ^ k = 1 ⟶ n = 0 ∨ p = 1"
                },
                {
                    "args": "p ^ k = 1",
                    "id": "1.2.3.4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ k = 1 ⊢ p ^ k = 1"
                },
                {
                    "args": "exp_eq_1",
                    "id": "1.2.3.4.3.1",
                    "prevs": [
                        "1.2.3.4.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p ^ k = 1 ⊢ p = 1 ∨ k = 0"
                },
                {
                    "args": "p = 1 ⟶ p = 1",
                    "id": "1.2.3.4.3.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ p = 1 ⟶ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), p ^ k = 1, n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ k = 0 ⟶ p = 1"
                },
                {
                    "args": "k = 0",
                    "id": "1.2.3.4.3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "negE_gen, {A: k = 0, C: p = 1}",
                    "id": "1.2.3.4.3.3.1",
                    "prevs": [
                        "1.0",
                        "1.2.3.4.3.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(k = 0) ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.3.3.2",
                    "prevs": [
                        "1.2.3.4.3.3.0",
                        "1.2.3.4.3.3.1"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), p ^ k = 1, n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ k = 0 ⟶ p = 1"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3.4.3.4",
                    "prevs": [
                        "1.2.3.4.3.1",
                        "1.2.3.4.3.2",
                        "1.2.3.4.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), p ^ k = 1, n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ p = 1"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1}",
                    "id": "1.2.3.4.3.5",
                    "prevs": [
                        "1.2.3.4.3.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(k = 0), p ^ k = 1, n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.3.6",
                    "prevs": [
                        "1.2.3.4.3.0",
                        "1.2.3.4.3.5"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ p ^ k = 1 ⟶ n = 0 ∨ p = 1"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3.4.4",
                    "prevs": [
                        "1.2.3.4.0",
                        "1.2.3.4.2",
                        "1.2.3.4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.5",
                    "prevs": [
                        "1.2.3.4.1",
                        "1.2.3.4.4"
                    ],
                    "rule": "apply_fact",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ k = 0 ∨ d = 0"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ k = 0 ⟶ d = 0"
                },
                {
                    "args": "k = 0",
                    "id": "1.2.3.4.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "negE_gen, {A: k = 0, C: d = 0}",
                    "id": "1.2.3.4.6.1",
                    "prevs": [
                        "1.0",
                        "1.2.3.4.6.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(k = 0) ⊢ d = 0"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.6.2",
                    "prevs": [
                        "1.2.3.4.6.0",
                        "1.2.3.4.6.1"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ k = 0 ⟶ d = 0"
                },
                {
                    "args": "d = 0 ⟶ d = 0",
                    "id": "1.2.3.4.7",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 0 ⟶ d = 0"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3.4.8",
                    "prevs": [
                        "1.2.3.4.5",
                        "1.2.3.4.6",
                        "1.2.3.4.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), n = 0 ∨ p ^ k = 1, (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ d = 0"
                },
                {
                    "args": "",
                    "id": "1.2.3.4.9",
                    "prevs": [
                        "1.2.3.4.0",
                        "1.2.3.4.8"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0), (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ n = 0 ∨ p ^ k = 1 ⟶ d = 0"
                },
                {
                    "args": "conjI",
                    "id": "1.2.3.5",
                    "prevs": [
                        "1.2.3.4",
                        "1.2.3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0), (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⊢ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n"
                },
                {
                    "args": "",
                    "id": "1.2.3.6",
                    "prevs": [
                        "1.2.3.0",
                        "1.2.3.5"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0) ⊢ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n ⟶ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.2",
                        "1.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(k = 0) ⊢ (n = 0 ∨ p ^ k = 1 ⟶ d = 0) ∧ divides (p ^ k ^ d) n ⟷ (n = 0 ∨ p = 1 ⟶ k * d = 0) ∧ divides (p ^ (k * d)) n"
                },
                {
                    "args": "le_index, d ≤ index (p ^ k) n ⟷ k * d ≤ index p n",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(k = 0) ⊢ d ≤ index (p ^ k) n ⟷ k * d ≤ index p n"
                },
                {
                    "args": "d ≤ index (p ^ k) n ⟷ d ≤ index p n DIV k",
                    "id": "1.2.6",
                    "prevs": [
                        "1.2.1",
                        "1.2.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(k = 0) ⊢ d ≤ index (p ^ k) n ⟷ d ≤ index p n DIV k"
                },
                {
                    "args": "",
                    "id": "1.2.7",
                    "prevs": [
                        "1.2.0",
                        "1.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(k = 0) ⊢ ∀d. d ≤ index (p ^ k) n ⟷ d ≤ index p n DIV k"
                },
                {
                    "args": "index (p ^ k) n = index p n DIV k",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(k = 0) ⊢ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(k = 0) ⟶ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ index (p ^ k) n = index p n DIV k"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ index (p ^ k) n = index p n DIV k"
                }
            ],
            "prop": "index (p ^ k) n = index p n DIV k",
            "steps": [
                {
                    "case": "k=0",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_nat_power_def_1"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "div_zero"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_eq_0"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal": "!m::nat. !n. (m = n) <--> !d. d <= m <--> d <= n",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_forward_step",
                    "param_b": "index p n",
                    "param_n": "d",
                    "theorem": "le_rdiv_eq"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "le_index"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "goal_id": "1.2.2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.2.1"
                    ],
                    "goal_id": "1.2.2.3.1",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.3.0"
                    ],
                    "goal_id": "1.2.2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.2.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.3.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_eq_1"
                },
                {
                    "goal_id": "1.2.2.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.2.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_mult"
                },
                {
                    "goal_id": "1.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.3.0"
                    ],
                    "goal_id": "1.2.3.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.3.0"
                    ],
                    "goal_id": "1.2.3.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2.3.2"
                    ],
                    "goal_id": "1.2.3.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_mult"
                },
                {
                    "goal_id": "1.2.3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.3.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.3.1"
                    ],
                    "goal_id": "1.2.3.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "goal": "n = 0 ∨ p = 1",
                    "goal_id": "1.2.3.4.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.2.3.4.0"
                    ],
                    "goal_id": "1.2.3.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.3.4.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.3.4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.3.4.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.3.4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.3.4.3.0"
                    ],
                    "goal_id": "1.2.3.4.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exp_eq_1"
                },
                {
                    "fact_ids": [
                        "1.2.3.4.3.1"
                    ],
                    "goal_id": "1.2.3.4.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.3.4.3.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.3.4.3.3.0"
                    ],
                    "goal_id": "1.2.3.4.3.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "fact_ids": [
                        "1.2.3.4.1",
                        "1.2.3.4.4"
                    ],
                    "goal_id": "1.2.3.4.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.3.4.5"
                    ],
                    "goal_id": "1.2.3.4.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.3.4.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.3.4.6.0"
                    ],
                    "goal_id": "1.2.3.4.6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p = a ⟶ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "p = a",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = a ⊢ p = a"
                },
                {
                    "args": "prime_ge_2",
                    "id": "1.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "prime p, p = a ⊢ 2 ≤ a"
                },
                {
                    "args": "¬(a ≤ 1)",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "z3",
                    "th": "prime p, p = a ⊢ ¬(a ≤ 1)"
                },
                {
                    "args": "if_not_P, (if a ≤ 1 then (0::nat) else 1) = 1",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, p = a ⊢ (if a ≤ 1 then (0::nat) else 1) = 1"
                },
                {
                    "args": "index_refl, index a a = 1",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, p = a ⊢ index a a = 1"
                },
                {
                    "args": "index a p = 1",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = a ⊢ index a p = 1"
                },
                {
                    "args": "if_P, index a p = (if p = a then 1 else 0)",
                    "id": "1.7",
                    "prevs": [
                        "1.6",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, p = a ⊢ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p = a ⟶ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ ¬(p = a) ⟶ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "¬(p = a)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = a) ⊢ ¬(p = a)"
                },
                {
                    "args": "prime_def",
                    "id": "2.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = a) ⊢ a = 1 ⟶ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "a = 1",
                    "id": "2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = 1 ⊢ a = 1"
                },
                {
                    "args": "disjI1, {A: a = 1, B: ¬(divides a p)}",
                    "id": "2.3.1",
                    "prevs": [
                        "2.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, a = 1, ¬(p = a) ⊢ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "",
                    "id": "2.3.2",
                    "prevs": [
                        "2.3.0",
                        "2.3.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = a) ⊢ a = 1 ⟶ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = a) ⊢ ¬(a = 1) ⟶ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "¬(a = 1)",
                    "id": "2.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a = 1) ⊢ ¬(a = 1)"
                },
                {
                    "args": "",
                    "id": "2.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(a = 1), ¬(p = a) ⊢ divides a p ⟶ a = 1"
                },
                {
                    "args": "divides a p",
                    "id": "2.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides a p ⊢ divides a p"
                },
                {
                    "args": "",
                    "id": "2.4.1.1",
                    "prevs": [
                        "2.2",
                        "2.4.1.0"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, divides a p ⊢ a = 1 ∨ a = p"
                },
                {
                    "args": "a = 1 ⟶ a = 1",
                    "id": "2.4.1.2",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ a = 1 ⟶ a = 1"
                },
                {
                    "args": "",
                    "id": "2.4.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides a p, ¬(a = 1), ¬(p = a) ⊢ a = p ⟶ a = 1"
                },
                {
                    "args": "a = p",
                    "id": "2.4.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = p ⊢ a = p"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.4.1.3.1",
                    "prevs": [
                        "2.4.1.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "a = p ⊢ p = a"
                },
                {
                    "args": "negE_gen, {A: p = a, C: a = 1}",
                    "id": "2.4.1.3.2",
                    "prevs": [
                        "2.0",
                        "2.4.1.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "a = p, ¬(p = a) ⊢ a = 1"
                },
                {
                    "args": "",
                    "id": "2.4.1.3.3",
                    "prevs": [
                        "2.4.1.3.0",
                        "2.4.1.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides a p, ¬(a = 1), ¬(p = a) ⊢ a = p ⟶ a = 1"
                },
                {
                    "args": "disjE",
                    "id": "2.4.1.4",
                    "prevs": [
                        "2.4.1.1",
                        "2.4.1.2",
                        "2.4.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides a p, ¬(a = 1), ¬(p = a) ⊢ a = 1"
                },
                {
                    "args": "",
                    "id": "2.4.1.5",
                    "prevs": [
                        "2.4.1.0",
                        "2.4.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(a = 1), ¬(p = a) ⊢ divides a p ⟶ a = 1"
                },
                {
                    "args": "double_neg, ¬¬(divides a p) ⟶ ¬¬(a = 1)",
                    "id": "2.4.2",
                    "prevs": [
                        "2.4.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(a = 1), ¬(p = a) ⊢ ¬¬(divides a p) ⟶ ¬¬(a = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.4.3",
                    "prevs": [
                        "2.4.0",
                        "2.4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(a = 1), ¬(p = a) ⊢ ¬(divides a p)"
                },
                {
                    "args": "disjI2, {A: a = 1, B: ¬(divides a p)}",
                    "id": "2.4.4",
                    "prevs": [
                        "2.4.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(a = 1), ¬(p = a) ⊢ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "",
                    "id": "2.4.5",
                    "prevs": [
                        "2.4.0",
                        "2.4.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = a) ⊢ ¬(a = 1) ⟶ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "classical_cases",
                    "id": "2.5",
                    "prevs": [
                        "2.3",
                        "2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = a) ⊢ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "disjI2, {A: p = 0, B: a = 1 ∨ ¬(divides a p)}",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = a) ⊢ p = 0 ∨ a = 1 ∨ ¬(divides a p)"
                },
                {
                    "args": "index_eq_0, index a p = 0",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p = a) ⊢ index a p = 0"
                },
                {
                    "args": "if_not_P, index a p = (if p = a then 1 else 0)",
                    "id": "2.8",
                    "prevs": [
                        "2.7",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(p = a) ⊢ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.0",
                        "2.8"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ ¬(p = a) ⟶ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ index a p = (if p = a then 1 else 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ index a p = (if p = a then 1 else 0)"
                }
            ],
            "prop": "prime p ⟶ index a p = (if p = a then 1 else 0)",
            "steps": [
                {
                    "case": "p = a",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_refl"
                },
                {
                    "goal": "~(a ≤ 1)",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_eq_0"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "case": "a=1",
                    "goal_id": "2.3",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "2.4.0"
                    ],
                    "goal_id": "2.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "2.4.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2",
                        "2.4.1.0"
                    ],
                    "goal_id": "2.4.1.1",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.4.1.1"
                    ],
                    "goal_id": "2.4.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.4.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.4.1.3.0"
                    ],
                    "goal_id": "2.4.1.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "2.4.1.3.1"
                    ],
                    "goal_id": "2.4.1.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_trivial_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "primepow_divides_index, {k: n, n: n, p: p}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (p ^ n) n ⟷ n = 0 ∨ p = 1 ∨ n ≤ index p n"
                },
                {
                    "args": "index_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ divides (p ^ n) n ⟷ n = 0 ∨ p = 1 ∨ n ≤ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p ≤ 1 ∨ n = 0 ⟶ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "p ≤ 1 ∨ n = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ 1 ∨ n = 0 ⊢ p ≤ 1 ∨ n = 0"
                },
                {
                    "args": "le_0, {n: n}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "if_P, (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n",
                    "id": "2.2",
                    "prevs": [
                        "2.1",
                        "2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p ≤ 1 ∨ n = 0 ⊢ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ p ≤ 1 ∨ n = 0 ⟶ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(p ≤ 1 ∨ n = 0) ⟶ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "¬(p ≤ 1 ∨ n = 0)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p ≤ 1 ∨ n = 0)"
                },
                {
                    "args": "if_not_P",
                    "id": "3.1",
                    "prevs": [
                        "1",
                        "3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ divides (p ^ n) n ⟷ n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "3.2",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p ≤ 1) ∧ ¬(n = 0)"
                },
                {
                    "args": "conjD1",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p ≤ 1)"
                },
                {
                    "args": "conjD2",
                    "id": "3.4",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "not_le",
                    "id": "3.5",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ 1 < p"
                },
                {
                    "args": "le_lt",
                    "id": "3.6",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p < 1 ∨ p = 1)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p < 1) ∧ ¬(p = 1)"
                },
                {
                    "args": "conjD2",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "3.9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ divides (p ^ n) n ⟶ n = 0"
                },
                {
                    "args": "divides (p ^ n) n",
                    "id": "3.9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (p ^ n) n ⊢ divides (p ^ n) n"
                },
                {
                    "args": "divides_le",
                    "id": "3.9.1",
                    "prevs": [
                        "3.9.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ n) n ⊢ p ^ n ≤ n ∨ n = 0"
                },
                {
                    "args": "",
                    "id": "3.9.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides (p ^ n) n, ¬(p ≤ 1 ∨ n = 0) ⊢ p ^ n ≤ n ⟶ n = 0"
                },
                {
                    "args": "p ^ n ≤ n",
                    "id": "3.9.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ^ n ≤ n ⊢ p ^ n ≤ n"
                },
                {
                    "args": "",
                    "id": "3.9.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n = 0) ⟶ n < p ^ n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "3.9.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "lt_pow2_refl, {n: n}",
                    "id": "3.9.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n < 2 ^ n"
                },
                {
                    "args": "2 ≤ p",
                    "id": "3.9.2.1.2",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "z3",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ 2 ≤ p"
                },
                {
                    "args": "disjI1, {A: 2 ≤ p, B: n = 0}",
                    "id": "3.9.2.1.3",
                    "prevs": [
                        "3.9.2.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ 2 ≤ p ∨ n = 0"
                },
                {
                    "args": "exp_mono_le, 2 ^ n ≤ p ^ n",
                    "id": "3.9.2.1.4",
                    "prevs": [
                        "3.9.2.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ 2 ^ n ≤ p ^ n"
                },
                {
                    "args": "lte_trans",
                    "id": "3.9.2.1.5",
                    "prevs": [
                        "3.9.2.1.1",
                        "3.9.2.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ n < p ^ n"
                },
                {
                    "args": "",
                    "id": "3.9.2.1.6",
                    "prevs": [
                        "3.9.2.1.0",
                        "3.9.2.1.5"
                    ],
                    "rule": "intros",
                    "th": "divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n = 0) ⟶ n < p ^ n"
                },
                {
                    "args": "not_le, ¬(n = 0) ⟶ ¬(p ^ n ≤ n)",
                    "id": "3.9.2.2",
                    "prevs": [
                        "3.9.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n = 0) ⟶ ¬(p ^ n ≤ n)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.9.2.3",
                    "prevs": [
                        "3.9.2.0",
                        "3.9.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ n) n, p ^ n ≤ n, ¬(p ≤ 1 ∨ n = 0) ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "3.9.2.4",
                    "prevs": [
                        "3.9.2.0",
                        "3.9.2.3"
                    ],
                    "rule": "intros",
                    "th": "divides (p ^ n) n, ¬(p ≤ 1 ∨ n = 0) ⊢ p ^ n ≤ n ⟶ n = 0"
                },
                {
                    "args": "n = 0 ⟶ n = 0",
                    "id": "3.9.3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ n = 0 ⟶ n = 0"
                },
                {
                    "args": "disjE",
                    "id": "3.9.4",
                    "prevs": [
                        "3.9.1",
                        "3.9.2",
                        "3.9.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides (p ^ n) n, ¬(p ≤ 1 ∨ n = 0) ⊢ n = 0"
                },
                {
                    "args": "",
                    "id": "3.9.5",
                    "prevs": [
                        "3.9.0",
                        "3.9.4"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ divides (p ^ n) n ⟶ n = 0"
                },
                {
                    "args": "double_neg, ¬¬(divides (p ^ n) n) ⟶ ¬¬(n = 0)",
                    "id": "3.10",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬¬(divides (p ^ n) n) ⟶ ¬¬(n = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.11",
                    "prevs": [
                        "3.4",
                        "3.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(divides (p ^ n) n)"
                },
                {
                    "args": "",
                    "id": "3.12",
                    "prevs": [
                        "3.1",
                        "3.11"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
                },
                {
                    "args": "",
                    "id": "3.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ⟶ n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})",
                    "id": "3.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ⊢ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "disjI2, {A: p = 1, B: n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})}",
                    "id": "3.13.1",
                    "prevs": [
                        "3.13.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p ≤ 1 ∨ n = 0), n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ⊢ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})}",
                    "id": "3.13.2",
                    "prevs": [
                        "3.13.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p ≤ 1 ∨ n = 0), n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ⊢ n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "",
                    "id": "3.13.3",
                    "prevs": [
                        "3.13.0",
                        "3.13.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ⟶ n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})"
                },
                {
                    "args": "double_neg, ¬¬(n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ⟶ ¬¬(n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))",
                    "id": "3.14",
                    "prevs": [
                        "3.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬¬(n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ⟶ ¬¬(n = 0 ∨ p = 1 ∨ n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
                },
                {
                    "args": "contrapositive",
                    "id": "3.15",
                    "prevs": [
                        "3.12",
                        "3.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ ¬(n ≤ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}))"
                },
                {
                    "args": "not_le, card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) < n",
                    "id": "3.16",
                    "prevs": [
                        "3.15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) < n"
                },
                {
                    "args": "lt_imp_le",
                    "id": "3.17",
                    "prevs": [
                        "3.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n}) ≤ n"
                },
                {
                    "args": "if_not_P, (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n",
                    "id": "3.18",
                    "prevs": [
                        "3.17",
                        "3.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p ≤ 1 ∨ n = 0) ⊢ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "",
                    "id": "3.19",
                    "prevs": [
                        "3.0",
                        "3.18"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(p ≤ 1 ∨ n = 0) ⟶ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (if p ≤ 1 ∨ n = 0 then 0 else card ({j::nat. 1 ≤ j ∧ divides (p ^ j) n})) ≤ n"
                },
                {
                    "args": "index_def, index p n ≤ n",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ index p n ≤ n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ index p n ≤ n"
                }
            ],
            "prop": "index p n ≤ n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_k": "n",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "primepow_divides_index"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "index_def"
                },
                {
                    "case": "p ≤ 1 ∨ n = 0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "1",
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "le_lt"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "apply_backward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal": "~(divides (p ^ n) n)",
                    "goal_id": "3.9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.9",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "3.9",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.9.0"
                    ],
                    "goal_id": "3.9.1",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "3.9.1"
                    ],
                    "goal_id": "3.9.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3.9.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.9.2.0"
                    ],
                    "goal_id": "3.9.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.9.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "3.9.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.9.2.1.1",
                    "method_name": "apply_backward_step",
                    "param_m": "(2::nat) ^ n",
                    "theorem": "lte_trans"
                },
                {
                    "goal_id": "3.9.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "lt_pow2_refl"
                },
                {
                    "goal_id": "3.9.2.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_mono_le"
                },
                {
                    "goal_id": "3.9.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "3.5"
                    ],
                    "goal_id": "3.9.2.1.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.1",
                        "3.11"
                    ],
                    "goal_id": "3.12",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.12"
                    ],
                    "goal_id": "3.13",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "3.13",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "3.13.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "index_decomposition",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_index, {k: index p n, n: n, p: p}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ index p n ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ index p n = 0) ∧ divides (p ^ index p n) n"
                },
                {
                    "args": "less_eq_refl, {n: index p n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ index p n ≤ index p n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ (n = 0 ∨ p = 1 ⟶ index p n = 0) ∧ divides (p ^ index p n) n"
                },
                {
                    "args": "conjD1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ n = 0 ∨ p = 1 ⟶ index p n = 0"
                },
                {
                    "args": "conjD2",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides (p ^ index p n) n"
                },
                {
                    "args": "divides_def",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. n = p ^ index p n * k"
                },
                {
                    "args": "m, nat",
                    "id": "6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n = p ^ index p n * m",
                    "id": "7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p ^ index p n * m ⊢ n = p ^ index p n * m"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n = p ^ index p n * m ⊢ p ^ index p n * m = n"
                },
                {
                    "args": "le_index, {k: index p n + 1, n: n, p: p}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ index p n + 1 ≤ index p n ⟷ (n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n"
                },
                {
                    "args": "(0::nat) < 1",
                    "id": "10",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::nat) < 1"
                },
                {
                    "args": "lt_add, index p n < index p n + 1",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = p ^ index p n * m ⊢ index p n < index p n + 1"
                },
                {
                    "args": "not_le, ¬(index p n + 1 ≤ index p n)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n = p ^ index p n * m ⊢ ¬(index p n + 1 ≤ index p n)"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "9",
                        "12"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = p ^ index p n * m ⊢ ¬((n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n)"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = p ^ index p n * m ⊢ n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "n = 0",
                    "id": "14.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "disjI1, {A: n = 0, B: p = 1 ∨ ¬(divides p m)}",
                    "id": "14.1",
                    "prevs": [
                        "14.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = 0, n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "14.2",
                    "prevs": [
                        "14.0",
                        "14.1"
                    ],
                    "rule": "intros",
                    "th": "n = p ^ index p n * m ⊢ n = 0 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n = p ^ index p n * m ⊢ ¬(n = 0) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "15.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), n = p ^ index p n * m ⊢ p = 1 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "p = 1",
                    "id": "15.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: ¬(divides p m)}",
                    "id": "15.1.1",
                    "prevs": [
                        "15.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0), n = p ^ index p n * m ⊢ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ ¬(divides p m)}",
                    "id": "15.1.2",
                    "prevs": [
                        "15.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(n = 0), n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "15.1.3",
                    "prevs": [
                        "15.1.0",
                        "15.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), n = p ^ index p n * m ⊢ p = 1 ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "15.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), n = p ^ index p n * m ⊢ ¬(p = 1) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "15.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "15.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides p m ⟶ (n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n"
                },
                {
                    "args": "divides p m",
                    "id": "15.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p m ⊢ divides p m"
                },
                {
                    "args": "",
                    "id": "15.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ⟶ index p n + 1 = 0"
                },
                {
                    "args": "n = 0 ∨ p = 1",
                    "id": "15.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ∨ p = 1 ⊢ n = 0 ∨ p = 1"
                },
                {
                    "args": "index p n + 1 = 0",
                    "id": "15.2.1.1.1",
                    "prevs": [
                        "15.2.1.1.0",
                        "15.2.0",
                        "15.0"
                    ],
                    "rule": "z3",
                    "th": "¬(n = 0), ¬(p = 1), n = 0 ∨ p = 1 ⊢ index p n + 1 = 0"
                },
                {
                    "args": "",
                    "id": "15.2.1.1.2",
                    "prevs": [
                        "15.2.1.1.0",
                        "15.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ⟶ index p n + 1 = 0"
                },
                {
                    "args": "divides_mult_left, {k: p ^ index p n, m: p, n: m}",
                    "id": "15.2.1.2",
                    "prevs": [
                        "15.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides (p ^ index p n * p) (p ^ index p n * m)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "15.2.1.3",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "n = p ^ index p n * m ⊢ p ^ index p n * m = n"
                },
                {
                    "args": "",
                    "id": "15.2.1.4",
                    "prevs": [
                        "15.2.1.3",
                        "15.2.1.2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides (p ^ index p n * p) n"
                },
                {
                    "args": "exp_1, divides (p ^ index p n * p ^ (1::nat)) n",
                    "id": "15.2.1.5",
                    "prevs": [
                        "15.2.1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides (p ^ index p n * p ^ (1::nat)) n"
                },
                {
                    "args": "nat_power_add, divides (p ^ (index p n + 1)) n",
                    "id": "15.2.1.6",
                    "prevs": [
                        "15.2.1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides (p ^ (index p n + 1)) n"
                },
                {
                    "args": "conjI",
                    "id": "15.2.1.7",
                    "prevs": [
                        "15.2.1.1",
                        "15.2.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides p m, ¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ (n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n"
                },
                {
                    "args": "",
                    "id": "15.2.1.8",
                    "prevs": [
                        "15.2.1.0",
                        "15.2.1.7"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ divides p m ⟶ (n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n"
                },
                {
                    "args": "double_neg, ¬¬(divides p m) ⟶ ¬¬((n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n)",
                    "id": "15.2.2",
                    "prevs": [
                        "15.2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ ¬¬(divides p m) ⟶ ¬¬((n = 0 ∨ p = 1 ⟶ index p n + 1 = 0) ∧ divides (p ^ (index p n + 1)) n)"
                },
                {
                    "args": "contrapositive",
                    "id": "15.2.3",
                    "prevs": [
                        "13",
                        "15.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ ¬(divides p m)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: ¬(divides p m)}",
                    "id": "15.2.4",
                    "prevs": [
                        "15.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "disjI2, {A: n = 0, B: p = 1 ∨ ¬(divides p m)}",
                    "id": "15.2.5",
                    "prevs": [
                        "15.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(n = 0), ¬(p = 1), n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "15.2.6",
                    "prevs": [
                        "15.2.0",
                        "15.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 0), n = p ^ index p n * m ⊢ ¬(p = 1) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "classical_cases",
                    "id": "15.3",
                    "prevs": [
                        "15.1",
                        "15.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0), n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "",
                    "id": "15.4",
                    "prevs": [
                        "15.0",
                        "15.3"
                    ],
                    "rule": "intros",
                    "th": "n = p ^ index p n * m ⊢ ¬(n = 0) ⟶ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "classical_cases",
                    "id": "16",
                    "prevs": [
                        "14",
                        "15"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = p ^ index p n * m ⊢ n = 0 ∨ p = 1 ∨ ¬(divides p m)"
                },
                {
                    "args": "conjI",
                    "id": "17",
                    "prevs": [
                        "8",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "n = p ^ index p n * m ⊢ p ^ index p n * m = n ∧ (n = 0 ∨ p = 1 ∨ ¬(divides p m))"
                },
                {
                    "args": "exI, {P: λm. p ^ index p n * m = n ∧ (n = 0 ∨ p = 1 ∨ ¬(divides p m)), a: m}",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n = p ^ index p n * m ⊢ ∃a1. p ^ index p n * a1 = n ∧ (n = 0 ∨ p = 1 ∨ ¬(divides p a1))"
                },
                {
                    "args": "∃k. n = p ^ index p n * k",
                    "id": "19",
                    "prevs": [
                        "5",
                        "6",
                        "7",
                        "18"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃m. p ^ index p n * m = n ∧ (n = 0 ∨ p = 1 ∨ ¬(divides p m))"
                }
            ],
            "prop": "∃m. p ^ index p n * m = n ∧ (n = 0 ∨ p = 1 ∨ ¬(divides p m))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_k": "index p n",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "le_index"
                },
                {
                    "goal": "index p n ≤ index p n",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "goal_id": "8",
                    "method_name": "inst_exists_goal",
                    "s": "m"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "param_k": "index p n +1",
                    "param_n": "n",
                    "param_p": "p",
                    "theorem": "le_index"
                },
                {
                    "goal": "~(index p n + 1 ≤ index p n)",
                    "goal_id": "10",
                    "method_name": "cut"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "lt_add"
                },
                {
                    "goal_id": "10",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "9",
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "case": "n=0",
                    "goal_id": "14",
                    "method_name": "cases"
                },
                {
                    "goal_id": "14",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "14.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction"
                },
                {
                    "case": "p=1",
                    "goal_id": "15.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "15.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "15.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "15.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "15.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.2.1.1.0",
                        "15.2.0",
                        "15.0"
                    ],
                    "goal_id": "15.2.1.1.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "15.2.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_power_add"
                },
                {
                    "goal_id": "15.2.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "exp_1"
                },
                {
                    "goal": "divides (p ^ index p n * p) (p ^ index p n * m)",
                    "goal_id": "15.2.1.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mult_left"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "15.2.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "15.2.1.3",
                        "15.2.1.2"
                    ],
                    "goal_id": "15.2.1.4",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "p": "nat"
            }
        }
    ],
    "description": "Basic theory of divisibility, gcd, coprimality and primality (over N).",
    "imports": [
        "gcd"
    ],
    "name": "prime"
}