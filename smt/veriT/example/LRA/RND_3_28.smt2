(set-info :smt-lib-version 2.6)
(set-logic LRA)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>
|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun y2 () Real)
(declare-fun y3 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(assert (and (and (exists ((?y2 Real)) (or (exists ((?y3 Real)) (let ((?v_0 (* (- 99) x1)) (?v_1 (* (- 55) ?y3))) (and (or (< (+ (* (- 48) ?y3) (* 84 ?y2)) (- 32)) (and (and (not (= (+ (+ (* (- 82) ?y3) (* 45 ?y2)) (* (- 97) x1)) 0)) (<= (+ (* 98 ?y2) ?v_0) 0)) (or (not (= (+ (* (- 63) ?y3) (* (- 43) ?y2)) 0)) (= (+ (+ (* (- 47) ?y3) (* (- 47) ?y2)) (* 79 x1)) (- 60))))) (and (or (or (>= (+ (* 19 ?y2) (* 13 x1)) 0) (= (+ ?v_1 ?v_0) (- 87))) (and (= (* 29 ?y2) (- 51)) (<= (* (- 58) x1) 0))) (and (> (+ (* 23 ?y2) (* (- 15) x1)) 86) (and (not (= (+ ?v_1 (* (- 48) x1)) (- 61))) (not (= (+ (* (- 87) ?y3) (* 53 ?y2)) (- 94))))))))) (and (exists ((?y3 Real)) (or (or (= (+ (* (- 31) ?y3) (* (- 89) ?y2)) (- 25)) (> (+ (* (- 13) ?y2) (* 58 x1)) 0)) (or (or (>= (+ (* 76 ?y3) (* (- 35) ?y2)) 0) (= (+ (* 50 ?y3) (* (- 44) x1)) 54)) (or (= (* (- 97) x1) 30) (>= (+ (+ (* 25 ?y3) (* 21 ?y2)) (* (- 32) x1)) 0))))) (and (and (>= (* (- 15) x1) (- 86)) (> (* 57 ?y2) (- 88))) (or (>= (* (- 59) ?y2) 82) (< (+ (* (- 10) ?y2) (* 47 x1)) (- 59))))))) (exists ((?y2 Real)) (and (forall ((?y3 Real)) (let ((?v_2 (* (- 93) x1))) (and (and (and (or (= (+ (* (- 39) ?y2) (* (- 77) x1)) (- 90)) (not (= (+ (* (- 23) ?y3) (* 53 ?y2)) 20))) (and (not (= (+ (* (- 16) ?y2) (* 79 x1)) 0)) (not (= (+ (* 36 ?y2) ?v_2) 0)))) (or (or (not (= (+ (* 22 ?y3) (* 72 ?y2)) 8)) (not (= (+ (+ (* 50 ?y3) (* (- 59) ?y2)) ?v_2) 5))) (and (= (* (- 99) ?y3) 90) (< (+ (+ (* (- 31) ?y3) (* (- 22) ?y2)) (* (- 60) x1)) (- 23))))) (and (or (and (not (= (+ (* (- 11) ?y3) (* (- 65) x1)) (- 28))) (< (+ (+ (* (- 59) ?y3) (* (- 69) ?y2)) (* 93 x1)) 91)) (or (>= (+ (+ (* 44 ?y3) (* 16 ?y2)) (* (- 63) x1)) 100) (not (= (+ (* (- 28) ?y2) (* 74 x1)) 0)))) (or (>= (* 93 ?y2) (- 41)) (= (+ (* 14 ?y3) (* 40 ?y2)) (- 43))))))) (or (and (and (forall ((?y3 Real)) (>= (+ (+ (* 79 ?y3) (* (- 4) ?y2)) (* (- 66) x1)) (- 89))) (exists ((?y3 Real)) (<= (+ (+ (* 56 ?y3) (* 31 ?y2)) (* 22 x1)) (- 46)))) (forall ((?y3 Real)) (and (or (not (= (+ (+ (* (- 35) ?y3) (* 36 ?y2)) (* (- 47) x1)) 0)) (not (= (+ (+ (* (- 57) ?y3) (* 93 ?y2)) (* (- 44) x1)) 0))) (and (<= (+ (+ (* (- 65) ?y3) (* 79 ?y2)) (* 13 x1)) (- 36)) (not (= (+ (+ (* (- 31) ?y3) (* (- 36) ?y2)) (* (- 70) x1)) (- 10))))))) (or (>= (+ (* 93 ?y2) (* (- 57) x1)) (- 71)) (and (or (>= (* (- 55) x1) (- 5)) (= (+ (* (- 33) ?y2) (* 83 x1)) 0)) (or (and (>= (* (- 93) ?y2) (- 89)) (> (+ (* (- 64) ?y2) (* (- 9) x1)) 20)) (>= (* 76 x1) (- 41))))))))) (and (and (and (exists ((?y1 Real)) (or (forall ((?y3 Real)) (or (and (>= (+ (+ (* 75 ?y3) (* (- 2) ?y1)) (* 81 x1)) 0) (< (+ (* (- 32) ?y3) (* (- 31) x1)) 34)) (and (< (* 50 ?y3) 55) (> (+ (+ (* 2 ?y3) (* (- 46) ?y1)) (* 94 x1)) 41)))) (or (or (and (= (+ (* (- 19) ?y1) (* 29 x1)) 63) (>= (+ (* 50 ?y1) (* 46 x1)) 100)) (exists ((?y3 Real)) (= (+ (+ (* (- 93) ?y3) (* 98 ?y1)) (* 10 x1)) 33))) (exists ((?y3 Real)) (or (>= (+ (+ (* 85 ?y3) (* (- 70) ?y1)) (* (- 98) x1)) (- 8)) (>= (+ (+ (* 42 ?y3) (* (- 55) ?y1)) (* 60 x1)) 0)))))) (forall ((?y1 Real)) (and (and (and (< (+ (* 11 ?y1) (* (- 70) x1)) 0) (not (= (+ (* 18 ?y1) (* (- 90) x1)) 54))) (and (forall ((?y2 Real)) (not (= (+ (+ (* (- 61) ?y2) (* 25 ?y1)) (* 1 x1)) 0))) (or (<= (+ (* 97 ?y1) (* (- 32) x1)) (- 45)) (exists ((?y2 Real)) (= (+ (* (- 66) ?y2) (* (- 3) x1)) 14))))) (exists ((?y2 Real)) (forall ((?y3 Real)) (and (> (+ (+ (* (- 20) ?y3) (* (- 81) ?y1)) (* (- 33) x1)) (- 100)) (> (+ (+ (+ (* (- 67) ?y3) (* (- 55) ?y2)) (* 88 ?y1)) (* 31 x1)) 74))))))) (or (forall ((?y1 Real)) (forall ((?y2 Real)) (exists ((?y3 Real)) (or (not (= (+ (+ (+ (* 6 ?y3) (* 82 ?y2)) (* (- 78) ?y1)) (* 32 x1)) (- 9))) (and (and (>= (+ (+ (* (- 86) ?y2) (* 24 ?y1)) (* 78 x1)) (- 62)) (not (= (+ (+ (* (- 73) ?y3) (* (- 14) ?y2)) (* (- 7) ?y1)) 84))) (and (<= (+ (+ (* (- 25) ?y2) (* 37 ?y1)) (* 83 x1)) (- 73)) (= (+ (* (- 87) ?y3) (* (- 29) ?y2)) (- 88)))))))) (exists ((?y1 Real)) (or (and (forall ((?y2 Real)) (exists ((?y3 Real)) (or (> (+ (+ (* (- 82) ?y3) (* 68 ?y2)) (* 75 x1)) (- 54)) (> (+ (* 88 ?y1) (* (- 22) x1)) 3)))) (or (or (>= (* (- 29) x1) 0) (>= (* (- 96) x1) 0)) (exists ((?y3 Real)) (> (+ (* 84 ?y1) (* (- 77) x1)) 35)))) (or (exists ((?y3 Real)) (<= (+ (+ (* 28 ?y3) (* 18 ?y1)) (* 44 x1)) 0)) (exists ((?y2 Real)) (or (or (< (+ (* 96 ?y1) (* 17 x1)) (- 71)) (= (+ (* 33 ?y2) (* (- 59) ?y1)) 0)) (or (= (+ (* (- 25) ?y2) (* 99 ?y1)) 0) (> (+ (* 75 ?y2) (* (- 22) x1)) 0))))))))) (or (forall ((?y1 Real)) (exists ((?y3 Real)) (and (and (or (or (<= (* 94 x1) (- 81)) (not (= (+ (* (- 11) ?y3) (* (- 43) ?y1)) 0))) (and (<= (* (- 10) ?y1) (- 81)) (< (+ (* 29 ?y1) (* 25 x1)) (- 41)))) (or (or (not (= (+ (+ (* (- 39) ?y3) (* (- 14) ?y1)) (* (- 83) x1)) 0)) (> (+ (* (- 13) ?y1) (* (- 52) x1)) 62)) (>= (+ (* (- 78) ?y3) (* (- 59) ?y1)) (- 74)))) (<= (+ (+ (* (- 34) ?y3) (* (- 91) ?y1)) (* (- 85) x1)) 0)))) (and (or (exists ((?y1 Real)) (or (exists ((?y2 Real)) (or (> (+ (* 100 ?y2) (* 34 x1)) 53) (> (+ (* (- 71) ?y2) (* (- 50) ?y1)) 65))) (exists ((?y2 Real)) (forall ((?y3 Real)) (and (<= (+ (* 62 ?y3) (* (- 4) ?y1)) 80) (>= (+ (+ (+ (* 43 ?y3) (* 32 ?y2)) (* (- 37) ?y1)) (* 1 x1)) 28)))))) (and (exists ((?y1 Real)) (exists ((?y2 Real)) (and (>= (+ (* (- 56) ?y1) (* 44 x1)) 1) (exists ((?y3 Real)) (< (+ (+ (+ (* (- 18) ?y3) (* (- 42) ?y2)) (* 17 ?y1)) (* (- 29) x1)) 91))))) (or (and (exists ((?y1 Real)) (forall ((?y2 Real)) (<= (+ (* 67 ?y1) (* (- 5) x1)) (- 52)))) (forall ((?y2 Real)) (= (* 22 ?y2) (- 57)))) (or (or (exists ((?y1 Real)) (< (+ (* 84 ?y1) (* 52 x1)) 88)) (or (> (* 93 x1) 0) (< (* (- 64) x1) 13))) (forall ((?y1 Real)) (>= (* 2 x1) 0)))))) (or (exists ((?y1 Real)) (or (= (+ (* (- 8) ?y1) (* 87 x1)) 3) (and (exists ((?y3 Real)) (> (+ (* 29 ?y3) (* 71 ?y1)) 47)) (and (not (= (+ (* 57 ?y1) (* (- 42) x1)) (- 67))) (<= (* 97 ?y1) (- 12)))))) (forall ((?y1 Real)) (forall ((?y2 Real)) (or (or (>= (+ (* 70 ?y2) (* (- 19) ?y1)) 0) (>= (+ (+ (* 74 ?y2) (* 54 ?y1)) (* 30 x1)) (- 62))) (and (> (+ (* 5 ?y1) (* (- 7) x1)) 26) (>= (+ (+ (* (- 44) ?y2) (* (- 37) ?y1)) (* (- 24) x1)) 67)))))))))))
(check-sat)
(exit)
