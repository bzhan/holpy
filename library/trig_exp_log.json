{
    "content": [
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "exp_pos_poly_lower_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "real_infsum_offset, {f: λk. 1 / of_nat (fact k) * x ^ k, k: n, m: (0::nat)}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_summable (from 0) (λk. 1 / of_nat (fact k) * x ^ k) ⟶ 0 ≤ n ⟶ real_infsum (from 0) (λk. 1 / of_nat (fact k) * x ^ k) = sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp_series, {x: x}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_sums (λk. 1 / of_nat (fact k) * x ^ k) (exp x) univ"
                },
                {
                    "args": "from_0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "⊢ real_sums (λk. 1 / of_nat (fact k) * x ^ k) (exp x) (from 0)"
                },
                {
                    "args": "exI, {P: λa1. real_sums (λk. 1 / of_nat (fact k) * x ^ k) a1 (from 0), a: exp x}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. real_sums (λk. 1 / of_nat (fact k) * x ^ k) a1 (from 0)"
                },
                {
                    "args": "real_summable_def, real_summable (from 0) (λk. 1 / of_nat (fact k) * x ^ k)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ real_summable (from 0) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "le_0, {n: n}",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ n"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "1",
                        "5",
                        "6"
                    ],
                    "rule": "apply_fact",
                    "th": "0 ≤ x ⊢ real_infsum (from 0) (λk. 1 / of_nat (fact k) * x ^ k) = sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "∀a::real. ∀b. a ≤ a + b ⟷ 0 ≤ b",
                    "id": "8",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. a ≤ a + b ⟷ 0 ≤ b"
                },
                {
                    "args": "real_summable_from_elsewhere, {f: λk. 1 / of_nat (fact k) * x ^ k, m: (0::nat), n: n + 1}",
                    "id": "9",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x ⊢ real_summable (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "real_sums_infsum, real_sums (λk. 1 / of_nat (fact k) * x ^ k) (real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)) (from (n + 1))",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ real_sums (λk. 1 / of_nat (fact k) * x ^ k) (real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)) (from (n + 1))"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "0 ≤ x ⊢ ∀i. i ∈ from (n + 1) ⟶ 0 ≤ 1 / of_nat (fact i) * x ^ i"
                },
                {
                    "args": "i, nat",
                    "id": "11.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "i ∈ from (n + 1)",
                    "id": "11.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ∈ from (n + 1) ⊢ i ∈ from (n + 1)"
                },
                {
                    "args": "fact_lt, {n: i}",
                    "id": "11.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact i"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact i)",
                    "id": "11.3",
                    "prevs": [
                        "11.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact i)"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact i)",
                    "id": "11.4",
                    "prevs": [
                        "11.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ (0::real) < of_nat (fact i)"
                },
                {
                    "args": "real_lt_inv",
                    "id": "11.5",
                    "prevs": [
                        "11.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ 0 < real_inverse (of_nat (fact i))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "11.6",
                    "prevs": [
                        "11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ 0 ≤ real_inverse (of_nat (fact i))"
                },
                {
                    "args": "real_pow_le, {n: i, x: x}",
                    "id": "11.7",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ 0 ≤ x ^ i"
                },
                {
                    "args": "real_le_mul",
                    "id": "11.8",
                    "prevs": [
                        "11.6",
                        "11.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ 0 ≤ real_inverse (of_nat (fact i)) * x ^ i"
                },
                {
                    "args": "real_inverse_divide, 0 ≤ 1 / of_nat (fact i) * x ^ i",
                    "id": "11.9",
                    "prevs": [
                        "11.8"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "0 ≤ x, i ∈ from (n + 1) ⊢ 0 ≤ 1 / of_nat (fact i) * x ^ i"
                },
                {
                    "args": "",
                    "id": "11.10",
                    "prevs": [
                        "11.0",
                        "11.1",
                        "11.9"
                    ],
                    "rule": "intros",
                    "th": "0 ≤ x ⊢ ∀i. i ∈ from (n + 1) ⟶ 0 ≤ 1 / of_nat (fact i) * x ^ i"
                },
                {
                    "args": "real_series_pos",
                    "id": "12",
                    "prevs": [
                        "10",
                        "11"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ⊢ 0 ≤ real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) ≤ sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)",
                    "id": "13",
                    "prevs": [
                        "8",
                        "12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "0 ≤ x ⊢ sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) ≤ sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "real_inverse_divide, sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ sum ({0..n}) (λk. 1 / of_nat (fact k) * x ^ k) + real_infsum (from (n + 1)) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ real_infsum (from 0) (λk. 1 / of_nat (fact k) * x ^ k)",
                    "id": "15",
                    "prevs": [
                        "7",
                        "14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "0 ≤ x ⊢ sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ real_infsum (from 0) (λk. 1 / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp_infsum, sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "0 ≤ x ⊢ sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "0",
                        "16"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x"
                }
            ],
            "prop": "0 ≤ x ⟶ sum ({0..n}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "exp_infsum"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_f": "(λk. 1 / of_nat (fact k) * x ^ k)",
                    "param_k": "n",
                    "param_m": "(0::nat)",
                    "theorem": "real_infsum_offset"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal": "real_summable (from 0) (λk. 1 / of_nat (fact k) * x ^ k)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "exp_series"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "from_0"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_summable_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                },
                {
                    "goal": "0 ≤ n",
                    "goal_id": "6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "1",
                        "5",
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_inverse_divide"
                },
                {
                    "goal": "!a::real. !b. a <= a + b <--> 0 <= b",
                    "goal_id": "8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "param_f": "(λk. 1 / of_nat (fact k) * x ^ k)",
                    "param_s": "from (n + 1)",
                    "theorem": "real_series_pos"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_sums_infsum"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "param_m": "(0::nat)",
                    "theorem": "real_summable_from_elsewhere"
                },
                {
                    "goal_id": "11",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_inverse_divide"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "11.2",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "11.7",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "exp_ge1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "exp_pos_poly_lower_bound, {n: (0::nat), x: x}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ x ⟶ sum ({0..0}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "apply_fact",
                    "th": "0 ≤ x ⊢ sum ({0..0}) (λk. real_inverse (of_nat (fact k)) * x ^ k) ≤ exp x"
                },
                {
                    "args": "sum_sing_natseg",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ⊢ real_inverse (of_nat (fact 0)) * x ^ (0::nat) ≤ exp x"
                },
                {
                    "args": "fact_def_1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ⊢ real_inverse of_nat 1 * x ^ (0::nat) ≤ exp x"
                },
                {
                    "args": "real_nat_power_def_1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ⊢ real_inverse of_nat 1 * 1 ≤ exp x"
                },
                {
                    "args": "real_one_def",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "0 ≤ x ⊢ real_inverse 1 * 1 ≤ exp x"
                },
                {
                    "args": "real_mul_rid",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ⊢ real_inverse 1 ≤ exp x"
                },
                {
                    "args": "real_inv_1",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 ≤ x ⊢ 1 ≤ exp x"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ 1 ≤ exp x"
                }
            ],
            "prop": "0 ≤ x ⟶ 1 ≤ exp x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_n": "(0::nat)",
                    "param_x": "x",
                    "theorem": "exp_pos_poly_lower_bound"
                },
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_sing_natseg"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_inv_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "neg_exp_le1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "exp_ge1",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ⊢ 1 ≤ exp x"
                },
                {
                    "args": "real_inv_le_1",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ x ⊢ real_inverse (exp x) ≤ 1"
                },
                {
                    "args": "real_exp_neg, exp (-x) ≤ 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ exp (-x) ≤ 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ exp (-x) ≤ 1"
                }
            ],
            "prop": "0 ≤ x ⟶ exp (-x) ≤ 1",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_exp_neg"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_inv_le_1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "exp_ge1"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "neg_exp_series",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "exp_series, {x: -x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_sums (λk. 1 / of_nat (fact k) * -x ^ k) (exp (-x)) univ"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀k. 1 / of_nat (fact k) * -x ^ k = -1 ^ k / of_nat (fact k) * x ^ k"
                },
                {
                    "args": "k, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "-x = -1 * x",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ -x = -1 * x"
                },
                {
                    "args": "1 * real_inverse (of_nat (fact k)) * (-1 ^ k * x ^ k) = -1 ^ k * real_inverse (of_nat (fact k)) * x ^ k",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ 1 * real_inverse (of_nat (fact k)) * (-1 ^ k * x ^ k) = -1 ^ k * real_inverse (of_nat (fact k)) * x ^ k"
                },
                {
                    "args": "real_divide_def, 1 / of_nat (fact k) * (-1 ^ k * x ^ k) = -1 ^ k / of_nat (fact k) * x ^ k",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 1 / of_nat (fact k) * (-1 ^ k * x ^ k) = -1 ^ k / of_nat (fact k) * x ^ k"
                },
                {
                    "args": "real_pow_mul, 1 / of_nat (fact k) * (-1 * x) ^ k = -1 ^ k / of_nat (fact k) * x ^ k",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 1 / of_nat (fact k) * (-1 * x) ^ k = -1 ^ k / of_nat (fact k) * x ^ k"
                },
                {
                    "args": "1 / of_nat (fact k) * -x ^ k = -1 ^ k / of_nat (fact k) * x ^ k",
                    "id": "1.5",
                    "prevs": [
                        "1.1",
                        "1.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ 1 / of_nat (fact k) * -x ^ k = -1 ^ k / of_nat (fact k) * x ^ k"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀k. 1 / of_nat (fact k) * -x ^ k = -1 ^ k / of_nat (fact k) * x ^ k"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) univ"
                },
                {
                    "args": "from_0, real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) (from 0)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) (from 0)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) (from 0)"
                }
            ],
            "prop": "real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) (from 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_x": "-x",
                    "theorem": "exp_series"
                },
                {
                    "goal": "!k. 1 / of_nat (fact k) * -x ^ k = -1 ^ k / of_nat (fact k) * x ^ k",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "goal": "-x = -1 * x",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_mul"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "from_0"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "neg_exp_infsum",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "neg_exp_series, {x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_sums (λk. -1 ^ k / of_nat (fact k) * x ^ k) (exp (-x)) (from 0)"
                },
                {
                    "args": "real_infsum_unique",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k) = exp (-x)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k) = exp (-x)"
                }
            ],
            "prop": "real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k) = exp (-x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "real_infsum_unique"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "neg_exp_series"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "n_le_fact",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "le_0, {n: fact 0}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ fact 0"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀n. n ≤ fact n ⟶ Suc n ≤ fact (Suc n)"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n ≤ fact n",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ fact n ⊢ n ≤ fact n"
                },
                {
                    "args": "∀a::nat. ∀b. a ≤ b ⟷ a * 1 ≤ b",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::nat. ∀b. a ≤ b ⟷ a * 1 ≤ b"
                },
                {
                    "args": "less_eq_refl, {n: Suc n}",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ Suc n ≤ Suc n"
                },
                {
                    "args": "fact_le, {n: n}",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 1 ≤ fact n"
                },
                {
                    "args": "le_mult2",
                    "id": "1.5",
                    "prevs": [
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ fact n ⊢ Suc n * 1 ≤ Suc n * fact n"
                },
                {
                    "args": "Suc n ≤ Suc n * fact n",
                    "id": "1.6",
                    "prevs": [
                        "1.2",
                        "1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "n ≤ fact n ⊢ Suc n ≤ Suc n * fact n"
                },
                {
                    "args": "fact_def_2, Suc n ≤ fact (Suc n)",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "n ≤ fact n ⊢ Suc n ≤ fact (Suc n)"
                },
                {
                    "args": "",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. n ≤ fact n ⟶ Suc n ≤ fact (Suc n)"
                },
                {
                    "args": "nat_induct, {P: λn. n ≤ fact n, x: n}",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ≤ fact n"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ n ≤ fact n"
                }
            ],
            "prop": "n ≤ fact n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_2"
                },
                {
                    "goal": "!a::nat. !b. a <= b <--> a * 1 <= b",
                    "goal_id": "1.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "le_mult2"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_le"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "name": "exp_alt_sign_lemma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x ≤ 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 1 ⊢ x ≤ 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "k, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "real_abs_pos, {x: -1 ^ (k + 1) / of_nat (fact (k + 1))}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (-1 ^ (k + 1) / of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_abs_pos, {x: -(1::real) ^ (k + 1)}",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ abs (-1 ^ (k + 1))"
                },
                {
                    "args": "real_le_refl, {x: (1::real)}",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::real) ≤ 1"
                },
                {
                    "args": "abs_neg_one_pow, abs (-(1::real) ^ (k + 1)) ≤ abs (-1 ^ k)",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-(1::real) ^ (k + 1)) ≤ abs (-1 ^ k)"
                },
                {
                    "args": "real_abs_pos, {x: real_inverse (of_nat (fact (k + 1)))}",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (real_inverse (of_nat (fact (k + 1))))"
                },
                {
                    "args": "fact_lt, {n: k}",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact k"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact k)",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact k)"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact k)",
                    "id": "2.8",
                    "prevs": [
                        "2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat (fact k)"
                },
                {
                    "args": "le_add, {m: k, n: (1::nat)}",
                    "id": "2.9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ k ≤ k + 1"
                },
                {
                    "args": "fact_mono",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ fact k ≤ fact (k + 1)"
                },
                {
                    "args": "real_of_nat_le, (of_nat::nat ⇒ real) (fact k) ≤ of_nat (fact (k + 1))",
                    "id": "2.11",
                    "prevs": [
                        "2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) (fact k) ≤ of_nat (fact (k + 1))"
                },
                {
                    "args": "real_le_inv2",
                    "id": "2.12",
                    "prevs": [
                        "2.8",
                        "2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ real_inverse (of_nat (fact (k + 1))) ≤ real_inverse (of_nat (fact k))"
                },
                {
                    "args": "real_abs_nat, real_inverse (abs (of_nat (fact (k + 1)))) ≤ real_inverse (abs (of_nat (fact k)))",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ real_inverse (abs (of_nat (fact (k + 1)))) ≤ real_inverse (abs (of_nat (fact k)))"
                },
                {
                    "args": "real_abs_inv, abs (real_inverse (of_nat (fact (k + 1)))) ≤ abs (real_inverse (of_nat (fact k)))",
                    "id": "2.14",
                    "prevs": [
                        "2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (real_inverse (of_nat (fact (k + 1)))) ≤ abs (real_inverse (of_nat (fact k)))"
                },
                {
                    "args": "real_le_mul2",
                    "id": "2.15",
                    "prevs": [
                        "2.2",
                        "2.4",
                        "2.5",
                        "2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1)) * abs (real_inverse (of_nat (fact (k + 1)))) ≤ abs (-1 ^ k) * abs (real_inverse (of_nat (fact k)))"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ (k + 1) * real_inverse (of_nat (fact (k + 1)))) ≤ abs (-1 ^ k * real_inverse (of_nat (fact k)))",
                    "id": "2.16",
                    "prevs": [
                        "2.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) * real_inverse (of_nat (fact (k + 1)))) ≤ abs (-1 ^ k * real_inverse (of_nat (fact k)))"
                },
                {
                    "args": "real_divide_def, abs (-1 ^ (k + 1) / of_nat (fact (k + 1))) ≤ abs (-1 ^ k / of_nat (fact k))",
                    "id": "2.17",
                    "prevs": [
                        "2.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 1))) ≤ abs (-1 ^ k / of_nat (fact k))"
                },
                {
                    "args": "real_abs_pos, {x: x ^ (k + 1)}",
                    "id": "2.18",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (x ^ (k + 1))"
                },
                {
                    "args": "real_abs_pos, {x: x}",
                    "id": "2.19",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs x"
                },
                {
                    "args": "abs x ≤ 1",
                    "id": "2.20",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ≤ 1"
                },
                {
                    "args": "real_pow_mono_inv",
                    "id": "2.21",
                    "prevs": [
                        "2.19",
                        "2.20",
                        "2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ^ (k + 1) ≤ abs x ^ k"
                },
                {
                    "args": "real_abs_pow, abs (x ^ (k + 1)) ≤ abs (x ^ k)",
                    "id": "2.22",
                    "prevs": [
                        "2.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (x ^ (k + 1)) ≤ abs (x ^ k)"
                },
                {
                    "args": "real_le_mul2",
                    "id": "2.23",
                    "prevs": [
                        "2.1",
                        "2.17",
                        "2.18",
                        "2.22"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 1))) * abs (x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k)) * abs (x ^ k)"
                },
                {
                    "args": "",
                    "id": "2.24",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d"
                },
                {
                    "args": "a, real",
                    "id": "2.24.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "2.24.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "c, real",
                    "id": "2.24.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "d, real",
                    "id": "2.24.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "r, real",
                    "id": "2.24.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR r"
                },
                {
                    "args": "t, real",
                    "id": "2.24.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR t"
                },
                {
                    "args": "a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) * real_inverse b * real_inverse d",
                    "id": "2.24.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) * real_inverse b * real_inverse d"
                },
                {
                    "args": "real_divide_def, a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d",
                    "id": "2.24.7",
                    "prevs": [
                        "2.24.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d"
                },
                {
                    "args": "",
                    "id": "2.24.8",
                    "prevs": [
                        "2.24.0",
                        "2.24.1",
                        "2.24.2",
                        "2.24.3",
                        "2.24.4",
                        "2.24.5",
                        "2.24.7"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d"
                },
                {
                    "args": "real_divide_def, ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b / d",
                    "id": "2.25",
                    "prevs": [
                        "2.24"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b / d"
                },
                {
                    "args": "real_pow_1, ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d",
                    "id": "2.26",
                    "prevs": [
                        "2.25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d"
                },
                {
                    "args": "1 + (k + 1) + k = 2 * (k + 1)",
                    "id": "2.27",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ 1 + (k + 1) + k = 2 * (k + 1)"
                },
                {
                    "args": "real_le_pow_2, {x: -(1::real)}",
                    "id": "2.28",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ -1 ^ (2::nat)"
                },
                {
                    "args": "real_pow_le, {n: k + 1, x: -(1::real) ^ (2::nat)}",
                    "id": "2.29",
                    "prevs": [
                        "2.28"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) ≤ -1 ^ (2::nat) ^ (k + 1)"
                },
                {
                    "args": "real_pow_pow, (0::real) ≤ -1 ^ (2 * (k + 1))",
                    "id": "2.30",
                    "prevs": [
                        "2.29"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) ≤ -1 ^ (2 * (k + 1))"
                },
                {
                    "args": "(0::real) ≤ -1 ^ (1 + (k + 1) + k)",
                    "id": "2.31",
                    "prevs": [
                        "2.27",
                        "2.30"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) ≤ -1 ^ (1 + (k + 1) + k)"
                },
                {
                    "args": "real_pow_le, {n: k + 1 + k, x: x}",
                    "id": "2.32",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ x ^ (k + 1 + k)"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.33",
                    "prevs": [
                        "2.31",
                        "2.32"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k)"
                },
                {
                    "args": "fact_lt, {n: k + 1}",
                    "id": "2.34",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact (k + 1)"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 1))",
                    "id": "2.35",
                    "prevs": [
                        "2.34"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 1))"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact (k + 1))",
                    "id": "2.36",
                    "prevs": [
                        "2.35"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat (fact (k + 1))"
                },
                {
                    "args": "real_lt_inv",
                    "id": "2.37",
                    "prevs": [
                        "2.36"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 < real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "2.38",
                    "prevs": [
                        "2.37"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.39",
                    "prevs": [
                        "2.33",
                        "2.38"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) * real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_lt_inv",
                    "id": "2.40",
                    "prevs": [
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 < real_inverse (of_nat (fact k))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "2.41",
                    "prevs": [
                        "2.40"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ real_inverse (of_nat (fact k))"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.42",
                    "prevs": [
                        "2.39",
                        "2.41"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) * real_inverse (of_nat (fact (k + 1))) * real_inverse (of_nat (fact k))"
                },
                {
                    "args": "real_divide_def, 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) / of_nat (fact (k + 1)) * real_inverse (of_nat (fact k))",
                    "id": "2.43",
                    "prevs": [
                        "2.42"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) / of_nat (fact (k + 1)) * real_inverse (of_nat (fact k))"
                },
                {
                    "args": "real_divide_def, 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) / of_nat (fact (k + 1)) / of_nat (fact k)",
                    "id": "2.44",
                    "prevs": [
                        "2.43"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 1 + k) / of_nat (fact (k + 1)) / of_nat (fact k)"
                },
                {
                    "args": "real_pow_add, 0 ≤ -1 ^ (1 + (k + 1)) * -1 ^ k * x ^ (k + 1 + k) / of_nat (fact (k + 1)) / of_nat (fact k)",
                    "id": "2.45",
                    "prevs": [
                        "2.44"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1)) * -1 ^ k * x ^ (k + 1 + k) / of_nat (fact (k + 1)) / of_nat (fact k)"
                },
                {
                    "args": "real_pow_add, 0 ≤ -1 ^ (1::nat) * -1 ^ (k + 1) * -1 ^ k * (x ^ (k + 1) * x ^ k) / of_nat (fact (k + 1)) / of_nat (fact k)",
                    "id": "2.46",
                    "prevs": [
                        "2.45"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1::nat) * -1 ^ (k + 1) * -1 ^ k * (x ^ (k + 1) * x ^ k) / of_nat (fact (k + 1)) / of_nat (fact k)"
                },
                {
                    "args": "-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0",
                    "id": "2.47",
                    "prevs": [
                        "2.26",
                        "2.46"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ≤ 1, 0 ≤ x ⊢ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "conjI",
                    "id": "2.48",
                    "prevs": [
                        "2.23",
                        "2.47"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 1))) * abs (x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k)) * abs (x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0",
                    "id": "2.49",
                    "prevs": [
                        "2.48"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "",
                    "id": "2.50",
                    "prevs": [
                        "2.0",
                        "2.49"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀n. 1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "1 ≤ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ n ⊢ 1 ≤ n"
                },
                {
                    "args": "∀a::real. ∀b. a ≤ b ⟷ a ≤ b * 1",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. a ≤ b ⟷ a ≤ b * 1"
                },
                {
                    "args": "real_abs_pos, {x: -1 ^ n * real_inverse (of_nat (fact n))}",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (-1 ^ n * real_inverse (of_nat (fact n)))"
                },
                {
                    "args": "0 < n",
                    "id": "3.4",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "z3",
                    "th": "1 ≤ n ⊢ 0 < n"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat n",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat n"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat n",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat n"
                },
                {
                    "args": "n_le_fact, {n: n}",
                    "id": "3.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ≤ fact n"
                },
                {
                    "args": "real_of_nat_le, (of_nat::nat ⇒ real) n ≤ of_nat (fact n)",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) n ≤ of_nat (fact n)"
                },
                {
                    "args": "real_le_inv2",
                    "id": "3.9",
                    "prevs": [
                        "3.6",
                        "3.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ real_inverse (of_nat (fact n)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_nat, real_inverse (abs (of_nat (fact n))) ≤ real_inverse (of_nat n)",
                    "id": "3.10",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ real_inverse (abs (of_nat (fact n))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_inv, abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)",
                    "id": "3.11",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_mul_lid, 1 * abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)",
                    "id": "3.12",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ 1 * abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "abs_neg_one_pow, abs (-1 ^ n) * abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)",
                    "id": "3.13",
                    "prevs": [
                        "3.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n) * abs (real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ n * real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)",
                    "id": "3.14",
                    "prevs": [
                        "3.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n * real_inverse (of_nat (fact n))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_pos, {x: x ^ n}",
                    "id": "3.15",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (x ^ n)"
                },
                {
                    "args": "real_abs_pos, {x: x}",
                    "id": "3.16",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs x"
                },
                {
                    "args": "abs x ≤ 1",
                    "id": "3.17",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ≤ 1"
                },
                {
                    "args": "real_pow_1_le, {n: n, x: abs x}",
                    "id": "3.18",
                    "prevs": [
                        "3.16",
                        "3.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs x ^ n ≤ 1"
                },
                {
                    "args": "real_abs_pow, abs (x ^ n) ≤ 1",
                    "id": "3.19",
                    "prevs": [
                        "3.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (x ^ n) ≤ 1"
                },
                {
                    "args": "real_le_mul2",
                    "id": "3.20",
                    "prevs": [
                        "3.3",
                        "3.14",
                        "3.15",
                        "3.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n * real_inverse (of_nat (fact n))) * abs (x ^ n) ≤ real_inverse (of_nat n) * 1"
                },
                {
                    "args": "abs (-1 ^ n * real_inverse (of_nat (fact n))) * abs (x ^ n) ≤ real_inverse (of_nat n)",
                    "id": "3.21",
                    "prevs": [
                        "3.2",
                        "3.20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n * real_inverse (of_nat (fact n))) * abs (x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ n * real_inverse (of_nat (fact n)) * x ^ n) ≤ real_inverse (of_nat n)",
                    "id": "3.22",
                    "prevs": [
                        "3.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n * real_inverse (of_nat (fact n)) * x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_divide_def, abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n)",
                    "id": "3.23",
                    "prevs": [
                        "3.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "",
                    "id": "3.24",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.23"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀n. 1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n), a: (1::nat)}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∃a1. ∀n. a1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "eventually_sequentially, eventually (λx1. abs (-1 ^ x1 / of_nat (fact x1) * x ^ x1) ≤ real_inverse (of_nat x1)) sequentially",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ eventually (λx1. abs (-1 ^ x1 / of_nat (fact x1) * x ^ x1) ≤ real_inverse (of_nat x1)) sequentially"
                },
                {
                    "args": "reallim_1_over_n",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ tendsto_real (λn. real_inverse (of_nat n)) 0 sequentially"
                },
                {
                    "args": "reallim_null_comparison",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ tendsto_real (λx1. -1 ^ x1 / of_nat (fact x1) * x ^ x1) 0 sequentially"
                },
                {
                    "args": "conjI",
                    "id": "8",
                    "prevs": [
                        "2",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ x ≤ 1 ⟶ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ x ≤ 1 ",
                "   ⟶ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ ",
                "         abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ ",
                "         -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * ",
                "         (-1 ^ k / of_nat (fact k) * x ^ k) ≤ ",
                "         0) ∧ ",
                "      tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_neg_one_pow"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_inv"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inv2"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_mono"
                },
                {
                    "goal_id": "2.9",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                },
                {
                    "goal_id": "2.18",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_pow"
                },
                {
                    "goal_id": "2.19",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_mono_inv"
                },
                {
                    "goal_id": "2.19",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2.20",
                    "method_name": "z3"
                },
                {
                    "goal": "!a::real. !b. !c. !d. !r. !t. (a / b * r) * (c / d * t) <= 0 \n\t\t <--> 0 <= ((-1 ^ (1::nat) * a * c) * (r * t)) / b / d",
                    "goal_id": "2.24",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_1"
                },
                {
                    "goal_id": "2.24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.24",
                    "method_name": "introduction",
                    "names": "a,b,c,d,r,t"
                },
                {
                    "goal_id": "2.24.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.24.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.26"
                    ],
                    "goal_id": "2.27",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal": "1 + (k + 1) + k = 2 * (k+1)",
                    "goal_id": "2.27",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.27",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "2.27"
                    ],
                    "goal_id": "2.28",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.28",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_pow"
                },
                {
                    "goal_id": "2.28",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "2.28",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_pow_2"
                },
                {
                    "goal_id": "2.32",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "2.40",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "2.40",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_g": "(%k. real_inverse (of_nat k))",
                    "theorem": "reallim_null_comparison"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal": "∀a::real. ∀b. a ≤ b ⟷ a ≤ b * 1",
                    "goal_id": "3.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_neg_one_pow"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_inv"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inv2"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "apply_backward_step",
                    "theorem": "n_le_fact"
                },
                {
                    "goal_id": "3.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "3.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_pow"
                },
                {
                    "goal_id": "3.16",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_1_le"
                },
                {
                    "goal_id": "3.16",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "3.17",
                    "method_name": "z3"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_1_over_n"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "exp_neg_poly_upper_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x ≤ 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 1 ⊢ x ≤ 1"
                },
                {
                    "args": "even n",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "even_exists",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n ⊢ ∃m. n = 2 * m"
                },
                {
                    "args": "m, nat",
                    "id": "4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n = 2 * m",
                    "id": "5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 2 * m ⊢ n = 2 * m"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ n = 0 ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "n = 0",
                    "id": "6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "neg_exp_le1",
                    "id": "6.1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ 1"
                },
                {
                    "args": "real_div_1, exp (-x) ≤ 1 / 1",
                    "id": "6.2",
                    "prevs": [
                        "6.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ 1 / 1"
                },
                {
                    "args": "real_one_def, exp (-x) ≤ 1 / of_nat 1",
                    "id": "6.3",
                    "prevs": [
                        "6.2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ 1 / of_nat 1"
                },
                {
                    "args": "fact_def_1, exp (-x) ≤ 1 / of_nat (fact 0)",
                    "id": "6.4",
                    "prevs": [
                        "6.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ 1 / of_nat (fact 0)"
                },
                {
                    "args": "real_mul_rid, exp (-x) ≤ 1 / of_nat (fact 0) * 1",
                    "id": "6.5",
                    "prevs": [
                        "6.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ 1 / of_nat (fact 0) * 1"
                },
                {
                    "args": "real_nat_power_def_1, exp (-x) ≤ -1 ^ (0::nat) / of_nat (fact 0) * x ^ (0::nat)",
                    "id": "6.6",
                    "prevs": [
                        "6.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ -1 ^ (0::nat) / of_nat (fact 0) * x ^ (0::nat)"
                },
                {
                    "args": "sum_sing_natseg, exp (-x) ≤ sum ({0..0}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "id": "6.7",
                    "prevs": [
                        "6.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ sum ({0..0}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "id": "6.8",
                    "prevs": [
                        "6.0",
                        "6.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, n = 0, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "",
                    "id": "6.9",
                    "prevs": [
                        "6.0",
                        "6.8"
                    ],
                    "rule": "intros",
                    "th": "even n, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ n = 0 ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ ¬(n = 0) ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "alt_sign_upper_bound, {f: λk. -1 ^ k / of_nat (fact k) * x ^ k, k: n, m: (0::nat)}",
                    "id": "7.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀n1. abs (-1 ^ (n1 + 1) / of_nat (fact (n1 + 1)) * x ^ (n1 + 1)) ≤ abs (-1 ^ n1 / of_nat (fact n1) * x ^ n1) ∧ -1 ^ (n1 + 1) / of_nat (fact (n1 + 1)) * x ^ (n1 + 1) * (-1 ^ n1 / of_nat (fact n1) * x ^ n1) ≤ 0) ⟶ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially ⟶ 0 < n ⟶ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + abs (-1 ^ n / of_nat (fact n) * x ^ n)"
                },
                {
                    "args": "le_1_1",
                    "id": "7.2",
                    "prevs": [
                        "7.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ 0 < n"
                },
                {
                    "args": "exp_alt_sign_lemma",
                    "id": "7.3",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                },
                {
                    "args": "conjD1",
                    "id": "7.4",
                    "prevs": [
                        "7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "conjD2",
                    "id": "7.5",
                    "prevs": [
                        "7.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                },
                {
                    "args": "",
                    "id": "7.6",
                    "prevs": [
                        "7.1",
                        "7.4",
                        "7.5",
                        "7.2"
                    ],
                    "rule": "apply_fact",
                    "th": "x ≤ 1, 0 ≤ x, ¬(n = 0) ⊢ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + abs (-1 ^ n / of_nat (fact n) * x ^ n)"
                },
                {
                    "args": "neg_exp_infsum",
                    "id": "7.7",
                    "prevs": [
                        "7.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ≤ 1, 0 ≤ x, ¬(n = 0) ⊢ exp (-x) ≤ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + abs (-1 ^ n / of_nat (fact n) * x ^ n)"
                },
                {
                    "args": "",
                    "id": "7.8",
                    "prevs": [
                        "5",
                        "7.7"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + abs (-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m))"
                },
                {
                    "args": "",
                    "id": "7.9",
                    "prevs": [
                        "5",
                        "7.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0), n = 2 * m ⊢ ¬(2 * m = 0)"
                },
                {
                    "args": "le_1_2",
                    "id": "7.10",
                    "prevs": [
                        "7.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 1 ≤ 2 * m"
                },
                {
                    "args": "sub_add",
                    "id": "7.11",
                    "prevs": [
                        "7.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 2 * m - 1 + 1 = 2 * m"
                },
                {
                    "args": "add_1_right, Suc (2 * m - 1) = 2 * m",
                    "id": "7.12",
                    "prevs": [
                        "7.11"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ Suc (2 * m - 1) = 2 * m"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "7.13",
                    "prevs": [
                        "7.12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 2 * m = Suc (2 * m - 1)"
                },
                {
                    "args": "le_0, {n: Suc (2 * m - 1)}",
                    "id": "7.14",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ Suc (2 * m - 1)"
                },
                {
                    "args": "real_le_pow_2, {x: -(1::real)}",
                    "id": "7.15",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ -1 ^ (2::nat)"
                },
                {
                    "args": "real_pow_le, {n: m, x: -(1::real) ^ (2::nat)}",
                    "id": "7.16",
                    "prevs": [
                        "7.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ (0::real) ≤ -1 ^ (2::nat) ^ m"
                },
                {
                    "args": "real_pow_pow, (0::real) ≤ -1 ^ (2 * m)",
                    "id": "7.17",
                    "prevs": [
                        "7.16"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ (0::real) ≤ -1 ^ (2 * m)"
                },
                {
                    "args": "fact_lt, {n: 2 * m}",
                    "id": "7.18",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact (2 * m)"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact (2 * m))",
                    "id": "7.19",
                    "prevs": [
                        "7.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact (2 * m))"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact (2 * m))",
                    "id": "7.20",
                    "prevs": [
                        "7.19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ (0::real) < of_nat (fact (2 * m))"
                },
                {
                    "args": "real_lt_inv",
                    "id": "7.21",
                    "prevs": [
                        "7.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 < real_inverse (of_nat (fact (2 * m)))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "7.22",
                    "prevs": [
                        "7.21"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 ≤ real_inverse (of_nat (fact (2 * m)))"
                },
                {
                    "args": "real_le_mul",
                    "id": "7.23",
                    "prevs": [
                        "7.17",
                        "7.22"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 ≤ -1 ^ (2 * m) * real_inverse (of_nat (fact (2 * m)))"
                },
                {
                    "args": "real_divide_def, 0 ≤ -1 ^ (2 * m) / of_nat (fact (2 * m))",
                    "id": "7.24",
                    "prevs": [
                        "7.23"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 ≤ -1 ^ (2 * m) / of_nat (fact (2 * m))"
                },
                {
                    "args": "real_pow_le, {n: 2 * m, x: x}",
                    "id": "7.25",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 ≤ x ^ (2 * m)"
                },
                {
                    "args": "real_le_mul",
                    "id": "7.26",
                    "prevs": [
                        "7.24",
                        "7.25"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ 0 ≤ -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)"
                },
                {
                    "args": "if_P1, {P: 0 ≤ -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m), a: -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m), b: -(-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m))}",
                    "id": "7.27",
                    "prevs": [
                        "7.26"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ (if 0 ≤ -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m) then -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m) else -(-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m))) = -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)"
                },
                {
                    "args": "abs_def, abs (-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)) = -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)",
                    "id": "7.28",
                    "prevs": [
                        "7.27"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ abs (-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)) = -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)"
                },
                {
                    "args": "",
                    "id": "7.29",
                    "prevs": [
                        "7.28",
                        "7.8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)"
                },
                {
                    "args": "exp (-x) ≤ sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (2 * m - 1) / of_nat (fact (Suc (2 * m - 1))) * x ^ Suc (2 * m - 1)",
                    "id": "7.30",
                    "prevs": [
                        "7.12",
                        "7.29"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (2 * m - 1) / of_nat (fact (Suc (2 * m - 1))) * x ^ Suc (2 * m - 1)"
                },
                {
                    "args": "if_P, exp (-x) ≤ (if 0 ≤ Suc (2 * m - 1) then sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (2 * m - 1) / of_nat (fact (Suc (2 * m - 1))) * x ^ Suc (2 * m - 1) else sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k))",
                    "id": "7.31",
                    "prevs": [
                        "7.30",
                        "7.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ (if 0 ≤ Suc (2 * m - 1) then sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (2 * m - 1) / of_nat (fact (Suc (2 * m - 1))) * x ^ Suc (2 * m - 1) else sum ({0..2 * m - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k))"
                },
                {
                    "args": "sum_Suc_natseg, exp (-x) ≤ sum ({0..Suc (2 * m - 1)}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "id": "7.32",
                    "prevs": [
                        "7.31"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..Suc (2 * m - 1)}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp (-x) ≤ sum ({0..2 * m}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "id": "7.33",
                    "prevs": [
                        "7.13",
                        "7.32"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..2 * m}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "id": "7.34",
                    "prevs": [
                        "5",
                        "7.33"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, x ≤ 1, 0 ≤ x, ¬(n = 0), n = 2 * m ⊢ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "",
                    "id": "7.35",
                    "prevs": [
                        "7.0",
                        "7.34"
                    ],
                    "rule": "intros",
                    "th": "even n, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ ¬(n = 0) ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "classical_cases",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 1, 0 ≤ x, n = 2 * m ⊢ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "∃m. n = 2 * m",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ x ≤ 1 ⟶ even n ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ x ≤ 1 ⟶ even n ⟶ exp (-x) ≤ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "even_exists"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "case": "n=0",
                    "goal_id": "6",
                    "method_name": "cases"
                },
                {
                    "goal_id": "6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "6.0"
                    ],
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing_natseg"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_div_1"
                },
                {
                    "goal_id": "6.1",
                    "method_name": "apply_backward_step",
                    "theorem": "neg_exp_le1"
                },
                {
                    "goal_id": "7",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "7.1",
                    "method_name": "apply_forward_step",
                    "param_f": "(λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "param_k": "n",
                    "param_m": "(0::nat)",
                    "theorem": "alt_sign_upper_bound"
                },
                {
                    "fact_ids": [
                        "7.0"
                    ],
                    "goal_id": "7.2",
                    "method_name": "apply_forward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "7.3",
                    "method_name": "apply_forward_step",
                    "theorem": "exp_alt_sign_lemma"
                },
                {
                    "fact_ids": [
                        "7.3"
                    ],
                    "goal_id": "7.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "7.3"
                    ],
                    "goal_id": "7.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "7.1",
                        "7.4",
                        "7.5",
                        "7.2"
                    ],
                    "goal_id": "7.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "7.6"
                    ],
                    "goal_id": "7.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neg_exp_infsum"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "7.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "5",
                        "7.7"
                    ],
                    "goal_id": "7.8",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "Suc (2 * m - 1) = 2 * m",
                    "goal_id": "7.9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.9",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "7.9",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_add"
                },
                {
                    "goal_id": "7.9",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_2"
                },
                {
                    "fact_ids": [
                        "5",
                        "7.0"
                    ],
                    "goal_id": "7.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "7.12"
                    ],
                    "goal_id": "7.13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "7.13"
                    ],
                    "goal_id": "7.14",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7.14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_Suc_natseg"
                },
                {
                    "goal": "0 ≤ Suc (2 * m - 1)",
                    "goal_id": "7.14",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.14",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "7.14"
                    ],
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "7.12"
                    ],
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "abs (-1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)) = -1 ^ (2 * m) / of_nat (fact (2 * m)) * x ^ (2 * m)",
                    "goal_id": "7.15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_def"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "apply_backward_step",
                    "theorem": "if_P1"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_pow"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "7.15",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_pow_2"
                },
                {
                    "goal_id": "7.18",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "7.18",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "7.18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "7.18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "7.18",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "7.25",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "fact_ids": [
                        "7.28",
                        "7.8"
                    ],
                    "goal_id": "7.29",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "exp_neg_poly_lower_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x ≤ 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 1 ⊢ x ≤ 1"
                },
                {
                    "args": "odd n",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd n ⊢ odd n"
                },
                {
                    "args": "alt_sign_lower_bound, {f: λk. -1 ^ k / of_nat (fact k) * x ^ k, k: n, m: (0::nat)}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀n1. abs (-1 ^ (n1 + 1) / of_nat (fact (n1 + 1)) * x ^ (n1 + 1)) ≤ abs (-1 ^ n1 / of_nat (fact n1) * x ^ n1) ∧ -1 ^ (n1 + 1) / of_nat (fact (n1 + 1)) * x ^ (n1 + 1) * (-1 ^ n1 / of_nat (fact n1) * x ^ n1) ≤ 0) ⟶ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially ⟶ 0 < n ⟶ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) - abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "exp_alt_sign_lemma",
                    "id": "4",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                },
                {
                    "args": "odd_exists",
                    "id": "5",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n ⊢ ∃m. n = Suc (2 * m)"
                },
                {
                    "args": "m, nat",
                    "id": "6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "n = Suc (2 * m)",
                    "id": "7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = Suc (2 * m) ⊢ n = Suc (2 * m)"
                },
                {
                    "args": "le_0, {n: 2 * m}",
                    "id": "8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ 2 * m"
                },
                {
                    "args": "less_Suc_lesseq, 0 < Suc (2 * m)",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 < Suc (2 * m)"
                },
                {
                    "args": "0 < n",
                    "id": "10",
                    "prevs": [
                        "7",
                        "9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 < n"
                },
                {
                    "args": "conjD1",
                    "id": "11",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ abs (-1 ^ k / of_nat (fact k) * x ^ k) ∧ -1 ^ (k + 1) / of_nat (fact (k + 1)) * x ^ (k + 1) * (-1 ^ k / of_nat (fact k) * x ^ k) ≤ 0"
                },
                {
                    "args": "conjD2",
                    "id": "12",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ tendsto_real (λk. -1 ^ k / of_nat (fact k) * x ^ k) 0 sequentially"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "3",
                        "11",
                        "12",
                        "10"
                    ],
                    "rule": "apply_fact",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) - abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ real_infsum (from 0) (λk. -1 ^ k / of_nat (fact k) * x ^ k)"
                },
                {
                    "args": "neg_exp_infsum",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) - abs (-1 ^ n / of_nat (fact n) * x ^ n) ≤ exp (-x)"
                },
                {
                    "args": "1 ≤ n",
                    "id": "15",
                    "prevs": [
                        "10"
                    ],
                    "rule": "z3",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 1 ≤ n"
                },
                {
                    "args": "sub_add",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ n - 1 + 1 = n"
                },
                {
                    "args": "add_1_right, Suc (n - 1) = n",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ Suc (n - 1) = n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ n = Suc (n - 1)"
                },
                {
                    "args": "le_0, {n: Suc (n - 1)}",
                    "id": "19",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ Suc (n - 1)"
                },
                {
                    "args": "real_minus_def",
                    "id": "20",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -(abs (-1 ^ n / of_nat (fact n) * x ^ n)) ≤ exp (-x)"
                },
                {
                    "args": "∀x::real. x ≤ 0 ⟶ -(abs x) = x",
                    "id": "21",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. x ≤ 0 ⟶ -(abs x) = x"
                },
                {
                    "args": "not_even",
                    "id": "22",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "odd n ⊢ ¬(even n)"
                },
                {
                    "args": "∀x::real. 0 ≤ x ⟶ -x ≤ 0",
                    "id": "23",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. 0 ≤ x ⟶ -x ≤ 0"
                },
                {
                    "args": "fact_lt, {n: n}",
                    "id": "24",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact n"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact n)",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact n)"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact n)",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ (0::real) < of_nat (fact n)"
                },
                {
                    "args": "real_lt_inv",
                    "id": "27",
                    "prevs": [
                        "26"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 < real_inverse (of_nat (fact n))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 ≤ real_inverse (of_nat (fact n))"
                },
                {
                    "args": "real_pow_le, {n: n, x: x}",
                    "id": "29",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 ≤ x ^ n"
                },
                {
                    "args": "real_le_mul",
                    "id": "30",
                    "prevs": [
                        "28",
                        "29"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ 0 ≤ real_inverse (of_nat (fact n)) * x ^ n"
                },
                {
                    "args": "real_inverse (of_nat (fact n)) * x ^ n",
                    "id": "31",
                    "prevs": [
                        "23",
                        "30"
                    ],
                    "rule": "apply_fact_for",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -(real_inverse (of_nat (fact n)) * x ^ n) ≤ 0"
                },
                {
                    "args": "real_mul_lneg, -(real_inverse (of_nat (fact n))) * x ^ n ≤ 0",
                    "id": "32",
                    "prevs": [
                        "31"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -(real_inverse (of_nat (fact n))) * x ^ n ≤ 0"
                },
                {
                    "args": "real_mul_lid, -(1 * real_inverse (of_nat (fact n))) * x ^ n ≤ 0",
                    "id": "33",
                    "prevs": [
                        "32"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -(1 * real_inverse (of_nat (fact n))) * x ^ n ≤ 0"
                },
                {
                    "args": "real_mul_lneg, -1 * real_inverse (of_nat (fact n)) * x ^ n ≤ 0",
                    "id": "34",
                    "prevs": [
                        "33"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -1 * real_inverse (of_nat (fact n)) * x ^ n ≤ 0"
                },
                {
                    "args": "real_divide_def, -1 / of_nat (fact n) * x ^ n ≤ 0",
                    "id": "35",
                    "prevs": [
                        "34"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -1 / of_nat (fact n) * x ^ n ≤ 0"
                },
                {
                    "args": "real_pow_one, -(1 ^ n) / of_nat (fact n) * x ^ n ≤ 0",
                    "id": "36",
                    "prevs": [
                        "35"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -(1 ^ n) / of_nat (fact n) * x ^ n ≤ 0"
                },
                {
                    "args": "if_not_P, (if even n then 1 ^ n else -(1 ^ n)) / of_nat (fact n) * x ^ n ≤ 0",
                    "id": "37",
                    "prevs": [
                        "36",
                        "22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ (if even n then 1 ^ n else -(1 ^ n)) / of_nat (fact n) * x ^ n ≤ 0"
                },
                {
                    "args": "real_pow_neg, -1 ^ n / of_nat (fact n) * x ^ n ≤ 0",
                    "id": "38",
                    "prevs": [
                        "37"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -1 ^ n / of_nat (fact n) * x ^ n ≤ 0"
                },
                {
                    "args": "-1 ^ n / of_nat (fact n) * x ^ n",
                    "id": "39",
                    "prevs": [
                        "21",
                        "38"
                    ],
                    "rule": "apply_fact_for",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ -(abs (-1 ^ n / of_nat (fact n) * x ^ n)) = -1 ^ n / of_nat (fact n) * x ^ n"
                },
                {
                    "args": "",
                    "id": "40",
                    "prevs": [
                        "39",
                        "20"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ n / of_nat (fact n) * x ^ n ≤ exp (-x)"
                },
                {
                    "args": "sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (n - 1) / of_nat (fact (Suc (n - 1))) * x ^ Suc (n - 1) ≤ exp (-x)",
                    "id": "41",
                    "prevs": [
                        "17",
                        "40"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (n - 1) / of_nat (fact (Suc (n - 1))) * x ^ Suc (n - 1) ≤ exp (-x)"
                },
                {
                    "args": "if_P, (if 0 ≤ Suc (n - 1) then sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (n - 1) / of_nat (fact (Suc (n - 1))) * x ^ Suc (n - 1) else sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)) ≤ exp (-x)",
                    "id": "42",
                    "prevs": [
                        "41",
                        "19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ (if 0 ≤ Suc (n - 1) then sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) + -1 ^ Suc (n - 1) / of_nat (fact (Suc (n - 1))) * x ^ Suc (n - 1) else sum ({0..n - 1}) (λk. -1 ^ k / of_nat (fact k) * x ^ k)) ≤ exp (-x)"
                },
                {
                    "args": "sum_Suc_natseg, sum ({0..Suc (n - 1)}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)",
                    "id": "43",
                    "prevs": [
                        "42"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..Suc (n - 1)}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)"
                },
                {
                    "args": "sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)",
                    "id": "44",
                    "prevs": [
                        "18",
                        "43"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, x ≤ 1, 0 ≤ x, n = Suc (2 * m) ⊢ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)"
                },
                {
                    "args": "∃m. n = Suc (2 * m)",
                    "id": "45",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5",
                        "6",
                        "7",
                        "44"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ x ≤ 1 ⟶ odd n ⟶ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ x ≤ 1 ⟶ odd n ⟶ sum ({0..n}) (λk. -1 ^ k / of_nat (fact k) * x ^ k) ≤ exp (-x)"
            ],
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_f": "(λk. -1 ^ k / of_nat (fact k) * x ^ k)",
                    "param_k": "n",
                    "param_m": "(0::nat)",
                    "theorem": "alt_sign_lower_bound"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "exp_alt_sign_lemma"
                },
                {
                    "goal": "0 < n",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "odd_exists"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "less_Suc_lesseq"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3",
                        "11",
                        "12",
                        "10"
                    ],
                    "goal_id": "13",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "neg_exp_infsum"
                },
                {
                    "goal": "Suc (n - 1) = n",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "sub_add"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "15",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "18",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "18"
                    ],
                    "goal_id": "19",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_Suc_natseg"
                },
                {
                    "goal": "0 ≤ Suc (n - 1)",
                    "goal_id": "19",
                    "method_name": "cut"
                },
                {
                    "goal_id": "19",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_minus_def"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "21",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "20"
                    ],
                    "goal": "-(abs (-1 ^ n / of_nat (fact n) * x ^ n)) = -1 ^ n / of_nat (fact n) * x ^ n",
                    "goal_id": "21",
                    "method_name": "cut"
                },
                {
                    "goal": "!x::real. x<= 0 --> -(abs x) = x",
                    "goal_id": "21",
                    "method_name": "cut"
                },
                {
                    "goal_id": "21",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "21"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "22",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "22",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "fact_ids": [
                        "22"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lneg"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "23",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lneg"
                },
                {
                    "goal": "!x::real. 0<= x --> -x <= 0",
                    "goal_id": "23",
                    "method_name": "cut"
                },
                {
                    "goal_id": "23",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "23"
                    ],
                    "goal_id": "24",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "29",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "fact_ids": [
                        "39",
                        "20"
                    ],
                    "goal_id": "40",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "exp_reduce",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < k",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < k ⊢ 0 < k"
                },
                {
                    "args": "of_nat k * (x * real_inverse (of_nat k)) = x * (of_nat k * real_inverse (of_nat k))",
                    "id": "1",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ of_nat k * (x * real_inverse (of_nat k)) = x * (of_nat k * real_inverse (of_nat k))"
                },
                {
                    "args": "real_divide_def, of_nat k * (x / of_nat k) = x * (of_nat k / of_nat k)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ of_nat k * (x / of_nat k) = x * (of_nat k / of_nat k)"
                },
                {
                    "args": "¬(k = 0)",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "0 < k ⊢ ¬(k = 0)"
                },
                {
                    "args": "real_of_nat_eq, ¬((of_nat::nat ⇒ real) k = of_nat 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ ¬((of_nat::nat ⇒ real) k = of_nat 0)"
                },
                {
                    "args": "real_zero_def, ¬(of_nat k = (0::real))",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ ¬(of_nat k = (0::real))"
                },
                {
                    "args": "real_div_refl",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < k ⊢ of_nat k / of_nat k = 1"
                },
                {
                    "args": "real_mul_rid, exp (x * 1) = exp x",
                    "id": "7",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ exp (x * 1) = exp x"
                },
                {
                    "args": "exp (x * (of_nat k / of_nat k)) = exp x",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "0 < k ⊢ exp (x * (of_nat k / of_nat k)) = exp x"
                },
                {
                    "args": "exp (of_nat k * (x / of_nat k)) = exp x",
                    "id": "9",
                    "prevs": [
                        "2",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "0 < k ⊢ exp (of_nat k * (x / of_nat k)) = exp x"
                },
                {
                    "args": "real_exp_n, exp (x / of_nat k) ^ k = exp x",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "0 < k ⊢ exp (x / of_nat k) ^ k = exp x"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [
                        "0",
                        "10"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < k ⟶ exp (x / of_nat k) ^ k = exp x"
                }
            ],
            "prop": "0 < k ⟶ exp (x / of_nat k) ^ k = exp x",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_exp_n"
                },
                {
                    "goal": "of_nat k * (x / of_nat k) = x * (of_nat k / of_nat k)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "~(of_nat k = (0::real))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "real_div_refl"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "exp_full_reduce",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 < k",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < k ⊢ 0 < k"
                },
                {
                    "args": "exp_reduce, {x: x}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < k ⊢ exp (x / of_nat k) ^ k = exp x"
                },
                {
                    "args": "real_divide_def",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 < k ⊢ exp (x * real_inverse (of_nat k)) ^ k = exp x"
                },
                {
                    "args": "real_neg_neg, exp (--(x * real_inverse (of_nat k))) ^ k = exp x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ exp (--(x * real_inverse (of_nat k))) ^ k = exp x"
                },
                {
                    "args": "real_mul_lneg, exp (-(-x * real_inverse (of_nat k))) ^ k = exp x",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ exp (-(-x * real_inverse (of_nat k))) ^ k = exp x"
                },
                {
                    "args": "real_divide_def, exp (-(-x / of_nat k)) ^ k = exp x",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 < k ⊢ exp (-(-x / of_nat k)) ^ k = exp x"
                },
                {
                    "args": "real_exp_neg, real_inverse (exp (-x / of_nat k)) ^ k = exp x",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "0 < k ⊢ real_inverse (exp (-x / of_nat k)) ^ k = exp x"
                },
                {
                    "args": "real_pow_inv, real_inverse (exp (-x / of_nat k) ^ k) = exp x",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "0 < k ⊢ real_inverse (exp (-x / of_nat k) ^ k) = exp x"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 < k ⟶ real_inverse (exp (-x / of_nat k) ^ k) = exp x"
                }
            ],
            "prop": "0 < k ⟶ real_inverse (exp (-x / of_nat k) ^ k) = exp x",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_x": "x",
                    "theorem": "exp_reduce"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_inv"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_exp_neg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lneg"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_neg_neg"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_divide_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "log_alt_sign_lemma",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "x ≤ 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 1 ⊢ x ≤ 1"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0"
                },
                {
                    "args": "k, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "real_abs_pos, {x: -1 ^ (k + 1) / of_nat (fact (k + 2))}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (-1 ^ (k + 1) / of_nat (fact (k + 2)))"
                },
                {
                    "args": "real_abs_pos, {x: -(1::real) ^ (k + 1)}",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ abs (-1 ^ (k + 1))"
                },
                {
                    "args": "real_le_refl, {x: (1::real)}",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::real) ≤ 1"
                },
                {
                    "args": "abs_neg_one_pow, abs (-(1::real) ^ (k + 1)) ≤ abs (-1 ^ k)",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-(1::real) ^ (k + 1)) ≤ abs (-1 ^ k)"
                },
                {
                    "args": "real_abs_pos, {x: real_inverse (of_nat (fact (k + 2)))}",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (real_inverse (of_nat (fact (k + 2))))"
                },
                {
                    "args": "fact_nz, {n: k + 1}",
                    "id": "2.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact (k + 1) = 0)"
                },
                {
                    "args": "real_of_nat_eq, ¬((of_nat::nat ⇒ real) (fact (k + 1)) = of_nat 0)",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ¬((of_nat::nat ⇒ real) (fact (k + 1)) = of_nat 0)"
                },
                {
                    "args": "real_zero_def, ¬(of_nat (fact (k + 1)) = (0::real))",
                    "id": "2.8",
                    "prevs": [
                        "2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ¬(of_nat (fact (k + 1)) = (0::real))"
                },
                {
                    "args": "real_abs_nz",
                    "id": "2.9",
                    "prevs": [
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) < abs (of_nat (fact (k + 1)))"
                },
                {
                    "args": "k + 1 ≤ k + 2",
                    "id": "2.10",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ k + 1 ≤ k + 2"
                },
                {
                    "args": "fact_mono",
                    "id": "2.11",
                    "prevs": [
                        "2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ fact (k + 1) ≤ fact (k + 2)"
                },
                {
                    "args": "real_of_nat_le, (of_nat::nat ⇒ real) (fact (k + 1)) ≤ of_nat (fact (k + 2))",
                    "id": "2.12",
                    "prevs": [
                        "2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) (fact (k + 1)) ≤ of_nat (fact (k + 2))"
                },
                {
                    "args": "real_abs_nat, (abs::real ⇒ real) (of_nat (fact (k + 1))) ≤ abs (of_nat (fact (k + 2)))",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (abs::real ⇒ real) (of_nat (fact (k + 1))) ≤ abs (of_nat (fact (k + 2)))"
                },
                {
                    "args": "real_le_inv2",
                    "id": "2.14",
                    "prevs": [
                        "2.9",
                        "2.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ real_inverse (abs (of_nat (fact (k + 2)))) ≤ real_inverse (abs (of_nat (fact (k + 1))))"
                },
                {
                    "args": "real_abs_inv, abs (real_inverse (of_nat (fact (k + 2)))) ≤ abs (real_inverse (of_nat (fact (k + 1))))",
                    "id": "2.15",
                    "prevs": [
                        "2.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (real_inverse (of_nat (fact (k + 2)))) ≤ abs (real_inverse (of_nat (fact (k + 1))))"
                },
                {
                    "args": "real_le_mul2",
                    "id": "2.16",
                    "prevs": [
                        "2.2",
                        "2.4",
                        "2.5",
                        "2.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1)) * abs (real_inverse (of_nat (fact (k + 2)))) ≤ abs (-1 ^ k) * abs (real_inverse (of_nat (fact (k + 1))))"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ (k + 1) * real_inverse (of_nat (fact (k + 2)))) ≤ abs (-1 ^ k * real_inverse (of_nat (fact (k + 1))))",
                    "id": "2.17",
                    "prevs": [
                        "2.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) * real_inverse (of_nat (fact (k + 2)))) ≤ abs (-1 ^ k * real_inverse (of_nat (fact (k + 1))))"
                },
                {
                    "args": "real_divide_def, abs (-1 ^ (k + 1) / of_nat (fact (k + 2))) ≤ abs (-1 ^ k / of_nat (fact (k + 1)))",
                    "id": "2.18",
                    "prevs": [
                        "2.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 2))) ≤ abs (-1 ^ k / of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_abs_pos, {x: x ^ (k + 2)}",
                    "id": "2.19",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (x ^ (k + 2))"
                },
                {
                    "args": "real_abs_pos, {x: x}",
                    "id": "2.20",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs x"
                },
                {
                    "args": "real_pow_le, {n: k, x: abs x}",
                    "id": "2.21",
                    "prevs": [
                        "2.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ abs x ^ k"
                },
                {
                    "args": "abs x * abs x ≤ abs x",
                    "id": "2.22",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x * abs x ≤ abs x"
                },
                {
                    "args": "real_pow_2, abs x ^ (2::nat) ≤ abs x",
                    "id": "2.23",
                    "prevs": [
                        "2.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ^ (2::nat) ≤ abs x"
                },
                {
                    "args": "real_pow_1, abs x ^ (2::nat) ≤ abs x ^ (1::nat)",
                    "id": "2.24",
                    "prevs": [
                        "2.23"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ^ (2::nat) ≤ abs x ^ (1::nat)"
                },
                {
                    "args": "real_le_lmul",
                    "id": "2.25",
                    "prevs": [
                        "2.21",
                        "2.24"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ^ k * abs x ^ (2::nat) ≤ abs x ^ k * abs x ^ (1::nat)"
                },
                {
                    "args": "real_pow_add, abs x ^ (k + 2) ≤ abs x ^ (k + 1)",
                    "id": "2.26",
                    "prevs": [
                        "2.25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ^ (k + 2) ≤ abs x ^ (k + 1)"
                },
                {
                    "args": "real_abs_pow, abs (x ^ (k + 2)) ≤ abs (x ^ (k + 1))",
                    "id": "2.27",
                    "prevs": [
                        "2.26"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (x ^ (k + 2)) ≤ abs (x ^ (k + 1))"
                },
                {
                    "args": "real_le_mul2",
                    "id": "2.28",
                    "prevs": [
                        "2.1",
                        "2.18",
                        "2.19",
                        "2.27"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 2))) * abs (x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1))) * abs (x ^ (k + 1))"
                },
                {
                    "args": "",
                    "id": "2.29",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d"
                },
                {
                    "args": "a, real",
                    "id": "2.29.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "2.29.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "c, real",
                    "id": "2.29.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "d, real",
                    "id": "2.29.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "r, real",
                    "id": "2.29.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR r"
                },
                {
                    "args": "t, real",
                    "id": "2.29.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR t"
                },
                {
                    "args": "a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) * real_inverse b * real_inverse d",
                    "id": "2.29.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) * real_inverse b * real_inverse d"
                },
                {
                    "args": "real_divide_def, a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d",
                    "id": "2.29.7",
                    "prevs": [
                        "2.29.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 * a * c * (r * t) / b * real_inverse d"
                },
                {
                    "args": "real_pow_1, a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b * real_inverse d",
                    "id": "2.29.8",
                    "prevs": [
                        "2.29.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ a * real_inverse b * r * (c * real_inverse d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b * real_inverse d"
                },
                {
                    "args": "real_divide_def, a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d",
                    "id": "2.29.9",
                    "prevs": [
                        "2.29.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d"
                },
                {
                    "args": "",
                    "id": "2.29.10",
                    "prevs": [
                        "2.29.0",
                        "2.29.1",
                        "2.29.2",
                        "2.29.3",
                        "2.29.4",
                        "2.29.5",
                        "2.29.9"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d"
                },
                {
                    "args": "1 + (k + 1) + k = 2 * (k + 1)",
                    "id": "2.30",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ 1 + (k + 1) + k = 2 * (k + 1)"
                },
                {
                    "args": "real_le_pow_2, {x: -(1::real)}",
                    "id": "2.31",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ≤ -1 ^ (2::nat)"
                },
                {
                    "args": "real_pow_le, {n: k + 1, x: -(1::real) ^ (2::nat)}",
                    "id": "2.32",
                    "prevs": [
                        "2.31"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) ≤ -1 ^ (2::nat) ^ (k + 1)"
                },
                {
                    "args": "real_pow_pow, (0::real) ≤ -1 ^ (2 * (k + 1))",
                    "id": "2.33",
                    "prevs": [
                        "2.32"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) ≤ -1 ^ (2 * (k + 1))"
                },
                {
                    "args": "real_pow_le, {n: k + 2 + (k + 1), x: x}",
                    "id": "2.34",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ x ^ (k + 2 + (k + 1))"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.35",
                    "prevs": [
                        "2.33",
                        "2.34"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1))"
                },
                {
                    "args": "fact_lt, {n: k + 2}",
                    "id": "2.36",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact (k + 2)"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 2))",
                    "id": "2.37",
                    "prevs": [
                        "2.36"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 2))"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact (k + 2))",
                    "id": "2.38",
                    "prevs": [
                        "2.37"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat (fact (k + 2))"
                },
                {
                    "args": "real_lt_inv",
                    "id": "2.39",
                    "prevs": [
                        "2.38"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 < real_inverse (of_nat (fact (k + 2)))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "2.40",
                    "prevs": [
                        "2.39"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ real_inverse (of_nat (fact (k + 2)))"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.41",
                    "prevs": [
                        "2.35",
                        "2.40"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) * real_inverse (of_nat (fact (k + 2)))"
                },
                {
                    "args": "fact_lt, {n: k + 1}",
                    "id": "2.42",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact (k + 1)"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 1))",
                    "id": "2.43",
                    "prevs": [
                        "2.42"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat (fact (k + 1))"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat (fact (k + 1))",
                    "id": "2.44",
                    "prevs": [
                        "2.43"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat (fact (k + 1))"
                },
                {
                    "args": "real_lt_inv",
                    "id": "2.45",
                    "prevs": [
                        "2.44"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 < real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "2.46",
                    "prevs": [
                        "2.45"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_le_mul",
                    "id": "2.47",
                    "prevs": [
                        "2.41",
                        "2.46"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) * real_inverse (of_nat (fact (k + 2))) * real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_divide_def, 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) * real_inverse (of_nat (fact (k + 1)))",
                    "id": "2.48",
                    "prevs": [
                        "2.47"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) * real_inverse (of_nat (fact (k + 1)))"
                },
                {
                    "args": "real_divide_def, 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))",
                    "id": "2.49",
                    "prevs": [
                        "2.48"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (2 * (k + 1)) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))"
                },
                {
                    "args": "0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))",
                    "id": "2.50",
                    "prevs": [
                        "2.30",
                        "2.49"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1) + k) * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))"
                },
                {
                    "args": "real_pow_add, 0 ≤ -1 ^ (1 + (k + 1)) * -1 ^ k * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))",
                    "id": "2.51",
                    "prevs": [
                        "2.50"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1 + (k + 1)) * -1 ^ k * x ^ (k + 2 + (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))"
                },
                {
                    "args": "real_pow_add, 0 ≤ -1 ^ (1::nat) * -1 ^ (k + 1) * -1 ^ k * (x ^ (k + 2) * x ^ (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))",
                    "id": "2.52",
                    "prevs": [
                        "2.51"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "x ≤ 1, 0 ≤ x ⊢ 0 ≤ -1 ^ (1::nat) * -1 ^ (k + 1) * -1 ^ k * (x ^ (k + 2) * x ^ (k + 1)) / of_nat (fact (k + 2)) / of_nat (fact (k + 1))"
                },
                {
                    "args": "-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0",
                    "id": "2.53",
                    "prevs": [
                        "2.29",
                        "2.52"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x ≤ 1, 0 ≤ x ⊢ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0"
                },
                {
                    "args": "conjI",
                    "id": "2.54",
                    "prevs": [
                        "2.28",
                        "2.53"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 2))) * abs (x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1))) * abs (x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0",
                    "id": "2.55",
                    "prevs": [
                        "2.54"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0"
                },
                {
                    "args": "",
                    "id": "2.56",
                    "prevs": [
                        "2.0",
                        "2.55"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀n. 1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "1 ≤ n",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "1 ≤ n ⊢ 1 ≤ n"
                },
                {
                    "args": "∀a::real. ∀b. a ≤ b ⟷ a ≤ b * 1",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::real. ∀b. a ≤ b ⟷ a ≤ b * 1"
                },
                {
                    "args": "real_abs_pos, {x: -1 ^ n / of_nat (fact (n + 1))}",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (-1 ^ n / of_nat (fact (n + 1)))"
                },
                {
                    "args": "0 < n",
                    "id": "3.4",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "z3",
                    "th": "1 ≤ n ⊢ 0 < n"
                },
                {
                    "args": "real_of_nat_lt, (of_nat::nat ⇒ real) 0 < of_nat n",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) 0 < of_nat n"
                },
                {
                    "args": "real_zero_def, (0::real) < of_nat n",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (0::real) < of_nat n"
                },
                {
                    "args": "n_le_fact, {n: n}",
                    "id": "3.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ≤ fact n"
                },
                {
                    "args": "le_add, {m: n, n: (1::nat)}",
                    "id": "3.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ n ≤ n + 1"
                },
                {
                    "args": "fact_mono",
                    "id": "3.9",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ fact n ≤ fact (n + 1)"
                },
                {
                    "args": "less_eq_trans",
                    "id": "3.10",
                    "prevs": [
                        "3.7",
                        "3.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ n ≤ fact (n + 1)"
                },
                {
                    "args": "real_of_nat_le, (of_nat::nat ⇒ real) n ≤ of_nat (fact (n + 1))",
                    "id": "3.11",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) n ≤ of_nat (fact (n + 1))"
                },
                {
                    "args": "real_abs_nat, (of_nat::nat ⇒ real) n ≤ abs (of_nat (fact (n + 1)))",
                    "id": "3.12",
                    "prevs": [
                        "3.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ (of_nat::nat ⇒ real) n ≤ abs (of_nat (fact (n + 1)))"
                },
                {
                    "args": "real_le_inv2",
                    "id": "3.13",
                    "prevs": [
                        "3.6",
                        "3.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ real_inverse (abs (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_inv, abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)",
                    "id": "3.14",
                    "prevs": [
                        "3.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_mul_lid, 1 * abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)",
                    "id": "3.15",
                    "prevs": [
                        "3.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ 1 * abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "abs_neg_one_pow, abs (-1 ^ n) * abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)",
                    "id": "3.16",
                    "prevs": [
                        "3.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n) * abs (real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ n * real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)",
                    "id": "3.17",
                    "prevs": [
                        "3.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n * real_inverse (of_nat (fact (n + 1)))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_divide_def, abs (-1 ^ n / of_nat (fact (n + 1))) ≤ real_inverse (of_nat n)",
                    "id": "3.18",
                    "prevs": [
                        "3.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n / of_nat (fact (n + 1))) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_pos, {x: x ^ (n + 1)}",
                    "id": "3.19",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs (x ^ (n + 1))"
                },
                {
                    "args": "real_abs_pos, {x: x}",
                    "id": "3.20",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ abs x"
                },
                {
                    "args": "abs x ≤ 1",
                    "id": "3.21",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 1, 0 ≤ x ⊢ abs x ≤ 1"
                },
                {
                    "args": "real_pow_1_le, {n: n + 1, x: abs x}",
                    "id": "3.22",
                    "prevs": [
                        "3.20",
                        "3.21"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs x ^ (n + 1) ≤ 1"
                },
                {
                    "args": "real_abs_pow, abs (x ^ (n + 1)) ≤ 1",
                    "id": "3.23",
                    "prevs": [
                        "3.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (x ^ (n + 1)) ≤ 1"
                },
                {
                    "args": "real_le_mul2",
                    "id": "3.24",
                    "prevs": [
                        "3.3",
                        "3.18",
                        "3.19",
                        "3.23"
                    ],
                    "rule": "apply_theorem",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n / of_nat (fact (n + 1))) * abs (x ^ (n + 1)) ≤ real_inverse (of_nat n) * 1"
                },
                {
                    "args": "abs (-1 ^ n / of_nat (fact (n + 1))) * abs (x ^ (n + 1)) ≤ real_inverse (of_nat n)",
                    "id": "3.25",
                    "prevs": [
                        "3.2",
                        "3.24"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n / of_nat (fact (n + 1))) * abs (x ^ (n + 1)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "real_abs_mul, abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n)",
                    "id": "3.26",
                    "prevs": [
                        "3.25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "1 ≤ n, x ≤ 1, 0 ≤ x ⊢ abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "",
                    "id": "3.27",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.26"
                    ],
                    "rule": "intros",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∀n. 1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "exI, {P: λN. ∀n. N ≤ n ⟶ abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n), a: (1::nat)}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ≤ 1, 0 ≤ x ⊢ ∃a1. ∀n. a1 ≤ n ⟶ abs (-1 ^ n / of_nat (fact (n + 1)) * x ^ (n + 1)) ≤ real_inverse (of_nat n)"
                },
                {
                    "args": "eventually_sequentially, eventually (λx1. abs (-1 ^ x1 / of_nat (fact (x1 + 1)) * x ^ (x1 + 1)) ≤ real_inverse (of_nat x1)) sequentially",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ≤ 1, 0 ≤ x ⊢ eventually (λx1. abs (-1 ^ x1 / of_nat (fact (x1 + 1)) * x ^ (x1 + 1)) ≤ real_inverse (of_nat x1)) sequentially"
                },
                {
                    "args": "reallim_1_over_n",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ tendsto_real (λn. real_inverse (of_nat n)) 0 sequentially"
                },
                {
                    "args": "reallim_null_comparison",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ tendsto_real (λx1. -1 ^ x1 / of_nat (fact (x1 + 1)) * x ^ (x1 + 1)) 0 sequentially"
                },
                {
                    "args": "conjI",
                    "id": "8",
                    "prevs": [
                        "2",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "x ≤ 1, 0 ≤ x ⊢ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) 0 sequentially"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ x ≤ 1 ⟶ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ 0) ∧ tendsto_real (λk. -1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) 0 sequentially"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ x ≤ 1 ",
                "   ⟶ (∀k. abs (-1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2)) ≤ ",
                "         abs (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ∧ ",
                "         -1 ^ (k + 1) / of_nat (fact (k + 2)) * x ^ (k + 2) * ",
                "         (-1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) ≤ ",
                "         0) ∧ ",
                "      tendsto_real (λk. -1 ^ k / of_nat (fact (k + 1)) * x ^ (k + 1)) 0 sequentially"
            ],
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "k"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_neg_one_pow"
                },
                {
                    "goal_id": "2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_refl"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_inv"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inv2"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_nz"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "goal_id": "2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_nz"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_mono"
                },
                {
                    "goal_id": "2.10",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.19",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_pow"
                },
                {
                    "goal_id": "2.20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "2.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "goal_id": "2.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "2.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "2.22",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_1"
                },
                {
                    "goal_id": "2.22",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_2"
                },
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2.22",
                    "method_name": "z3"
                },
                {
                    "goal": " ∀a. ∀b. ∀c. ∀d. ∀r. ∀t. a / b * r * (c / d * t) ≤ 0 ⟷ 0 ≤ -1 ^ (1::nat) * a * c * (r * t) / b / d",
                    "goal_id": "2.29",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.29",
                    "method_name": "introduction",
                    "names": "a,b,c,d,r,t"
                },
                {
                    "goal_id": "2.29.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.29.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_1"
                },
                {
                    "goal_id": "2.29.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.29.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.29"
                    ],
                    "goal_id": "2.30",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.30",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_add"
                },
                {
                    "goal_id": "2.30",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_add"
                },
                {
                    "goal": "1 + (k + 1) + k = 2*(k+1)",
                    "goal_id": "2.30",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.30",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "2.30"
                    ],
                    "goal_id": "2.31",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_pow_pow"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "2.31",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_pow_2"
                },
                {
                    "goal_id": "2.34",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_le"
                },
                {
                    "goal_id": "2.36",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "2.36",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "2.36",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "2.36",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "2.36",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "2.42",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "2.42",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_inv"
                },
                {
                    "goal_id": "2.42",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "2.42",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "goal_id": "2.42",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_g": "(%k. real_inverse (of_nat k))",
                    "theorem": "reallim_null_comparison"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "(1::nat)"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal": "!a::real. !b. a <= b <--> a <= b * 1",
                    "goal_id": "3.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_mul"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_neg_one_pow"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_inv"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inv2"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_lt"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_le"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "apply_backward_step",
                    "param_m": "fact n",
                    "theorem": "less_eq_trans"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "apply_backward_step",
                    "theorem": "n_le_fact"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_mono"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "apply_backward_step",
                    "theorem": "le_add"
                },
                {
                    "goal_id": "3.19",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "goal_id": "3.20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_pow"
                },
                {
                    "goal_id": "3.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_pow_1_le"
                },
                {
                    "goal_id": "3.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_abs_pos"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "3.21",
                    "method_name": "z3"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_1_over_n"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        }
    ],
    "description": "Formal inequalities for trig about exp and log series.",
    "imports": [
        "trig_series"
    ],
    "name": "trig_exp_log"
}