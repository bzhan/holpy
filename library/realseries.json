{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_limsup",
            "prop": [
                "has_limsup f l net ⟷ ",
                "trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
            ],
            "ty": "def",
            "type": "('a ⇒ real) ⇒ real ⇒ 'a net ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_liminf",
            "prop": [
                "has_liminf f l net ⟷ ",
                "trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
            ],
            "ty": "def",
            "type": "('a ⇒ real) ⇒ real ⇒ 'a net ⇒ bool"
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_limsup_transform",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. f x = g x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x = g x) net ⊢ eventually (λx. f x = g x) net"
                },
                {
                    "args": "has_limsup f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "has_limsup_def",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f l net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "trivial_limit net",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. g x ≤ b) net}) l}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ∀b. eventually (λx. f x ≤ b) net ⟷ eventually (λx. g x ≤ b) net"
                },
                {
                    "args": "b, real",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀x. f x = g x ⟶ f x ≤ b ⟷ g x ≤ b",
                    "id": "4.1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. f x = g x ⟶ f x ≤ b ⟷ g x ≤ b"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. f x = g x ⟶ f x ≤ b ⟷ g x ≤ b, net: net}",
                    "id": "4.1.2",
                    "prevs": [
                        "4.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ eventually (λx. f x = g x ⟶ f x ≤ b ⟷ g x ≤ b) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "4.1.3",
                    "prevs": [
                        "4.1.2",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ eventually (λx. f x ≤ b ⟷ g x ≤ b) net"
                },
                {
                    "args": "eventually_iff",
                    "id": "4.1.4",
                    "prevs": [
                        "4.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ eventually (λx. f x ≤ b) net ⟷ eventually (λx. g x ≤ b) net"
                },
                {
                    "args": "",
                    "id": "4.1.5",
                    "prevs": [
                        "4.1.0",
                        "4.1.4"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ∀b. eventually (λx. f x ≤ b) net ⟷ eventually (λx. g x ≤ b) net"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.1",
                        "4.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. g x ≤ b) net}) l}",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, eventually (λx. f x = g x) net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. g x ≤ b) net}) l"
                },
                {
                    "args": "has_limsup_def, has_limsup g l net",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "eventually (λx. f x = g x) net, has_limsup f l net ⊢ has_limsup g l net"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. f x = g x) net ⟶ has_limsup f l net ⟶ has_limsup g l net"
                }
            ],
            "prop": "eventually (λx. f x = g x) net ⟶ has_limsup f l net ⟶ has_limsup g l net",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal": "!b. eventually (λx. f x ≤ b) net <--> eventually (λx. g x ≤ b) net",
                    "goal_id": "4.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction",
                    "names": "b"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_iff"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x = g x)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.1",
                        "4.0"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "has_limsup_eventually_ubound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(trivial_limit net)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "has_limsup f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "l < b",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < b ⊢ l < b"
                },
                {
                    "args": "has_limsup_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f l net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b ⊢ trivial_limit net ⟶ eventually (λx. f x < b) net"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: eventually (λx. f x < b) net}",
                    "id": "4.1",
                    "prevs": [
                        "0",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ eventually (λx. f x < b) net"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b ⊢ trivial_limit net ⟶ eventually (λx. f x < b) net"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b ⊢ has_inf ({b1. eventually (λx. f x ≤ b1) net}) l ⟶ eventually (λx. f x < b) net"
                },
                {
                    "args": "has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "has_inf_approach, {}, {c: b, l: l, s: {b. eventually (λx. f x ≤ b) net}}",
                    "id": "5.1",
                    "prevs": [
                        "5.0",
                        "2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l, l < b ⊢ ∃x. x ∈ {b1. eventually (λx1. f x1 ≤ b1) net} ∧ x < b"
                },
                {
                    "args": "member_collect",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l, l < b ⊢ ∃x. eventually (λx1. f x1 ≤ x) net ∧ x < b"
                },
                {
                    "args": "c, real",
                    "id": "5.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "eventually (λx. f x ≤ c) net ∧ c < b",
                    "id": "5.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ c) net ∧ c < b ⊢ eventually (λx. f x ≤ c) net ∧ c < b"
                },
                {
                    "args": "conjD1, {}, {A: eventually (λx. f x ≤ c) net, B: c < b}",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x ≤ c) net ∧ c < b ⊢ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "conjD2, {}, {A: eventually (λx. f x ≤ c) net, B: c < b}",
                    "id": "5.6",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x ≤ c) net ∧ c < b ⊢ c < b"
                },
                {
                    "args": "∀x. f x ≤ c ⟶ f x < b",
                    "id": "5.7",
                    "prevs": [
                        "5.6"
                    ],
                    "rule": "z3",
                    "th": "eventually (λx. f x ≤ c) net ∧ c < b ⊢ ∀x. f x ≤ c ⟶ f x < b"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. f x ≤ c ⟶ f x < b, net: net}",
                    "id": "5.8",
                    "prevs": [
                        "5.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b, has_inf ({b. eventually (λx. f x ≤ b) net}) l, eventually (λx. f x ≤ c) net ∧ c < b ⊢ eventually (λx. f x ≤ c ⟶ f x < b) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "5.9",
                    "prevs": [
                        "5.8",
                        "5.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b, has_inf ({b. eventually (λx. f x ≤ b) net}) l, eventually (λx. f x ≤ c) net ∧ c < b ⊢ eventually (λx. f x < b) net"
                },
                {
                    "args": "∃x. eventually (λx1. f x1 ≤ x) net ∧ x < b",
                    "id": "5.10",
                    "prevs": [
                        "5.0",
                        "5.2",
                        "5.3",
                        "5.4",
                        "5.9"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < b ⊢ has_inf ({b1. eventually (λx. f x ≤ b1) net}) l ⟶ eventually (λx. f x < b) net"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, ¬(trivial_limit net), l < b ⊢ eventually (λx. f x < b) net"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_limsup f l net ⟶ l < b ⟶ eventually (λx. f x < b) net"
                }
            ],
            "prop": "¬(trivial_limit net) ⟶ has_limsup f l net ⟶ l < b ⟶ eventually (λx. f x < b) net",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.0",
                        "2"
                    ],
                    "goal_id": "5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "has_inf_approach"
                },
                {
                    "fact_ids": [
                        "5.1"
                    ],
                    "goal_id": "5.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.2"
                    ],
                    "goal_id": "5.3",
                    "method_name": "exists_elim",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "5.6",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x ≤ c)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "5.6",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.6"
                    ],
                    "goal_id": "5.7",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "reallim_imp_has_limsup",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "tendsto_real f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "tendsto_real f l net ⊢ tendsto_real f l net"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "trivial_limit net",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "has_limsup_def, trivial_limit net ⟶ has_limsup f l net",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ⟶ has_limsup f l net"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false ⟶ false"
                },
                {
                    "args": "eventually (λx. f x ≤ l + 1) net ⟷ false",
                    "id": "3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "3.1.1",
                    "prevs": [
                        "3.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ false ⟷ eventually (λx. f x ≤ l + 1) net"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "3.1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real f l net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (f x - l) < e) net"
                },
                {
                    "args": "(1::real)",
                    "id": "3.1.3",
                    "prevs": [
                        "3.1.2"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real f l net ⊢ (0::real) < 1 ⟶ eventually (λx. abs (f x - l) < 1) net"
                },
                {
                    "args": "(0::real) < 1",
                    "id": "3.1.4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 1"
                },
                {
                    "args": "",
                    "id": "3.1.5",
                    "prevs": [
                        "3.1.3",
                        "3.1.4"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real f l net ⊢ eventually (λx. abs (f x - l) < 1) net"
                },
                {
                    "args": "∀x. abs (f x - l) < 1 ⟶ f x ≤ l + 1",
                    "id": "3.1.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. abs (f x - l) < 1 ⟶ f x ≤ l + 1"
                },
                {
                    "args": "eventually_mono",
                    "id": "3.1.7",
                    "prevs": [
                        "3.1.6",
                        "3.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ eventually (λx. f x ≤ l + 1) net"
                },
                {
                    "args": "false",
                    "id": "3.1.8",
                    "prevs": [
                        "3.1.1",
                        "3.1.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false, tendsto_real f l net, ¬(trivial_limit net) ⊢ false"
                },
                {
                    "args": "",
                    "id": "3.1.9",
                    "prevs": [
                        "3.1.0",
                        "3.1.8"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬(eventually (λx. f x ≤ l + 1) net ⟷ false)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. ¬(eventually (λx1. f x1 ≤ x) net ⟷ false), a: l + 1}",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∃a1. ¬(eventually (λx. f x ≤ a1) net ⟷ false)"
                },
                {
                    "args": "member_collect, ∃x. ¬(x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∃x. ¬(x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)",
                    "id": "3.6",
                    "prevs": [
                        "3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({b. eventually (λx. f x ≤ b) net} = ∅)",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅)"
                },
                {
                    "args": "",
                    "id": "3.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x"
                },
                {
                    "args": "x, real",
                    "id": "3.8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. f x1 ≤ x) net",
                    "id": "3.8.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. f x1 ≤ x) net ⊢ eventually (λx1. f x1 ≤ x) net"
                },
                {
                    "args": "reallim_ubound",
                    "id": "3.8.2",
                    "prevs": [
                        "0",
                        "3.0",
                        "3.8.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), eventually (λx1. f x1 ≤ x) net ⊢ l ≤ x"
                },
                {
                    "args": "",
                    "id": "3.8.3",
                    "prevs": [
                        "3.8.0",
                        "3.8.1",
                        "3.8.2"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x",
                    "id": "3.9",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x"
                },
                {
                    "args": "",
                    "id": "3.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)"
                },
                {
                    "args": "c, real",
                    "id": "3.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "3.10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "3.10.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real f l net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (f x - l) < e) net"
                },
                {
                    "args": "(c - l) / 2",
                    "id": "3.10.3",
                    "prevs": [
                        "3.10.2"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real f l net ⊢ 0 < (c - l) / 2 ⟶ eventually (λx. abs (f x - l) < (c - l) / 2) net"
                },
                {
                    "args": "0 < (c - l) / 2",
                    "id": "3.10.4",
                    "prevs": [
                        "3.10.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ 0 < (c - l) / 2"
                },
                {
                    "args": "",
                    "id": "3.10.5",
                    "prevs": [
                        "3.10.3",
                        "3.10.4"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real f l net, l < c ⊢ eventually (λx. abs (f x - l) < (c - l) / 2) net"
                },
                {
                    "args": "∀x. abs (f x - l) < (c - l) / 2 ⟶ f x ≤ (l + c) / 2",
                    "id": "3.10.6",
                    "prevs": [
                        "3.10.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ ∀x. abs (f x - l) < (c - l) / 2 ⟶ f x ≤ (l + c) / 2"
                },
                {
                    "args": "eventually_mono",
                    "id": "3.10.7",
                    "prevs": [
                        "3.10.6",
                        "3.10.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), l < c ⊢ eventually (λx. f x ≤ (l + c) / 2) net"
                },
                {
                    "args": "(l + c) / 2 < c",
                    "id": "3.10.8",
                    "prevs": [
                        "3.10.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ (l + c) / 2 < c"
                },
                {
                    "args": "conjI",
                    "id": "3.10.9",
                    "prevs": [
                        "3.10.7",
                        "3.10.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), l < c ⊢ eventually (λx. f x ≤ (l + c) / 2) net ∧ (l + c) / 2 < c"
                },
                {
                    "args": "exI, {a: real}, {P: λx. eventually (λx1. f x1 ≤ x) net ∧ x < c, a: (l + c) / 2}",
                    "id": "3.10.10",
                    "prevs": [
                        "3.10.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), l < c ⊢ ∃a1. eventually (λx. f x ≤ a1) net ∧ a1 < c"
                },
                {
                    "args": "member_collect, ∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c",
                    "id": "3.10.11",
                    "prevs": [
                        "3.10.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), l < c ⊢ ∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c"
                },
                {
                    "args": "",
                    "id": "3.10.12",
                    "prevs": [
                        "3.10.0",
                        "3.10.1",
                        "3.10.11"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)"
                },
                {
                    "args": "conjI",
                    "id": "3.11",
                    "prevs": [
                        "3.9",
                        "3.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "conjI",
                    "id": "3.12",
                    "prevs": [
                        "3.7",
                        "3.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "has_inf, has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "3.13",
                    "prevs": [
                        "3.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "3.14",
                    "prevs": [
                        "3.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "3.15",
                    "prevs": [
                        "3.0",
                        "3.14"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "has_limsup_def, ¬(trivial_limit net) ⟶ has_limsup f l net",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net ⊢ ¬(trivial_limit net) ⟶ has_limsup f l net"
                },
                {
                    "args": "classical_cases",
                    "id": "5",
                    "prevs": [
                        "2",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ tendsto_real f l net ⟶ has_limsup f l net"
                }
            ],
            "prop": "tendsto_real f l net ⟶ has_limsup f l net",
            "steps": [
                {
                    "case": "trivial_limit net",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_inf"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "inst_exists_goal",
                    "s": "l +1"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.1.0"
                    ],
                    "goal_id": "3.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "3.1.1"
                    ],
                    "goal_id": "3.1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "3.1.2"
                    ],
                    "goal_id": "3.1.3",
                    "method_name": "forall_elim",
                    "s": "(1::real)"
                },
                {
                    "goal": "(0::real) < 1",
                    "goal_id": "3.1.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.1.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.1.3",
                        "3.1.4"
                    ],
                    "goal_id": "3.1.5",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "3.1.6",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. abs (f x - l) < 1)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "3.1.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "0",
                        "3.0",
                        "3.8.1"
                    ],
                    "goal_id": "3.8.2",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_ubound"
                },
                {
                    "goal_id": "3.10",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "3.10.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3.10.2",
                    "method_name": "inst_exists_goal",
                    "s": "(l + c) / 2"
                },
                {
                    "goal_id": "3.10.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3.10.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "3.10.2"
                    ],
                    "goal_id": "3.10.3",
                    "method_name": "forall_elim",
                    "s": "(c - l) / 2"
                },
                {
                    "goal": "0 < (c - l) / 2",
                    "goal_id": "3.10.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "3.10.1"
                    ],
                    "goal_id": "3.10.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.10.3",
                        "3.10.4"
                    ],
                    "goal_id": "3.10.5",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "3.10.6",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. abs (f x - l) < (c - l) / 2)",
                    "theorem": "eventually_mono"
                },
                {
                    "fact_ids": [
                        "3.10.1"
                    ],
                    "goal_id": "3.10.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.10.1"
                    ],
                    "goal_id": "3.10.8",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "has_limsup_imp_ubound_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_limsup f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "has_limsup_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f l net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f l net ⊢ trivial_limit net ⟶ (∃b. eventually (λx. f x ≤ b) net)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "eventually_trivial, {a: 'a}, {P: λx. f x ≤ l, net: net}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f l net, trivial_limit net ⊢ eventually (λx. f x ≤ l) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. f x ≤ b) net, a: l}",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f l net, trivial_limit net ⊢ ∃a1. eventually (λx. f x ≤ a1) net"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f l net ⊢ trivial_limit net ⟶ (∃b. eventually (λx. f x ≤ b) net)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f l net ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ (∃b. eventually (λx. f x ≤ b) net)"
                },
                {
                    "args": "has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "has_inf",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "conjD2, {}, {A: ¬({b. eventually (λx. f x ≤ b) net} = ∅), B: (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))}",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "conjD2, {}, {A: ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x, B: ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)}",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)"
                },
                {
                    "args": "l + 1",
                    "id": "3.4",
                    "prevs": [
                        "3.3"
                    ],
                    "rule": "forall_elim",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ l < l + 1 ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < l + 1)"
                },
                {
                    "args": "l < l + 1",
                    "id": "3.5",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l < l + 1"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.4",
                        "3.5"
                    ],
                    "rule": "apply_fact",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < l + 1"
                },
                {
                    "args": "member_collect",
                    "id": "3.7",
                    "prevs": [
                        "3.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ∃x. eventually (λx1. f x1 ≤ x) net ∧ x < l + 1"
                },
                {
                    "args": "x, real",
                    "id": "3.8",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. f x1 ≤ x) net ∧ x < l + 1",
                    "id": "3.9",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. f x1 ≤ x) net ∧ x < l + 1 ⊢ eventually (λx1. f x1 ≤ x) net ∧ x < l + 1"
                },
                {
                    "args": "conjD1, {}, {A: eventually (λx1. f x1 ≤ x) net, B: x < l + 1}",
                    "id": "3.10",
                    "prevs": [
                        "3.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx1. f x1 ≤ x) net ∧ x < l + 1 ⊢ eventually (λx1. f x1 ≤ x) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. f x ≤ b) net, a: x}",
                    "id": "3.11",
                    "prevs": [
                        "3.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx1. f x1 ≤ x) net ∧ x < l + 1 ⊢ ∃a1. eventually (λx. f x ≤ a1) net"
                },
                {
                    "args": "∃x. eventually (λx1. f x1 ≤ x) net ∧ x < l + 1",
                    "id": "3.12",
                    "prevs": [
                        "3.0",
                        "3.7",
                        "3.8",
                        "3.9",
                        "3.11"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f l net ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ (∃b. eventually (λx. f x ≤ b) net)"
                },
                {
                    "args": "disjE",
                    "id": "4",
                    "prevs": [
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net ⊢ ∃a1. eventually (λx. f x ≤ a1) net"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup f l net ⟶ (∃b. eventually (λx. f x ≤ b) net)"
                }
            ],
            "prop": "has_limsup f l net ⟶ (∃b. eventually (λx. f x ≤ b) net)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "inst_exists_goal",
                    "s": "l"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_trivial"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_inf"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3"
                    ],
                    "goal_id": "3.4",
                    "method_name": "forall_elim",
                    "s": "l+1"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal": "l < l + 1",
                    "goal_id": "3.5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.5",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.4",
                        "3.5"
                    ],
                    "goal_id": "3.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.6"
                    ],
                    "goal_id": "3.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "exists_elim",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "3.9"
                    ],
                    "goal_id": "3.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.10"
                    ],
                    "goal_id": "3.11",
                    "method_name": "apply_backward_step",
                    "theorem": "exI"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_limsup_not_ubound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(trivial_limit net)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "has_limsup f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "c < l",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "has_limsup_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f l net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l ⊢ trivial_limit net ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "4.1",
                    "prevs": [
                        "0",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l ⊢ trivial_limit net ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ¬¬(eventually (λx. f x ≤ c) net) ⟶ ¬(c < l)"
                },
                {
                    "args": "¬¬(eventually (λx. f x ≤ c) net)",
                    "id": "5.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(eventually (λx. f x ≤ c) net) ⊢ ¬¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "double_neg",
                    "id": "5.1.1",
                    "prevs": [
                        "5.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(eventually (λx. f x ≤ c) net) ⊢ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "member_collect, c ∈ {b. eventually (λx. f x ≤ b) net}",
                    "id": "5.1.2",
                    "prevs": [
                        "5.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l, has_inf ({b. eventually (λx. f x ≤ b) net}) l, ¬¬(eventually (λx. f x ≤ c) net) ⊢ c ∈ {b. eventually (λx. f x ≤ b) net}"
                },
                {
                    "args": "has_inf_lbound",
                    "id": "5.1.3",
                    "prevs": [
                        "5.0",
                        "5.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_inf ({b. eventually (λx. f x ≤ b) net}) l, ¬(trivial_limit net), has_limsup f l net, c < l, ¬¬(eventually (λx. f x ≤ c) net) ⊢ l ≤ c"
                },
                {
                    "args": "real_not_lt, ¬(c < l)",
                    "id": "5.1.4",
                    "prevs": [
                        "5.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l, has_inf ({b. eventually (λx. f x ≤ b) net}) l, ¬¬(eventually (λx. f x ≤ c) net) ⊢ ¬(c < l)"
                },
                {
                    "args": "",
                    "id": "5.1.5",
                    "prevs": [
                        "5.1.0",
                        "5.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ¬¬(eventually (λx. f x ≤ c) net) ⟶ ¬(c < l)"
                },
                {
                    "args": "contrapositive",
                    "id": "5.2",
                    "prevs": [
                        "2",
                        "5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "c < l, ¬(trivial_limit net), has_limsup f l net, has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5.3",
                    "prevs": [
                        "5.0",
                        "5.2"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, ¬(trivial_limit net), c < l ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_limsup f l net ⟶ c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                }
            ],
            "prop": [
                "¬(trivial_limit net) ",
                "⟶ has_limsup f l net ⟶ c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.1.0"
                    ],
                    "goal_id": "5.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "5.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "5.0"
                    ],
                    "goal_id": "5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "has_inf_lbound"
                },
                {
                    "goal_id": "5.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_limsup",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit net ⟶ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))}",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net, trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟶ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "0.2.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net, trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "has_limsup_def, has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ⊢ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ⟶ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net) ⊢ has_limsup f l net ⟶ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "has_limsup f l net",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ ∀c. l < c ⟶ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "c, real",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "∀x. f x < c ⟶ f x ≤ c",
                    "id": "1.1.1.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. f x < c ⟶ f x ≤ c"
                },
                {
                    "args": "has_limsup_eventually_ubound",
                    "id": "1.1.1.3",
                    "prevs": [
                        "1.0",
                        "1.1.0",
                        "1.1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < c ⊢ eventually (λx. f x < c) net"
                },
                {
                    "args": "eventually_mono",
                    "id": "1.1.1.4",
                    "prevs": [
                        "1.1.1.2",
                        "1.1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_limsup f l net, l < c ⊢ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "1.1.1.5",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.1",
                        "1.1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ ∀c. l < c ⟶ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "c, real",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.1.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "has_limsup_not_ubound",
                    "id": "1.1.2.2",
                    "prevs": [
                        "1.0",
                        "1.1.0",
                        "1.1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_limsup f l net, c < l ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.1",
                        "1.1.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))}",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), has_limsup f l net ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net) ⊢ has_limsup f l net ⟶ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net) ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ has_limsup f l net"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "trivial_limit net",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "1.2.1.1",
                    "prevs": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. l < c ⟶ eventually (λx. f x ≤ c) net, B: ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. l < c ⟶ eventually (λx. f x ≤ c) net, B: ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. l < c ⟶ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "1.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false ⟶ false"
                },
                {
                    "args": "eventually (λx. f x ≤ l + 1) net ⟷ false",
                    "id": "1.2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.2.3.1",
                    "prevs": [
                        "1.2.2.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ false ⟷ eventually (λx. f x ≤ l + 1) net"
                },
                {
                    "args": "l < l + 1",
                    "id": "1.2.2.3.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l < l + 1"
                },
                {
                    "args": "l + 1",
                    "id": "1.2.2.3.3",
                    "prevs": [
                        "1.2.2.2",
                        "1.2.2.3.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), eventually (λx. f x ≤ l + 1) net ⟷ false ⊢ eventually (λx. f x ≤ l + 1) net"
                },
                {
                    "args": "false",
                    "id": "1.2.2.3.4",
                    "prevs": [
                        "1.2.2.3.1",
                        "1.2.2.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "eventually (λx. f x ≤ l + 1) net ⟷ false, ¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.5",
                    "prevs": [
                        "1.2.2.3.0",
                        "1.2.2.3.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ eventually (λx. f x ≤ l + 1) net ⟷ false ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(eventually (λx. f x ≤ l + 1) net ⟷ false)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. ¬(eventually (λx1. f x1 ≤ x) net ⟷ false), a: l + 1}",
                    "id": "1.2.2.5",
                    "prevs": [
                        "1.2.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. ¬(eventually (λx. f x ≤ a1) net ⟷ false)"
                },
                {
                    "args": "not_all, ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟷ false)",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟷ x ∈ ∅)",
                    "id": "1.2.2.7",
                    "prevs": [
                        "1.2.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟷ x ∈ ∅)"
                },
                {
                    "args": "member_collect, ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)",
                    "id": "1.2.2.8",
                    "prevs": [
                        "1.2.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({b. eventually (λx. f x ≤ b) net} = ∅)",
                    "id": "1.2.2.9",
                    "prevs": [
                        "1.2.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅)"
                },
                {
                    "args": "",
                    "id": "1.2.2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. ¬(l ≤ x) ∧ eventually (λx1. f x1 ≤ x) net)"
                },
                {
                    "args": "∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)",
                    "id": "1.2.2.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x) ⊢ ∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)"
                },
                {
                    "args": "conj_comm, ∃x. ¬(l ≤ x) ∧ eventually (λx1. f x1 ≤ x) net",
                    "id": "1.2.2.10.1",
                    "prevs": [
                        "1.2.2.10.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x) ⊢ ∃x. ¬(l ≤ x) ∧ eventually (λx1. f x1 ≤ x) net"
                },
                {
                    "args": "",
                    "id": "1.2.2.10.2",
                    "prevs": [
                        "1.2.2.10.0",
                        "1.2.2.10.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. ¬(l ≤ x) ∧ eventually (λx1. f x1 ≤ x) net)"
                },
                {
                    "args": "real_less_def, (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. x < l ∧ eventually (λx1. f x1 ≤ x) net)",
                    "id": "1.2.2.11",
                    "prevs": [
                        "1.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. x < l ∧ eventually (λx1. f x1 ≤ x) net)"
                },
                {
                    "args": "double_neg, (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. x < l ∧ ¬¬(eventually (λx1. f x1 ≤ x) net))",
                    "id": "1.2.2.12",
                    "prevs": [
                        "1.2.2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃x. eventually (λx1. f x1 ≤ x) net ∧ ¬(l ≤ x)) ⟶ (∃x. x < l ∧ ¬¬(eventually (λx1. f x1 ≤ x) net))"
                },
                {
                    "args": "not_imp, (∃x. ¬(eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x)) ⟶ (∃x. ¬(x < l ⟶ ¬(eventually (λx1. f x1 ≤ x) net)))",
                    "id": "1.2.2.13",
                    "prevs": [
                        "1.2.2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃x. ¬(eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x)) ⟶ (∃x. ¬(x < l ⟶ ¬(eventually (λx1. f x1 ≤ x) net)))"
                },
                {
                    "args": "not_all, ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x) ⟶ ¬(∀x. x < l ⟶ ¬(eventually (λx1. f x1 ≤ x) net))",
                    "id": "1.2.2.14",
                    "prevs": [
                        "1.2.2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x) ⟶ ¬(∀x. x < l ⟶ ¬(eventually (λx1. f x1 ≤ x) net))"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.2.15",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟶ l ≤ x"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x",
                    "id": "1.2.2.16",
                    "prevs": [
                        "1.2.2.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x"
                },
                {
                    "args": "",
                    "id": "1.2.2.17",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)"
                },
                {
                    "args": "c, real",
                    "id": "1.2.2.17.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.2.2.17.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "l < (l + c) / 2",
                    "id": "1.2.2.17.2",
                    "prevs": [
                        "1.2.2.17.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ l < (l + c) / 2"
                },
                {
                    "args": "(l + c) / 2",
                    "id": "1.2.2.17.3",
                    "prevs": [
                        "1.2.2.2",
                        "1.2.2.17.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), l < c ⊢ eventually (λx. f x ≤ (l + c) / 2) net"
                },
                {
                    "args": "member_collect, (l + c) / 2 ∈ {b. eventually (λx. f x ≤ b) net}",
                    "id": "1.2.2.17.4",
                    "prevs": [
                        "1.2.2.17.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), l < c ⊢ (l + c) / 2 ∈ {b. eventually (λx. f x ≤ b) net}"
                },
                {
                    "args": "(l + c) / 2 < c",
                    "id": "1.2.2.17.5",
                    "prevs": [
                        "1.2.2.17.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ (l + c) / 2 < c"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.17.6",
                    "prevs": [
                        "1.2.2.17.4",
                        "1.2.2.17.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), l < c ⊢ (l + c) / 2 ∈ {b. eventually (λx. f x ≤ b) net} ∧ (l + c) / 2 < c"
                },
                {
                    "args": "exI, {a: real}, {P: λx. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c, a: (l + c) / 2}",
                    "id": "1.2.2.17.7",
                    "prevs": [
                        "1.2.2.17.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), l < c ⊢ ∃a1. a1 ∈ {b. eventually (λx. f x ≤ b) net} ∧ a1 < c"
                },
                {
                    "args": "",
                    "id": "1.2.2.17.8",
                    "prevs": [
                        "1.2.2.17.0",
                        "1.2.2.17.1",
                        "1.2.2.17.7"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.18",
                    "prevs": [
                        "1.2.2.16",
                        "1.2.2.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.19",
                    "prevs": [
                        "1.2.2.9",
                        "1.2.2.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ l ≤ x) ∧ (∀c. l < c ⟶ (∃x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ∧ x < c))"
                },
                {
                    "args": "has_inf, has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "1.2.2.20",
                    "prevs": [
                        "1.2.2.19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "",
                    "id": "1.2.2.21",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.20"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ¬(trivial_limit net) ⊢ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "has_limsup_def, has_limsup f l net",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ has_limsup f l net"
                },
                {
                    "args": "",
                    "id": "1.2.6",
                    "prevs": [
                        "1.2.0",
                        "1.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net) ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ has_limsup f l net"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net) ⊢ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup f l net ⟷ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                }
            ],
            "prop": [
                "has_limsup f l net ⟷ ",
                "trivial_limit net ∨ ",
                "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ ",
                "(∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
            ],
            "steps": [
                {
                    "case": "trivial_limit net",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.1.1.2",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x < c)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "1.1.1.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.1.1.3",
                    "method_name": "apply_backward_step",
                    "param_l": "l",
                    "theorem": "has_limsup_eventually_ubound"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.1.2.2",
                    "method_name": "apply_backward_step",
                    "param_l": "l",
                    "theorem": "has_limsup_not_ubound"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_inf"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "inst_exists_goal",
                    "s": "l + 1"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.2.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.3.0"
                    ],
                    "goal_id": "1.2.2.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.2.3.1"
                    ],
                    "goal_id": "1.2.2.3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.2"
                    ],
                    "goal_id": "1.2.2.3.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2.2.3.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.2.2.1"
                    ],
                    "goal_id": "1.2.2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.2.2.10",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.10.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.2.2.17",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.2.2.17.2",
                    "method_name": "inst_exists_goal",
                    "s": "(l+c)/2"
                },
                {
                    "goal_id": "1.2.2.17.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.17.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.2.2.2"
                    ],
                    "goal_id": "1.2.2.17.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.17.1"
                    ],
                    "goal_id": "1.2.2.17.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.2.2.17.1"
                    ],
                    "goal_id": "1.2.2.17.5",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "name": "limsup_exists",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "l, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR l"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "0.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))}",
                    "id": "0.3.1",
                    "prevs": [
                        "0.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.3.2",
                    "prevs": [
                        "0.3.0",
                        "0.3.1"
                    ],
                    "rule": "intros",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. l < c ⟶ eventually (λx. f x ≤ c) net, B: ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "0.4.1",
                    "prevs": [
                        "0.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. l < c ⟶ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. l < c ⟶ eventually (λx. f x ≤ c) net, B: ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "0.4.2",
                    "prevs": [
                        "0.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "l < l + 1",
                    "id": "0.4.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l < l + 1"
                },
                {
                    "args": "l + 1",
                    "id": "0.4.4",
                    "prevs": [
                        "0.4.1",
                        "0.4.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ eventually (λx. f x ≤ l + 1) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. f x ≤ b) net, a: l + 1}",
                    "id": "0.4.5",
                    "prevs": [
                        "0.4.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. eventually (λx. f x ≤ a1) net"
                },
                {
                    "args": "l - 1 < l",
                    "id": "0.4.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l - 1 < l"
                },
                {
                    "args": "l - 1",
                    "id": "0.4.7",
                    "prevs": [
                        "0.4.2",
                        "0.4.6"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(eventually (λx. f x ≤ l - 1) net)"
                },
                {
                    "args": "exI, {a: real}, {P: λc. ¬(eventually (λx. f x ≤ c) net), a: l - 1}",
                    "id": "0.4.8",
                    "prevs": [
                        "0.4.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. ¬(eventually (λx. f x ≤ a1) net)"
                },
                {
                    "args": "conjI",
                    "id": "0.4.9",
                    "prevs": [
                        "0.4.5",
                        "0.4.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))}",
                    "id": "0.4.10",
                    "prevs": [
                        "0.4.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "0.4.11",
                    "prevs": [
                        "0.4.0",
                        "0.4.10"
                    ],
                    "rule": "intros",
                    "th": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "disjE",
                    "id": "0.5",
                    "prevs": [
                        "0.2",
                        "0.3",
                        "0.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)), ∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃l. trivial_limit net ∨ (∀c. l < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < l ⟶ ¬(eventually (λx. f x ≤ c) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "has_limsup, (∃l. has_limsup f l net) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃l. has_limsup f l net) ⟶ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_inf ({b. eventually (λx. f x ≤ b) net}) 0}",
                    "id": "2.1.1",
                    "prevs": [
                        "2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ⊢ trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) 0"
                },
                {
                    "args": "exI, {a: real}, {P: λl. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l, a: (0::real)}",
                    "id": "2.1.2",
                    "prevs": [
                        "2.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), trivial_limit net ⊢ ∃a1. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) a1"
                },
                {
                    "args": "",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.0",
                        "2.1.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "(∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∃a1. eventually (λx. f x ≤ a1) net, B: ∃a1. ¬(eventually (λx. f x ≤ a1) net)}",
                    "id": "2.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. eventually (λx. f x ≤ a1) net"
                },
                {
                    "args": "conjD2, {}, {A: ∃a1. eventually (λx. f x ≤ a1) net, B: ∃a1. ¬(eventually (λx. f x ≤ a1) net)}",
                    "id": "2.2.2",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. ¬(eventually (λx. f x ≤ a1) net)"
                },
                {
                    "args": "",
                    "id": "2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀x. eventually (λx1. f x1 ≤ x) net ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. eventually (λx1. f x1 ≤ x) net ⟷ false",
                    "id": "2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. eventually (λx1. f x1 ≤ x) net ⟷ false ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.2.3.1",
                    "prevs": [
                        "2.2.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. eventually (λx1. f x1 ≤ x) net ⟷ false ⊢ ∀x. false ⟷ eventually (λx1. f x1 ≤ x) net"
                },
                {
                    "args": "b, real",
                    "id": "2.2.3.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "eventually (λx. f x ≤ b) net",
                    "id": "2.2.3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ b) net ⊢ eventually (λx. f x ≤ b) net"
                },
                {
                    "args": "b",
                    "id": "2.2.3.4",
                    "prevs": [
                        "2.2.3.1"
                    ],
                    "rule": "forall_elim",
                    "th": "∀x. eventually (λx1. f x1 ≤ x) net ⟷ false ⊢ false ⟷ eventually (λx. f x ≤ b) net"
                },
                {
                    "args": "false",
                    "id": "2.2.3.5",
                    "prevs": [
                        "2.2.3.4",
                        "2.2.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∀x. eventually (λx1. f x1 ≤ x) net ⟷ false, trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), eventually (λx. f x ≤ b) net ⊢ false"
                },
                {
                    "args": "∃a1. eventually (λx. f x ≤ a1) net",
                    "id": "2.2.3.6",
                    "prevs": [
                        "2.2.3.0",
                        "2.2.1",
                        "2.2.3.2",
                        "2.2.3.3",
                        "2.2.3.5"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀x. eventually (λx1. f x1 ≤ x) net ⟷ false) ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. eventually (λx1. f x1 ≤ x) net ⟷ false)"
                },
                {
                    "args": "member_collect, ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)",
                    "id": "2.2.5",
                    "prevs": [
                        "2.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)",
                    "id": "2.2.6",
                    "prevs": [
                        "2.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({b. eventually (λx. f x ≤ b) net} = ∅)",
                    "id": "2.2.7",
                    "prevs": [
                        "2.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅)"
                },
                {
                    "args": "c, real",
                    "id": "2.2.8",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "¬(eventually (λx. f x ≤ c) net)",
                    "id": "2.2.9",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(eventually (λx. f x ≤ c) net) ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "2.2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟶ c ≤ x"
                },
                {
                    "args": "x, real",
                    "id": "2.2.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. f x1 ≤ x) net",
                    "id": "2.2.10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. f x1 ≤ x) net ⊢ eventually (λx1. f x1 ≤ x) net"
                },
                {
                    "args": "",
                    "id": "2.2.10.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net), eventually (λx1. f x1 ≤ x) net ⊢ ¬(c ≤ x) ⟶ eventually (λx1. f x1 ≤ c) net"
                },
                {
                    "args": "¬(c ≤ x)",
                    "id": "2.2.10.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(c ≤ x) ⊢ ¬(c ≤ x)"
                },
                {
                    "args": "∀x1. f x1 ≤ x ⟶ f x1 ≤ c",
                    "id": "2.2.10.2.1",
                    "prevs": [
                        "2.2.10.2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(c ≤ x) ⊢ ∀x1. f x1 ≤ x ⟶ f x1 ≤ c"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx1. f x1 ≤ x ⟶ f x1 ≤ c, net: net}",
                    "id": "2.2.10.2.2",
                    "prevs": [
                        "2.2.10.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net), eventually (λx1. f x1 ≤ x) net, ¬(c ≤ x) ⊢ eventually (λx1. f x1 ≤ x ⟶ f x1 ≤ c) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "2.2.10.2.3",
                    "prevs": [
                        "2.2.10.2.2",
                        "2.2.10.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net), eventually (λx1. f x1 ≤ x) net, ¬(c ≤ x) ⊢ eventually (λx1. f x1 ≤ c) net"
                },
                {
                    "args": "",
                    "id": "2.2.10.2.4",
                    "prevs": [
                        "2.2.10.2.0",
                        "2.2.10.2.3"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net), eventually (λx1. f x1 ≤ x) net ⊢ ¬(c ≤ x) ⟶ eventually (λx1. f x1 ≤ c) net"
                },
                {
                    "args": "double_neg, ¬(c ≤ x) ⟶ ¬¬(eventually (λx1. f x1 ≤ c) net)",
                    "id": "2.2.10.3",
                    "prevs": [
                        "2.2.10.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net), eventually (λx1. f x1 ≤ x) net ⊢ ¬(c ≤ x) ⟶ ¬¬(eventually (λx1. f x1 ≤ c) net)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.2.10.4",
                    "prevs": [
                        "2.2.9",
                        "2.2.10.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(eventually (λx. f x ≤ c) net), trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), eventually (λx1. f x1 ≤ x) net ⊢ c ≤ x"
                },
                {
                    "args": "",
                    "id": "2.2.10.5",
                    "prevs": [
                        "2.2.10.0",
                        "2.2.10.1",
                        "2.2.10.4"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∀x. eventually (λx1. f x1 ≤ x) net ⟶ c ≤ x"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ c ≤ x",
                    "id": "2.2.11",
                    "prevs": [
                        "2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ c ≤ x"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {b1. eventually (λx1. f x1 ≤ b1) net} ⟶ b ≤ x, a: c}",
                    "id": "2.2.12",
                    "prevs": [
                        "2.2.11"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∃a1. ∀x. x ∈ {b. eventually (λx1. f x1 ≤ b) net} ⟶ a1 ≤ x"
                },
                {
                    "args": "conjI",
                    "id": "2.2.13",
                    "prevs": [
                        "2.2.7",
                        "2.2.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ¬({b. eventually (λx. f x ≤ b) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. f x1 ≤ b1) net} ⟶ b ≤ x)"
                },
                {
                    "args": "inf_exists, ∃l. has_inf ({b. eventually (λx. f x ≤ b) net}) l",
                    "id": "2.2.14",
                    "prevs": [
                        "2.2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∃l. has_inf ({b. eventually (λx. f x ≤ b) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: ∃l. has_inf ({b. eventually (λx. f x ≤ b) net}) l}",
                    "id": "2.2.15",
                    "prevs": [
                        "2.2.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ trivial_limit net ∨ (∃x. has_inf ({b. eventually (λx1. f x1 ≤ b) net}) x)"
                },
                {
                    "args": "right_or_exists_thm, ∃a1. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) a1",
                    "id": "2.2.16",
                    "prevs": [
                        "2.2.15"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)), ¬(eventually (λx. f x ≤ c) net) ⊢ ∃a1. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) a1"
                },
                {
                    "args": "∃a1. ¬(eventually (λx. f x ≤ a1) net)",
                    "id": "2.2.17",
                    "prevs": [
                        "2.2.0",
                        "2.2.2",
                        "2.2.8",
                        "2.2.9",
                        "2.2.16"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "disjE",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⊢ ∃a1. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) a1"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. trivial_limit net ∨ has_inf ({b. eventually (λx. f x ≤ b) net}) l)"
                },
                {
                    "args": "has_limsup_def, trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. has_limsup f l net)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net)) ⟶ (∃l. has_limsup f l net)"
                },
                {
                    "args": "iffI",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃l. has_limsup f l net) ⟷ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃l. has_limsup f l net) ⟷ trivial_limit net ∨ (∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
                }
            ],
            "prop": [
                "(∃l. has_limsup f l net) ⟷ ",
                "trivial_limit net ∨ ",
                "(∃b. eventually (λx. f x ≤ b) net) ∧ (∃c. ¬(eventually (λx. f x ≤ c) net))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "exists_elim",
                    "names": "l"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "0.4.0"
                    ],
                    "goal_id": "0.4.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.4.0"
                    ],
                    "goal_id": "0.4.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "0.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.4.3",
                    "method_name": "inst_exists_goal",
                    "s": "l+1"
                },
                {
                    "fact_ids": [
                        "0.4.1"
                    ],
                    "goal_id": "0.4.3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "0.4.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "0.4.6",
                    "method_name": "inst_exists_goal",
                    "s": "l-1"
                },
                {
                    "fact_ids": [
                        "0.4.2"
                    ],
                    "goal_id": "0.4.6",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "0.4.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "inst_exists_goal",
                    "s": "(0::real)"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "right_or_exists_thm"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "inf_exists"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "2.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.3.0"
                    ],
                    "goal_id": "2.2.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.2.1"
                    ],
                    "goal_id": "2.2.3.2",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "fact_ids": [
                        "2.2.3.1"
                    ],
                    "goal_id": "2.2.3.4",
                    "method_name": "forall_elim",
                    "s": "b"
                },
                {
                    "fact_ids": [
                        "2.2.3.4"
                    ],
                    "goal_id": "2.2.3.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.2.2"
                    ],
                    "goal_id": "2.2.8",
                    "method_name": "exists_elim",
                    "names": "c"
                },
                {
                    "goal_id": "2.2.10",
                    "method_name": "inst_exists_goal",
                    "s": "c"
                },
                {
                    "goal_id": "2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.2.10",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "2.2.9"
                    ],
                    "goal_id": "2.2.10.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.2.10.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "2.2.10.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.10.2.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx1. f x1 ≤ x)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "2.2.10.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "fact_ids": [
                        "2.2.10.2.0"
                    ],
                    "goal_id": "2.2.10.2.1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward1"
            ],
            "name": "has_limsup_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_limsup f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "has_limsup g m net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup g m net ⊢ has_limsup g m net"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "eventually (λx. f x ≤ g x) net",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ g x) net ⊢ eventually (λx. f x ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ (∃x. m < x ∧ x < l) ⟶ false"
                },
                {
                    "args": "∃x. m < x ∧ x < l",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. m < x ∧ x < l ⊢ ∃x. m < x ∧ x < l"
                },
                {
                    "args": "c, real",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "m < c ∧ c < l",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < c ∧ c < l ⊢ m < c ∧ c < l"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l ⊢ eventually (λx. g x < c) net ⟶ false"
                },
                {
                    "args": "eventually (λx. g x < c) net",
                    "id": "4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. g x < c) net ⊢ eventually (λx. g x < c) net"
                },
                {
                    "args": "conjD2",
                    "id": "4.3.1",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "m < c ∧ c < l ⊢ c < l"
                },
                {
                    "args": "has_limsup_not_ubound",
                    "id": "4.3.2",
                    "prevs": [
                        "2",
                        "0",
                        "4.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ ¬(eventually (λx. f x ≤ c) net)"
                },
                {
                    "args": "∀x. f x ≤ g x ∧ g x < c ⟶ f x ≤ c",
                    "id": "4.3.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. f x ≤ g x ∧ g x < c ⟶ f x ≤ c"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. f x ≤ g x ∧ g x < c ⟶ f x ≤ c, net: net}",
                    "id": "4.3.4",
                    "prevs": [
                        "4.3.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ eventually (λx. f x ≤ g x ∧ g x < c ⟶ f x ≤ c) net"
                },
                {
                    "args": "conjI",
                    "id": "4.3.5",
                    "prevs": [
                        "3",
                        "4.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ eventually (λx. f x ≤ g x) net ∧ eventually (λx. g x < c) net"
                },
                {
                    "args": "eventually_and, eventually (λx. f x ≤ g x ∧ g x < c) net",
                    "id": "4.3.6",
                    "prevs": [
                        "4.3.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ eventually (λx. f x ≤ g x ∧ g x < c) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "4.3.7",
                    "prevs": [
                        "4.3.4",
                        "4.3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "negE",
                    "id": "4.3.8",
                    "prevs": [
                        "4.3.2",
                        "4.3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l, eventually (λx. g x < c) net ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.3.9",
                    "prevs": [
                        "4.3.0",
                        "4.3.8"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l ⊢ eventually (λx. g x < c) net ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l ⊢ ¬(eventually (λx. g x < c) net)"
                },
                {
                    "args": "conjD1",
                    "id": "4.5",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "m < c ∧ c < l ⊢ m < c"
                },
                {
                    "args": "has_limsup_eventually_ubound",
                    "id": "4.6",
                    "prevs": [
                        "2",
                        "1",
                        "4.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l ⊢ eventually (λx. g x < c) net"
                },
                {
                    "args": "negE",
                    "id": "4.7",
                    "prevs": [
                        "4.4",
                        "4.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, ∃x. m < x ∧ x < l, m < c ∧ c < l ⊢ false"
                },
                {
                    "args": "∃x. m < x ∧ x < l",
                    "id": "4.8",
                    "prevs": [
                        "4.0",
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.7"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ (∃x. m < x ∧ x < l) ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ¬(∃x. m < x ∧ x < l)"
                },
                {
                    "args": "real_lt_between, ¬(m < l)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ¬(m < l)"
                },
                {
                    "args": "real_not_lt, l ≤ m",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_limsup f l net, has_limsup g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ l ≤ m"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup f l net ⟶ has_limsup g m net ⟶ ¬(trivial_limit net) ⟶ eventually (λx. f x ≤ g x) net ⟶ l ≤ m"
                }
            ],
            "prop": [
                "has_limsup f l net ",
                "⟶ has_limsup g m net ",
                "   ⟶ ¬(trivial_limit net) ⟶ eventually (λx. f x ≤ g x) net ⟶ l ≤ m"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_lt_between"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "exists_elim",
                    "names": "c"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "param_A": "eventually (λx. g x < c) net",
                    "theorem": "negE"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "param_A": "eventually (λx. f x ≤ c) net",
                    "theorem": "negE"
                },
                {
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "param_l": "l",
                    "theorem": "has_limsup_not_ubound"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4.3.3",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x ≤ g x &  g x < c)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "4.3.3",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "goal_id": "4.3.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.3.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_and"
                },
                {
                    "goal_id": "4.3.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.5",
                    "method_name": "apply_backward_step",
                    "param_l": "m",
                    "theorem": "has_limsup_eventually_ubound"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "l": "real",
                "m": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward1",
                "hint_forward"
            ],
            "name": "has_limsup_ubound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. f x ≤ b) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ b) net ⊢ eventually (λx. f x ≤ b) net"
                },
                {
                    "args": "has_limsup f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f l net ⊢ has_limsup f l net"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "reallim_const, {a: 'a}, {a: b, net: net}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ tendsto_real (λx. b) b net"
                },
                {
                    "args": "reallim_imp_has_limsup",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. f x ≤ b) net, has_limsup f l net, ¬(trivial_limit net) ⊢ has_limsup (λx. b) b net"
                },
                {
                    "args": "has_limsup_le",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4",
                        "2",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f l net, eventually (λx. f x ≤ b) net, ¬(trivial_limit net) ⊢ l ≤ b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. f x ≤ b) net ⟶ has_limsup f l net ⟶ ¬(trivial_limit net) ⟶ l ≤ b"
                }
            ],
            "prop": "eventually (λx. f x ≤ b) net ⟶ has_limsup f l net ⟶ ¬(trivial_limit net) ⟶ l ≤ b",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_g": "(%x:: 'a. b)",
                    "theorem": "has_limsup_le"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_imp_has_limsup"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_const"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_limsup_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ trivial_limit sequentially ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "trivial_limit sequentially",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ⊢ trivial_limit sequentially"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)), trivial_limit sequentially ⊢ ¬((∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "¬((∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)))",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))) ⊢ ¬((∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)))"
                },
                {
                    "args": "trivial_limit_sequentially",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)), trivial_limit sequentially ⊢ ¬((∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially, trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ trivial_limit sequentially ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "eventually_sequentially",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ ¬(∃N. ∀n. N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "not_exists",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ¬(∀n. x ≤ n ⟶ a n ≤ c)))"
                },
                {
                    "args": "not_all",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ a x1 ≤ c)))"
                },
                {
                    "args": "not_imp",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(a x1 ≤ c)))"
                },
                {
                    "args": "real_less_def",
                    "id": "0.2.5",
                    "prevs": [
                        "0.2.4"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.2.6",
                    "prevs": [
                        "0.2.0",
                        "0.2.5"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⟶ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⟶ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "real_less_def, (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(a x1 ≤ c)))",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(a x1 ≤ c)))"
                },
                {
                    "args": "not_imp, (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ a x1 ≤ c)))",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ a x1 ≤ c)))"
                },
                {
                    "args": "not_all, (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ¬(∀n. x ≤ n ⟶ a n ≤ c)))",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀x. ¬(∀n. x ≤ n ⟶ a n ≤ c)))"
                },
                {
                    "args": "not_exists, (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ ¬(∃N. ∀n. N ≤ n ⟶ a n ≤ c))",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ ¬(∃N. ∀n. N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "eventually_sequentially, (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit sequentially, B: (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))}",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⊢ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [
                        "1.0",
                        "1.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)) ⟶ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially))"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) sequentially) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) sequentially)) ⟷ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "has_limsup, has_limsup a l sequentially ⟷ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_limsup a l sequentially ⟷ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup a l sequentially ⟷ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                }
            ],
            "prop": [
                "has_limsup a l sequentially ⟷ ",
                "(∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ ",
                "(∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trivial_limit_sequentially"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "fact_ids": [
                        "0.2.2"
                    ],
                    "goal_id": "0.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "0.2.3"
                    ],
                    "goal_id": "0.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "0.2.4"
                    ],
                    "goal_id": "0.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_less_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_limsup_sequentially_within",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ finite k ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "finite k",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "disjI1, {}, {A: finite k, B: (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))}",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k, finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "finite k ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "disjI1, {}, {A: finite k, B: (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))}",
                    "id": "0.2.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k, finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "finite k ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite k ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(finite k) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "¬(finite k)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite k) ⊢ ¬(finite k)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ⟶ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "finite k",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))}",
                    "id": "1.1.1.1",
                    "prevs": [
                        "1.0",
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.1.1.2",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ⟶ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "eventually_sequentially_within",
                    "id": "1.1.2.1",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ (∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))}",
                    "id": "1.1.2.2",
                    "prevs": [
                        "1.1.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))}",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "",
                    "id": "1.1.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "c, real",
                    "id": "1.1.2.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.1.2.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.2",
                    "prevs": [
                        "1.1.2.2",
                        "1.1.2.4.1"
                    ],
                    "rule": "apply_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), l < c ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), l < c ⊢ finite k ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "finite k",
                    "id": "1.1.2.4.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c}",
                    "id": "1.1.2.4.3.1",
                    "prevs": [
                        "1.0",
                        "1.1.2.4.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.3.2",
                    "prevs": [
                        "1.1.2.4.3.0",
                        "1.1.2.4.3.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), l < c ⊢ finite k ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c) ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)",
                    "id": "1.1.2.4.4",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c) ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "disjE",
                    "id": "1.1.2.4.5",
                    "prevs": [
                        "1.1.2.4.2",
                        "1.1.2.4.3",
                        "1.1.2.4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), l < c, ¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.6",
                    "prevs": [
                        "1.1.2.4.0",
                        "1.1.2.4.1",
                        "1.1.2.4.5"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "",
                    "id": "1.1.2.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)"
                },
                {
                    "args": "c, real",
                    "id": "1.1.2.5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.1.2.5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "",
                    "id": "1.1.2.5.2",
                    "prevs": [
                        "1.1.2.3",
                        "1.1.2.5.1"
                    ],
                    "rule": "apply_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.1.2.5.3",
                    "prevs": [
                        "1.1.2.5.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ¬(finite k) ∧ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "conjD2, {}, {A: ¬(finite k), B: ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)}",
                    "id": "1.1.2.5.4",
                    "prevs": [
                        "1.1.2.5.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "not_exists",
                    "id": "1.1.2.5.5",
                    "prevs": [
                        "1.1.2.5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "not_all",
                    "id": "1.1.2.5.6",
                    "prevs": [
                        "1.1.2.5.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ a x1 ≤ c)"
                },
                {
                    "args": "not_imp",
                    "id": "1.1.2.5.7",
                    "prevs": [
                        "1.1.2.5.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ a x1 ≤ c)"
                },
                {
                    "args": "not_imp",
                    "id": "1.1.2.5.8",
                    "prevs": [
                        "1.1.2.5.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(a x1 ≤ c)"
                },
                {
                    "args": "real_less_def, ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n",
                    "id": "1.1.2.5.9",
                    "prevs": [
                        "1.1.2.5.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), c < l ⊢ ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n"
                },
                {
                    "args": "",
                    "id": "1.1.2.5.10",
                    "prevs": [
                        "1.1.2.5.0",
                        "1.1.2.5.1",
                        "1.1.2.5.9"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ ∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.6",
                    "prevs": [
                        "1.1.2.4",
                        "1.1.2.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.1.2.7",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "disjE",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))), ¬(finite k) ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))}",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟶ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ⟶ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "finite k",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))}",
                    "id": "1.2.1.1",
                    "prevs": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ⟶ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)}",
                    "id": "1.2.2.1",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)}",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)"
                },
                {
                    "args": "",
                    "id": "1.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "c, real",
                    "id": "1.2.2.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.2.2.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "c",
                    "id": "1.2.2.3.2",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.3.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), ¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), l < c ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c}",
                    "id": "1.2.2.3.3",
                    "prevs": [
                        "1.2.2.3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), l < c ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "",
                    "id": "1.2.2.3.4",
                    "prevs": [
                        "1.2.2.3.0",
                        "1.2.2.3.1",
                        "1.2.2.3.3"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "",
                    "id": "1.2.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "c, real",
                    "id": "1.2.2.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.2.2.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "c",
                    "id": "1.2.2.4.2",
                    "prevs": [
                        "1.2.2.2",
                        "1.2.2.4.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n"
                },
                {
                    "args": "double_neg, ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬¬(c < a x1)",
                    "id": "1.2.2.4.3",
                    "prevs": [
                        "1.2.2.4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬¬(c < a x1)"
                },
                {
                    "args": "real_not_lt, ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(a x1 ≤ c)",
                    "id": "1.2.2.4.4",
                    "prevs": [
                        "1.2.2.4.3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(a x1 ≤ c)"
                },
                {
                    "args": "not_imp, ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ a x1 ≤ c)",
                    "id": "1.2.2.4.5",
                    "prevs": [
                        "1.2.2.4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ a x1 ≤ c)"
                },
                {
                    "args": "not_imp, ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ a x1 ≤ c)",
                    "id": "1.2.2.4.6",
                    "prevs": [
                        "1.2.2.4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ a x1 ≤ c)"
                },
                {
                    "args": "not_all, ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ a n ≤ c)",
                    "id": "1.2.2.4.7",
                    "prevs": [
                        "1.2.2.4.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "not_exists, ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)",
                    "id": "1.2.2.4.8",
                    "prevs": [
                        "1.2.2.4.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.4.9",
                    "prevs": [
                        "1.0",
                        "1.2.2.4.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ¬(finite k) ∧ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "de_morgan_thm2, ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))",
                    "id": "1.2.2.4.10",
                    "prevs": [
                        "1.2.2.4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), c < l ⊢ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "",
                    "id": "1.2.2.4.11",
                    "prevs": [
                        "1.2.2.4.0",
                        "1.2.2.4.1",
                        "1.2.2.4.10"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ ∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c))"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.5",
                    "prevs": [
                        "1.2.2.3",
                        "1.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)))"
                },
                {
                    "args": "eventually_sequentially_within, (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "1.2.2.7",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.6"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)), ¬(finite k) ⊢ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))}",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.0",
                        "1.2.4"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n)) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k)))"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(finite k) ⟶ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ finite k ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "trivial_limit_sequentially_within, trivial_limit (within sequentially k) ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ trivial_limit (within sequentially k) ∨ (∀c. l < c ⟶ eventually (λx. a x ≤ c) (within sequentially k)) ∧ (∀c. c < l ⟶ ¬(eventually (λx. a x ≤ c) (within sequentially k))) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "has_limsup, has_limsup a l (within sequentially k) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_limsup a l (within sequentially k) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup a l (within sequentially k) ⟷ finite k ∨ (∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
                }
            ],
            "prop": [
                "has_limsup a l (within sequentially k) ⟷ ",
                "finite k ∨ ",
                "(∀c. l < c ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ a n ≤ c)) ∧ ",
                "(∀c. c < l ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ c < a n))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_sequentially_within"
                },
                {
                    "case": "finite k",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eventually_sequentially_within"
                },
                {
                    "fact_ids": [
                        "1.1.2.1"
                    ],
                    "goal_id": "1.1.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.2.1"
                    ],
                    "goal_id": "1.1.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.2.4",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.1.2.2",
                        "1.1.2.4.1"
                    ],
                    "goal_id": "1.1.2.4.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.2"
                    ],
                    "goal_id": "1.1.2.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.2.4.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.2.4.3.0"
                    ],
                    "goal_id": "1.1.2.4.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1.2.5",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.1.2.3",
                        "1.1.2.5.1"
                    ],
                    "goal_id": "1.1.2.5.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.2"
                    ],
                    "goal_id": "1.1.2.5.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.3"
                    ],
                    "goal_id": "1.1.2.5.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.4"
                    ],
                    "goal_id": "1.1.2.5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.5"
                    ],
                    "goal_id": "1.1.2.5.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.6"
                    ],
                    "goal_id": "1.1.2.5.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1.1.2.5.7"
                    ],
                    "goal_id": "1.1.2.5.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.1.2.5.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially_within"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2.2.3",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.2.2.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.2.1"
                    ],
                    "goal_id": "1.2.2.3.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2.2.4",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "1.2.2.4.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.2.2.2",
                        "1.2.2.4.1"
                    ],
                    "goal_id": "1.2.2.4.2",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "k": "nat set",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "has_limsup_sequentially_imp_reallim_sup",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_limsup a l sequentially",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup a l sequentially ⊢ has_limsup a l sequentially"
                },
                {
                    "args": "has_limsup_sequentially",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup a l sequentially ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup a l sequentially ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "e, real",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "0 < e",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ⊢ 0 < e"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)}",
                    "id": "2.2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially ⊢ ∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c), B: ∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)}",
                    "id": "2.3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially ⊢ ∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)"
                },
                {
                    "args": "l + e / 2",
                    "id": "2.4",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup a l sequentially ⊢ l < l + e / 2 ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ l + e / 2)"
                },
                {
                    "args": "l < l + e / 2",
                    "id": "2.5",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l < l + e / 2"
                },
                {
                    "args": "",
                    "id": "2.6",
                    "prevs": [
                        "2.4",
                        "2.5"
                    ],
                    "rule": "apply_fact",
                    "th": "has_limsup a l sequentially, 0 < e ⊢ ∃N. ∀n. N ≤ n ⟶ a n ≤ l + e / 2"
                },
                {
                    "args": "l - e",
                    "id": "2.7",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup a l sequentially ⊢ l - e < l ⟶ (∀N. ∃n. N ≤ n ∧ l - e < a n)"
                },
                {
                    "args": "l - e < l",
                    "id": "2.8",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l - e < l"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.7",
                        "2.8"
                    ],
                    "rule": "apply_fact",
                    "th": "has_limsup a l sequentially, 0 < e ⊢ ∀N. ∃n. N ≤ n ∧ l - e < a n"
                },
                {
                    "args": "N, nat",
                    "id": "2.10",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ a n ≤ l + e / 2",
                    "id": "2.11",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ a n ≤ l + e / 2 ⊢ ∀n. N ≤ n ⟶ a n ≤ l + e / 2"
                },
                {
                    "args": "",
                    "id": "2.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2 ⊢ ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "n, nat",
                    "id": "2.12.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "2.12.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "n",
                    "id": "2.12.2",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup a l sequentially, 0 < e ⊢ ∃n1. n ≤ n1 ∧ l - e < a n1"
                },
                {
                    "args": "M, nat",
                    "id": "2.12.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR M"
                },
                {
                    "args": "n ≤ M ∧ l - e < a M",
                    "id": "2.12.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ M ∧ l - e < a M ⊢ n ≤ M ∧ l - e < a M"
                },
                {
                    "args": "conjD2",
                    "id": "2.12.5",
                    "prevs": [
                        "2.12.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ M ∧ l - e < a M ⊢ l - e < a M"
                },
                {
                    "args": "",
                    "id": "2.12.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ l + e / 2"
                },
                {
                    "args": "m, nat",
                    "id": "2.12.6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "m ∈ {m1. m1 ≥ n}",
                    "id": "2.12.6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ∈ {m1. m1 ≥ n} ⊢ m ∈ {m1. m1 ≥ n}"
                },
                {
                    "args": "member_collect",
                    "id": "2.12.6.2",
                    "prevs": [
                        "2.12.6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ∈ {m1. m1 ≥ n} ⊢ m ≥ n"
                },
                {
                    "args": "N ≤ m",
                    "id": "2.12.6.3",
                    "prevs": [
                        "2.12.6.2",
                        "2.12.1"
                    ],
                    "rule": "z3",
                    "th": "m ∈ {m1. m1 ≥ n}, N ≤ n ⊢ N ≤ m"
                },
                {
                    "args": "m",
                    "id": "2.12.6.4",
                    "prevs": [
                        "2.11",
                        "2.12.6.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ a n ≤ l + e / 2, has_limsup a l sequentially, 0 < e, N ≤ n, n ≤ M ∧ l - e < a M, m ∈ {m1. m1 ≥ n} ⊢ a m ≤ l + e / 2"
                },
                {
                    "args": "",
                    "id": "2.12.6.5",
                    "prevs": [
                        "2.12.6.0",
                        "2.12.6.1",
                        "2.12.6.4"
                    ],
                    "rule": "intros",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ l + e / 2"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ b, a: l + e / 2}",
                    "id": "2.12.7",
                    "prevs": [
                        "2.12.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∃a1. ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ a1"
                },
                {
                    "args": "forall_in_gspec1, ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ b",
                    "id": "2.12.8",
                    "prevs": [
                        "2.12.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ b"
                },
                {
                    "args": "conj_comm, ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ b",
                    "id": "2.12.9",
                    "prevs": [
                        "2.12.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ b"
                },
                {
                    "args": "image_def, ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ b",
                    "id": "2.12.10",
                    "prevs": [
                        "2.12.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ b"
                },
                {
                    "args": "eq_refl, {a: real}, {x: a M}",
                    "id": "2.12.11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a M = a M"
                },
                {
                    "args": "conjD1, {}, {A: n ≤ M, B: l - e < a M}",
                    "id": "2.12.12",
                    "prevs": [
                        "2.12.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n ≤ M ∧ l - e < a M ⊢ n ≤ M"
                },
                {
                    "args": "M ≥ n",
                    "id": "2.12.13",
                    "prevs": [
                        "2.12.12"
                    ],
                    "rule": "z3",
                    "th": "n ≤ M ∧ l - e < a M ⊢ M ≥ n"
                },
                {
                    "args": "member_collect, M ∈ {m. m ≥ n}",
                    "id": "2.12.14",
                    "prevs": [
                        "2.12.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ M ∈ {m. m ≥ n}"
                },
                {
                    "args": "conjI",
                    "id": "2.12.15",
                    "prevs": [
                        "2.12.11",
                        "2.12.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ a M = a M ∧ M ∈ {m. m ≥ n}"
                },
                {
                    "args": "exI, {a: nat}, {P: λx. a M = a x ∧ x ∈ {m. m ≥ n}, a: M}",
                    "id": "2.12.16",
                    "prevs": [
                        "2.12.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∃a1. a M = a a1 ∧ a1 ∈ {m. m ≥ n}"
                },
                {
                    "args": "in_image, a M ∈ image a ({m. m ≥ n})",
                    "id": "2.12.17",
                    "prevs": [
                        "2.12.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ a M ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "element_le_sup",
                    "id": "2.12.18",
                    "prevs": [
                        "2.12.10",
                        "2.12.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ a M ≤ sup (image a ({m. m ≥ n}))"
                },
                {
                    "args": "real_lte_trans",
                    "id": "2.12.19",
                    "prevs": [
                        "2.12.5",
                        "2.12.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ l - e < sup (image a ({m. m ≥ n}))"
                },
                {
                    "args": "",
                    "id": "2.12.20",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ (∀x. x ∈ image a ({m. m ≥ n}) ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false",
                    "id": "2.12.20.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.12.20.1",
                    "prevs": [
                        "2.12.20.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ ∀x. false ⟷ x ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "a M",
                    "id": "2.12.20.2",
                    "prevs": [
                        "2.12.20.1"
                    ],
                    "rule": "forall_elim",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ false ⟷ a M ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "false",
                    "id": "2.12.20.3",
                    "prevs": [
                        "2.12.20.2",
                        "2.12.17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false, has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.12.20.4",
                    "prevs": [
                        "2.12.20.0",
                        "2.12.20.3"
                    ],
                    "rule": "intros",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ (∀x. x ∈ image a ({m. m ≥ n}) ⟷ false) ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2.12.21",
                    "prevs": [
                        "2.12.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ¬(∀x. x ∈ image a ({m. m ≥ n}) ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ image a ({m. m ≥ n}) ⟷ x ∈ ∅)",
                    "id": "2.12.22",
                    "prevs": [
                        "2.12.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ¬(∀x. x ∈ image a ({m. m ≥ n}) ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬(image a ({m. m ≥ n}) = ∅)",
                    "id": "2.12.23",
                    "prevs": [
                        "2.12.22"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ¬(image a ({m. m ≥ n}) = ∅)"
                },
                {
                    "args": "forall_in_gspec1, ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ l + e / 2",
                    "id": "2.12.24",
                    "prevs": [
                        "2.12.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ l + e / 2"
                },
                {
                    "args": "conj_comm, ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ l + e / 2",
                    "id": "2.12.25",
                    "prevs": [
                        "2.12.24"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ l + e / 2"
                },
                {
                    "args": "image_def, ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ l + e / 2",
                    "id": "2.12.26",
                    "prevs": [
                        "2.12.25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ l + e / 2"
                },
                {
                    "args": "real_sup_le",
                    "id": "2.12.27",
                    "prevs": [
                        "2.12.23",
                        "2.12.26"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ sup (image a ({m. m ≥ n})) ≤ l + e / 2"
                },
                {
                    "args": "l + e / 2 < l + e",
                    "id": "2.12.28",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l + e / 2 < l + e"
                },
                {
                    "args": "real_let_trans",
                    "id": "2.12.29",
                    "prevs": [
                        "2.12.27",
                        "2.12.28"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ sup (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "conjI",
                    "id": "2.12.30",
                    "prevs": [
                        "2.12.19",
                        "2.12.29"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ l - e < sup (image a ({m. m ≥ n})) ∧ sup (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "conjI",
                    "id": "2.12.31",
                    "prevs": [
                        "2.1",
                        "2.12.30"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ 0 < e ∧ l - e < sup (image a ({m. m ≥ n})) ∧ sup (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "real_abs_between, abs (sup (image a ({m. m ≥ n})) - l) < e",
                    "id": "2.12.32",
                    "prevs": [
                        "2.12.31"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2, N ≤ n, n ≤ M ∧ l - e < a M ⊢ abs (sup (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "∃n1. n ≤ n1 ∧ l - e < a n1",
                    "id": "2.12.33",
                    "prevs": [
                        "2.12.0",
                        "2.12.1",
                        "2.12.2",
                        "2.12.3",
                        "2.12.4",
                        "2.12.32"
                    ],
                    "rule": "intros",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2 ⊢ ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "exI, {a: nat}, {P: λN. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e, a: N}",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially, 0 < e, ∀n. N ≤ n ⟶ a n ≤ l + e / 2 ⊢ ∃a1. ∀n. a1 ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ a n ≤ l + e / 2",
                    "id": "2.14",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.6",
                        "2.10",
                        "2.11",
                        "2.13"
                    ],
                    "rule": "intros",
                    "th": "has_limsup a l sequentially ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "reallim_sequentially, tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup a l sequentially ⊢ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup a l sequentially ⟶ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                }
            ],
            "prop": [
                "has_limsup a l sequentially ",
                "⟶ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
            ],
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "reallim_sequentially"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup_sequentially"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "e"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.2"
                    ],
                    "goal_id": "2.4",
                    "method_name": "forall_elim",
                    "s": "l + e/2"
                },
                {
                    "goal": "l < l + e / 2",
                    "goal_id": "2.5",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.5",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.4",
                        "2.5"
                    ],
                    "goal_id": "2.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.7",
                    "method_name": "forall_elim",
                    "s": "l-e"
                },
                {
                    "goal": "l - e < l",
                    "goal_id": "2.8",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.7",
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2.6"
                    ],
                    "goal_id": "2.10",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "2.12",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "2.12",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "2.12.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "goal_id": "2.12.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.9"
                    ],
                    "goal_id": "2.12.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "2.12.2"
                    ],
                    "goal_id": "2.12.3",
                    "method_name": "exists_elim",
                    "names": "M"
                },
                {
                    "goal_id": "2.12.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.12.5",
                    "method_name": "apply_backward_step",
                    "param_y": "a M",
                    "theorem": "real_lte_trans"
                },
                {
                    "fact_ids": [
                        "2.12.4"
                    ],
                    "goal_id": "2.12.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "apply_backward_step",
                    "theorem": "element_le_sup"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "inst_exists_goal",
                    "s": "l+e/2"
                },
                {
                    "goal_id": "2.12.6",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "2.11"
                    ],
                    "goal_id": "2.12.6.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "2.12.6.1"
                    ],
                    "goal_id": "2.12.6.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "2.12.6.2",
                        "2.12.1"
                    ],
                    "goal_id": "2.12.6.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.12.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "2.12.11",
                    "method_name": "inst_exists_goal",
                    "s": "M"
                },
                {
                    "goal_id": "2.12.11",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.12.11",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "2.12.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "2.12.4"
                    ],
                    "goal_id": "2.12.12",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.12.12"
                    ],
                    "goal_id": "2.12.13",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "apply_backward_step",
                    "param_y": "l + e / 2",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "apply_backward_step",
                    "theorem": "real_sup_le"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "2.12.20",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.12.20.0"
                    ],
                    "goal_id": "2.12.20.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.12.20.1"
                    ],
                    "goal_id": "2.12.20.2",
                    "method_name": "forall_elim",
                    "s": "a M"
                },
                {
                    "fact_ids": [
                        "2.12.20.2"
                    ],
                    "goal_id": "2.12.20.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.12.24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "2.12.24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "2.12.24",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.12.28",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "name": "has_limsup_sequentially_reallim_sup",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ has_limsup a l sequentially ⟶ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "has_limsup a l sequentially",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup a l sequentially ⊢ has_limsup a l sequentially"
                },
                {
                    "args": "has_limsup_sequentially_imp_reallim_sup, {}, {a: a, l: l}",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup a l sequentially ⊢ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "has_limsup_imp_ubound_le",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially ⊢ ∃b. eventually (λx. a x ≤ b) sequentially"
                },
                {
                    "args": "eventually_ubound_le_sequentially, ∃b. ∀n. a n ≤ b",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_limsup a l sequentially ⊢ ∃b. ∀n. a n ≤ b"
                },
                {
                    "args": "conjI",
                    "id": "0.4",
                    "prevs": [
                        "0.3",
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup a l sequentially ⊢ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup a l sequentially ⟶ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⟶ has_limsup a l sequentially"
                },
                {
                    "args": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "reallim_sequentially",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ (∃b. ∀n. a n ≤ b) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e))"
                },
                {
                    "args": "conjD2, {}, {A: ∃b. ∀n. a n ≤ b, B: ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e)}",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "conjD1, {}, {A: ∃b. ∀n. a n ≤ b, B: ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < e)}",
                    "id": "1.3",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ ∃b. ∀n. a n ≤ b"
                },
                {
                    "args": "b, real",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀n. a n ≤ b",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. a n ≤ b ⊢ ∀n. a n ≤ b"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ ∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "c, real",
                    "id": "1.6.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.6.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "c - l",
                    "id": "1.6.2",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "forall_elim",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ 0 < c - l ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l)"
                },
                {
                    "args": "0 < c - l",
                    "id": "1.6.3",
                    "prevs": [
                        "1.6.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ 0 < c - l"
                },
                {
                    "args": "",
                    "id": "1.6.4",
                    "prevs": [
                        "1.6.2",
                        "1.6.3"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, l < c ⊢ ∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l"
                },
                {
                    "args": "N, nat",
                    "id": "1.6.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l",
                    "id": "1.6.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l ⊢ ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l"
                },
                {
                    "args": "",
                    "id": "1.6.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l ⊢ ∀n. N ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "n, nat",
                    "id": "1.6.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "1.6.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "",
                    "id": "1.6.7.2",
                    "prevs": [
                        "1.6.6",
                        "1.6.7.1"
                    ],
                    "rule": "apply_fact",
                    "th": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ abs (sup (image a ({m. m ≥ n})) - l) < c - l"
                },
                {
                    "args": "real_abs_between",
                    "id": "1.6.7.3",
                    "prevs": [
                        "1.6.7.2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ 0 < c - l ∧ l - (c - l) < sup (image a ({m. m ≥ n})) ∧ sup (image a ({m. m ≥ n})) < l + (c - l)"
                },
                {
                    "args": "conjD2, {}, {A: 0 < c - l, B: l - (c - l) < sup (image a ({m. m ≥ n})) ∧ sup (image a ({m. m ≥ n})) < l + (c - l)}",
                    "id": "1.6.7.4",
                    "prevs": [
                        "1.6.7.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ l - (c - l) < sup (image a ({m. m ≥ n})) ∧ sup (image a ({m. m ≥ n})) < l + (c - l)"
                },
                {
                    "args": "conjD2, {}, {A: l - (c - l) < sup (image a ({m. m ≥ n})), B: sup (image a ({m. m ≥ n})) < l + (c - l)}",
                    "id": "1.6.7.5",
                    "prevs": [
                        "1.6.7.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ sup (image a ({m. m ≥ n})) < l + (c - l)"
                },
                {
                    "args": "∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ b",
                    "id": "1.6.7.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "z3",
                    "th": "∀n. a n ≤ b ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ b"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ b, a: b}",
                    "id": "1.6.7.7",
                    "prevs": [
                        "1.6.7.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ ∃a1. ∀x. x ∈ {m. m ≥ n} ⟶ a x ≤ a1"
                },
                {
                    "args": "forall_in_gspec1, ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ b",
                    "id": "1.6.7.8",
                    "prevs": [
                        "1.6.7.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ z ≤ b"
                },
                {
                    "args": "conj_comm, ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ b",
                    "id": "1.6.7.9",
                    "prevs": [
                        "1.6.7.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ x ≤ b"
                },
                {
                    "args": "image_def, ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ b",
                    "id": "1.6.7.10",
                    "prevs": [
                        "1.6.7.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ x ≤ b"
                },
                {
                    "args": "eq_refl, {a: real}, {x: a n}",
                    "id": "1.6.7.11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a n = a n"
                },
                {
                    "args": "n ∈ {m. m ≥ n}",
                    "id": "1.6.7.12",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "conjI",
                    "id": "1.6.7.13",
                    "prevs": [
                        "1.6.7.11",
                        "1.6.7.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ a n = a n ∧ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "exI, {a: nat}, {P: λx. a n = a x ∧ x ∈ {m. m ≥ n}, a: n}",
                    "id": "1.6.7.14",
                    "prevs": [
                        "1.6.7.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ ∃a1. a n = a a1 ∧ a1 ∈ {m. m ≥ n}"
                },
                {
                    "args": "in_image, a n ∈ image a ({m. m ≥ n})",
                    "id": "1.6.7.15",
                    "prevs": [
                        "1.6.7.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ a n ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "element_le_sup",
                    "id": "1.6.7.16",
                    "prevs": [
                        "1.6.7.10",
                        "1.6.7.15"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ a n ≤ sup (image a ({m. m ≥ n}))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "1.6.7.17",
                    "prevs": [
                        "1.6.7.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ sup (image a ({m. m ≥ n})) ≤ l + (c - l)"
                },
                {
                    "args": "l + (c - l) ≤ c",
                    "id": "1.6.7.18",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l + (c - l) ≤ c"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.6.7.19",
                    "prevs": [
                        "1.6.7.17",
                        "1.6.7.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ sup (image a ({m. m ≥ n})) ≤ c"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.6.7.20",
                    "prevs": [
                        "1.6.7.16",
                        "1.6.7.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l, N ≤ n ⊢ a n ≤ c"
                },
                {
                    "args": "",
                    "id": "1.6.7.21",
                    "prevs": [
                        "1.6.7.0",
                        "1.6.7.1",
                        "1.6.7.20"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l ⊢ ∀n. N ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "exI, {a: nat}, {P: λN. ∀n. N ≤ n ⟶ a n ≤ c, a: N}",
                    "id": "1.6.8",
                    "prevs": [
                        "1.6.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, l < c, ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l ⊢ ∃a1. ∀n. a1 ≤ n ⟶ a n ≤ c"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < c - l",
                    "id": "1.6.9",
                    "prevs": [
                        "1.6.0",
                        "1.6.1",
                        "1.6.4",
                        "1.6.5",
                        "1.6.6",
                        "1.6.8"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ ∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)"
                },
                {
                    "args": "",
                    "id": "1.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ ∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)"
                },
                {
                    "args": "c, real",
                    "id": "1.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "",
                    "id": "1.7.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l ⊢ ∀N. ∃n. N ≤ n ∧ c < a n"
                },
                {
                    "args": "N, nat",
                    "id": "1.7.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "l - c",
                    "id": "1.7.2.1",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "forall_elim",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⊢ 0 < l - c ⟶ (∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c)"
                },
                {
                    "args": "real_sub_lt",
                    "id": "1.7.2.2",
                    "prevs": [
                        "1.7.1"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "c < l ⊢ 0 < l - c"
                },
                {
                    "args": "",
                    "id": "1.7.2.3",
                    "prevs": [
                        "1.7.2.1",
                        "1.7.2.2"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, c < l ⊢ ∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c"
                },
                {
                    "args": "M, nat",
                    "id": "1.7.2.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR M"
                },
                {
                    "args": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c",
                    "id": "1.7.2.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c"
                },
                {
                    "args": "sup_approach, {}, {c: c, s: {y. ∃k. y = a k ∧ k ≥ max N M}}",
                    "id": "1.7.2.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬({y. ∃k. y = a k ∧ k ≥ max N M} = ∅) ⟶ (∃b. ∀x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ⟶ x ≤ b) ⟶ c < sup ({y. ∃k. y = a k ∧ k ≥ max N M}) ⟶ (∃x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ∧ c < x)"
                },
                {
                    "args": "¬({y. ∃k. y = a k ∧ k ≥ max N M} = ∅)",
                    "id": "1.7.2.7",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ¬({y. ∃k. y = a k ∧ k ≥ max N M} = ∅)"
                },
                {
                    "args": "∀x. x ≥ max N M ⟶ a x ≤ b",
                    "id": "1.7.2.8",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "z3",
                    "th": "∀n. a n ≤ b ⊢ ∀x. x ≥ max N M ⟶ a x ≤ b"
                },
                {
                    "args": "forall_in_gspec1, ∀z. z ∈ {y. ∃x. y = a x ∧ x ≥ max N M} ⟶ z ≤ b",
                    "id": "1.7.2.9",
                    "prevs": [
                        "1.7.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∀z. z ∈ {y. ∃x. y = a x ∧ x ≥ max N M} ⟶ z ≤ b"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ⟶ x ≤ b, a: b}",
                    "id": "1.7.2.10",
                    "prevs": [
                        "1.7.2.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∃a1. ∀x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ⟶ x ≤ a1"
                },
                {
                    "args": "max N M",
                    "id": "1.7.2.11",
                    "prevs": [
                        "1.7.2.5"
                    ],
                    "rule": "forall_elim",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ M ≤ max N M ⟶ abs (sup (image a ({m. m ≥ max N M})) - l) < l - c"
                },
                {
                    "args": "M ≤ max N M",
                    "id": "1.7.2.12",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ M ≤ max N M"
                },
                {
                    "args": "",
                    "id": "1.7.2.13",
                    "prevs": [
                        "1.7.2.11",
                        "1.7.2.12"
                    ],
                    "rule": "apply_fact",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ abs (sup (image a ({m. m ≥ max N M})) - l) < l - c"
                },
                {
                    "args": "real_abs_between",
                    "id": "1.7.2.14",
                    "prevs": [
                        "1.7.2.13"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ 0 < l - c ∧ l - (l - c) < sup (image a ({m. m ≥ max N M})) ∧ sup (image a ({m. m ≥ max N M})) < l + (l - c)"
                },
                {
                    "args": "conjD2, {}, {A: 0 < l - c, B: l - (l - c) < sup (image a ({m. m ≥ max N M})) ∧ sup (image a ({m. m ≥ max N M})) < l + (l - c)}",
                    "id": "1.7.2.15",
                    "prevs": [
                        "1.7.2.14"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ l - (l - c) < sup (image a ({m. m ≥ max N M})) ∧ sup (image a ({m. m ≥ max N M})) < l + (l - c)"
                },
                {
                    "args": "conjD1, {}, {A: l - (l - c) < sup (image a ({m. m ≥ max N M})), B: sup (image a ({m. m ≥ max N M})) < l + (l - c)}",
                    "id": "1.7.2.16",
                    "prevs": [
                        "1.7.2.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ l - (l - c) < sup (image a ({m. m ≥ max N M}))"
                },
                {
                    "args": "image_def",
                    "id": "1.7.2.17",
                    "prevs": [
                        "1.7.2.16"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ l - (l - c) < sup ({y. ∃x. x ∈ {m. m ≥ max N M} ∧ y = a x})"
                },
                {
                    "args": "member_collect",
                    "id": "1.7.2.18",
                    "prevs": [
                        "1.7.2.17"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ l - (l - c) < sup ({y. ∃x. x ≥ max N M ∧ y = a x})"
                },
                {
                    "args": "c ≤ l - (l - c)",
                    "id": "1.7.2.19",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ c ≤ l - (l - c)"
                },
                {
                    "args": "real_let_trans",
                    "id": "1.7.2.20",
                    "prevs": [
                        "1.7.2.19",
                        "1.7.2.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ c < sup ({y. ∃k. k ≥ max N M ∧ y = a k})"
                },
                {
                    "args": "conj_comm, c < sup ({y. ∃k. y = a k ∧ k ≥ max N M})",
                    "id": "1.7.2.21",
                    "prevs": [
                        "1.7.2.20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ c < sup ({y. ∃k. y = a k ∧ k ≥ max N M})"
                },
                {
                    "args": "",
                    "id": "1.7.2.22",
                    "prevs": [
                        "1.7.2.6",
                        "1.7.2.7",
                        "1.7.2.10",
                        "1.7.2.21"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∃x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ∧ c < x"
                },
                {
                    "args": "exists_in_gspec1",
                    "id": "1.7.2.23",
                    "prevs": [
                        "1.7.2.22"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∃x. x ≥ max N M ∧ c < a x"
                },
                {
                    "args": "∃n. N ≤ n ∧ c < a n",
                    "id": "1.7.2.24",
                    "prevs": [
                        "1.7.2.23"
                    ],
                    "rule": "z3",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l, ∀n. M ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c ⊢ ∃n. N ≤ n ∧ c < a n"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ abs (sup (image a ({m. m ≥ n})) - l) < l - c",
                    "id": "1.7.2.25",
                    "prevs": [
                        "1.7.2.0",
                        "1.7.2.3",
                        "1.7.2.4",
                        "1.7.2.5",
                        "1.7.2.24"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b, c < l ⊢ ∀N. ∃n. N ≤ n ∧ c < a n"
                },
                {
                    "args": "",
                    "id": "1.7.3",
                    "prevs": [
                        "1.7.0",
                        "1.7.1",
                        "1.7.2"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ ∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n)"
                },
                {
                    "args": "conjI",
                    "id": "1.8",
                    "prevs": [
                        "1.6",
                        "1.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ (∀c. l < c ⟶ (∃N. ∀n. N ≤ n ⟶ a n ≤ c)) ∧ (∀c. c < l ⟶ (∀N. ∃n. N ≤ n ∧ c < a n))"
                },
                {
                    "args": "has_limsup_sequentially, has_limsup a l sequentially",
                    "id": "1.9",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially, ∀n. a n ≤ b ⊢ has_limsup a l sequentially"
                },
                {
                    "args": "∃b. ∀n. a n ≤ b",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.3",
                        "1.4",
                        "1.5",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially ⟶ has_limsup a l sequentially"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_limsup a l sequentially ⟷ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup a l sequentially ⟷ (∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
                }
            ],
            "prop": [
                "has_limsup a l sequentially ⟷ ",
                "(∃b. ∀n. a n ≤ b) ∧ tendsto_real (λn. sup (image a ({m. m ≥ n}))) l sequentially"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_forward_step",
                    "theorem": "has_limsup_sequentially_imp_reallim_sup"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "eventually_ubound_le_sequentially"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "has_limsup_imp_ubound_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "reallim_sequentially"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup_sequentially"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.6",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.6.2",
                    "method_name": "forall_elim",
                    "s": "c-l"
                },
                {
                    "goal": "0 < c - l",
                    "goal_id": "1.6.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.6.1"
                    ],
                    "goal_id": "1.6.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.6.2",
                        "1.6.3"
                    ],
                    "goal_id": "1.6.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.6.4"
                    ],
                    "goal_id": "1.6.5",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "1.6.7",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "1.6.7",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.6.6",
                        "1.6.7.1"
                    ],
                    "goal_id": "1.6.7.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.6.7.2"
                    ],
                    "goal_id": "1.6.7.3",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "fact_ids": [
                        "1.6.7.3"
                    ],
                    "goal_id": "1.6.7.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.6.7.4"
                    ],
                    "goal_id": "1.6.7.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "apply_backward_step",
                    "param_y": "sup (image a ({m. m ≥ n}))",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "apply_backward_step",
                    "theorem": "element_le_sup"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "goal_id": "1.6.7.6",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "fact_ids": [
                        "1.5"
                    ],
                    "goal_id": "1.6.7.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.6.7.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "1.6.7.11",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "goal_id": "1.6.7.11",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.6.7.11",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1.6.7.12",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.6.7.17",
                    "method_name": "apply_backward_step",
                    "param_y": "l + (c - l)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.6.7.17",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "1.6.7.18",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.7",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.7.2",
                    "method_name": "introduction",
                    "names": "N"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.7.2.1",
                    "method_name": "forall_elim",
                    "s": "l-c"
                },
                {
                    "fact_ids": [
                        "1.7.1"
                    ],
                    "goal_id": "1.7.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_sub_lt"
                },
                {
                    "fact_ids": [
                        "1.7.2.1",
                        "1.7.2.2"
                    ],
                    "goal_id": "1.7.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.7.2.3"
                    ],
                    "goal_id": "1.7.2.4",
                    "method_name": "exists_elim",
                    "names": "M"
                },
                {
                    "goal_id": "1.7.2.6",
                    "method_name": "apply_forward_step",
                    "param_c": "c",
                    "param_s": "{y. ?k. y = a k & k >= max N M}",
                    "theorem": "sup_approach"
                },
                {
                    "goal": "(∃x. x ∈ {y. ∃k. y = a k ∧ k ≥ max N M} ∧ c < x)",
                    "goal_id": "1.7.2.7",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.7.2.6"
                    ],
                    "goal_id": "1.7.2.7",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.7.2.7",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.7.2.8",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "1.7.2.8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "fact_ids": [
                        "1.5"
                    ],
                    "goal_id": "1.7.2.8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.7.2.5"
                    ],
                    "goal_id": "1.7.2.11",
                    "method_name": "forall_elim",
                    "s": "max N M"
                },
                {
                    "goal": "M ≤ max N M",
                    "goal_id": "1.7.2.12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.7.2.12",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.7.2.11",
                        "1.7.2.12"
                    ],
                    "goal_id": "1.7.2.13",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.7.2.13"
                    ],
                    "goal_id": "1.7.2.14",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "fact_ids": [
                        "1.7.2.14"
                    ],
                    "goal_id": "1.7.2.15",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.7.2.15"
                    ],
                    "goal_id": "1.7.2.16",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.7.2.16"
                    ],
                    "goal_id": "1.7.2.17",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "fact_ids": [
                        "1.7.2.17"
                    ],
                    "goal_id": "1.7.2.18",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "1.7.2.19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.7.2.19",
                    "method_name": "apply_backward_step",
                    "param_y": "l - (l - c)",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "1.7.2.19",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.7.2.22"
                    ],
                    "goal_id": "1.7.2.23",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "exists_in_gspec1"
                },
                {
                    "fact_ids": [
                        "1.7.2.23"
                    ],
                    "goal_id": "1.7.2.24",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_limsup_mul_reallim_right",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_limsup f a net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f a net ⊢ has_limsup f a net"
                },
                {
                    "args": "tendsto_real g b net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "tendsto_real g b net ⊢ tendsto_real g b net"
                },
                {
                    "args": "eventually (λx. 0 ≤ f x) net",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. 0 ≤ f x) net ⊢ eventually (λx. 0 ≤ f x) net"
                },
                {
                    "args": "eventually (λx. 0 ≤ g x) net",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ trivial_limit net ⟶ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))}",
                    "id": "4.1",
                    "prevs": [
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, trivial_limit net ⊢ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ trivial_limit net ⟶ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ ∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "c, real",
                    "id": "5.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "a * b < c",
                    "id": "5.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a * b < c ⊢ a * b < c"
                },
                {
                    "args": "real_continuous_const, {a: real}, {c: a, net: atreal 0}",
                    "id": "5.1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx. a) (atreal 0)"
                },
                {
                    "args": "real_continuous_at_id, {}, {x: (0::real)}",
                    "id": "5.1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx1. x1) (atreal 0)"
                },
                {
                    "args": "real_continuous_add",
                    "id": "5.1.4",
                    "prevs": [
                        "5.1.2",
                        "5.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ real_continuous (λx. a + x) (atreal 0)"
                },
                {
                    "args": "real_continuous_const, {a: real}, {c: b, net: atreal 0}",
                    "id": "5.1.5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx. b) (atreal 0)"
                },
                {
                    "args": "real_continuous_add",
                    "id": "5.1.6",
                    "prevs": [
                        "5.1.5",
                        "5.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ real_continuous (λx. b + x) (atreal 0)"
                },
                {
                    "args": "real_continuous_mul",
                    "id": "5.1.7",
                    "prevs": [
                        "5.1.4",
                        "5.1.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ real_continuous (λx. (a + x) * (b + x)) (atreal 0)"
                },
                {
                    "args": "real_continuous_atreal1",
                    "id": "5.1.8",
                    "prevs": [
                        "5.1.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ ∀e. 0 < e ⟶ (∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < e))"
                },
                {
                    "args": "c - a * b",
                    "id": "5.1.9",
                    "prevs": [
                        "5.1.8"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ 0 < c - a * b ⟶ (∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b))"
                },
                {
                    "args": "0 < c - a * b",
                    "id": "5.1.10",
                    "prevs": [
                        "5.1.1"
                    ],
                    "rule": "z3",
                    "th": "a * b < c ⊢ 0 < c - a * b"
                },
                {
                    "args": "",
                    "id": "5.1.11",
                    "prevs": [
                        "5.1.9",
                        "5.1.10"
                    ],
                    "rule": "apply_fact",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c ⊢ ∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b)"
                },
                {
                    "args": "d, real",
                    "id": "5.1.12",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b)",
                    "id": "5.1.13",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b)"
                },
                {
                    "args": "conjD1",
                    "id": "5.1.14",
                    "prevs": [
                        "5.1.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ 0 < d"
                },
                {
                    "args": "conjD2, {}, {A: 0 < d, B: ∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b}",
                    "id": "5.1.15",
                    "prevs": [
                        "5.1.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b"
                },
                {
                    "args": "",
                    "id": "5.1.16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∀x. abs x < d ⟶ (a + x) * (b + x) < c"
                },
                {
                    "args": "x, real",
                    "id": "5.1.16.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "abs x < d",
                    "id": "5.1.16.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs x < d ⊢ abs x < d"
                },
                {
                    "args": "real_sub_rzero",
                    "id": "5.1.16.2",
                    "prevs": [
                        "5.1.15"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∀x1. abs x1 < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b"
                },
                {
                    "args": "",
                    "id": "5.1.16.3",
                    "prevs": [
                        "5.1.16.2",
                        "5.1.16.1"
                    ],
                    "rule": "apply_fact",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), abs x < d ⊢ abs ((a + x) * (b + x) - (a + 0) * (b + 0)) < c - a * b"
                },
                {
                    "args": "(a + x) * (b + x) < c",
                    "id": "5.1.16.4",
                    "prevs": [
                        "5.1.16.3"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), abs x < d ⊢ (a + x) * (b + x) < c"
                },
                {
                    "args": "",
                    "id": "5.1.16.5",
                    "prevs": [
                        "5.1.16.0",
                        "5.1.16.1",
                        "5.1.16.4"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∀x. abs x < d ⟶ (a + x) * (b + x) < c"
                },
                {
                    "args": "conjI",
                    "id": "5.1.17",
                    "prevs": [
                        "5.1.14",
                        "5.1.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ 0 < d ∧ (∀x. abs x < d ⟶ (a + x) * (b + x) < c)"
                },
                {
                    "args": "exI, {a: real}, {P: λd. 0 < d ∧ (∀x. abs x < d ⟶ (a + x) * (b + x) < c), a: d}",
                    "id": "5.1.18",
                    "prevs": [
                        "5.1.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∃d. 0 < d ∧ (∀x. abs x < d ⟶ (a + x) * (b + x) < c)"
                },
                {
                    "args": "conjD2, {}, {A: 0 < d, B: ∀x. abs x < d ⟶ (a + x) * (b + x) < c}",
                    "id": "5.1.19",
                    "prevs": [
                        "5.1.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ ∀x. abs x < d ⟶ (a + x) * (b + x) < c"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "5.1.20",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real g b net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (g x - b) < e) net"
                },
                {
                    "args": "d / 2",
                    "id": "5.1.21",
                    "prevs": [
                        "5.1.20"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real g b net ⊢ 0 < d / 2 ⟶ eventually (λx. abs (g x - b) < d / 2) net"
                },
                {
                    "args": "0 < d / 2",
                    "id": "5.1.22",
                    "prevs": [
                        "5.1.14"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ 0 < d / 2"
                },
                {
                    "args": "",
                    "id": "5.1.23",
                    "prevs": [
                        "5.1.21",
                        "5.1.22"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real g b net, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ eventually (λx. abs (g x - b) < d / 2) net"
                },
                {
                    "args": "has_limsup",
                    "id": "5.1.24",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f a net ⊢ trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "5.1.25",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ trivial_limit net ⟶ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "trivial_limit net",
                    "id": "5.1.25.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "eventually_trivial, {a: 'a}, {P: λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c, net: net}",
                    "id": "5.1.25.1",
                    "prevs": [
                        "5.1.25.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ⊢ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "5.1.25.2",
                    "prevs": [
                        "5.1.25.0",
                        "5.1.25.1"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ trivial_limit net ⟶ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "5.1.26",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ (∀c1. a < c1 ⟶ eventually (λx. f x ≤ c1) net) ∧ (∀c1. c1 < a ⟶ ¬(eventually (λx. f x ≤ c1) net)) ⟶ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net))",
                    "id": "5.1.26.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. a < c ⟶ eventually (λx. f x ≤ c) net, B: ∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)}",
                    "id": "5.1.26.1",
                    "prevs": [
                        "5.1.26.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀c. a < c ⟶ eventually (λx. f x ≤ c) net"
                },
                {
                    "args": "a + d / 2",
                    "id": "5.1.26.2",
                    "prevs": [
                        "5.1.26.1"
                    ],
                    "rule": "forall_elim",
                    "th": "(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ a < a + d / 2 ⟶ eventually (λx. f x ≤ a + d / 2) net"
                },
                {
                    "args": "a < a + d / 2",
                    "id": "5.1.26.3",
                    "prevs": [
                        "5.1.14"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ a < a + d / 2"
                },
                {
                    "args": "",
                    "id": "5.1.26.4",
                    "prevs": [
                        "5.1.26.2",
                        "5.1.26.3"
                    ],
                    "rule": "apply_fact",
                    "th": "(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)), 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ eventually (λx. f x ≤ a + d / 2) net"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. 0 ≤ f x) net, B: eventually (λx. 0 ≤ g x) net}",
                    "id": "5.1.26.5",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x) net ∧ eventually (λx. 0 ≤ g x) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.1.26.6",
                    "prevs": [
                        "5.1.26.5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "5.1.26.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀x. 0 ≤ f x ∧ 0 ≤ g x ⟶ f x ≤ a + d / 2 ⟶ abs (g x - b) < d / 2 ⟶ f x * g x ≤ c"
                },
                {
                    "args": "x, 'a",
                    "id": "5.1.26.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "0 ≤ f x ∧ 0 ≤ g x",
                    "id": "5.1.26.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ f x ∧ 0 ≤ g x ⊢ 0 ≤ f x ∧ 0 ≤ g x"
                },
                {
                    "args": "f x ≤ a + d / 2",
                    "id": "5.1.26.7.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "f x ≤ a + d / 2 ⊢ f x ≤ a + d / 2"
                },
                {
                    "args": "abs (g x - b) < d / 2",
                    "id": "5.1.26.7.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs (g x - b) < d / 2 ⊢ abs (g x - b) < d / 2"
                },
                {
                    "args": "conjD1",
                    "id": "5.1.26.7.4",
                    "prevs": [
                        "5.1.26.7.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ f x ∧ 0 ≤ g x ⊢ 0 ≤ f x"
                },
                {
                    "args": "conjD2",
                    "id": "5.1.26.7.5",
                    "prevs": [
                        "5.1.26.7.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ f x ∧ 0 ≤ g x ⊢ 0 ≤ g x"
                },
                {
                    "args": "g x ≤ b + d / 2",
                    "id": "5.1.26.7.6",
                    "prevs": [
                        "5.1.26.7.3"
                    ],
                    "rule": "z3",
                    "th": "abs (g x - b) < d / 2 ⊢ g x ≤ b + d / 2"
                },
                {
                    "args": "real_le_mul2",
                    "id": "5.1.26.7.7",
                    "prevs": [
                        "5.1.26.7.4",
                        "5.1.26.7.2",
                        "5.1.26.7.5",
                        "5.1.26.7.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)), 0 ≤ f x ∧ 0 ≤ g x, f x ≤ a + d / 2, abs (g x - b) < d / 2 ⊢ f x * g x ≤ (a + d / 2) * (b + d / 2)"
                },
                {
                    "args": "d / 2",
                    "id": "5.1.26.7.8",
                    "prevs": [
                        "5.1.19"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ abs (d / 2) < d ⟶ (a + d / 2) * (b + d / 2) < c"
                },
                {
                    "args": "abs (d / 2) < d",
                    "id": "5.1.26.7.9",
                    "prevs": [
                        "5.1.14"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ abs (d / 2) < d"
                },
                {
                    "args": "",
                    "id": "5.1.26.7.10",
                    "prevs": [
                        "5.1.26.7.8",
                        "5.1.26.7.9"
                    ],
                    "rule": "apply_fact",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)), 0 ≤ f x ∧ 0 ≤ g x, f x ≤ a + d / 2, abs (g x - b) < d / 2 ⊢ (a + d / 2) * (b + d / 2) < c"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "5.1.26.7.11",
                    "prevs": [
                        "5.1.26.7.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)), 0 ≤ f x ∧ 0 ≤ g x, f x ≤ a + d / 2, abs (g x - b) < d / 2 ⊢ (a + d / 2) * (b + d / 2) ≤ c"
                },
                {
                    "args": "real_le_trans",
                    "id": "5.1.26.7.12",
                    "prevs": [
                        "5.1.26.7.7",
                        "5.1.26.7.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)), 0 ≤ f x ∧ 0 ≤ g x, f x ≤ a + d / 2, abs (g x - b) < d / 2 ⊢ f x * g x ≤ c"
                },
                {
                    "args": "",
                    "id": "5.1.26.7.13",
                    "prevs": [
                        "5.1.26.7.0",
                        "5.1.26.7.1",
                        "5.1.26.7.2",
                        "5.1.26.7.3",
                        "5.1.26.7.12"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ ∀x. 0 ≤ f x ∧ 0 ≤ g x ⟶ f x ≤ a + d / 2 ⟶ abs (g x - b) < d / 2 ⟶ f x * g x ≤ c"
                },
                {
                    "args": "eventually_mono",
                    "id": "5.1.26.8",
                    "prevs": [
                        "5.1.26.7",
                        "5.1.26.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ eventually (λx. f x ≤ a + d / 2 ⟶ abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "5.1.26.9",
                    "prevs": [
                        "5.1.26.8",
                        "5.1.26.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b), (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)) ⊢ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "5.1.26.10",
                    "prevs": [
                        "5.1.26.0",
                        "5.1.26.9"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ (∀c1. a < c1 ⟶ eventually (λx. f x ≤ c1) net) ∧ (∀c1. c1 < a ⟶ ¬(eventually (λx. f x ≤ c1) net)) ⟶ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "disjE",
                    "id": "5.1.27",
                    "prevs": [
                        "5.1.24",
                        "5.1.25",
                        "5.1.26"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ eventually (λx. abs (g x - b) < d / 2 ⟶ f x * g x ≤ c) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "5.1.28",
                    "prevs": [
                        "5.1.27",
                        "5.1.23"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), a * b < c, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b) ⊢ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < c - a * b)",
                    "id": "5.1.29",
                    "prevs": [
                        "5.1.0",
                        "5.1.1",
                        "5.1.11",
                        "5.1.12",
                        "5.1.13",
                        "5.1.28"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ ∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ ∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "c, real",
                    "id": "5.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < a * b",
                    "id": "5.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < a * b ⊢ c < a * b"
                },
                {
                    "args": "",
                    "id": "5.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b ⊢ b = 0 ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "b = 0",
                    "id": "5.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b = 0 ⊢ b = 0"
                },
                {
                    "args": "",
                    "id": "5.2.2.1",
                    "prevs": [
                        "5.2.2.0",
                        "5.2.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "b = 0, c < a * b ⊢ c < a * 0"
                },
                {
                    "args": "real_mul_rzero",
                    "id": "5.2.2.2",
                    "prevs": [
                        "5.2.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "b = 0, c < a * b ⊢ c < 0"
                },
                {
                    "args": "",
                    "id": "5.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0 ⊢ eventually (λx. f x * g x ≤ c) net ⟶ false"
                },
                {
                    "args": "eventually (λx. f x * g x ≤ c) net",
                    "id": "5.2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x * g x ≤ c) net ⊢ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "double_neg, ¬¬(c < 0)",
                    "id": "5.2.2.3.1",
                    "prevs": [
                        "5.2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ ¬¬(c < 0)"
                },
                {
                    "args": "real_not_lt, ¬(0 ≤ c)",
                    "id": "5.2.2.3.2",
                    "prevs": [
                        "5.2.2.3.1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ ¬(0 ≤ c)"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. 0 ≤ f x) net, B: eventually (λx. 0 ≤ g x) net}",
                    "id": "5.2.2.3.3",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x) net ∧ eventually (λx. 0 ≤ g x) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.2.2.3.4",
                    "prevs": [
                        "5.2.2.3.3"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net, B: eventually (λx. f x * g x ≤ c) net}",
                    "id": "5.2.2.3.5",
                    "prevs": [
                        "5.2.2.3.4",
                        "5.2.2.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, eventually (λx. f x * g x ≤ c) net ⊢ eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net ∧ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.2.2.3.6",
                    "prevs": [
                        "5.2.2.3.5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, eventually (λx. f x * g x ≤ c) net ⊢ eventually (λx. (0 ≤ f x ∧ 0 ≤ g x) ∧ f x * g x ≤ c) net"
                },
                {
                    "args": "∀x. (0 ≤ f x ∧ 0 ≤ g x) ∧ f x * g x ≤ c ⟶ 0 ≤ c",
                    "id": "5.2.2.3.7",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. (0 ≤ f x ∧ 0 ≤ g x) ∧ f x * g x ≤ c ⟶ 0 ≤ c"
                },
                {
                    "args": "eventually_mono",
                    "id": "5.2.2.3.8",
                    "prevs": [
                        "5.2.2.3.7",
                        "5.2.2.3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ eventually (λx. 0 ≤ c) net"
                },
                {
                    "args": "eventually_happens, {a: 'a}, {P: λx::'a. 0 ≤ c, net: net}",
                    "id": "5.2.2.3.9",
                    "prevs": [
                        "5.2.2.3.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ trivial_limit net ∨ (∃x::'a. 0 ≤ c)"
                },
                {
                    "args": "",
                    "id": "5.2.2.3.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ trivial_limit net ⟶ 0 ≤ c"
                },
                {
                    "args": "trivial_limit net",
                    "id": "5.2.2.3.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: 0 ≤ c}",
                    "id": "5.2.2.3.10.1",
                    "prevs": [
                        "5.0",
                        "5.2.2.3.10.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ 0 ≤ c"
                },
                {
                    "args": "",
                    "id": "5.2.2.3.10.2",
                    "prevs": [
                        "5.2.2.3.10.0",
                        "5.2.2.3.10.1"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ trivial_limit net ⟶ 0 ≤ c"
                },
                {
                    "args": "(∃x::'a. 0 ≤ c) ⟶ 0 ≤ c",
                    "id": "5.2.2.3.11",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∃x::'a. 0 ≤ c) ⟶ 0 ≤ c"
                },
                {
                    "args": "disjE",
                    "id": "5.2.2.3.12",
                    "prevs": [
                        "5.2.2.3.9",
                        "5.2.2.3.10",
                        "5.2.2.3.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ 0 ≤ c"
                },
                {
                    "args": "negE",
                    "id": "5.2.2.3.13",
                    "prevs": [
                        "5.2.2.3.2",
                        "5.2.2.3.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0, eventually (λx. f x * g x ≤ c) net ⊢ false"
                },
                {
                    "args": "",
                    "id": "5.2.2.3.14",
                    "prevs": [
                        "5.2.2.3.0",
                        "5.2.2.3.13"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0 ⊢ eventually (λx. f x * g x ≤ c) net ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5.2.2.4",
                    "prevs": [
                        "5.2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, b = 0 ⊢ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5.2.2.5",
                    "prevs": [
                        "5.2.2.0",
                        "5.2.2.4"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b ⊢ b = 0 ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b ⊢ ¬(b = 0) ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "¬(b = 0)",
                    "id": "5.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(b = 0) ⊢ ¬(b = 0)"
                },
                {
                    "args": "",
                    "id": "5.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0) ⊢ eventually (λx. f x * g x ≤ c) net ⟶ false"
                },
                {
                    "args": "eventually (λx. f x * g x ≤ c) net",
                    "id": "5.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x * g x ≤ c) net ⊢ eventually (λx. f x * g x ≤ c) net"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net ⊢ 0 < b ⟶ false"
                },
                {
                    "args": "0 < b",
                    "id": "5.2.3.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < b ⊢ 0 < b"
                },
                {
                    "args": "real_continuous_const, {a: real}, {c: a, net: atreal 0}",
                    "id": "5.2.3.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx. a) (atreal 0)"
                },
                {
                    "args": "real_continuous_at_id, {}, {x: (0::real)}",
                    "id": "5.2.3.1.1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx1. x1) (atreal 0)"
                },
                {
                    "args": "real_continuous_add",
                    "id": "5.2.3.1.1.3",
                    "prevs": [
                        "5.2.3.1.1.1",
                        "5.2.3.1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ real_continuous (λx. a + x) (atreal 0)"
                },
                {
                    "args": "real_continuous_const, {a: real}, {c: b, net: atreal 0}",
                    "id": "5.2.3.1.1.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_continuous (λx. b) (atreal 0)"
                },
                {
                    "args": "real_continuous_add",
                    "id": "5.2.3.1.1.5",
                    "prevs": [
                        "5.2.3.1.1.4",
                        "5.2.3.1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ real_continuous (λx. b + x) (atreal 0)"
                },
                {
                    "args": "real_continuous_mul",
                    "id": "5.2.3.1.1.6",
                    "prevs": [
                        "5.2.3.1.1.3",
                        "5.2.3.1.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ real_continuous (λx. (a + x) * (b + x)) (atreal 0)"
                },
                {
                    "args": "real_continuous_atreal1",
                    "id": "5.2.3.1.1.7",
                    "prevs": [
                        "5.2.3.1.1.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ ∀e. 0 < e ⟶ (∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < e))"
                },
                {
                    "args": "a * b - c",
                    "id": "5.2.3.1.1.8",
                    "prevs": [
                        "5.2.3.1.1.7"
                    ],
                    "rule": "forall_elim",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ 0 < a * b - c ⟶ (∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c))"
                },
                {
                    "args": "0 < a * b - c",
                    "id": "5.2.3.1.1.9",
                    "prevs": [
                        "5.2.1"
                    ],
                    "rule": "z3",
                    "th": "c < a * b ⊢ 0 < a * b - c"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.10",
                    "prevs": [
                        "5.2.3.1.1.8",
                        "5.2.3.1.1.9"
                    ],
                    "rule": "apply_fact",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b ⊢ ∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c)"
                },
                {
                    "args": "d, real",
                    "id": "5.2.3.1.1.11",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c)",
                    "id": "5.2.3.1.1.12",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c)"
                },
                {
                    "args": "conjD1",
                    "id": "5.2.3.1.1.13",
                    "prevs": [
                        "5.2.3.1.1.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ 0 < d"
                },
                {
                    "args": "conjD2, {}, {A: 0 < d, B: ∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c}",
                    "id": "5.2.3.1.1.14",
                    "prevs": [
                        "5.2.3.1.1.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ ∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c"
                },
                {
                    "args": "real_sub_rzero",
                    "id": "5.2.3.1.1.15",
                    "prevs": [
                        "5.2.3.1.1.14"
                    ],
                    "rule": "rewrite_fact",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ ∀x1. abs x1 < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ ∀x. abs x < d ⟶ c < (a + x) * (b + x)"
                },
                {
                    "args": "x, real",
                    "id": "5.2.3.1.1.16.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "abs x < d",
                    "id": "5.2.3.1.1.16.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "abs x < d ⊢ abs x < d"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.16.2",
                    "prevs": [
                        "5.2.3.1.1.15",
                        "5.2.3.1.1.16.1"
                    ],
                    "rule": "apply_fact",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), abs x < d ⊢ abs ((a + x) * (b + x) - (a + 0) * (b + 0)) < a * b - c"
                },
                {
                    "args": "c < (a + x) * (b + x)",
                    "id": "5.2.3.1.1.16.3",
                    "prevs": [
                        "5.2.3.1.1.16.2"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), abs x < d ⊢ c < (a + x) * (b + x)"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.16.4",
                    "prevs": [
                        "5.2.3.1.1.16.0",
                        "5.2.3.1.1.16.1",
                        "5.2.3.1.1.16.3"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ ∀x. abs x < d ⟶ c < (a + x) * (b + x)"
                },
                {
                    "args": "conjI",
                    "id": "5.2.3.1.1.17",
                    "prevs": [
                        "5.2.3.1.1.13",
                        "5.2.3.1.1.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ 0 < d ∧ (∀x. abs x < d ⟶ c < (a + x) * (b + x))"
                },
                {
                    "args": "exI, {a: real}, {P: λd. 0 < d ∧ (∀x. abs x < d ⟶ c < (a + x) * (b + x)), a: d}",
                    "id": "5.2.3.1.1.18",
                    "prevs": [
                        "5.2.3.1.1.17"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c) ⊢ ∃d. 0 < d ∧ (∀x. abs x < d ⟶ c < (a + x) * (b + x))"
                },
                {
                    "args": "d1, real",
                    "id": "5.2.3.1.1.19",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d1"
                },
                {
                    "args": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x))",
                    "id": "5.2.3.1.1.20",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x))"
                },
                {
                    "args": "has_limsup",
                    "id": "5.2.3.1.1.21",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_limsup f a net ⊢ trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ ¬false ⟶ ¬(trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))"
                },
                {
                    "args": "¬false",
                    "id": "5.2.3.1.1.22.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "a - min b (d1 / 2) / 2 < a",
                    "id": "5.2.3.1.1.22.1",
                    "prevs": [
                        "5.2.3.1.1.13",
                        "5.2.3.1.1.0",
                        "5.2.3.1.1.20"
                    ],
                    "rule": "z3",
                    "th": "0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ a - min b (d1 / 2) / 2 < a"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "5.2.3.1.1.22.2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real g b net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (g x - b) < e) net"
                },
                {
                    "args": "min b (d1 / 2) / 2",
                    "id": "5.2.3.1.1.22.3",
                    "prevs": [
                        "5.2.3.1.1.22.2"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real g b net ⊢ 0 < min b (d1 / 2) / 2 ⟶ eventually (λx. abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "0 < min b (d1 / 2) / 2",
                    "id": "5.2.3.1.1.22.4",
                    "prevs": [
                        "5.2.3.1.1.0",
                        "5.2.3.1.1.20"
                    ],
                    "rule": "z3",
                    "th": "0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ 0 < min b (d1 / 2) / 2"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22.5",
                    "prevs": [
                        "5.2.3.1.1.22.3",
                        "5.2.3.1.1.22.4"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real g b net, 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ eventually (λx. abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. 0 ≤ f x) net, B: eventually (λx. 0 ≤ g x) net}",
                    "id": "5.2.3.1.1.22.6",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x) net ∧ eventually (λx. 0 ≤ g x) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.2.3.1.1.22.7",
                    "prevs": [
                        "5.2.3.1.1.22.6"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net, B: eventually (λx. abs (g x - b) < min b (d1 / 2) / 2) net}",
                    "id": "5.2.3.1.1.22.8",
                    "prevs": [
                        "5.2.3.1.1.22.7",
                        "5.2.3.1.1.22.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, tendsto_real g b net, 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ eventually (λx. 0 ≤ f x ∧ 0 ≤ g x) net ∧ eventually (λx. abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.2.3.1.1.22.9",
                    "prevs": [
                        "5.2.3.1.1.22.8"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, tendsto_real g b net, 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ eventually (λx. (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "conjI, {}, {A: eventually (λx. f x * g x ≤ c) net, B: eventually (λx. (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2) net}",
                    "id": "5.2.3.1.1.22.10",
                    "prevs": [
                        "5.2.3.1.0",
                        "5.2.3.1.1.22.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x * g x ≤ c) net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, tendsto_real g b net, 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ eventually (λx. f x * g x ≤ c) net ∧ eventually (λx. (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "eventually_and",
                    "id": "5.2.3.1.1.22.11",
                    "prevs": [
                        "5.2.3.1.1.22.10"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "eventually (λx. f x * g x ≤ c) net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, tendsto_real g b net, 0 < b, 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ eventually (λx. f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2) net"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ∀x. f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⟶ f x ≤ a - min b (d1 / 2) / 2"
                },
                {
                    "args": "x, 'a",
                    "id": "5.2.3.1.1.22.12.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2",
                    "id": "5.2.3.1.1.22.12.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2"
                },
                {
                    "args": "conjD1, {}, {A: f x * g x ≤ c, B: (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2}",
                    "id": "5.2.3.1.1.22.12.2",
                    "prevs": [
                        "5.2.3.1.1.22.12.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x * g x ≤ c"
                },
                {
                    "args": "conjD2, {}, {A: f x * g x ≤ c, B: (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2}",
                    "id": "5.2.3.1.1.22.12.3",
                    "prevs": [
                        "5.2.3.1.1.22.12.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2"
                },
                {
                    "args": "conjD1, {}, {A: 0 ≤ f x ∧ 0 ≤ g x, B: abs (g x - b) < min b (d1 / 2) / 2}",
                    "id": "5.2.3.1.1.22.12.4",
                    "prevs": [
                        "5.2.3.1.1.22.12.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ 0 ≤ f x ∧ 0 ≤ g x"
                },
                {
                    "args": "conjD2, {}, {A: 0 ≤ f x ∧ 0 ≤ g x, B: abs (g x - b) < min b (d1 / 2) / 2}",
                    "id": "5.2.3.1.1.22.12.5",
                    "prevs": [
                        "5.2.3.1.1.22.12.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ abs (g x - b) < min b (d1 / 2) / 2"
                },
                {
                    "args": "conjD1, {}, {A: 0 < d1, B: ∀x. abs x < d1 ⟶ c < (a + x) * (b + x)}",
                    "id": "5.2.3.1.1.22.12.6",
                    "prevs": [
                        "5.2.3.1.1.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ 0 < d1"
                },
                {
                    "args": "conjD2, {}, {A: 0 < d1, B: ∀x. abs x < d1 ⟶ c < (a + x) * (b + x)}",
                    "id": "5.2.3.1.1.22.12.7",
                    "prevs": [
                        "5.2.3.1.1.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ ∀x. abs x < d1 ⟶ c < (a + x) * (b + x)"
                },
                {
                    "args": "0 < b - min b (d1 / 2) / 2",
                    "id": "5.2.3.1.1.22.12.8",
                    "prevs": [
                        "5.2.3.1.1.0"
                    ],
                    "rule": "z3",
                    "th": "0 < b ⊢ 0 < b - min b (d1 / 2) / 2"
                },
                {
                    "args": "conjD1",
                    "id": "5.2.3.1.1.22.12.9",
                    "prevs": [
                        "5.2.3.1.1.22.12.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ 0 ≤ f x"
                },
                {
                    "args": "b - min b (d1 / 2) / 2 ≤ g x",
                    "id": "5.2.3.1.1.22.12.10",
                    "prevs": [
                        "5.2.3.1.1.22.12.5"
                    ],
                    "rule": "z3",
                    "th": "f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ b - min b (d1 / 2) / 2 ≤ g x"
                },
                {
                    "args": "real_le_lmul",
                    "id": "5.2.3.1.1.22.12.11",
                    "prevs": [
                        "5.2.3.1.1.22.12.9",
                        "5.2.3.1.1.22.12.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x * (b - min b (d1 / 2) / 2) ≤ f x * g x"
                },
                {
                    "args": "-(min b (d1 / 2) / 2)",
                    "id": "5.2.3.1.1.22.12.12",
                    "prevs": [
                        "5.2.3.1.1.22.12.7"
                    ],
                    "rule": "forall_elim",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ abs (-(min b (d1 / 2) / 2)) < d1 ⟶ c < (a + -(min b (d1 / 2) / 2)) * (b + -(min b (d1 / 2) / 2))"
                },
                {
                    "args": "abs (-(min b (d1 / 2) / 2)) < d1",
                    "id": "5.2.3.1.1.22.12.13",
                    "prevs": [
                        "5.2.3.1.1.22.12.6",
                        "5.2.3.1.1.0"
                    ],
                    "rule": "z3",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), 0 < b ⊢ abs (-(min b (d1 / 2) / 2)) < d1"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22.12.14",
                    "prevs": [
                        "5.2.3.1.1.22.12.12",
                        "5.2.3.1.1.22.12.13"
                    ],
                    "rule": "apply_fact",
                    "th": "0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ c < (a + -(min b (d1 / 2) / 2)) * (b + -(min b (d1 / 2) / 2))"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "5.2.3.1.1.22.12.15",
                    "prevs": [
                        "5.2.3.1.1.22.12.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ c ≤ (a + -(min b (d1 / 2) / 2)) * (b + -(min b (d1 / 2) / 2))"
                },
                {
                    "args": "real_minus_def, c ≤ (a - min b (d1 / 2) / 2) * (b - min b (d1 / 2) / 2)",
                    "id": "5.2.3.1.1.22.12.16",
                    "prevs": [
                        "5.2.3.1.1.22.12.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ c ≤ (a - min b (d1 / 2) / 2) * (b - min b (d1 / 2) / 2)"
                },
                {
                    "args": "real_le_trans",
                    "id": "5.2.3.1.1.22.12.17",
                    "prevs": [
                        "5.2.3.1.1.22.12.2",
                        "5.2.3.1.1.22.12.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x * g x ≤ (a - min b (d1 / 2) / 2) * (b - min b (d1 / 2) / 2)"
                },
                {
                    "args": "real_le_trans",
                    "id": "5.2.3.1.1.22.12.18",
                    "prevs": [
                        "5.2.3.1.1.22.12.11",
                        "5.2.3.1.1.22.12.17"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x * (b - min b (d1 / 2) / 2) ≤ (a - min b (d1 / 2) / 2) * (b - min b (d1 / 2) / 2)"
                },
                {
                    "args": "real_le_rcancel_imp",
                    "id": "5.2.3.1.1.22.12.19",
                    "prevs": [
                        "5.2.3.1.1.22.12.8",
                        "5.2.3.1.1.22.12.18"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false, f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⊢ f x ≤ a - min b (d1 / 2) / 2"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22.12.20",
                    "prevs": [
                        "5.2.3.1.1.22.12.0",
                        "5.2.3.1.1.22.12.1",
                        "5.2.3.1.1.22.12.19"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ∀x. f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2 ⟶ f x ≤ a - min b (d1 / 2) / 2"
                },
                {
                    "args": "eventually_mono",
                    "id": "5.2.3.1.1.22.13",
                    "prevs": [
                        "5.2.3.1.1.22.12",
                        "5.2.3.1.1.22.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ eventually (λx. f x ≤ a - min b (d1 / 2) / 2) net"
                },
                {
                    "args": "double_neg, ¬¬(eventually (λx. f x ≤ a - min b (d1 / 2) / 2) net)",
                    "id": "5.2.3.1.1.22.14",
                    "prevs": [
                        "5.2.3.1.1.22.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬¬(eventually (λx. f x ≤ a - min b (d1 / 2) / 2) net)"
                },
                {
                    "args": "conjI",
                    "id": "5.2.3.1.1.22.15",
                    "prevs": [
                        "5.2.3.1.1.22.1",
                        "5.2.3.1.1.22.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ a - min b (d1 / 2) / 2 < a ∧ ¬¬(eventually (λx. f x ≤ a - min b (d1 / 2) / 2) net)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. x < a ∧ ¬¬(eventually (λx1. f x1 ≤ x) net), a: a - min b (d1 / 2) / 2}",
                    "id": "5.2.3.1.1.22.16",
                    "prevs": [
                        "5.2.3.1.1.22.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ∃a1. a1 < a ∧ ¬¬(eventually (λx. f x ≤ a1) net)"
                },
                {
                    "args": "not_imp, ∃x. ¬(x < a ⟶ ¬(eventually (λx1. f x1 ≤ x) net))",
                    "id": "5.2.3.1.1.22.17",
                    "prevs": [
                        "5.2.3.1.1.22.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ∃x. ¬(x < a ⟶ ¬(eventually (λx1. f x1 ≤ x) net))"
                },
                {
                    "args": "not_all, ¬(∀x. x < a ⟶ ¬(eventually (λx1. f x1 ≤ x) net))",
                    "id": "5.2.3.1.1.22.18",
                    "prevs": [
                        "5.2.3.1.1.22.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬(∀x. x < a ⟶ ¬(eventually (λx1. f x1 ≤ x) net))"
                },
                {
                    "args": "disjI2, {}, {A: ¬(∀c. a < c ⟶ eventually (λx. f x ≤ c) net), B: ¬(∀x. x < a ⟶ ¬(eventually (λx1. f x1 ≤ x) net))}",
                    "id": "5.2.3.1.1.22.19",
                    "prevs": [
                        "5.2.3.1.1.22.18"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬(∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∨ ¬(∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net))"
                },
                {
                    "args": "de_morgan_thm1, ¬((∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))",
                    "id": "5.2.3.1.1.22.20",
                    "prevs": [
                        "5.2.3.1.1.22.19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬((∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))"
                },
                {
                    "args": "conjI",
                    "id": "5.2.3.1.1.22.21",
                    "prevs": [
                        "5.0",
                        "5.2.3.1.1.22.20"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬(trivial_limit net) ∧ ¬((∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))"
                },
                {
                    "args": "de_morgan_thm2, ¬(trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))",
                    "id": "5.2.3.1.1.22.22",
                    "prevs": [
                        "5.2.3.1.1.22.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)), ¬false ⊢ ¬(trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.1.22.23",
                    "prevs": [
                        "5.2.3.1.1.22.0",
                        "5.2.3.1.1.22.22"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ ¬false ⟶ ¬(trivial_limit net ∨ (∀c. a < c ⟶ eventually (λx. f x ≤ c) net) ∧ (∀c. c < a ⟶ ¬(eventually (λx. f x ≤ c) net)))"
                },
                {
                    "args": "contrapositive",
                    "id": "5.2.3.1.1.23",
                    "prevs": [
                        "5.2.3.1.1.21",
                        "5.2.3.1.1.22"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, 0 < b, 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c), 0 < d1 ∧ (∀x. abs x < d1 ⟶ c < (a + x) * (b + x)) ⊢ false"
                },
                {
                    "args": "∃d. 0 < d ∧ (∀x. abs x < d ⟶ c < (a + x) * (b + x)), ∃d. 0 < d ∧ (∀x1. abs (x1 - 0) < d ⟶ abs ((a + x1) * (b + x1) - (a + 0) * (b + 0)) < a * b - c)",
                    "id": "5.2.3.1.1.24",
                    "prevs": [
                        "5.2.3.1.1.0",
                        "5.2.3.1.1.10",
                        "5.2.3.1.1.11",
                        "5.2.3.1.1.12",
                        "5.2.3.1.1.18",
                        "5.2.3.1.1.19",
                        "5.2.3.1.1.20",
                        "5.2.3.1.1.23"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net ⊢ 0 < b ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5.2.3.1.2",
                    "prevs": [
                        "5.2.3.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net ⊢ ¬(0 < b)"
                },
                {
                    "args": "reallim_lbound",
                    "id": "5.2.3.1.3",
                    "prevs": [
                        "1",
                        "5.0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net ⊢ 0 ≤ b"
                },
                {
                    "args": "0 < b",
                    "id": "5.2.3.1.4",
                    "prevs": [
                        "5.2.3.1.3",
                        "5.2.3.0"
                    ],
                    "rule": "z3",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net, ¬(b = 0) ⊢ 0 < b"
                },
                {
                    "args": "negE",
                    "id": "5.2.3.1.5",
                    "prevs": [
                        "5.2.3.1.2",
                        "5.2.3.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0), eventually (λx. f x * g x ≤ c) net ⊢ false"
                },
                {
                    "args": "",
                    "id": "5.2.3.1.6",
                    "prevs": [
                        "5.2.3.1.0",
                        "5.2.3.1.5"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0) ⊢ eventually (λx. f x * g x ≤ c) net ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "5.2.3.2",
                    "prevs": [
                        "5.2.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b, ¬(b = 0) ⊢ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5.2.3.3",
                    "prevs": [
                        "5.2.3.0",
                        "5.2.3.2"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b ⊢ ¬(b = 0) ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "classical_cases",
                    "id": "5.2.4",
                    "prevs": [
                        "5.2.2",
                        "5.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net), c < a * b ⊢ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "",
                    "id": "5.2.5",
                    "prevs": [
                        "5.2.0",
                        "5.2.1",
                        "5.2.4"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ ∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net)"
                },
                {
                    "args": "conjI",
                    "id": "5.3",
                    "prevs": [
                        "5.1",
                        "5.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))}",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net, ¬(trivial_limit net) ⊢ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "",
                    "id": "5.5",
                    "prevs": [
                        "5.0",
                        "5.4"
                    ],
                    "rule": "intros",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "classical_cases",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ trivial_limit net ∨ (∀c. a * b < c ⟶ eventually (λx. f x * g x ≤ c) net) ∧ (∀c. c < a * b ⟶ ¬(eventually (λx. f x * g x ≤ c) net))"
                },
                {
                    "args": "has_limsup, has_limsup (λx. f x * g x) (a * b) net",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f a net, tendsto_real g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ has_limsup (λx. f x * g x) (a * b) net"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup f a net ⟶ tendsto_real g b net ⟶ eventually (λx. 0 ≤ f x) net ⟶ eventually (λx. 0 ≤ g x) net ⟶ has_limsup (λx. f x * g x) (a * b) net"
                }
            ],
            "prop": [
                "has_limsup f a net ",
                "⟶ tendsto_real g b net ",
                "   ⟶ eventually (λx. 0 ≤ f x) net ",
                "      ⟶ eventually (λx. 0 ≤ g x) net ⟶ has_limsup (λx. f x * g x) (a * b) net"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "case": "trivial_limit net",
                    "goal_id": "4",
                    "method_name": "cases"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal": "?d. 0 < d & !x. abs x < d --> (a + x) * (b + x) < c",
                    "goal_id": "5.1.2",
                    "method_name": "cut"
                },
                {
                    "goal": "real_continuous (λx. (a + x) * (b + x)) (atreal 0)",
                    "goal_id": "5.1.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_mul"
                },
                {
                    "goal_id": "5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_add"
                },
                {
                    "goal_id": "5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_const"
                },
                {
                    "goal_id": "5.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_at_id"
                },
                {
                    "goal_id": "5.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_add"
                },
                {
                    "goal_id": "5.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_const"
                },
                {
                    "fact_ids": [
                        "5.1.7"
                    ],
                    "goal_id": "5.1.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_continuous_atreal1"
                },
                {
                    "fact_ids": [
                        "5.1.8"
                    ],
                    "goal_id": "5.1.9",
                    "method_name": "forall_elim",
                    "s": "c- a * b"
                },
                {
                    "goal": "0 < c - a * b",
                    "goal_id": "5.1.10",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5.1.1"
                    ],
                    "goal_id": "5.1.10",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.1.9",
                        "5.1.10"
                    ],
                    "goal_id": "5.1.11",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.1.11"
                    ],
                    "goal_id": "5.1.12",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "goal_id": "5.1.14",
                    "method_name": "inst_exists_goal",
                    "s": "d"
                },
                {
                    "goal_id": "5.1.14",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.1.13"
                    ],
                    "goal_id": "5.1.14",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.1.13"
                    ],
                    "goal_id": "5.1.15",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "5.1.16",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "5.1.15"
                    ],
                    "goal_id": "5.1.16.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_sub_rzero"
                },
                {
                    "fact_ids": [
                        "5.1.16.2",
                        "5.1.16.1"
                    ],
                    "goal_id": "5.1.16.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.1.16.3"
                    ],
                    "goal_id": "5.1.16.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.1.17"
                    ],
                    "goal_id": "5.1.19",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "5.1.20",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "5.1.20"
                    ],
                    "goal_id": "5.1.21",
                    "method_name": "forall_elim",
                    "s": "d/2"
                },
                {
                    "fact_ids": [
                        "5.1.21"
                    ],
                    "goal": "0 < d / 2 ",
                    "goal_id": "5.1.22",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5.1.14"
                    ],
                    "goal_id": "5.1.22",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.1.21",
                        "5.1.22"
                    ],
                    "goal_id": "5.1.23",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "5.1.24",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. abs (g x - b) < d / 2)",
                    "theorem": "eventually_mp"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5.1.24",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "fact_ids": [
                        "5.1.24"
                    ],
                    "goal_id": "5.1.25",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.1.25",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.1.25.0"
                    ],
                    "goal_id": "5.1.25.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_trivial"
                },
                {
                    "goal_id": "5.1.26",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.1.26.0"
                    ],
                    "goal_id": "5.1.26.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.1.26.1"
                    ],
                    "goal_id": "5.1.26.2",
                    "method_name": "forall_elim",
                    "s": "a + d/2"
                },
                {
                    "goal": "a < a + d / 2",
                    "goal_id": "5.1.26.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5.1.14"
                    ],
                    "goal_id": "5.1.26.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.1.26.2",
                        "5.1.26.3"
                    ],
                    "goal_id": "5.1.26.4",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "5.1.26.5",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x ≤ a + d / 2)",
                    "theorem": "eventually_mp"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "5.1.26.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.1.26.5"
                    ],
                    "goal_id": "5.1.26.6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "goal_id": "5.1.26.7",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. 0 ≤ f x ∧ 0 ≤ g x)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "5.1.26.7",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "5.1.26.7.4",
                    "method_name": "apply_backward_step",
                    "param_y": "(a + d / 2) * (b + d / 2)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "5.1.26.7.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_mul2"
                },
                {
                    "fact_ids": [
                        "5.1.26.7.1"
                    ],
                    "goal_id": "5.1.26.7.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.1.26.7.1"
                    ],
                    "goal_id": "5.1.26.7.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.1.26.7.3"
                    ],
                    "goal_id": "5.1.26.7.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.1.19"
                    ],
                    "goal_id": "5.1.26.7.8",
                    "method_name": "forall_elim",
                    "s": "d/2"
                },
                {
                    "goal_id": "5.1.26.7.9",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "5.1.26.7.8"
                    ],
                    "goal_id": "5.1.26.7.9",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.1.14"
                    ],
                    "goal_id": "5.1.26.7.9",
                    "method_name": "z3"
                },
                {
                    "goal_id": "5.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "case": "b=0",
                    "goal_id": "5.2.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "5.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.2.2.0",
                        "5.2.1"
                    ],
                    "goal_id": "5.2.2.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "5.2.2.1"
                    ],
                    "goal_id": "5.2.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rzero"
                },
                {
                    "goal_id": "5.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "5.2.2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.2.2.3.1",
                    "method_name": "apply_backward_step",
                    "param_A": "0<=c",
                    "theorem": "negE"
                },
                {
                    "goal_id": "5.2.2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "5.2.2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal": "eventually (λx. 0 ≤ c) net",
                    "goal_id": "5.2.2.3.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "5.2.2.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.2.3.3"
                    ],
                    "goal_id": "5.2.2.3.4",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "fact_ids": [
                        "5.2.2.3.4",
                        "5.2.2.3.0"
                    ],
                    "goal_id": "5.2.2.3.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.2.3.5"
                    ],
                    "goal_id": "5.2.2.3.6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "goal_id": "5.2.2.3.7",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. (0 ≤ f x ∧ 0 ≤ g x) ∧ f x * g x ≤ c)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "5.2.2.3.7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.2.2.3.8"
                    ],
                    "goal_id": "5.2.2.3.9",
                    "method_name": "apply_forward_step",
                    "theorem": "eventually_happens"
                },
                {
                    "fact_ids": [
                        "5.2.2.3.9"
                    ],
                    "goal_id": "5.2.2.3.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "5.2.2.3.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.0",
                        "5.2.2.3.10.0"
                    ],
                    "goal_id": "5.2.2.3.10.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5.2.2.3.11",
                    "method_name": "z3"
                },
                {
                    "goal_id": "5.2.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "5.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "param_A": "0 < b",
                    "theorem": "negE"
                },
                {
                    "goal_id": "5.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "5.2.3.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal": "∃d. 0 < d ∧ (∀x. abs x < d ⟶ c < (a + x) * (b + x))",
                    "goal_id": "5.2.3.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal": "real_continuous (λx. (a + x) * (b + x)) (atreal 0)",
                    "goal_id": "5.2.3.1.1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.2.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_mul"
                },
                {
                    "goal_id": "5.2.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_add"
                },
                {
                    "goal_id": "5.2.3.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_const"
                },
                {
                    "goal_id": "5.2.3.1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_at_id"
                },
                {
                    "goal_id": "5.2.3.1.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_add"
                },
                {
                    "goal_id": "5.2.3.1.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "real_continuous_const"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.6"
                    ],
                    "goal_id": "5.2.3.1.1.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_continuous_atreal1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.7"
                    ],
                    "goal_id": "5.2.3.1.1.8",
                    "method_name": "forall_elim",
                    "s": "a * b -c"
                },
                {
                    "goal": "0 < a * b - c",
                    "goal_id": "5.2.3.1.1.9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5.2.1"
                    ],
                    "goal_id": "5.2.3.1.1.9",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.8",
                        "5.2.3.1.1.9"
                    ],
                    "goal_id": "5.2.3.1.1.10",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.10"
                    ],
                    "goal_id": "5.2.3.1.1.11",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "goal_id": "5.2.3.1.1.13",
                    "method_name": "inst_exists_goal",
                    "s": "d"
                },
                {
                    "goal_id": "5.2.3.1.1.13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.12"
                    ],
                    "goal_id": "5.2.3.1.1.13",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.12"
                    ],
                    "goal_id": "5.2.3.1.1.14",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.14"
                    ],
                    "goal_id": "5.2.3.1.1.15",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_sub_rzero"
                },
                {
                    "goal_id": "5.2.3.1.1.16",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.15",
                        "5.2.3.1.1.16.1"
                    ],
                    "goal_id": "5.2.3.1.1.16.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.16.2"
                    ],
                    "goal_id": "5.2.3.1.1.16.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.18"
                    ],
                    "goal_id": "5.2.3.1.1.19",
                    "method_name": "exists_elim",
                    "names": "d1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "5.2.3.1.1.21",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_limsup"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.21"
                    ],
                    "goal_id": "5.2.3.1.1.22",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "5.2.3.1.1.22",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "inst_exists_goal",
                    "s": "a - min b (d1 / 2) / 2"
                },
                {
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.13",
                        "5.2.3.1.1.0",
                        "5.2.3.1.1.20"
                    ],
                    "goal_id": "5.2.3.1.1.22.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "5.2.3.1.1.22.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "5.2.3.1.1.22.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.2"
                    ],
                    "goal_id": "5.2.3.1.1.22.3",
                    "method_name": "forall_elim",
                    "s": "min b (d1 / 2) / 2"
                },
                {
                    "goal": "0 < min b (d1 / 2) / 2",
                    "goal_id": "5.2.3.1.1.22.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.0",
                        "5.2.3.1.1.20"
                    ],
                    "goal_id": "5.2.3.1.1.22.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.3",
                        "5.2.3.1.1.22.4"
                    ],
                    "goal_id": "5.2.3.1.1.22.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "5.2.3.1.1.22.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.6"
                    ],
                    "goal_id": "5.2.3.1.1.22.7",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.7",
                        "5.2.3.1.1.22.5"
                    ],
                    "goal_id": "5.2.3.1.1.22.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.8"
                    ],
                    "goal_id": "5.2.3.1.1.22.9",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.0",
                        "5.2.3.1.1.22.9"
                    ],
                    "goal_id": "5.2.3.1.1.22.10",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.10"
                    ],
                    "goal_id": "5.2.3.1.1.22.11",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "eventually_and"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x * g x ≤ c ∧ (0 ≤ f x ∧ 0 ≤ g x) ∧ abs (g x - b) < min b (d1 / 2) / 2)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.1"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.1"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.3"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.3"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.20"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.20"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.8",
                    "method_name": "apply_backward_step",
                    "param_z": "b-min b (d1 / 2) / 2",
                    "theorem": "real_le_rcancel_imp"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.0"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.8",
                    "method_name": "z3"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.9",
                    "method_name": "apply_backward_step",
                    "param_y": "f x * g x",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.9",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_lmul"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.4"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.5"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.10",
                    "method_name": "z3"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.12",
                    "method_name": "apply_backward_step",
                    "param_y": "c",
                    "theorem": "real_le_trans"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.7"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.12",
                    "method_name": "forall_elim",
                    "s": "- (min b (d1 / 2) / 2)"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_minus_def"
                },
                {
                    "goal_id": "5.2.3.1.1.22.12.13",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.12"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.13",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.1.22.12.6",
                        "5.2.3.1.1.0"
                    ],
                    "goal_id": "5.2.3.1.1.22.12.13",
                    "method_name": "z3"
                },
                {
                    "goal": "0 <= b",
                    "goal_id": "5.2.3.1.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.2.3.1.3",
                    "method_name": "apply_backward_step",
                    "param_f": "g",
                    "param_net": "net",
                    "theorem": "reallim_lbound"
                },
                {
                    "fact_ids": [
                        "5.2.3.1.3",
                        "5.2.3.0"
                    ],
                    "goal_id": "5.2.3.1.4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_limsup_mul_reallim_left",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "tendsto_real f a net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "tendsto_real f a net ⊢ tendsto_real f a net"
                },
                {
                    "args": "has_limsup g b net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup g b net ⊢ has_limsup g b net"
                },
                {
                    "args": "eventually (λx. 0 ≤ f x) net",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. 0 ≤ f x) net ⊢ eventually (λx. 0 ≤ f x) net"
                },
                {
                    "args": "eventually (λx. 0 ≤ g x) net",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. 0 ≤ g x) net ⊢ eventually (λx. 0 ≤ g x) net"
                },
                {
                    "args": "has_limsup_mul_reallim_right",
                    "id": "4",
                    "prevs": [
                        "1",
                        "0",
                        "3",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f a net, has_limsup g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ has_limsup (λx. g x * f x) (b * a) net"
                },
                {
                    "args": "real_mult_comm, has_limsup (λx. f x * g x) (a * b) net",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f a net, has_limsup g b net, eventually (λx. 0 ≤ f x) net, eventually (λx. 0 ≤ g x) net ⊢ has_limsup (λx. f x * g x) (a * b) net"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ tendsto_real f a net ⟶ has_limsup g b net ⟶ eventually (λx. 0 ≤ f x) net ⟶ eventually (λx. 0 ≤ g x) net ⟶ has_limsup (λx. f x * g x) (a * b) net"
                }
            ],
            "prop": [
                "tendsto_real f a net ",
                "⟶ has_limsup g b net ",
                "   ⟶ eventually (λx. 0 ≤ f x) net ",
                "      ⟶ eventually (λx. 0 ≤ g x) net ⟶ has_limsup (λx. f x * g x) (a * b) net"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "has_limsup_mul_reallim_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward1"
            ],
            "name": "has_limsup_sequentially_within_lbound_zero",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_limsup f b (within sequentially k)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_limsup f b (within sequentially k) ⊢ has_limsup f b (within sequentially k)"
                },
                {
                    "args": "∀x. 0 ≤ f x",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. 0 ≤ f x ⊢ ∀x. 0 ≤ f x"
                },
                {
                    "args": "¬(finite k)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite k) ⊢ ¬(finite k)"
                },
                {
                    "args": "reallim_const, {a: nat}, {a: (0::real), net: within sequentially k}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ tendsto_real (λx. 0) 0 (within sequentially k)"
                },
                {
                    "args": "reallim_imp_has_limsup",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f b (within sequentially k), ∀x. 0 ≤ f x, ¬(finite k) ⊢ has_limsup (λn. 0) 0 (within sequentially k)"
                },
                {
                    "args": "trivial_limit_sequentially_within, ¬(trivial_limit (within sequentially k))",
                    "id": "5",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_limsup f b (within sequentially k), ∀x. 0 ≤ f x, ¬(finite k) ⊢ ¬(trivial_limit (within sequentially k))"
                },
                {
                    "args": "always_eventually, {a: nat}, {P: λx. 0 ≤ f x, net: within sequentially k}",
                    "id": "6",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_limsup f b (within sequentially k), ∀x. 0 ≤ f x, ¬(finite k) ⊢ eventually (λx. 0 ≤ f x) (within sequentially k)"
                },
                {
                    "args": "has_limsup_le",
                    "id": "7",
                    "prevs": [
                        "4",
                        "0",
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_limsup f b (within sequentially k), ∀x. 0 ≤ f x, ¬(finite k) ⊢ 0 ≤ b"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_limsup f b (within sequentially k) ⟶ (∀x. 0 ≤ f x) ⟶ ¬(finite k) ⟶ 0 ≤ b"
                }
            ],
            "prop": "has_limsup f b (within sequentially k) ⟶ (∀x. 0 ≤ f x) ⟶ ¬(finite k) ⟶ 0 ≤ b",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_f": "(%n::nat. (0::real))",
                    "param_g": "f",
                    "param_net": "(within sequentially k)",
                    "theorem": "has_limsup_le"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_imp_has_limsup"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_const"
                },
                {
                    "goal_id": "5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_sequentially_within"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "nat ⇒ real",
                "k": "nat set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1",
                "hint_forward"
            ],
            "name": "has_liminf_transform",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. f x = g x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x = g x) net ⊢ eventually (λx. f x = g x) net"
                },
                {
                    "args": "has_liminf f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "has_liminf_def",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_liminf f l net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "trivial_limit net",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ g x) net}) l}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [
                        "3.0",
                        "3.1"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ ∀b. eventually (λx. b ≤ f x) net ⟷ eventually (λx. b ≤ g x) net"
                },
                {
                    "args": "b, real",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀x. f x = g x ⟶ b ≤ f x ⟷ b ≤ g x",
                    "id": "4.1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. f x = g x ⟶ b ≤ f x ⟷ b ≤ g x"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. f x = g x ⟶ b ≤ f x ⟷ b ≤ g x, net: net}",
                    "id": "4.1.2",
                    "prevs": [
                        "4.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ eventually (λx. f x = g x ⟶ b ≤ f x ⟷ b ≤ g x) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "4.1.3",
                    "prevs": [
                        "4.1.2",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ eventually (λx. b ≤ f x ⟷ b ≤ g x) net"
                },
                {
                    "args": "eventually_iff",
                    "id": "4.1.4",
                    "prevs": [
                        "4.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ eventually (λx. b ≤ f x) net ⟷ eventually (λx. b ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "4.1.5",
                    "prevs": [
                        "4.1.0",
                        "4.1.4"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ ∀b. eventually (λx. b ≤ f x) net ⟷ eventually (λx. b ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.1",
                        "4.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ g x) net}) l}",
                    "id": "4.3",
                    "prevs": [
                        "4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.0",
                        "4.3"
                    ],
                    "rule": "intros",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "disjE",
                    "id": "5",
                    "prevs": [
                        "2",
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, eventually (λx. f x = g x) net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ g x) net}) l"
                },
                {
                    "args": "has_liminf_def, has_liminf g l net",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "eventually (λx. f x = g x) net, has_liminf f l net ⊢ has_liminf g l net"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. f x = g x) net ⟶ has_liminf f l net ⟶ has_liminf g l net"
                }
            ],
            "prop": "eventually (λx. f x = g x) net ⟶ has_liminf f l net ⟶ has_liminf g l net",
            "steps": [
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal": "!b. eventually (λx. b ≤ f x) net <--> eventually (λx. b ≤ g x) net",
                    "goal_id": "4.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction",
                    "names": "b"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_iff"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. f x = g x)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.1",
                        "4.0"
                    ],
                    "goal_id": "4.2",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_liminf_eventually_lbound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(trivial_limit net)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "has_liminf f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "b < l",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b < l ⊢ b < l"
                },
                {
                    "args": "has_liminf_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_liminf f l net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l ⊢ trivial_limit net ⟶ eventually (λx. b < f x) net"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: eventually (λx. b < f x) net}",
                    "id": "4.1",
                    "prevs": [
                        "0",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ eventually (λx. b < f x) net"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l ⊢ trivial_limit net ⟶ eventually (λx. b < f x) net"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l ⊢ has_sup ({b1. eventually (λx. b1 ≤ f x) net}) l ⟶ eventually (λx. b < f x) net"
                },
                {
                    "args": "has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "has_sup_approach, {}, {c: b, l: l, s: {b. eventually (λx. b ≤ f x) net}}",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_sup ({b1. eventually (λx. b1 ≤ f x) net}) l ⟶ b < l ⟶ (∃x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ∧ b < x)"
                },
                {
                    "args": "",
                    "id": "5.2",
                    "prevs": [
                        "5.1",
                        "5.0",
                        "2"
                    ],
                    "rule": "apply_fact",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l, b < l ⊢ ∃x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ∧ b < x"
                },
                {
                    "args": "member_collect",
                    "id": "5.3",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l, b < l ⊢ ∃x. eventually (λx1. x ≤ f x1) net ∧ b < x"
                },
                {
                    "args": "c, real",
                    "id": "5.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "eventually (λx. c ≤ f x) net ∧ b < c",
                    "id": "5.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. c ≤ f x) net ∧ b < c ⊢ eventually (λx. c ≤ f x) net ∧ b < c"
                },
                {
                    "args": "conjD1, {}, {A: eventually (λx. c ≤ f x) net, B: b < c}",
                    "id": "5.6",
                    "prevs": [
                        "5.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. c ≤ f x) net ∧ b < c ⊢ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "conjD2, {}, {A: eventually (λx. c ≤ f x) net, B: b < c}",
                    "id": "5.7",
                    "prevs": [
                        "5.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "eventually (λx. c ≤ f x) net ∧ b < c ⊢ b < c"
                },
                {
                    "args": "∀x. c ≤ f x ⟶ b < f x",
                    "id": "5.8",
                    "prevs": [
                        "5.7"
                    ],
                    "rule": "z3",
                    "th": "eventually (λx. c ≤ f x) net ∧ b < c ⊢ ∀x. c ≤ f x ⟶ b < f x"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. c ≤ f x ⟶ b < f x, net: net}",
                    "id": "5.9",
                    "prevs": [
                        "5.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l, has_sup ({b. eventually (λx. b ≤ f x) net}) l, eventually (λx. c ≤ f x) net ∧ b < c ⊢ eventually (λx. c ≤ f x ⟶ b < f x) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "5.10",
                    "prevs": [
                        "5.9",
                        "5.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l, has_sup ({b. eventually (λx. b ≤ f x) net}) l, eventually (λx. c ≤ f x) net ∧ b < c ⊢ eventually (λx. b < f x) net"
                },
                {
                    "args": "∃x. eventually (λx1. x ≤ f x1) net ∧ b < x",
                    "id": "5.11",
                    "prevs": [
                        "5.0",
                        "5.3",
                        "5.4",
                        "5.5",
                        "5.10"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net, b < l ⊢ has_sup ({b1. eventually (λx. b1 ≤ f x) net}) l ⟶ eventually (λx. b < f x) net"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, ¬(trivial_limit net), b < l ⊢ eventually (λx. b < f x) net"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_liminf f l net ⟶ b < l ⟶ eventually (λx. b < f x) net"
                }
            ],
            "prop": "¬(trivial_limit net) ⟶ has_liminf f l net ⟶ b < l ⟶ eventually (λx. b < f x) net",
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_forward_step",
                    "param_c": "b",
                    "param_l": "l",
                    "param_s": "{b. eventually (λx. b ≤ f x) net}",
                    "theorem": "has_sup_approach"
                },
                {
                    "fact_ids": [
                        "5.1",
                        "5.0",
                        "2"
                    ],
                    "goal_id": "5.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "5.2"
                    ],
                    "goal_id": "5.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "5.3"
                    ],
                    "goal_id": "5.4",
                    "method_name": "exists_elim",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "5.5"
                    ],
                    "goal_id": "5.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "5.7",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. c ≤ f x)",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "5.7",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "fact_ids": [
                        "5.5"
                    ],
                    "goal_id": "5.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "5.7"
                    ],
                    "goal_id": "5.8",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "reallim_imp_has_liminf",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "tendsto_real f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "tendsto_real f l net ⊢ tendsto_real f l net"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "trivial_limit net",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ f x) net}) l}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false ⊢ ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false"
                },
                {
                    "args": "",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false ⊢ ¬false ⟶ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "¬false",
                    "id": "2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "",
                    "id": "2.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "eventually (λx. l - 1 ≤ f x) net ⟷ false",
                    "id": "2.1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.1.1.1.1",
                    "prevs": [
                        "2.1.1.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ false ⟷ eventually (λx. l - 1 ≤ f x) net"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "2.1.1.1.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real f l net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (f x - l) < e) net"
                },
                {
                    "args": "(1::real)",
                    "id": "2.1.1.1.3",
                    "prevs": [
                        "2.1.1.1.2"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real f l net ⊢ (0::real) < 1 ⟶ eventually (λx. abs (f x - l) < 1) net"
                },
                {
                    "args": "(0::real) < 1",
                    "id": "2.1.1.1.4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (0::real) < 1"
                },
                {
                    "args": "",
                    "id": "2.1.1.1.5",
                    "prevs": [
                        "2.1.1.1.3",
                        "2.1.1.1.4"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real f l net ⊢ eventually (λx. abs (f x - l) < 1) net"
                },
                {
                    "args": "∀x. abs (f x - l) < 1 ⟶ l - 1 ≤ f x",
                    "id": "2.1.1.1.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. abs (f x - l) < 1 ⟶ l - 1 ≤ f x"
                },
                {
                    "args": "eventually_mono",
                    "id": "2.1.1.1.7",
                    "prevs": [
                        "2.1.1.1.6",
                        "2.1.1.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false, eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ eventually (λx. l - 1 ≤ f x) net"
                },
                {
                    "args": "false",
                    "id": "2.1.1.1.8",
                    "prevs": [
                        "2.1.1.1.1",
                        "2.1.1.1.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false, tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.1.1.1.9",
                    "prevs": [
                        "2.1.1.1.0",
                        "2.1.1.1.8"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2.1.1.2",
                    "prevs": [
                        "2.1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ ¬(eventually (λx. l - 1 ≤ f x) net ⟷ false)"
                },
                {
                    "args": "member_collect, ¬(l - 1 ∈ {b. eventually (λx. b ≤ f x) net} ⟷ false)",
                    "id": "2.1.1.3",
                    "prevs": [
                        "2.1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ ¬(l - 1 ∈ {b. eventually (λx. b ≤ f x) net} ⟷ false)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. ¬(x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false), a: l - 1}",
                    "id": "2.1.1.4",
                    "prevs": [
                        "2.1.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ ∃a1. ¬(a1 ∈ {b. eventually (λx. b ≤ f x) net} ⟷ false)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)",
                    "id": "2.1.1.5",
                    "prevs": [
                        "2.1.1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, ¬false ⊢ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "",
                    "id": "2.1.1.6",
                    "prevs": [
                        "2.1.1.0",
                        "2.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false ⊢ ¬false ⟶ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.1.2",
                    "prevs": [
                        "2.1.0",
                        "2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false, tendsto_real f l net, ¬(trivial_limit net) ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.0",
                        "2.1.2"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false) ⟶ false"
                },
                {
                    "args": "member_empty_simp, (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅) ⟶ false",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅) ⟶ false"
                },
                {
                    "args": "set_equal_iff, {b. eventually (λx. b ≤ f x) net} = ∅ ⟶ false",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ {b. eventually (λx. b ≤ f x) net} = ∅ ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅)"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l"
                },
                {
                    "args": "x, real",
                    "id": "2.5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. x ≤ f x1) net",
                    "id": "2.5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. x ≤ f x1) net ⊢ eventually (λx1. x ≤ f x1) net"
                },
                {
                    "args": "reallim_lbound",
                    "id": "2.5.2",
                    "prevs": [
                        "0",
                        "2.0",
                        "2.5.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), eventually (λx1. x ≤ f x1) net ⊢ x ≤ l"
                },
                {
                    "args": "",
                    "id": "2.5.3",
                    "prevs": [
                        "2.5.0",
                        "2.5.1",
                        "2.5.2"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l"
                },
                {
                    "args": "",
                    "id": "2.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)"
                },
                {
                    "args": "c, real",
                    "id": "2.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "2.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "tendsto_real_def",
                    "id": "2.7.2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "tendsto_real f l net ⊢ ∀e. 0 < e ⟶ eventually (λx. abs (f x - l) < e) net"
                },
                {
                    "args": "(l - c) / 2",
                    "id": "2.7.3",
                    "prevs": [
                        "2.7.2"
                    ],
                    "rule": "forall_elim",
                    "th": "tendsto_real f l net ⊢ 0 < (l - c) / 2 ⟶ eventually (λx. abs (f x - l) < (l - c) / 2) net"
                },
                {
                    "args": "0 < (l - c) / 2",
                    "id": "2.7.4",
                    "prevs": [
                        "2.7.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ 0 < (l - c) / 2"
                },
                {
                    "args": "",
                    "id": "2.7.5",
                    "prevs": [
                        "2.7.3",
                        "2.7.4"
                    ],
                    "rule": "apply_fact",
                    "th": "tendsto_real f l net, c < l ⊢ eventually (λx. abs (f x - l) < (l - c) / 2) net"
                },
                {
                    "args": "∀x. abs (f x - l) < (l - c) / 2 ⟶ (l + c) / 2 ≤ f x",
                    "id": "2.7.6",
                    "prevs": [
                        "2.7.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ ∀x. abs (f x - l) < (l - c) / 2 ⟶ (l + c) / 2 ≤ f x"
                },
                {
                    "args": "eventually_mono",
                    "id": "2.7.7",
                    "prevs": [
                        "2.7.6",
                        "2.7.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), c < l ⊢ eventually (λx. (l + c) / 2 ≤ f x) net"
                },
                {
                    "args": "c < (l + c) / 2",
                    "id": "2.7.8",
                    "prevs": [
                        "2.7.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ c < (l + c) / 2"
                },
                {
                    "args": "conjI",
                    "id": "2.7.9",
                    "prevs": [
                        "2.7.7",
                        "2.7.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), c < l ⊢ eventually (λx. (l + c) / 2 ≤ f x) net ∧ c < (l + c) / 2"
                },
                {
                    "args": "member_collect, (l + c) / 2 ∈ {b. eventually (λx. b ≤ f x) net} ∧ c < (l + c) / 2",
                    "id": "2.7.10",
                    "prevs": [
                        "2.7.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), c < l ⊢ (l + c) / 2 ∈ {b. eventually (λx. b ≤ f x) net} ∧ c < (l + c) / 2"
                },
                {
                    "args": "exI, {a: real}, {P: λx. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x, a: (l + c) / 2}",
                    "id": "2.7.11",
                    "prevs": [
                        "2.7.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net), c < l ⊢ ∃a1. a1 ∈ {b. eventually (λx. b ≤ f x) net} ∧ c < a1"
                },
                {
                    "args": "",
                    "id": "2.7.12",
                    "prevs": [
                        "2.7.0",
                        "2.7.1",
                        "2.7.11"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)"
                },
                {
                    "args": "conjI",
                    "id": "2.8",
                    "prevs": [
                        "2.6",
                        "2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x))"
                },
                {
                    "args": "conjI",
                    "id": "2.9",
                    "prevs": [
                        "2.4",
                        "2.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x))"
                },
                {
                    "args": "has_sup, has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ f x) net}) l}",
                    "id": "2.11",
                    "prevs": [
                        "2.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "tendsto_real f l net, ¬(trivial_limit net) ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "2.12",
                    "prevs": [
                        "2.0",
                        "2.11"
                    ],
                    "rule": "intros",
                    "th": "tendsto_real f l net ⊢ ¬(trivial_limit net) ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "tendsto_real f l net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "has_liminf_def, has_liminf f l net",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "tendsto_real f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ tendsto_real f l net ⟶ has_liminf f l net"
                }
            ],
            "prop": "tendsto_real f l net ⟶ has_liminf f l net",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "case": "trivial_limit net",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_sup"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.0"
                    ],
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "inst_exists_goal",
                    "s": "l-1"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.1.1.0"
                    ],
                    "goal_id": "2.1.1.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.1.1.1.1"
                    ],
                    "goal_id": "2.1.1.1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.1.1.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "2.1.1.1.2"
                    ],
                    "goal_id": "2.1.1.1.3",
                    "method_name": "forall_elim",
                    "s": "(1::real)"
                },
                {
                    "goal": "(0::real) < 1",
                    "goal_id": "2.1.1.1.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.1.1.1.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.1.1.1.3",
                        "2.1.1.1.4"
                    ],
                    "goal_id": "2.1.1.1.5",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "2.1.1.1.6",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. abs (f x - l) < 1)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "2.1.1.1.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "2.5.2",
                    "method_name": "apply_backward_step",
                    "param_f": "f",
                    "param_net": "net",
                    "theorem": "reallim_lbound"
                },
                {
                    "goal_id": "2.7",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "2.7.2",
                    "method_name": "inst_exists_goal",
                    "s": "(l+c)/2"
                },
                {
                    "goal_id": "2.7.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.7.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.7.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "tendsto_real_def"
                },
                {
                    "fact_ids": [
                        "2.7.2"
                    ],
                    "goal_id": "2.7.3",
                    "method_name": "forall_elim",
                    "s": "(l-c)/2"
                },
                {
                    "goal": "0 < (l - c) / 2 ",
                    "goal_id": "2.7.4",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.7.1"
                    ],
                    "goal_id": "2.7.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.7.3",
                        "2.7.4"
                    ],
                    "goal_id": "2.7.5",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "2.7.6",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. abs (f x - l) < (l - c) / 2)",
                    "theorem": "eventually_mono"
                },
                {
                    "fact_ids": [
                        "2.7.1"
                    ],
                    "goal_id": "2.7.6",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.7.1"
                    ],
                    "goal_id": "2.7.8",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_forward",
                "hint_backward"
            ],
            "name": "has_liminf_imp_lbound_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_liminf f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "has_liminf_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_liminf f l net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf f l net ⊢ trivial_limit net ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "eventually_trivial, {a: 'a}, {P: λx. l ≤ f x, net: net}",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf f l net, trivial_limit net ⊢ eventually (λx. l ≤ f x) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. b ≤ f x) net, a: l}",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf f l net, trivial_limit net ⊢ ∃a1. eventually (λx. a1 ≤ f x) net"
                },
                {
                    "args": "",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "intros",
                    "th": "has_liminf f l net ⊢ trivial_limit net ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf f l net ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x))",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x))"
                },
                {
                    "args": "conjD2, {}, {A: ¬({b. eventually (λx. b ≤ f x) net} = ∅), B: (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x))}",
                    "id": "3.1",
                    "prevs": [
                        "3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⊢ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x))"
                },
                {
                    "args": "conjD2, {}, {A: ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l, B: ∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)}",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⊢ ∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)"
                },
                {
                    "args": "l - 1",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "forall_elim",
                    "th": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⊢ l - 1 < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ l - 1 < x)"
                },
                {
                    "args": "l - 1 < l",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l - 1 < l"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.3",
                        "3.4"
                    ],
                    "rule": "apply_fact",
                    "th": "¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⊢ ∃x. eventually (λx1. x ≤ f x1) net ∧ l - 1 < x"
                },
                {
                    "args": "x, real",
                    "id": "3.6",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. x ≤ f x1) net ∧ l - 1 < x",
                    "id": "3.7",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. x ≤ f x1) net ∧ l - 1 < x ⊢ eventually (λx1. x ≤ f x1) net ∧ l - 1 < x"
                },
                {
                    "args": "conjD1",
                    "id": "3.8",
                    "prevs": [
                        "3.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx1. x ≤ f x1) net ∧ l - 1 < x ⊢ eventually (λx1. x ≤ f x1) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. b ≤ f x) net, a: x}",
                    "id": "3.9",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf f l net, ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)), eventually (λx1. x ≤ f x1) net ∧ l - 1 < x ⊢ ∃a1. eventually (λx. a1 ≤ f x) net"
                },
                {
                    "args": "∃x. eventually (λx1. x ≤ f x1) net ∧ l - 1 < x",
                    "id": "3.10",
                    "prevs": [
                        "3.0",
                        "3.5",
                        "3.6",
                        "3.7",
                        "3.9"
                    ],
                    "rule": "intros",
                    "th": "has_liminf f l net ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)) ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "member_collect, ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)) ⟶ (∃b. eventually (λx. b ≤ f x) net)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf f l net ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)) ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "has_sup, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ (∃b. eventually (λx. b ≤ f x) net)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf f l net ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net ⊢ ∃a1. eventually (λx. a1 ≤ f x) net"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf f l net ⟶ (∃b. eventually (λx. b ≤ f x) net)"
                }
            ],
            "prop": "has_liminf f l net ⟶ (∃b. eventually (λx. b ≤ f x) net)",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "inst_exists_goal",
                    "s": "l"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "eventually_trivial"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_sup"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "forall_elim",
                    "s": "l-1"
                },
                {
                    "goal": "l - 1 < l ",
                    "goal_id": "3.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.3",
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.5"
                    ],
                    "goal_id": "3.6",
                    "method_name": "exists_elim",
                    "names": "x"
                },
                {
                    "goal_id": "3.8",
                    "method_name": "inst_exists_goal",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "3.7"
                    ],
                    "goal_id": "3.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_liminf_not_lbound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(trivial_limit net)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "has_liminf f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "l < c",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "has_liminf_def",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_liminf f l net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c ⊢ trivial_limit net ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: ¬(eventually (λx. c ≤ f x) net)}",
                    "id": "4.1",
                    "prevs": [
                        "0",
                        "4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [
                        "4.0",
                        "4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c ⊢ trivial_limit net ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ eventually (λx. c ≤ f x) net ⟶ c ≤ l"
                },
                {
                    "args": "eventually (λx. c ≤ f x) net",
                    "id": "5.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. c ≤ f x) net ⊢ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "member_collect, c ∈ {b. eventually (λx. b ≤ f x) net}",
                    "id": "5.1.1",
                    "prevs": [
                        "5.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c, has_sup ({b. eventually (λx. b ≤ f x) net}) l, eventually (λx. c ≤ f x) net ⊢ c ∈ {b. eventually (λx. b ≤ f x) net}"
                },
                {
                    "args": "has_sup_ubound",
                    "id": "5.1.2",
                    "prevs": [
                        "5.0",
                        "5.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_sup ({b. eventually (λx. b ≤ f x) net}) l, ¬(trivial_limit net), has_liminf f l net, l < c, eventually (λx. c ≤ f x) net ⊢ c ≤ l"
                },
                {
                    "args": "",
                    "id": "5.1.3",
                    "prevs": [
                        "5.1.0",
                        "5.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ eventually (λx. c ≤ f x) net ⟶ c ≤ l"
                },
                {
                    "args": "double_neg, ¬¬(eventually (λx. c ≤ f x) net) ⟶ c ≤ l",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ ¬¬(eventually (λx. c ≤ f x) net) ⟶ c ≤ l"
                },
                {
                    "args": "real_not_lt, ¬¬(eventually (λx. c ≤ f x) net) ⟶ ¬(l < c)",
                    "id": "5.3",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ ¬¬(eventually (λx. c ≤ f x) net) ⟶ ¬(l < c)"
                },
                {
                    "args": "contrapositive",
                    "id": "5.4",
                    "prevs": [
                        "2",
                        "5.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "l < c, ¬(trivial_limit net), has_liminf f l net, has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "5.5",
                    "prevs": [
                        "5.0",
                        "5.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "disjE",
                    "id": "6",
                    "prevs": [
                        "3",
                        "4",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, ¬(trivial_limit net), l < c ⊢ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_liminf f l net ⟶ l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
                }
            ],
            "prop": [
                "¬(trivial_limit net) ",
                "⟶ has_liminf f l net ⟶ l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0",
                        "4.0"
                    ],
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "5.0"
                    ],
                    "goal_id": "5.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "has_sup_ubound"
                },
                {
                    "goal_id": "5.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_liminf",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))}",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net, trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟶ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ f x) net}) l}",
                    "id": "0.2.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net, trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ⟶ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "has_liminf_def, trivial_limit net ⟶ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ trivial_limit net ⟶ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net) ⊢ has_liminf f l net ⟶ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "has_liminf f l net",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ ∀c. c < l ⟶ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "c, real",
                    "id": "2.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "2.1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "∀x. c < f x ⟶ c ≤ f x",
                    "id": "2.1.1.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. c < f x ⟶ c ≤ f x"
                },
                {
                    "args": "has_liminf_eventually_lbound",
                    "id": "2.1.1.3",
                    "prevs": [
                        "2.0",
                        "2.1.0",
                        "2.1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net, c < l ⊢ eventually (λx. c < f x) net"
                },
                {
                    "args": "eventually_mono",
                    "id": "2.1.1.4",
                    "prevs": [
                        "2.1.1.2",
                        "2.1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net, c < l ⊢ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "",
                    "id": "2.1.1.5",
                    "prevs": [
                        "2.1.1.0",
                        "2.1.1.1",
                        "2.1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ ∀c. c < l ⟶ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "",
                    "id": "2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "c, real",
                    "id": "2.1.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "2.1.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "has_liminf_not_lbound",
                    "id": "2.1.2.2",
                    "prevs": [
                        "2.0",
                        "2.1.0",
                        "2.1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net, l < c ⊢ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "2.1.2.3",
                    "prevs": [
                        "2.1.2.0",
                        "2.1.2.1",
                        "2.1.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "conjI",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.1",
                        "2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))}",
                    "id": "2.1.4",
                    "prevs": [
                        "2.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), has_liminf f l net ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "2.1.5",
                    "prevs": [
                        "2.1.0",
                        "2.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net) ⊢ has_liminf f l net ⟶ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net) ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ has_liminf f l net"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ has_liminf f l net"
                },
                {
                    "args": "trivial_limit net",
                    "id": "2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: has_liminf f l net}",
                    "id": "2.2.1.1",
                    "prevs": [
                        "2.0",
                        "2.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "2.2.1.2",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ has_liminf f l net"
                },
                {
                    "args": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. c < l ⟶ eventually (λx. c ≤ f x) net, B: ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)}",
                    "id": "2.2.2.1",
                    "prevs": [
                        "2.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. c < l ⟶ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ eventually (λx. c ≤ f x) net, B: ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)}",
                    "id": "2.2.2.2",
                    "prevs": [
                        "2.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "2.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "eventually (λx. l - 1 ≤ f x) net ⟷ false",
                    "id": "2.2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "2.2.2.3.1",
                    "prevs": [
                        "2.2.2.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ false ⟷ eventually (λx. l - 1 ≤ f x) net"
                },
                {
                    "args": "l - 1 < l",
                    "id": "2.2.2.3.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l - 1 < l"
                },
                {
                    "args": "l - 1",
                    "id": "2.2.2.3.3",
                    "prevs": [
                        "2.2.2.1",
                        "2.2.2.3.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), eventually (λx. l - 1 ≤ f x) net ⟷ false ⊢ eventually (λx. l - 1 ≤ f x) net"
                },
                {
                    "args": "false",
                    "id": "2.2.2.3.4",
                    "prevs": [
                        "2.2.2.3.1",
                        "2.2.2.3.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "eventually (λx. l - 1 ≤ f x) net ⟷ false, ¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ false"
                },
                {
                    "args": "",
                    "id": "2.2.2.3.5",
                    "prevs": [
                        "2.2.2.3.0",
                        "2.2.2.3.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ eventually (λx. l - 1 ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "2.2.2.4",
                    "prevs": [
                        "2.2.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(eventually (λx. l - 1 ≤ f x) net ⟷ false)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. ¬(eventually (λx1. x ≤ f x1) net ⟷ false), a: l - 1}",
                    "id": "2.2.2.5",
                    "prevs": [
                        "2.2.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. ¬(eventually (λx. a1 ≤ f x) net ⟷ false)"
                },
                {
                    "args": "member_collect, ∃x. ¬(x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)",
                    "id": "2.2.2.6",
                    "prevs": [
                        "2.2.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃x. ¬(x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)",
                    "id": "2.2.2.7",
                    "prevs": [
                        "2.2.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅)",
                    "id": "2.2.2.8",
                    "prevs": [
                        "2.2.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({b. eventually (λx. b ≤ f x) net} = ∅)",
                    "id": "2.2.2.9",
                    "prevs": [
                        "2.2.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅)"
                },
                {
                    "args": "",
                    "id": "2.2.2.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l"
                },
                {
                    "args": "x, real",
                    "id": "2.2.2.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. x ≤ f x1) net",
                    "id": "2.2.2.10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. x ≤ f x1) net ⊢ eventually (λx1. x ≤ f x1) net"
                },
                {
                    "args": "",
                    "id": "2.2.2.10.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), eventually (λx1. x ≤ f x1) net ⊢ ¬¬(l < x) ⟶ ¬(eventually (λx1. x ≤ f x1) net)"
                },
                {
                    "args": "¬¬(l < x)",
                    "id": "2.2.2.10.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(l < x) ⊢ ¬¬(l < x)"
                },
                {
                    "args": "double_neg",
                    "id": "2.2.2.10.2.1",
                    "prevs": [
                        "2.2.2.10.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(l < x) ⊢ l < x"
                },
                {
                    "args": "x",
                    "id": "2.2.2.10.2.2",
                    "prevs": [
                        "2.2.2.2",
                        "2.2.2.10.2.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), eventually (λx1. x ≤ f x1) net, ¬¬(l < x) ⊢ ¬(eventually (λx1. x ≤ f x1) net)"
                },
                {
                    "args": "",
                    "id": "2.2.2.10.2.3",
                    "prevs": [
                        "2.2.2.10.2.0",
                        "2.2.2.10.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), eventually (λx1. x ≤ f x1) net ⊢ ¬¬(l < x) ⟶ ¬(eventually (λx1. x ≤ f x1) net)"
                },
                {
                    "args": "contrapositive",
                    "id": "2.2.2.10.3",
                    "prevs": [
                        "2.2.2.10.1",
                        "2.2.2.10.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx1. x ≤ f x1) net, ¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(l < x)"
                },
                {
                    "args": "real_not_lt, x ≤ l",
                    "id": "2.2.2.10.4",
                    "prevs": [
                        "2.2.2.10.3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), eventually (λx1. x ≤ f x1) net ⊢ x ≤ l"
                },
                {
                    "args": "",
                    "id": "2.2.2.10.5",
                    "prevs": [
                        "2.2.2.10.0",
                        "2.2.2.10.1",
                        "2.2.2.10.4"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ l"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l",
                    "id": "2.2.2.11",
                    "prevs": [
                        "2.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l"
                },
                {
                    "args": "",
                    "id": "2.2.2.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)"
                },
                {
                    "args": "c, real",
                    "id": "2.2.2.12.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "2.2.2.12.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "(l + c) / 2 < l",
                    "id": "2.2.2.12.2",
                    "prevs": [
                        "2.2.2.12.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ (l + c) / 2 < l"
                },
                {
                    "args": "(l + c) / 2",
                    "id": "2.2.2.12.3",
                    "prevs": [
                        "2.2.2.1",
                        "2.2.2.12.2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), c < l ⊢ eventually (λx. (l + c) / 2 ≤ f x) net"
                },
                {
                    "args": "c < (l + c) / 2",
                    "id": "2.2.2.12.4",
                    "prevs": [
                        "2.2.2.12.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ c < (l + c) / 2"
                },
                {
                    "args": "conjI",
                    "id": "2.2.2.12.5",
                    "prevs": [
                        "2.2.2.12.3",
                        "2.2.2.12.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), c < l ⊢ eventually (λx. (l + c) / 2 ≤ f x) net ∧ c < (l + c) / 2"
                },
                {
                    "args": "exI, {a: real}, {P: λx. eventually (λx1. x ≤ f x1) net ∧ c < x, a: (l + c) / 2}",
                    "id": "2.2.2.12.6",
                    "prevs": [
                        "2.2.2.12.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), c < l ⊢ ∃a1. eventually (λx. a1 ≤ f x) net ∧ c < a1"
                },
                {
                    "args": "",
                    "id": "2.2.2.12.7",
                    "prevs": [
                        "2.2.2.12.0",
                        "2.2.2.12.1",
                        "2.2.2.12.6"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. c < l ⟶ (∃x. eventually (λx1. x ≤ f x1) net ∧ c < x)"
                },
                {
                    "args": "member_collect, ∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)",
                    "id": "2.2.2.13",
                    "prevs": [
                        "2.2.2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x)"
                },
                {
                    "args": "conjI",
                    "id": "2.2.2.14",
                    "prevs": [
                        "2.2.2.11",
                        "2.2.2.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x))"
                },
                {
                    "args": "conjI",
                    "id": "2.2.2.15",
                    "prevs": [
                        "2.2.2.9",
                        "2.2.2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ l) ∧ (∀c. c < l ⟶ (∃x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ∧ c < x))"
                },
                {
                    "args": "has_sup, has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "2.2.2.16",
                    "prevs": [
                        "2.2.2.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ f x) net}) l}",
                    "id": "2.2.2.17",
                    "prevs": [
                        "2.2.2.16"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "has_liminf_def, has_liminf f l net",
                    "id": "2.2.2.18",
                    "prevs": [
                        "2.2.2.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "2.2.2.19",
                    "prevs": [
                        "2.2.2.0",
                        "2.2.2.18"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ has_liminf f l net"
                },
                {
                    "args": "disjE",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.0",
                        "2.2.1",
                        "2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.0",
                        "2.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net) ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ has_liminf f l net"
                },
                {
                    "args": "iffI",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net) ⊢ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf f l net ⟷ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                }
            ],
            "prop": [
                "has_liminf f l net ⟷ ",
                "trivial_limit net ∨ ",
                "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ ",
                "(∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
            ],
            "steps": [
                {
                    "case": "trivial_limit net",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "2.1.1.2",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. c < f x)",
                    "theorem": "eventually_mono"
                },
                {
                    "goal_id": "2.1.1.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "2.1.0",
                        "2.1.1.1"
                    ],
                    "goal_id": "2.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "has_liminf_eventually_lbound"
                },
                {
                    "goal_id": "2.1.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "2.1.0",
                        "2.1.2.1"
                    ],
                    "goal_id": "2.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "has_liminf_not_lbound"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "2.2.1.0"
                    ],
                    "goal_id": "2.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_sup"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.2.2.0"
                    ],
                    "goal_id": "2.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2.2.2.0"
                    ],
                    "goal_id": "2.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "inst_exists_goal",
                    "s": "l-1"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "2.2.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.2.3.0"
                    ],
                    "goal_id": "2.2.2.3.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "2.2.2.3.1"
                    ],
                    "goal_id": "2.2.2.3.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.2.2.1"
                    ],
                    "goal_id": "2.2.2.3.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.2.2.3.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "2.2.2.10",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2.2.2.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.2.2.10",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "2.2.2.10.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "2.2.2.10.1"
                    ],
                    "goal_id": "2.2.2.10.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2.2.2.10.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.2.10.2.0"
                    ],
                    "goal_id": "2.2.2.10.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "2.2.2.2"
                    ],
                    "goal_id": "2.2.2.10.2.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2.2.2.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "2.2.2.12",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "2.2.2.12.2",
                    "method_name": "inst_exists_goal",
                    "s": "(l+c)/2"
                },
                {
                    "goal_id": "2.2.2.12.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2.2.2.1"
                    ],
                    "goal_id": "2.2.2.12.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "2.2.2.12.1"
                    ],
                    "goal_id": "2.2.2.12.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.2.2.12.1"
                    ],
                    "goal_id": "2.2.2.12.4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "liminf_exists",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))}",
                    "id": "0.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net, ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(trivial_limit net) ⟶ (∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "l, real",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR l"
                },
                {
                    "args": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "trivial_limit net",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))}",
                    "id": "1.4.1",
                    "prevs": [
                        "1.0",
                        "1.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.0",
                        "1.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "1.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. c < l ⟶ eventually (λx. c ≤ f x) net, B: ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)}",
                    "id": "1.5.1",
                    "prevs": [
                        "1.5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. c < l ⟶ eventually (λx. c ≤ f x) net"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ eventually (λx. c ≤ f x) net, B: ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)}",
                    "id": "1.5.2",
                    "prevs": [
                        "1.5.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "l - 1 < l",
                    "id": "1.5.3",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l - 1 < l"
                },
                {
                    "args": "l - 1",
                    "id": "1.5.4",
                    "prevs": [
                        "1.5.1",
                        "1.5.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ eventually (λx. l - 1 ≤ f x) net"
                },
                {
                    "args": "exI, {a: real}, {P: λb. eventually (λx. b ≤ f x) net, a: l - 1}",
                    "id": "1.5.5",
                    "prevs": [
                        "1.5.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. eventually (λx. a1 ≤ f x) net"
                },
                {
                    "args": "l < l + 1",
                    "id": "1.5.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l < l + 1"
                },
                {
                    "args": "l + 1",
                    "id": "1.5.7",
                    "prevs": [
                        "1.5.2",
                        "1.5.6"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(eventually (λx. l + 1 ≤ f x) net)"
                },
                {
                    "args": "exI, {a: real}, {P: λc. ¬(eventually (λx. c ≤ f x) net), a: l + 1}",
                    "id": "1.5.8",
                    "prevs": [
                        "1.5.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. ¬(eventually (λx. a1 ≤ f x) net)"
                },
                {
                    "args": "conjI",
                    "id": "1.5.9",
                    "prevs": [
                        "1.5.5",
                        "1.5.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "1.5.10",
                    "prevs": [
                        "1.5.0",
                        "1.5.9"
                    ],
                    "rule": "intros",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⟶ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "disjE",
                    "id": "1.6",
                    "prevs": [
                        "1.3",
                        "1.4",
                        "1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))}",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), ∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))",
                    "id": "1.8",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.1",
                        "1.2",
                        "1.3",
                        "1.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(trivial_limit net) ⟶ (∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃l. trivial_limit net ∨ (∀c. c < l ⟶ eventually (λx. c ≤ f x) net) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ f x) net))) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "has_liminf, (∃l. has_liminf f l net) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃l. has_liminf f l net) ⟶ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⟶ (∃l. has_liminf f l net)"
                },
                {
                    "args": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit net, B: has_sup ({b. eventually (λx. b ≤ f x) net}) 0}",
                    "id": "4.1.1",
                    "prevs": [
                        "4.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ⊢ trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) 0"
                },
                {
                    "args": "exI, {a: real}, {P: λl. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l, a: (0::real)}",
                    "id": "4.1.2",
                    "prevs": [
                        "4.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), trivial_limit net ⊢ ∃a1. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) a1"
                },
                {
                    "args": "",
                    "id": "4.1.3",
                    "prevs": [
                        "4.1.0",
                        "4.1.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ trivial_limit net ⟶ (∃l. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l)"
                },
                {
                    "args": "",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(trivial_limit net) ⟶ (∃l. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l)"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "4.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "",
                    "id": "4.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ trivial_limit net ⟶ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "trivial_limit net",
                    "id": "4.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit net ⊢ trivial_limit net"
                },
                {
                    "args": "negE_gen, {}, {A: trivial_limit net, C: ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)}",
                    "id": "4.2.1.1",
                    "prevs": [
                        "4.2.0",
                        "4.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(trivial_limit net), trivial_limit net ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "",
                    "id": "4.2.1.2",
                    "prevs": [
                        "4.2.1.0",
                        "4.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ trivial_limit net ⟶ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "",
                    "id": "4.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⟶ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "(∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))",
                    "id": "4.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "conjD1, {}, {A: ∃a1. eventually (λx. a1 ≤ f x) net, B: ∃a1. ¬(eventually (λx. a1 ≤ f x) net)}",
                    "id": "4.2.2.1",
                    "prevs": [
                        "4.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. eventually (λx. a1 ≤ f x) net"
                },
                {
                    "args": "conjD2, {}, {A: ∃a1. eventually (λx. a1 ≤ f x) net, B: ∃a1. ¬(eventually (λx. a1 ≤ f x) net)}",
                    "id": "4.2.2.2",
                    "prevs": [
                        "4.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. ¬(eventually (λx. a1 ≤ f x) net)"
                },
                {
                    "args": "b, real",
                    "id": "4.2.2.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "eventually (λx. b ≤ f x) net",
                    "id": "4.2.2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. b ≤ f x) net ⊢ eventually (λx. b ≤ f x) net"
                },
                {
                    "args": "c, real",
                    "id": "4.2.2.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "¬(eventually (λx. c ≤ f x) net)",
                    "id": "4.2.2.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(eventually (λx. c ≤ f x) net) ⊢ ¬(eventually (λx. c ≤ f x) net)"
                },
                {
                    "args": "",
                    "id": "4.2.2.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ eventually (λx. b ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "eventually (λx. b ≤ f x) net ⟷ false",
                    "id": "4.2.2.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. b ≤ f x) net ⟷ false ⊢ eventually (λx. b ≤ f x) net ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4.2.2.7.1",
                    "prevs": [
                        "4.2.2.7.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "eventually (λx. b ≤ f x) net ⟷ false ⊢ false ⟷ eventually (λx. b ≤ f x) net"
                },
                {
                    "args": "false",
                    "id": "4.2.2.7.2",
                    "prevs": [
                        "4.2.2.7.1",
                        "4.2.2.4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "eventually (λx. b ≤ f x) net ⟷ false, trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.2.2.7.3",
                    "prevs": [
                        "4.2.2.7.0",
                        "4.2.2.7.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ eventually (λx. b ≤ f x) net ⟷ false ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.2.2.8",
                    "prevs": [
                        "4.2.2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬(eventually (λx. b ≤ f x) net ⟷ false)"
                },
                {
                    "args": "member_collect, ¬(b ∈ {b1. eventually (λx. b1 ≤ f x) net} ⟷ false)",
                    "id": "4.2.2.9",
                    "prevs": [
                        "4.2.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬(b ∈ {b1. eventually (λx. b1 ≤ f x) net} ⟷ false)"
                },
                {
                    "args": "exI, {a: real}, {P: λx. ¬(x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false), a: b}",
                    "id": "4.2.2.10",
                    "prevs": [
                        "4.2.2.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ∃a1. ¬(a1 ∈ {b. eventually (λx. b ≤ f x) net} ⟷ false)"
                },
                {
                    "args": "not_all, ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)",
                    "id": "4.2.2.11",
                    "prevs": [
                        "4.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ false)"
                },
                {
                    "args": "member_empty_simp, ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅)",
                    "id": "4.2.2.12",
                    "prevs": [
                        "4.2.2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬(∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟷ x ∈ ∅)"
                },
                {
                    "args": "set_equal_iff, ¬({b. eventually (λx. b ≤ f x) net} = ∅)",
                    "id": "4.2.2.13",
                    "prevs": [
                        "4.2.2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅)"
                },
                {
                    "args": "",
                    "id": "4.2.2.14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ c"
                },
                {
                    "args": "x, real",
                    "id": "4.2.2.14.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "eventually (λx1. x ≤ f x1) net",
                    "id": "4.2.2.14.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx1. x ≤ f x1) net ⊢ eventually (λx1. x ≤ f x1) net"
                },
                {
                    "args": "",
                    "id": "4.2.2.14.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net), eventually (λx1. x ≤ f x1) net ⊢ c < x ⟶ eventually (λx1. c ≤ f x1) net"
                },
                {
                    "args": "c < x",
                    "id": "4.2.2.14.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < x ⊢ c < x"
                },
                {
                    "args": "∀x1. x ≤ f x1 ⟶ c ≤ f x1",
                    "id": "4.2.2.14.2.1",
                    "prevs": [
                        "4.2.2.14.2.0"
                    ],
                    "rule": "z3",
                    "th": "c < x ⊢ ∀x1. x ≤ f x1 ⟶ c ≤ f x1"
                },
                {
                    "args": "eventually_mono",
                    "id": "4.2.2.14.2.2",
                    "prevs": [
                        "4.2.2.14.2.1",
                        "4.2.2.14.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net), eventually (λx1. x ≤ f x1) net, c < x ⊢ eventually (λx1. c ≤ f x1) net"
                },
                {
                    "args": "",
                    "id": "4.2.2.14.2.3",
                    "prevs": [
                        "4.2.2.14.2.0",
                        "4.2.2.14.2.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net), eventually (λx1. x ≤ f x1) net ⊢ c < x ⟶ eventually (λx1. c ≤ f x1) net"
                },
                {
                    "args": "double_neg, ¬¬(c < x) ⟶ ¬¬(eventually (λx1. c ≤ f x1) net)",
                    "id": "4.2.2.14.3",
                    "prevs": [
                        "4.2.2.14.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net), eventually (λx1. x ≤ f x1) net ⊢ ¬¬(c < x) ⟶ ¬¬(eventually (λx1. c ≤ f x1) net)"
                },
                {
                    "args": "contrapositive",
                    "id": "4.2.2.14.4",
                    "prevs": [
                        "4.2.2.6",
                        "4.2.2.14.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(eventually (λx. c ≤ f x) net), trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, eventually (λx1. x ≤ f x1) net ⊢ ¬(c < x)"
                },
                {
                    "args": "real_not_lt, x ≤ c",
                    "id": "4.2.2.14.5",
                    "prevs": [
                        "4.2.2.14.4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net), eventually (λx1. x ≤ f x1) net ⊢ x ≤ c"
                },
                {
                    "args": "",
                    "id": "4.2.2.14.6",
                    "prevs": [
                        "4.2.2.14.0",
                        "4.2.2.14.1",
                        "4.2.2.14.5"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ∀x. eventually (λx1. x ≤ f x1) net ⟶ x ≤ c"
                },
                {
                    "args": "member_collect, ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ c",
                    "id": "4.2.2.15",
                    "prevs": [
                        "4.2.2.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ c"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b, a: c}",
                    "id": "4.2.2.16",
                    "prevs": [
                        "4.2.2.15"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ∃a1. ∀x. x ∈ {b. eventually (λx1. b ≤ f x1) net} ⟶ x ≤ a1"
                },
                {
                    "args": "conjI",
                    "id": "4.2.2.17",
                    "prevs": [
                        "4.2.2.13",
                        "4.2.2.16"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net), (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), eventually (λx. b ≤ f x) net, ¬(eventually (λx. c ≤ f x) net) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "∃a1. ¬(eventually (λx. a1 ≤ f x) net), ∃a1. eventually (λx. a1 ≤ f x) net",
                    "id": "4.2.2.18",
                    "prevs": [
                        "4.2.2.0",
                        "4.2.2.1",
                        "4.2.2.3",
                        "4.2.2.4",
                        "4.2.2.2",
                        "4.2.2.5",
                        "4.2.2.6",
                        "4.2.2.17"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⟶ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "disjE",
                    "id": "4.2.3",
                    "prevs": [
                        "4.0",
                        "4.2.1",
                        "4.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ ¬({b. eventually (λx. b ≤ f x) net} = ∅) ∧ (∃b. ∀x. x ∈ {b1. eventually (λx1. b1 ≤ f x1) net} ⟶ x ≤ b)"
                },
                {
                    "args": "sup_exists, ∃l. has_sup ({b. eventually (λx. b ≤ f x) net}) l",
                    "id": "4.2.4",
                    "prevs": [
                        "4.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ ∃l. has_sup ({b. eventually (λx. b ≤ f x) net}) l"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit net, B: ∃l. has_sup ({b. eventually (λx. b ≤ f x) net}) l}",
                    "id": "4.2.5",
                    "prevs": [
                        "4.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ trivial_limit net ∨ (∃x. has_sup ({b. eventually (λx1. b ≤ f x1) net}) x)"
                },
                {
                    "args": "right_or_exists_thm, ∃a1. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) a1",
                    "id": "4.2.6",
                    "prevs": [
                        "4.2.5"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)), ¬(trivial_limit net) ⊢ ∃a1. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) a1"
                },
                {
                    "args": "",
                    "id": "4.2.7",
                    "prevs": [
                        "4.2.0",
                        "4.2.6"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ¬(trivial_limit net) ⟶ (∃l. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) l)"
                },
                {
                    "args": "classical_cases",
                    "id": "4.3",
                    "prevs": [
                        "4.1",
                        "4.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃a1. trivial_limit net ∨ has_sup ({b. eventually (λx. b ≤ f x) net}) a1"
                },
                {
                    "args": "has_liminf_def, ∃l. has_liminf f l net",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⊢ ∃l. has_liminf f l net"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "4.0",
                        "4.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net)) ⟶ (∃l. has_liminf f l net)"
                },
                {
                    "args": "iffI",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∃l. has_liminf f l net) ⟷ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃l. has_liminf f l net) ⟷ trivial_limit net ∨ (∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
                }
            ],
            "prop": [
                "(∃l. has_liminf f l net) ⟷ ",
                "trivial_limit net ∨ ",
                "(∃b. eventually (λx. b ≤ f x) net) ∧ (∃c. ¬(eventually (λx. c ≤ f x) net))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf"
                },
                {
                    "case": "trivial_limit net",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "exists_elim",
                    "names": "l"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.5.0"
                    ],
                    "goal_id": "1.5.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.5.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.5.3",
                    "method_name": "inst_exists_goal",
                    "s": "l-1"
                },
                {
                    "fact_ids": [
                        "1.5.1"
                    ],
                    "goal_id": "1.5.3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.5.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.5.6",
                    "method_name": "inst_exists_goal",
                    "s": "l+1"
                },
                {
                    "fact_ids": [
                        "1.5.2"
                    ],
                    "goal_id": "1.5.6",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.5.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_def"
                },
                {
                    "case": "trivial_limit net",
                    "goal_id": "4.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "inst_exists_goal",
                    "s": "(0::real)"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "4.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "right_or_exists_thm"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sup_exists"
                },
                {
                    "fact_ids": [
                        "4.0"
                    ],
                    "goal_id": "4.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "4.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.0",
                        "4.2.1.0"
                    ],
                    "goal_id": "4.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "4.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.2.0"
                    ],
                    "goal_id": "4.2.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.2.2.0"
                    ],
                    "goal_id": "4.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4.2.2.1"
                    ],
                    "goal_id": "4.2.2.3",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "fact_ids": [
                        "4.2.2.2"
                    ],
                    "goal_id": "4.2.2.5",
                    "method_name": "exists_elim",
                    "names": "c"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.2.2.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.2.2.7.0"
                    ],
                    "goal_id": "4.2.2.7.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.2.2.7.1"
                    ],
                    "goal_id": "4.2.2.7.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.2.2.14",
                    "method_name": "inst_exists_goal",
                    "s": "c"
                },
                {
                    "goal_id": "4.2.2.14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.2.2.14",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "4.2.2.14.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "4.2.2.6"
                    ],
                    "goal_id": "4.2.2.14.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "4.2.2.14.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "4.2.2.14.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.2.2.14.2.1",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx1. x ≤ f x1)",
                    "theorem": "eventually_mono"
                },
                {
                    "fact_ids": [
                        "4.2.2.14.2.0"
                    ],
                    "goal_id": "4.2.2.14.2.1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward1"
            ],
            "name": "has_liminf_le",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_liminf f l net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "has_liminf g m net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf g m net ⊢ has_liminf g m net"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "eventually (λx. f x ≤ g x) net",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. f x ≤ g x) net ⊢ eventually (λx. f x ≤ g x) net"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ∀x. ¬(m < x ∧ x < l)"
                },
                {
                    "args": "c, real",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ m < c ∧ c < l ⟶ false"
                },
                {
                    "args": "m < c ∧ c < l",
                    "id": "4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < c ∧ c < l ⊢ m < c ∧ c < l"
                },
                {
                    "args": "conjD1, {}, {A: m < c, B: c < l}",
                    "id": "4.1.1",
                    "prevs": [
                        "4.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m < c ∧ c < l ⊢ m < c"
                },
                {
                    "args": "conjD2, {}, {A: m < c, B: c < l}",
                    "id": "4.1.2",
                    "prevs": [
                        "4.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "m < c ∧ c < l ⊢ c < l"
                },
                {
                    "args": "",
                    "id": "4.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l ⊢ eventually (λx. c < f x) net ⟶ false"
                },
                {
                    "args": "eventually (λx. c < f x) net",
                    "id": "4.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. c < f x) net ⊢ eventually (λx. c < f x) net"
                },
                {
                    "args": "has_liminf_not_lbound",
                    "id": "4.1.3.1",
                    "prevs": [
                        "2",
                        "1",
                        "4.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf g m net, m < c ∧ c < l ⊢ ¬(eventually (λx. c ≤ g x) net)"
                },
                {
                    "args": "∀x. c < f x ∧ f x ≤ g x ⟶ c ≤ g x",
                    "id": "4.1.3.2",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. c < f x ∧ f x ≤ g x ⟶ c ≤ g x"
                },
                {
                    "args": "always_eventually, {a: 'a}, {P: λx. c < f x ∧ f x ≤ g x ⟶ c ≤ g x, net: net}",
                    "id": "4.1.3.3",
                    "prevs": [
                        "4.1.3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l, eventually (λx. c < f x) net ⊢ eventually (λx. c < f x ∧ f x ≤ g x ⟶ c ≤ g x) net"
                },
                {
                    "args": "conjI",
                    "id": "4.1.3.4",
                    "prevs": [
                        "4.1.3.0",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l, eventually (λx. c < f x) net ⊢ eventually (λx. c < f x) net ∧ eventually (λx. f x ≤ g x) net"
                },
                {
                    "args": "eventually_and, eventually (λx. c < f x ∧ f x ≤ g x) net",
                    "id": "4.1.3.5",
                    "prevs": [
                        "4.1.3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l, eventually (λx. c < f x) net ⊢ eventually (λx. c < f x ∧ f x ≤ g x) net"
                },
                {
                    "args": "eventually_mp",
                    "id": "4.1.3.6",
                    "prevs": [
                        "4.1.3.3",
                        "4.1.3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l, eventually (λx. c < f x) net ⊢ eventually (λx. c ≤ g x) net"
                },
                {
                    "args": "negE",
                    "id": "4.1.3.7",
                    "prevs": [
                        "4.1.3.1",
                        "4.1.3.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l, eventually (λx. c < f x) net ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.1.3.8",
                    "prevs": [
                        "4.1.3.0",
                        "4.1.3.7"
                    ],
                    "rule": "intros",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l ⊢ eventually (λx. c < f x) net ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.1.4",
                    "prevs": [
                        "4.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l ⊢ ¬(eventually (λx. c < f x) net)"
                },
                {
                    "args": "has_liminf_eventually_lbound",
                    "id": "4.1.5",
                    "prevs": [
                        "2",
                        "0",
                        "4.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(trivial_limit net), has_liminf f l net, m < c ∧ c < l ⊢ eventually (λx. c < f x) net"
                },
                {
                    "args": "negE",
                    "id": "4.1.6",
                    "prevs": [
                        "4.1.4",
                        "4.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net, m < c ∧ c < l ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.1.7",
                    "prevs": [
                        "4.1.0",
                        "4.1.6"
                    ],
                    "rule": "intros",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ m < c ∧ c < l ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ¬(m < c ∧ c < l)"
                },
                {
                    "args": "",
                    "id": "4.3",
                    "prevs": [
                        "4.0",
                        "4.2"
                    ],
                    "rule": "intros",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ∀x. ¬(m < x ∧ x < l)"
                },
                {
                    "args": "not_exists, ¬(∃x. m < x ∧ x < l)",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ¬(∃x. m < x ∧ x < l)"
                },
                {
                    "args": "real_lt_between, ¬(m < l)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ ¬(m < l)"
                },
                {
                    "args": "real_not_lt, l ≤ m",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_liminf f l net, has_liminf g m net, ¬(trivial_limit net), eventually (λx. f x ≤ g x) net ⊢ l ≤ m"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf f l net ⟶ has_liminf g m net ⟶ ¬(trivial_limit net) ⟶ eventually (λx. f x ≤ g x) net ⟶ l ≤ m"
                }
            ],
            "prop": [
                "has_liminf f l net ",
                "⟶ has_liminf g m net ",
                "   ⟶ ¬(trivial_limit net) ⟶ eventually (λx. f x ≤ g x) net ⟶ l ≤ m"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_lt_between"
                },
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1.1",
                    "method_name": "apply_backward_step",
                    "param_A": "eventually (λx. c < f x) net",
                    "theorem": "negE"
                },
                {
                    "fact_ids": [
                        "4.1.0"
                    ],
                    "goal_id": "4.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "4.1.0"
                    ],
                    "goal_id": "4.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "4.1.3.1",
                    "method_name": "apply_backward_step",
                    "param_A": "eventually (λx. c ≤ g x) net",
                    "theorem": "negE"
                },
                {
                    "fact_ids": [
                        "2",
                        "1",
                        "4.1.1"
                    ],
                    "goal_id": "4.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "has_liminf_not_lbound"
                },
                {
                    "goal_id": "4.1.3.2",
                    "method_name": "apply_backward_step",
                    "param_P": "(λx. c < f x & f x ≤ g x) ",
                    "theorem": "eventually_mp"
                },
                {
                    "goal_id": "4.1.3.2",
                    "method_name": "apply_backward_step",
                    "theorem": "always_eventually"
                },
                {
                    "goal_id": "4.1.3.2",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.1.3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_and"
                },
                {
                    "goal_id": "4.1.3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2",
                        "0",
                        "4.1.2"
                    ],
                    "goal_id": "4.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "has_liminf_eventually_lbound"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real",
                "g": "'a ⇒ real",
                "l": "real",
                "m": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_backward1",
                "hint_forward"
            ],
            "name": "has_liminf_lbound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "eventually (λx. b ≤ f x) net",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "eventually (λx. b ≤ f x) net ⊢ eventually (λx. b ≤ f x) net"
                },
                {
                    "args": "has_liminf f l net",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf f l net ⊢ has_liminf f l net"
                },
                {
                    "args": "¬(trivial_limit net)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(trivial_limit net) ⊢ ¬(trivial_limit net)"
                },
                {
                    "args": "reallim_const, {a: 'a}, {a: b, net: net}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ tendsto_real (λx. b) b net"
                },
                {
                    "args": "reallim_imp_has_liminf",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. b ≤ f x) net, has_liminf f l net, ¬(trivial_limit net) ⊢ has_liminf (λx. b) b net"
                },
                {
                    "args": "has_liminf_le",
                    "id": "5",
                    "prevs": [
                        "4",
                        "1",
                        "2",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "eventually (λx. b ≤ f x) net, has_liminf f l net, ¬(trivial_limit net) ⊢ b ≤ l"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ eventually (λx. b ≤ f x) net ⟶ has_liminf f l net ⟶ ¬(trivial_limit net) ⟶ b ≤ l"
                }
            ],
            "prop": "eventually (λx. b ≤ f x) net ⟶ has_liminf f l net ⟶ ¬(trivial_limit net) ⟶ b ≤ l",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "param_f": "(%x::'a. b)",
                    "param_g": "f",
                    "param_net": "net",
                    "theorem": "has_liminf_le"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_imp_has_liminf"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "reallim_const"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "f": "'a ⇒ real",
                "l": "real",
                "net": "'a net"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_liminf_sequentially",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ trivial_limit sequentially ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "trivial_limit sequentially",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "trivial_limit sequentially ⊢ trivial_limit sequentially"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)), trivial_limit sequentially ⊢ ¬((∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "¬((∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)))",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬((∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))) ⊢ ¬((∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)))"
                },
                {
                    "args": "trivial_limit_sequentially",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)), trivial_limit sequentially ⊢ ¬((∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))) ⟶ ¬(trivial_limit sequentially)"
                },
                {
                    "args": "contrapositive",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially, trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ trivial_limit sequentially ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "conjD1",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)}",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "not_exists",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ (∀x. ¬(∀n. x ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "not_all",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ c ≤ a x1))"
                },
                {
                    "args": "not_imp",
                    "id": "0.2.5",
                    "prevs": [
                        "0.2.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(c ≤ a x1))"
                },
                {
                    "args": "real_not_lt",
                    "id": "0.2.6",
                    "prevs": [
                        "0.2.5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬¬(a x1 < c))"
                },
                {
                    "args": "double_neg",
                    "id": "0.2.7",
                    "prevs": [
                        "0.2.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ a x1 < c)"
                },
                {
                    "args": "conjI",
                    "id": "0.2.8",
                    "prevs": [
                        "0.2.1",
                        "0.2.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)), (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.2.9",
                    "prevs": [
                        "0.2.0",
                        "0.2.8"
                    ],
                    "rule": "intros",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⟶ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⟶ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "conjD1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjD2",
                    "id": "1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ a x1 < c)"
                },
                {
                    "args": "double_neg, ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬¬(a x1 < c))",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬¬(a x1 < c))"
                },
                {
                    "args": "real_not_lt, ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(c ≤ a x1))",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. x ≤ x1 ∧ ¬(c ≤ a x1))"
                },
                {
                    "args": "not_imp, ∀c. l < c ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ c ≤ a x1))",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀x. ∃x1. ¬(x ≤ x1 ⟶ c ≤ a x1))"
                },
                {
                    "args": "not_all, ∀c. l < c ⟶ (∀x. ¬(∀n. x ≤ n ⟶ c ≤ a n))",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀x. ¬(∀n. x ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "not_exists, ∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjI",
                    "id": "1.8",
                    "prevs": [
                        "1.1",
                        "1.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "disjI2, {}, {A: trivial_limit sequentially, B: (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))}",
                    "id": "1.9",
                    "prevs": [
                        "1.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)) ⟶ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "eventually_sequentially, trivial_limit sequentially ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) sequentially) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) sequentially)) ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ trivial_limit sequentially ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) sequentially) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) sequentially)) ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "has_liminf, has_liminf a l sequentially ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_liminf a l sequentially ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf a l sequentially ⟷ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                }
            ],
            "prop": [
                "has_liminf a l sequentially ⟷ ",
                "(∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ ",
                "(∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trivial_limit_sequentially"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.2.2"
                    ],
                    "goal_id": "0.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "fact_ids": [
                        "0.2.3"
                    ],
                    "goal_id": "0.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "0.2.4"
                    ],
                    "goal_id": "0.2.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "0.2.5"
                    ],
                    "goal_id": "0.2.6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "fact_ids": [
                        "0.2.6"
                    ],
                    "goal_id": "0.2.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "has_liminf_sequentially_within",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ finite k ⟶ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "finite k",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ⊢ has_liminf a l (within sequentially k) ⟶ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "has_liminf a l (within sequentially k)",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf a l (within sequentially k) ⊢ has_liminf a l (within sequentially k)"
                },
                {
                    "args": "disjI1, {}, {A: finite k, B: (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))}",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k, has_liminf a l (within sequentially k) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "finite k ⊢ has_liminf a l (within sequentially k) ⟶ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "finite k ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ has_liminf a l (within sequentially k)"
                },
                {
                    "args": "finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "trivial_limit_sequentially_within, trivial_limit (within sequentially k)",
                    "id": "0.2.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite k, finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ trivial_limit (within sequentially k)"
                },
                {
                    "args": "disjI1, {}, {A: trivial_limit (within sequentially k), B: (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k)))}",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "finite k, finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ trivial_limit (within sequentially k) ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k)))"
                },
                {
                    "args": "has_liminf, has_liminf a l (within sequentially k)",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "finite k, finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ has_liminf a l (within sequentially k)"
                },
                {
                    "args": "",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.0",
                        "0.2.3"
                    ],
                    "rule": "intros",
                    "th": "finite k ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ has_liminf a l (within sequentially k)"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ⊢ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite k ⟶ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(finite k) ⟶ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "¬(finite k)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(finite k) ⊢ ¬(finite k)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟶ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ finite k ⟶ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "finite k",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))}",
                    "id": "1.1.1.1",
                    "prevs": [
                        "1.0",
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.1.1.2",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ finite k ⟶ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟶ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))}",
                    "id": "1.1.2.1",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "",
                    "id": "1.1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "c, real",
                    "id": "1.1.2.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.1.2.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "",
                    "id": "1.1.2.2.2",
                    "prevs": [
                        "1.1.2.1",
                        "1.1.2.2.1"
                    ],
                    "rule": "apply_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), c < l ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "",
                    "id": "1.1.2.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), c < l ⊢ finite k ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "finite k",
                    "id": "1.1.2.2.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n}",
                    "id": "1.1.2.2.3.1",
                    "prevs": [
                        "1.0",
                        "1.1.2.2.3.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "",
                    "id": "1.1.2.2.3.2",
                    "prevs": [
                        "1.1.2.2.3.0",
                        "1.1.2.2.3.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), c < l ⊢ finite k ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n) ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)",
                    "id": "1.1.2.2.4",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n) ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "disjE",
                    "id": "1.1.2.2.5",
                    "prevs": [
                        "1.1.2.2.2",
                        "1.1.2.2.3",
                        "1.1.2.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), c < l, ¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "",
                    "id": "1.1.2.2.6",
                    "prevs": [
                        "1.1.2.2.0",
                        "1.1.2.2.1",
                        "1.1.2.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))}",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "",
                    "id": "1.1.2.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)"
                },
                {
                    "args": "c, real",
                    "id": "1.1.2.4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.1.2.4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.2",
                    "prevs": [
                        "1.1.2.3",
                        "1.1.2.4.1"
                    ],
                    "rule": "apply_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.1.2.4.3",
                    "prevs": [
                        "1.1.2.4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ¬(finite k) ∧ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjD2, {}, {A: ¬(finite k), B: ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)}",
                    "id": "1.1.2.4.4",
                    "prevs": [
                        "1.1.2.4.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "not_exists",
                    "id": "1.1.2.4.5",
                    "prevs": [
                        "1.1.2.4.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "not_all",
                    "id": "1.1.2.4.6",
                    "prevs": [
                        "1.1.2.4.5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ c ≤ a x1)"
                },
                {
                    "args": "not_imp",
                    "id": "1.1.2.4.7",
                    "prevs": [
                        "1.1.2.4.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ c ≤ a x1)"
                },
                {
                    "args": "not_imp",
                    "id": "1.1.2.4.8",
                    "prevs": [
                        "1.1.2.4.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(c ≤ a x1)"
                },
                {
                    "args": "real_less_def, ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c",
                    "id": "1.1.2.4.9",
                    "prevs": [
                        "1.1.2.4.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), l < c ⊢ ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c"
                },
                {
                    "args": "",
                    "id": "1.1.2.4.10",
                    "prevs": [
                        "1.1.2.4.0",
                        "1.1.2.4.1",
                        "1.1.2.4.9"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ ∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.2",
                        "1.1.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.1.2.6",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟶ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "disjE",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))), ¬(finite k) ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))}",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟶ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ finite k ⟶ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "finite k",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "finite k ⊢ finite k"
                },
                {
                    "args": "negE_gen, {}, {A: finite k, C: (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))}",
                    "id": "1.2.1.1",
                    "prevs": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ finite k ⟶ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "c, real",
                    "id": "1.2.2.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.2.2.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)}",
                    "id": "1.2.2.1.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "c",
                    "id": "1.2.2.1.3",
                    "prevs": [
                        "1.2.2.1.2",
                        "1.2.2.1.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), ¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), c < l ⊢ ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: ∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n}",
                    "id": "1.2.2.1.4",
                    "prevs": [
                        "1.2.2.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), c < l ⊢ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.5",
                    "prevs": [
                        "1.2.2.1.0",
                        "1.2.2.1.1",
                        "1.2.2.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "",
                    "id": "1.2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "c, real",
                    "id": "1.2.2.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.2.2.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)}",
                    "id": "1.2.2.2.2",
                    "prevs": [
                        "1.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)"
                },
                {
                    "args": "c",
                    "id": "1.2.2.2.3",
                    "prevs": [
                        "1.2.2.2.2",
                        "1.2.2.2.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), ¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c"
                },
                {
                    "args": "double_neg, ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬¬(a x1 < c)",
                    "id": "1.2.2.2.4",
                    "prevs": [
                        "1.2.2.2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬¬(a x1 < c)"
                },
                {
                    "args": "real_not_lt, ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(c ≤ a x1)",
                    "id": "1.2.2.2.5",
                    "prevs": [
                        "1.2.2.2.4"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀x. ∃x1. x1 ∈ k ∧ x ≤ x1 ∧ ¬(c ≤ a x1)"
                },
                {
                    "args": "not_imp, ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ c ≤ a x1)",
                    "id": "1.2.2.2.6",
                    "prevs": [
                        "1.2.2.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀x. ∃x1. x1 ∈ k ∧ ¬(x ≤ x1 ⟶ c ≤ a x1)"
                },
                {
                    "args": "not_imp, ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ c ≤ a x1)",
                    "id": "1.2.2.2.7",
                    "prevs": [
                        "1.2.2.2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀x. ∃x1. ¬(x1 ∈ k ⟶ x ≤ x1 ⟶ c ≤ a x1)"
                },
                {
                    "args": "not_all, ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ c ≤ a n)",
                    "id": "1.2.2.2.8",
                    "prevs": [
                        "1.2.2.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ∀x. ¬(∀n. n ∈ k ⟶ x ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "not_exists, ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)",
                    "id": "1.2.2.2.9",
                    "prevs": [
                        "1.2.2.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.2.10",
                    "prevs": [
                        "1.0",
                        "1.2.2.2.9"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ¬(finite k) ∧ ¬(∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "de_morgan_thm2, ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))",
                    "id": "1.2.2.2.11",
                    "prevs": [
                        "1.2.2.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), l < c ⊢ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "",
                    "id": "1.2.2.2.12",
                    "prevs": [
                        "1.2.2.2.0",
                        "1.2.2.2.1",
                        "1.2.2.2.11"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ ∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.1",
                        "1.2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.3"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "disjE",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)), ¬(finite k) ⊢ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "disjI2, {}, {A: finite k, B: (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))}",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(finite k), finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⊢ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "",
                    "id": "1.2.5",
                    "prevs": [
                        "1.2.0",
                        "1.2.4"
                    ],
                    "rule": "intros",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c)) ⟶ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)))"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(finite k) ⊢ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(finite k) ⟶ finite k ∨ (∀c. c < l ⟶ finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ ¬(finite k ∨ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "eventually_sequentially_within, ¬(finite k) ⟶ finite k ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(finite k) ⟶ finite k ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "trivial_limit_sequentially_within, ¬(finite k) ⟶ trivial_limit (within sequentially k) ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(finite k) ⟶ trivial_limit (within sequentially k) ∨ (∀c. c < l ⟶ eventually (λx. c ≤ a x) (within sequentially k)) ∧ (∀c. l < c ⟶ ¬(eventually (λx. c ≤ a x) (within sequentially k))) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "has_liminf, ¬(finite k) ⟶ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(finite k) ⟶ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "classical_cases",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf a l (within sequentially k) ⟷ finite k ∨ (∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
                }
            ],
            "prop": [
                "has_liminf a l (within sequentially k) ⟷ ",
                "finite k ∨ ",
                "(∀c. c < l ⟶ (∃N. ∀n. n ∈ k ⟶ N ≤ n ⟶ c ≤ a n)) ∧ ",
                "(∀c. l < c ⟶ (∀N. ∃n. n ∈ k ∧ N ≤ n ∧ a n < c))"
            ],
            "steps": [
                {
                    "case": "finite k",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_sequentially_within"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "trivial_limit_sequentially_within"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "eventually_sequentially_within"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.1.2.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.1.2.1",
                        "1.1.2.2.1"
                    ],
                    "goal_id": "1.1.2.2.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.2.2.2"
                    ],
                    "goal_id": "1.1.2.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.2.2.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.2.2.3.0"
                    ],
                    "goal_id": "1.1.2.2.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.1.2.4",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.1.2.3",
                        "1.1.2.4.1"
                    ],
                    "goal_id": "1.1.2.4.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.2"
                    ],
                    "goal_id": "1.1.2.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.3"
                    ],
                    "goal_id": "1.1.2.4.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.4"
                    ],
                    "goal_id": "1.1.2.4.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.5"
                    ],
                    "goal_id": "1.1.2.4.6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.6"
                    ],
                    "goal_id": "1.1.2.4.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1.1.2.4.7"
                    ],
                    "goal_id": "1.1.2.4.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.1.2.4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_less_def"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.2.2.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.2"
                    ],
                    "goal_id": "1.2.2.1.3",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2.2.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.2.2.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1.2.2.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.2.2.0"
                    ],
                    "goal_id": "1.2.2.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_not_lt"
                },
                {
                    "goal_id": "1.2.2.2.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.2.2.2.2"
                    ],
                    "goal_id": "1.2.2.2.3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "k": "nat set",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "has_liminf_sequentially_imp_reallim_inf",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "has_liminf a l sequentially",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf a l sequentially ⊢ has_liminf a l sequentially"
                },
                {
                    "args": "has_liminf_sequentially",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "has_liminf a l sequentially ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "conjD1, {}, {A: ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially ⊢ ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "conjD2, {}, {A: ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n), B: ∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)}",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially ⊢ ∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf a l sequentially ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "e, real",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR e"
                },
                {
                    "args": "0 < e",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 < e ⊢ 0 < e"
                },
                {
                    "args": "l - e / 2",
                    "id": "4.2",
                    "prevs": [
                        "2"
                    ],
                    "rule": "forall_elim",
                    "th": "has_liminf a l sequentially ⊢ l - e / 2 < l ⟶ (∃N. ∀n. N ≤ n ⟶ l - e / 2 ≤ a n)"
                },
                {
                    "args": "l - e / 2 < l",
                    "id": "4.3",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l - e / 2 < l"
                },
                {
                    "args": "",
                    "id": "4.4",
                    "prevs": [
                        "4.2",
                        "4.3"
                    ],
                    "rule": "apply_fact",
                    "th": "has_liminf a l sequentially, 0 < e ⊢ ∃N. ∀n. N ≤ n ⟶ l - e / 2 ≤ a n"
                },
                {
                    "args": "N, nat",
                    "id": "4.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ l - e / 2 ≤ a n",
                    "id": "4.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ l - e / 2 ≤ a n ⊢ ∀n. N ≤ n ⟶ l - e / 2 ≤ a n"
                },
                {
                    "args": "l + e",
                    "id": "4.7",
                    "prevs": [
                        "3"
                    ],
                    "rule": "forall_elim",
                    "th": "has_liminf a l sequentially ⊢ l < l + e ⟶ (∀N. ∃n. N ≤ n ∧ a n < l + e)"
                },
                {
                    "args": "l < l + e",
                    "id": "4.8",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l < l + e"
                },
                {
                    "args": "",
                    "id": "4.9",
                    "prevs": [
                        "4.7",
                        "4.8"
                    ],
                    "rule": "apply_fact",
                    "th": "has_liminf a l sequentially, 0 < e ⊢ ∀N. ∃n. N ≤ n ∧ a n < l + e"
                },
                {
                    "args": "",
                    "id": "4.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n ⊢ ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "n, nat",
                    "id": "4.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "4.10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "n",
                    "id": "4.10.2",
                    "prevs": [
                        "4.9"
                    ],
                    "rule": "forall_elim",
                    "th": "has_liminf a l sequentially, 0 < e ⊢ ∃n1. n ≤ n1 ∧ a n1 < l + e"
                },
                {
                    "args": "M, nat",
                    "id": "4.10.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR M"
                },
                {
                    "args": "n ≤ M ∧ a M < l + e",
                    "id": "4.10.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ M ∧ a M < l + e ⊢ n ≤ M ∧ a M < l + e"
                },
                {
                    "args": "l - e < l - e / 2",
                    "id": "4.10.5",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "z3",
                    "th": "0 < e ⊢ l - e < l - e / 2"
                },
                {
                    "args": "",
                    "id": "4.10.6",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ (∀x. x ∈ image a ({m. m ≥ n}) ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false",
                    "id": "4.10.6.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false"
                },
                {
                    "args": "a n",
                    "id": "4.10.6.1",
                    "prevs": [
                        "4.10.6.0"
                    ],
                    "rule": "forall_elim",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ a n ∈ image a ({m. m ≥ n}) ⟷ false"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "4.10.6.2",
                    "prevs": [
                        "4.10.6.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ false ⟷ a n ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "eq_refl, {a: real}, {x: a n}",
                    "id": "4.10.6.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a n = a n"
                },
                {
                    "args": "n ≥ n",
                    "id": "4.10.6.4",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n ≥ n"
                },
                {
                    "args": "member_collect, n ∈ {m. m ≥ n}",
                    "id": "4.10.6.5",
                    "prevs": [
                        "4.10.6.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e, ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "conjI",
                    "id": "4.10.6.6",
                    "prevs": [
                        "4.10.6.3",
                        "4.10.6.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e, ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ a n = a n ∧ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "exI, {a: nat}, {P: λx. a n = a x ∧ x ∈ {m. m ≥ n}, a: n}",
                    "id": "4.10.6.7",
                    "prevs": [
                        "4.10.6.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e, ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ ∃a1. a n = a a1 ∧ a1 ∈ {m. m ≥ n}"
                },
                {
                    "args": "in_image, a n ∈ image a ({m. m ≥ n})",
                    "id": "4.10.6.8",
                    "prevs": [
                        "4.10.6.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e, ∀x. x ∈ image a ({m. m ≥ n}) ⟷ false ⊢ a n ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "false",
                    "id": "4.10.6.9",
                    "prevs": [
                        "4.10.6.2",
                        "4.10.6.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "∀x. x ∈ image a ({m. m ≥ n}) ⟷ false, has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ false"
                },
                {
                    "args": "",
                    "id": "4.10.6.10",
                    "prevs": [
                        "4.10.6.0",
                        "4.10.6.9"
                    ],
                    "rule": "intros",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ (∀x. x ∈ image a ({m. m ≥ n}) ⟷ false) ⟶ false"
                },
                {
                    "args": "member_empty_simp, (∀x. x ∈ image a ({m. m ≥ n}) ⟷ x ∈ ∅) ⟶ false",
                    "id": "4.10.7",
                    "prevs": [
                        "4.10.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ (∀x. x ∈ image a ({m. m ≥ n}) ⟷ x ∈ ∅) ⟶ false"
                },
                {
                    "args": "set_equal_iff, image a ({m. m ≥ n}) = ∅ ⟶ false",
                    "id": "4.10.8",
                    "prevs": [
                        "4.10.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ image a ({m. m ≥ n}) = ∅ ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "4.10.9",
                    "prevs": [
                        "4.10.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ¬(image a ({m. m ≥ n}) = ∅)"
                },
                {
                    "args": "",
                    "id": "4.10.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ l - e / 2 ≤ a x"
                },
                {
                    "args": "m, nat",
                    "id": "4.10.10.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "m ∈ {m1. m1 ≥ n}",
                    "id": "4.10.10.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ∈ {m1. m1 ≥ n} ⊢ m ∈ {m1. m1 ≥ n}"
                },
                {
                    "args": "member_collect",
                    "id": "4.10.10.2",
                    "prevs": [
                        "4.10.10.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m ∈ {m1. m1 ≥ n} ⊢ m ≥ n"
                },
                {
                    "args": "N ≤ m",
                    "id": "4.10.10.3",
                    "prevs": [
                        "4.10.10.2",
                        "4.10.1"
                    ],
                    "rule": "z3",
                    "th": "m ∈ {m1. m1 ≥ n}, N ≤ n ⊢ N ≤ m"
                },
                {
                    "args": "m",
                    "id": "4.10.10.4",
                    "prevs": [
                        "4.6",
                        "4.10.10.3"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. N ≤ n ⟶ l - e / 2 ≤ a n, has_liminf a l sequentially, 0 < e, N ≤ n, n ≤ M ∧ a M < l + e, m ∈ {m1. m1 ≥ n} ⊢ l - e / 2 ≤ a m"
                },
                {
                    "args": "",
                    "id": "4.10.10.5",
                    "prevs": [
                        "4.10.10.0",
                        "4.10.10.1",
                        "4.10.10.4"
                    ],
                    "rule": "intros",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ l - e / 2 ≤ a x"
                },
                {
                    "args": "forall_in_gspec1, ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ l - e / 2 ≤ z",
                    "id": "4.10.11",
                    "prevs": [
                        "4.10.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ l - e / 2 ≤ z"
                },
                {
                    "args": "conj_comm, ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ l - e / 2 ≤ x",
                    "id": "4.10.12",
                    "prevs": [
                        "4.10.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ l - e / 2 ≤ x"
                },
                {
                    "args": "image_def, ∀x. x ∈ image a ({m. m ≥ n}) ⟶ l - e / 2 ≤ x",
                    "id": "4.10.13",
                    "prevs": [
                        "4.10.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∀x. x ∈ image a ({m. m ≥ n}) ⟶ l - e / 2 ≤ x"
                },
                {
                    "args": "real_le_inf",
                    "id": "4.10.14",
                    "prevs": [
                        "4.10.9",
                        "4.10.13"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ l - e / 2 ≤ inf (image a ({m. m ≥ n}))"
                },
                {
                    "args": "real_lte_trans",
                    "id": "4.10.15",
                    "prevs": [
                        "4.10.5",
                        "4.10.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ l - e < inf (image a ({m. m ≥ n}))"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ b ≤ x, a: l - e / 2}",
                    "id": "4.10.16",
                    "prevs": [
                        "4.10.13"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∃a1. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ a1 ≤ x"
                },
                {
                    "args": "eq_refl, {a: real}, {x: a M}",
                    "id": "4.10.17",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a M = a M"
                },
                {
                    "args": "M ≥ n",
                    "id": "4.10.18",
                    "prevs": [
                        "4.10.4"
                    ],
                    "rule": "z3",
                    "th": "n ≤ M ∧ a M < l + e ⊢ M ≥ n"
                },
                {
                    "args": "member_collect, M ∈ {m. m ≥ n}",
                    "id": "4.10.19",
                    "prevs": [
                        "4.10.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ M ∈ {m. m ≥ n}"
                },
                {
                    "args": "conjI",
                    "id": "4.10.20",
                    "prevs": [
                        "4.10.17",
                        "4.10.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ a M = a M ∧ M ∈ {m. m ≥ n}"
                },
                {
                    "args": "exI, {a: nat}, {P: λx. a M = a x ∧ x ∈ {m. m ≥ n}, a: M}",
                    "id": "4.10.21",
                    "prevs": [
                        "4.10.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ ∃a1. a M = a a1 ∧ a1 ∈ {m. m ≥ n}"
                },
                {
                    "args": "in_image, a M ∈ image a ({m. m ≥ n})",
                    "id": "4.10.22",
                    "prevs": [
                        "4.10.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ a M ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "inf_le_element",
                    "id": "4.10.23",
                    "prevs": [
                        "4.10.16",
                        "4.10.22"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ inf (image a ({m. m ≥ n})) ≤ a M"
                },
                {
                    "args": "conjD2",
                    "id": "4.10.24",
                    "prevs": [
                        "4.10.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "n ≤ M ∧ a M < l + e ⊢ a M < l + e"
                },
                {
                    "args": "real_let_trans",
                    "id": "4.10.25",
                    "prevs": [
                        "4.10.23",
                        "4.10.24"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ inf (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "conjI",
                    "id": "4.10.26",
                    "prevs": [
                        "4.10.15",
                        "4.10.25"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ l - e < inf (image a ({m. m ≥ n})) ∧ inf (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "conjI",
                    "id": "4.10.27",
                    "prevs": [
                        "4.1",
                        "4.10.26"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ 0 < e ∧ l - e < inf (image a ({m. m ≥ n})) ∧ inf (image a ({m. m ≥ n})) < l + e"
                },
                {
                    "args": "real_abs_between, abs (inf (image a ({m. m ≥ n})) - l) < e",
                    "id": "4.10.28",
                    "prevs": [
                        "4.10.27"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n, N ≤ n, n ≤ M ∧ a M < l + e ⊢ abs (inf (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "∃n1. n ≤ n1 ∧ a n1 < l + e",
                    "id": "4.10.29",
                    "prevs": [
                        "4.10.0",
                        "4.10.1",
                        "4.10.2",
                        "4.10.3",
                        "4.10.4",
                        "4.10.28"
                    ],
                    "rule": "intros",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n ⊢ ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "exI, {a: nat}, {P: λN. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e, a: N}",
                    "id": "4.11",
                    "prevs": [
                        "4.10"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "has_liminf a l sequentially, 0 < e, ∀n. N ≤ n ⟶ l - e / 2 ≤ a n ⊢ ∃a1. ∀n. a1 ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ l - e / 2 ≤ a n",
                    "id": "4.12",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.4",
                        "4.5",
                        "4.6",
                        "4.11"
                    ],
                    "rule": "intros",
                    "th": "has_liminf a l sequentially ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "reallim_sequentially, tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "has_liminf a l sequentially ⊢ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf a l sequentially ⟶ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                }
            ],
            "prop": [
                "has_liminf a l sequentially ",
                "⟶ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "has_liminf_sequentially"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "reallim_sequentially"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "e"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4.2",
                    "method_name": "forall_elim",
                    "s": "l-e/2"
                },
                {
                    "goal": "l - e / 2 < l",
                    "goal_id": "4.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.2",
                        "4.3"
                    ],
                    "goal_id": "4.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4.4"
                    ],
                    "goal_id": "4.5",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4.7",
                    "method_name": "forall_elim",
                    "s": "l+e"
                },
                {
                    "goal": "l < l + e",
                    "goal_id": "4.8",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.8",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.7",
                        "4.8"
                    ],
                    "goal_id": "4.9",
                    "method_name": "apply_fact"
                },
                {
                    "goal_id": "4.10",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "4.10",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "4.10.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "goal_id": "4.10.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "4.9"
                    ],
                    "goal_id": "4.10.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "4.10.2"
                    ],
                    "goal_id": "4.10.3",
                    "method_name": "exists_elim",
                    "names": "M"
                },
                {
                    "goal_id": "4.10.5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.10.5",
                    "method_name": "apply_backward_step",
                    "param_y": "l-e/2",
                    "theorem": "real_lte_trans"
                },
                {
                    "fact_ids": [
                        "4.1"
                    ],
                    "goal_id": "4.10.5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.10.6",
                    "method_name": "apply_backward_step",
                    "theorem": "real_le_inf"
                },
                {
                    "goal_id": "4.10.6",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "4.10.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "4.10.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "4.10.6",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "4.10.6.0"
                    ],
                    "goal_id": "4.10.6.1",
                    "method_name": "forall_elim",
                    "s": "a n"
                },
                {
                    "fact_ids": [
                        "4.10.6.1"
                    ],
                    "goal_id": "4.10.6.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "4.10.6.2"
                    ],
                    "goal_id": "4.10.6.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "4.10.6.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "4.10.6.3",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "goal_id": "4.10.6.3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.10.6.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "4.10.6.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "4.10.6.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.10.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "4.10.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "4.10.10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "goal_id": "4.10.10",
                    "method_name": "introduction",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "4.6"
                    ],
                    "goal_id": "4.10.10.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "4.10.10.1"
                    ],
                    "goal_id": "4.10.10.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "4.10.10.2",
                        "4.10.1"
                    ],
                    "goal_id": "4.10.10.3",
                    "method_name": "z3"
                },
                {
                    "goal_id": "4.10.16",
                    "method_name": "apply_backward_step",
                    "param_y": "a M",
                    "theorem": "real_let_trans"
                },
                {
                    "goal_id": "4.10.16",
                    "method_name": "apply_backward_step",
                    "theorem": "inf_le_element"
                },
                {
                    "goal_id": "4.10.16",
                    "method_name": "inst_exists_goal",
                    "s": "l - e / 2"
                },
                {
                    "goal_id": "4.10.17",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "4.10.17",
                    "method_name": "inst_exists_goal",
                    "s": "M"
                },
                {
                    "goal_id": "4.10.17",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "4.10.17",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "4.10.18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "4.10.4"
                    ],
                    "goal_id": "4.10.18",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.10.4"
                    ],
                    "goal_id": "4.10.24",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "name": "has_liminf_sequentially_reallim_inf",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ has_liminf a l sequentially ⟶ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "has_liminf a l sequentially",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "has_liminf a l sequentially ⊢ has_liminf a l sequentially"
                },
                {
                    "args": "has_liminf_imp_lbound_le",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially ⊢ ∃b. eventually (λx. b ≤ a x) sequentially"
                },
                {
                    "args": "eventually_lbound_le_sequentially, ∃b. ∀n. b ≤ a n",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "has_liminf a l sequentially ⊢ ∃b. ∀n. b ≤ a n"
                },
                {
                    "args": "has_liminf_sequentially_imp_reallim_inf",
                    "id": "0.3",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially ⊢ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "conjI",
                    "id": "0.4",
                    "prevs": [
                        "0.2",
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "has_liminf a l sequentially ⊢ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf a l sequentially ⟶ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⟶ has_liminf a l sequentially"
                },
                {
                    "args": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e))",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ (∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e))"
                },
                {
                    "args": "conjD2, {}, {A: ∃b. ∀n. b ≤ a n, B: ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)}",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "c, real",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "c < l",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c < l ⊢ c < l"
                },
                {
                    "args": "l - c",
                    "id": "1.2.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "forall_elim",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ 0 < l - c ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c)"
                },
                {
                    "args": "0 < l - c",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "z3",
                    "th": "c < l ⊢ 0 < l - c"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.2",
                        "1.2.3"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l ⊢ ∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c"
                },
                {
                    "args": "N, nat",
                    "id": "1.2.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c",
                    "id": "1.2.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c ⊢ ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c"
                },
                {
                    "args": "",
                    "id": "1.2.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c ⊢ ∀n. N ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "n, nat",
                    "id": "1.2.7.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "N ≤ n",
                    "id": "1.2.7.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "N ≤ n ⊢ N ≤ n"
                },
                {
                    "args": "",
                    "id": "1.2.7.2",
                    "prevs": [
                        "1.2.6",
                        "1.2.7.1"
                    ],
                    "rule": "apply_fact",
                    "th": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ abs (inf (image a ({m. m ≥ n})) - l) < l - c"
                },
                {
                    "args": "real_abs_between",
                    "id": "1.2.7.3",
                    "prevs": [
                        "1.2.7.2"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ 0 < l - c ∧ l - (l - c) < inf (image a ({m. m ≥ n})) ∧ inf (image a ({m. m ≥ n})) < l + (l - c)"
                },
                {
                    "args": "conjD2, {}, {A: 0 < l - c, B: l - (l - c) < inf (image a ({m. m ≥ n})) ∧ inf (image a ({m. m ≥ n})) < l + (l - c)}",
                    "id": "1.2.7.4",
                    "prevs": [
                        "1.2.7.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ l - (l - c) < inf (image a ({m. m ≥ n})) ∧ inf (image a ({m. m ≥ n})) < l + (l - c)"
                },
                {
                    "args": "conjD1, {}, {A: l - (l - c) < inf (image a ({m. m ≥ n})), B: inf (image a ({m. m ≥ n})) < l + (l - c)}",
                    "id": "1.2.7.5",
                    "prevs": [
                        "1.2.7.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ l - (l - c) < inf (image a ({m. m ≥ n}))"
                },
                {
                    "args": "c ≤ l - (l - c)",
                    "id": "1.2.7.6",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ c ≤ l - (l - c)"
                },
                {
                    "args": "real_lt_imp_le",
                    "id": "1.2.7.7",
                    "prevs": [
                        "1.2.7.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ l - (l - c) ≤ inf (image a ({m. m ≥ n}))"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.2.7.8",
                    "prevs": [
                        "1.2.7.6",
                        "1.2.7.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n ⊢ c ≤ inf (image a ({m. m ≥ n}))"
                },
                {
                    "args": "conjD1, {}, {A: ∃b. ∀n. b ≤ a n, B: ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)}",
                    "id": "1.2.7.9",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∃b. ∀n. b ≤ a n"
                },
                {
                    "args": "b, real",
                    "id": "1.2.7.10",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀n. b ≤ a n",
                    "id": "1.2.7.11",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. b ≤ a n ⊢ ∀n. b ≤ a n"
                },
                {
                    "args": "",
                    "id": "1.2.7.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ b ≤ a x"
                },
                {
                    "args": "x, nat",
                    "id": "1.2.7.12.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {m. m ≥ n}",
                    "id": "1.2.7.12.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {m. m ≥ n} ⊢ x ∈ {m. m ≥ n}"
                },
                {
                    "args": "x",
                    "id": "1.2.7.12.2",
                    "prevs": [
                        "1.2.7.11"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. b ≤ a n ⊢ b ≤ a x"
                },
                {
                    "args": "",
                    "id": "1.2.7.12.3",
                    "prevs": [
                        "1.2.7.12.0",
                        "1.2.7.12.1",
                        "1.2.7.12.2"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∀x. x ∈ {m. m ≥ n} ⟶ b ≤ a x"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ {m. m ≥ n} ⟶ b ≤ a x, a: b}",
                    "id": "1.2.7.13",
                    "prevs": [
                        "1.2.7.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∃a1. ∀x. x ∈ {m. m ≥ n} ⟶ a1 ≤ a x"
                },
                {
                    "args": "forall_in_gspec1, ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ b ≤ z",
                    "id": "1.2.7.14",
                    "prevs": [
                        "1.2.7.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∃b. ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ n}} ⟶ b ≤ z"
                },
                {
                    "args": "conj_comm, ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ b ≤ x",
                    "id": "1.2.7.15",
                    "prevs": [
                        "1.2.7.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∃b. ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ n} ∧ y = a x1} ⟶ b ≤ x"
                },
                {
                    "args": "image_def, ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ b ≤ x",
                    "id": "1.2.7.16",
                    "prevs": [
                        "1.2.7.15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∃b. ∀x. x ∈ image a ({m. m ≥ n}) ⟶ b ≤ x"
                },
                {
                    "args": "eq_refl, {a: real}, {x: a n}",
                    "id": "1.2.7.17",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a n = a n"
                },
                {
                    "args": "n ≥ n",
                    "id": "1.2.7.18",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n ≥ n"
                },
                {
                    "args": "member_collect, n ∈ {m. m ≥ n}",
                    "id": "1.2.7.19",
                    "prevs": [
                        "1.2.7.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "conjI",
                    "id": "1.2.7.20",
                    "prevs": [
                        "1.2.7.17",
                        "1.2.7.19"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ a n = a n ∧ n ∈ {m. m ≥ n}"
                },
                {
                    "args": "exI, {a: nat}, {P: λx. a n = a x ∧ x ∈ {m. m ≥ n}, a: n}",
                    "id": "1.2.7.21",
                    "prevs": [
                        "1.2.7.20"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ ∃a1. a n = a a1 ∧ a1 ∈ {m. m ≥ n}"
                },
                {
                    "args": "in_image, a n ∈ image a ({m. m ≥ n})",
                    "id": "1.2.7.22",
                    "prevs": [
                        "1.2.7.21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ a n ∈ image a ({m. m ≥ n})"
                },
                {
                    "args": "inf_le_element",
                    "id": "1.2.7.23",
                    "prevs": [
                        "1.2.7.16",
                        "1.2.7.22"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ inf (image a ({m. m ≥ n})) ≤ a n"
                },
                {
                    "args": "real_le_trans",
                    "id": "1.2.7.24",
                    "prevs": [
                        "1.2.7.8",
                        "1.2.7.23"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c, N ≤ n, ∀n. b ≤ a n ⊢ c ≤ a n"
                },
                {
                    "args": "∃b. ∀n. b ≤ a n",
                    "id": "1.2.7.25",
                    "prevs": [
                        "1.2.7.0",
                        "1.2.7.1",
                        "1.2.7.9",
                        "1.2.7.10",
                        "1.2.7.11",
                        "1.2.7.24"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c ⊢ ∀n. N ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "exI, {a: nat}, {P: λN. ∀n. N ≤ n ⟶ c ≤ a n, a: N}",
                    "id": "1.2.8",
                    "prevs": [
                        "1.2.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), c < l, ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c ⊢ ∃a1. ∀n. a1 ≤ n ⟶ c ≤ a n"
                },
                {
                    "args": "∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < l - c",
                    "id": "1.2.9",
                    "prevs": [
                        "1.2.0",
                        "1.2.1",
                        "1.2.4",
                        "1.2.5",
                        "1.2.6",
                        "1.2.8"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)"
                },
                {
                    "args": "c, real",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "l < c",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "l < c ⊢ l < c"
                },
                {
                    "args": "",
                    "id": "1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c ⊢ ∀N. ∃n. N ≤ n ∧ a n < c"
                },
                {
                    "args": "N, nat",
                    "id": "1.3.2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR N"
                },
                {
                    "args": "c - l",
                    "id": "1.3.2.1",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "forall_elim",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ 0 < c - l ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l)"
                },
                {
                    "args": "0 < c - l",
                    "id": "1.3.2.2",
                    "prevs": [
                        "1.3.1"
                    ],
                    "rule": "z3",
                    "th": "l < c ⊢ 0 < c - l"
                },
                {
                    "args": "",
                    "id": "1.3.2.3",
                    "prevs": [
                        "1.3.2.1",
                        "1.3.2.2"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c ⊢ ∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l"
                },
                {
                    "args": "M, nat",
                    "id": "1.3.2.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR M"
                },
                {
                    "args": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l",
                    "id": "1.3.2.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l"
                },
                {
                    "args": "inf_approach, {}, {c: c, s: image a ({m. m ≥ max N M})}",
                    "id": "1.3.2.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(image a ({m. m ≥ max N M}) = ∅) ⟶ (∃b. ∀x. x ∈ image a ({m. m ≥ max N M}) ⟶ b ≤ x) ⟶ inf (image a ({m. m ≥ max N M})) < c ⟶ (∃x. x ∈ image a ({m. m ≥ max N M}) ∧ x < c)"
                },
                {
                    "args": "",
                    "id": "1.3.2.7",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ (∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false) ⟶ false"
                },
                {
                    "args": "∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false",
                    "id": "1.3.2.7.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false ⊢ ∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false"
                },
                {
                    "args": "member_collect",
                    "id": "1.3.2.7.1",
                    "prevs": [
                        "1.3.2.7.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false ⊢ ∀x. (∃x1. x = a x1 ∧ x1 ∈ {m. m ≥ max N M}) ⟷ false"
                },
                {
                    "args": "member_collect",
                    "id": "1.3.2.7.2",
                    "prevs": [
                        "1.3.2.7.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false ⊢ ∀x. (∃x1. x = a x1 ∧ x1 ≥ max N M) ⟷ false"
                },
                {
                    "args": "false",
                    "id": "1.3.2.7.3",
                    "prevs": [
                        "1.3.2.7.2"
                    ],
                    "rule": "z3",
                    "th": "∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false ⊢ false"
                },
                {
                    "args": "",
                    "id": "1.3.2.7.4",
                    "prevs": [
                        "1.3.2.7.0",
                        "1.3.2.7.3"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ (∀x. x ∈ {y. ∃x1. y = a x1 ∧ x1 ∈ {m. m ≥ max N M}} ⟷ false) ⟶ false"
                },
                {
                    "args": "conj_comm, (∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ max N M} ∧ y = a x1} ⟷ false) ⟶ false",
                    "id": "1.3.2.8",
                    "prevs": [
                        "1.3.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ (∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ max N M} ∧ y = a x1} ⟷ false) ⟶ false"
                },
                {
                    "args": "image_def, (∀x. x ∈ image a ({m. m ≥ max N M}) ⟷ false) ⟶ false",
                    "id": "1.3.2.9",
                    "prevs": [
                        "1.3.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ (∀x. x ∈ image a ({m. m ≥ max N M}) ⟷ false) ⟶ false"
                },
                {
                    "args": "member_empty_simp, (∀x. x ∈ image a ({m. m ≥ max N M}) ⟷ x ∈ ∅) ⟶ false",
                    "id": "1.3.2.10",
                    "prevs": [
                        "1.3.2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ (∀x. x ∈ image a ({m. m ≥ max N M}) ⟷ x ∈ ∅) ⟶ false"
                },
                {
                    "args": "set_equal_iff, image a ({m. m ≥ max N M}) = ∅ ⟶ false",
                    "id": "1.3.2.11",
                    "prevs": [
                        "1.3.2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ image a ({m. m ≥ max N M}) = ∅ ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "1.3.2.12",
                    "prevs": [
                        "1.3.2.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ ¬(image a ({m. m ≥ max N M}) = ∅)"
                },
                {
                    "args": "conjD1, {}, {A: ∃b. ∀n. b ≤ a n, B: ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)}",
                    "id": "1.3.2.13",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∃b. ∀n. b ≤ a n"
                },
                {
                    "args": "b, real",
                    "id": "1.3.2.14",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "∀n. b ≤ a n",
                    "id": "1.3.2.15",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. b ≤ a n ⊢ ∀n. b ≤ a n"
                },
                {
                    "args": "",
                    "id": "1.3.2.16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∀x. x ∈ {m. m ≥ max N M} ⟶ b ≤ a x"
                },
                {
                    "args": "n, nat",
                    "id": "1.3.2.16.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n ∈ {m. m ≥ max N M}",
                    "id": "1.3.2.16.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ∈ {m. m ≥ max N M} ⊢ n ∈ {m. m ≥ max N M}"
                },
                {
                    "args": "n",
                    "id": "1.3.2.16.2",
                    "prevs": [
                        "1.3.2.15"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀n. b ≤ a n ⊢ b ≤ a n"
                },
                {
                    "args": "",
                    "id": "1.3.2.16.3",
                    "prevs": [
                        "1.3.2.16.0",
                        "1.3.2.16.1",
                        "1.3.2.16.2"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∀x. x ∈ {m. m ≥ max N M} ⟶ b ≤ a x"
                },
                {
                    "args": "forall_in_gspec1, ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ max N M}} ⟶ b ≤ z",
                    "id": "1.3.2.17",
                    "prevs": [
                        "1.3.2.16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∀z. z ∈ {y. ∃x. y = a x ∧ x ∈ {m. m ≥ max N M}} ⟶ b ≤ z"
                },
                {
                    "args": "conj_comm, ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ max N M} ∧ y = a x1} ⟶ b ≤ x",
                    "id": "1.3.2.18",
                    "prevs": [
                        "1.3.2.17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∀x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ max N M} ∧ y = a x1} ⟶ b ≤ x"
                },
                {
                    "args": "image_def, ∀x. x ∈ image a ({m. m ≥ max N M}) ⟶ b ≤ x",
                    "id": "1.3.2.19",
                    "prevs": [
                        "1.3.2.18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∀x. x ∈ image a ({m. m ≥ max N M}) ⟶ b ≤ x"
                },
                {
                    "args": "exI, {a: real}, {P: λb. ∀x. x ∈ image a ({m. m ≥ max N M}) ⟶ b ≤ x, a: b}",
                    "id": "1.3.2.20",
                    "prevs": [
                        "1.3.2.19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∃a1. ∀x. x ∈ image a ({m. m ≥ max N M}) ⟶ a1 ≤ x"
                },
                {
                    "args": "max N M",
                    "id": "1.3.2.21",
                    "prevs": [
                        "1.3.2.5"
                    ],
                    "rule": "forall_elim",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ M ≤ max N M ⟶ abs (inf (image a ({m. m ≥ max N M})) - l) < c - l"
                },
                {
                    "args": "M ≤ max N M",
                    "id": "1.3.2.22",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ M ≤ max N M"
                },
                {
                    "args": "",
                    "id": "1.3.2.23",
                    "prevs": [
                        "1.3.2.21",
                        "1.3.2.22"
                    ],
                    "rule": "apply_fact",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ abs (inf (image a ({m. m ≥ max N M})) - l) < c - l"
                },
                {
                    "args": "real_abs_between",
                    "id": "1.3.2.24",
                    "prevs": [
                        "1.3.2.23"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ 0 < c - l ∧ l - (c - l) < inf (image a ({m. m ≥ max N M})) ∧ inf (image a ({m. m ≥ max N M})) < l + (c - l)"
                },
                {
                    "args": "conjD2, {}, {A: 0 < c - l, B: l - (c - l) < inf (image a ({m. m ≥ max N M})) ∧ inf (image a ({m. m ≥ max N M})) < l + (c - l)}",
                    "id": "1.3.2.25",
                    "prevs": [
                        "1.3.2.24"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ l - (c - l) < inf (image a ({m. m ≥ max N M})) ∧ inf (image a ({m. m ≥ max N M})) < l + (c - l)"
                },
                {
                    "args": "conjD2, {}, {A: l - (c - l) < inf (image a ({m. m ≥ max N M})), B: inf (image a ({m. m ≥ max N M})) < l + (c - l)}",
                    "id": "1.3.2.26",
                    "prevs": [
                        "1.3.2.25"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l ⊢ inf (image a ({m. m ≥ max N M})) < l + (c - l)"
                },
                {
                    "args": "l + (c - l) ≤ c",
                    "id": "1.3.2.27",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ l + (c - l) ≤ c"
                },
                {
                    "args": "real_lte_trans",
                    "id": "1.3.2.28",
                    "prevs": [
                        "1.3.2.26",
                        "1.3.2.27"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ inf (image a ({m. m ≥ max N M})) < c"
                },
                {
                    "args": "",
                    "id": "1.3.2.29",
                    "prevs": [
                        "1.3.2.6",
                        "1.3.2.12",
                        "1.3.2.20",
                        "1.3.2.28"
                    ],
                    "rule": "apply_fact",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∃x. x ∈ image a ({m. m ≥ max N M}) ∧ x < c"
                },
                {
                    "args": "image_def",
                    "id": "1.3.2.30",
                    "prevs": [
                        "1.3.2.29"
                    ],
                    "rule": "rewrite_fact",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∃x. x ∈ {y. ∃x1. x1 ∈ {m. m ≥ max N M} ∧ y = a x1} ∧ x < c"
                },
                {
                    "args": "",
                    "id": "1.3.2.31",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c, ∀n. M ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l, ∀n. b ≤ a n ⊢ ∃n. N ≤ n ∧ a n < c"
                },
                {
                    "args": "∃b. ∀n. b ≤ a n, ∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < c - l",
                    "id": "1.3.2.32",
                    "prevs": [
                        "1.3.2.0",
                        "1.3.2.3",
                        "1.3.2.4",
                        "1.3.2.5",
                        "1.3.2.13",
                        "1.3.2.14",
                        "1.3.2.15",
                        "1.3.2.31"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)), l < c ⊢ ∀N. ∃n. N ≤ n ∧ a n < c"
                },
                {
                    "args": "",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.1",
                        "1.3.2"
                    ],
                    "rule": "intros",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ ∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c)"
                },
                {
                    "args": "conjI",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ (∀c. c < l ⟶ (∃N. ∀n. N ≤ n ⟶ c ≤ a n)) ∧ (∀c. l < c ⟶ (∀N. ∃n. N ≤ n ∧ a n < c))"
                },
                {
                    "args": "has_liminf_sequentially, has_liminf a l sequentially",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "(∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⊢ has_liminf a l sequentially"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∃b. ∀n. b ≤ a n) ∧ (∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (inf (image a ({m. m ≥ n})) - l) < e)) ⟶ has_liminf a l sequentially"
                },
                {
                    "args": "reallim_sequentially, (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially ⟶ has_liminf a l sequentially",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially ⟶ has_liminf a l sequentially"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_liminf a l sequentially ⟷ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_liminf a l sequentially ⟷ (∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
                }
            ],
            "prop": [
                "has_liminf a l sequentially ⟷ ",
                "(∃b. ∀n. b ≤ a n) ∧ tendsto_real (λn. inf (image a ({m. m ≥ n}))) l sequentially"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "eventually_lbound_le_sequentially"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "param_l": "l",
                    "theorem": "has_liminf_imp_lbound_le"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "apply_backward_step",
                    "theorem": "has_liminf_sequentially_imp_reallim_inf"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "reallim_sequentially"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "has_liminf_sequentially"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "forall_elim",
                    "s": "l-c"
                },
                {
                    "goal": "0 < l - c",
                    "goal_id": "1.2.3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.2.1"
                    ],
                    "goal_id": "1.2.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.2.2",
                        "1.2.3"
                    ],
                    "goal_id": "1.2.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.4"
                    ],
                    "goal_id": "1.2.5",
                    "method_name": "exists_elim",
                    "names": "N"
                },
                {
                    "goal_id": "1.2.7",
                    "method_name": "inst_exists_goal",
                    "s": "N"
                },
                {
                    "goal_id": "1.2.7",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.2.6",
                        "1.2.7.1"
                    ],
                    "goal_id": "1.2.7.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.2.7.2"
                    ],
                    "goal_id": "1.2.7.3",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "fact_ids": [
                        "1.2.7.3"
                    ],
                    "goal_id": "1.2.7.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.2.7.4"
                    ],
                    "goal_id": "1.2.7.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "goal_id": "1.2.7.6",
                    "method_name": "apply_backward_step",
                    "param_y": "inf (image a ({m. m ≥ n}))",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.2.7.6",
                    "method_name": "apply_backward_step",
                    "param_y": "l - (l - c)",
                    "theorem": "real_le_trans"
                },
                {
                    "goal_id": "1.2.7.6",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2.7.7",
                    "method_name": "apply_backward_step",
                    "theorem": "real_lt_imp_le"
                },
                {
                    "goal_id": "1.2.7.9",
                    "method_name": "apply_backward_step",
                    "theorem": "inf_le_element"
                },
                {
                    "goal_id": "1.2.7.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "1.2.7.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.2.7.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.7.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.2.7.9"
                    ],
                    "goal_id": "1.2.7.10",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "goal_id": "1.2.7.12",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "1.2.7.12",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.2.7.11"
                    ],
                    "goal_id": "1.2.7.12.2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.2.7.17",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_image"
                },
                {
                    "goal_id": "1.2.7.17",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "goal_id": "1.2.7.17",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.7.17",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "1.2.7.18",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "1.2.7.18",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction",
                    "names": "c"
                },
                {
                    "goal_id": "1.3.2",
                    "method_name": "introduction",
                    "names": "N"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3.2.1",
                    "method_name": "forall_elim",
                    "s": "c-l"
                },
                {
                    "goal": "0 < c - l",
                    "goal_id": "1.3.2.2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.3.1"
                    ],
                    "goal_id": "1.3.2.2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3.2.1",
                        "1.3.2.2"
                    ],
                    "goal_id": "1.3.2.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.3.2.3"
                    ],
                    "goal_id": "1.3.2.4",
                    "method_name": "exists_elim",
                    "names": "M"
                },
                {
                    "goal_id": "1.3.2.6",
                    "method_name": "apply_forward_step",
                    "param_c": "c",
                    "param_s": "image a ({m. m ≥ max N M})",
                    "theorem": "inf_approach"
                },
                {
                    "goal": "(∃x. x ∈ image a ({m. m ≥ max N M}) ∧ x < c)",
                    "goal_id": "1.3.2.7",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.3.2.6"
                    ],
                    "goal_id": "1.3.2.7",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_empty_simp"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.3.2.7",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.2.7.0"
                    ],
                    "goal_id": "1.3.2.7.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.3.2.7.1"
                    ],
                    "goal_id": "1.3.2.7.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.3.2.7.2"
                    ],
                    "goal_id": "1.3.2.7.3",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.3.2.13",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.3.2.13"
                    ],
                    "goal_id": "1.3.2.14",
                    "method_name": "exists_elim",
                    "names": "b"
                },
                {
                    "goal_id": "1.3.2.16",
                    "method_name": "inst_exists_goal",
                    "s": "b"
                },
                {
                    "goal_id": "1.3.2.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "image_def"
                },
                {
                    "goal_id": "1.3.2.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "conj_comm"
                },
                {
                    "goal_id": "1.3.2.16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "forall_in_gspec1"
                },
                {
                    "goal_id": "1.3.2.16",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.3.2.15"
                    ],
                    "goal_id": "1.3.2.16.2",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "1.3.2.5"
                    ],
                    "goal_id": "1.3.2.21",
                    "method_name": "forall_elim",
                    "s": "max N M"
                },
                {
                    "goal": "M ≤ max N M",
                    "goal_id": "1.3.2.22",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.3.2.22",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3.2.21",
                        "1.3.2.22"
                    ],
                    "goal_id": "1.3.2.23",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.3.2.23"
                    ],
                    "goal_id": "1.3.2.24",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_abs_between"
                },
                {
                    "fact_ids": [
                        "1.3.2.24"
                    ],
                    "goal_id": "1.3.2.25",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.3.2.25"
                    ],
                    "goal_id": "1.3.2.26",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3.2.27",
                    "method_name": "apply_backward_step",
                    "param_y": "l + (c - l)",
                    "theorem": "real_lte_trans"
                },
                {
                    "goal_id": "1.3.2.27",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.3.2.29"
                    ],
                    "goal_id": "1.3.2.30",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "image_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "l": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_series_root_test",
            "prop": [
                "(∀n. n ∈ k ⟶ 0 ≤ a n) ",
                "⟶ b < 1 ",
                "   ⟶ has_limsup (λn. root n (a n)) b (within sequentially k) ⟶ real_summable k a"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set"
            }
        },
        {
            "attributes": [
                "hint_backward1"
            ],
            "name": "real_cauchy_hadamard_radius",
            "prop": [
                "has_limsup (λn. root n (abs (a n))) b (within sequentially k) ",
                "⟶ b * abs x < 1 ⟶ real_summable k (λn. a n * x ^ n)"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_cauchy_hadamard_radius_absconv_derivative",
            "prop": [
                "has_limsup (λn. root n (abs (a n))) b (within sequentially k) ",
                "⟶ b * abs x < 1 ⟶ real_summable k (λn. abs (of_nat n * a n * x ^ (n - 1)))"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_cauchy_hadamard_radius_derivative",
            "prop": [
                "has_limsup (λn. root n (abs (a n))) b (within sequentially k) ",
                "⟶ b * abs x < 1 ⟶ real_summable k (λn. of_nat n * a n * x ^ (n - 1))"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_cauchy_hadamard_radius_uniform",
            "prop": [
                "has_limsup (λn. root n (abs (a n))) b (within sequentially k) ",
                "⟶ real_compact s ",
                "   ⟶ (∀x. x ∈ s ⟶ b * abs x < 1) ",
                "      ⟶ (∃l. ∀e. 0 < e ",
                "              ⟶ (∃N. ∀n. ∀x. N ≤ n ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. a i * x ^ i) - l x) < e))"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_cauchy_hadamard_radius_uniform_derivative",
            "prop": [
                "has_limsup (λn. root n (abs (a n))) b (within sequentially k) ",
                "⟶ real_compact s ",
                "   ⟶ (∀x. x ∈ s ⟶ b * abs x < 1) ",
                "      ⟶ (∃l. ∀e. 0 < e ",
                "              ⟶ (∃N. ∀n. ∀x. N ≤ n ∧ x ∈ s ",
                "                        ⟶ abs (sum (k ∩ {0..n}) (λi. of_nat i * a i * x ^ (i - 1)) - l x) < e))"
            ],
            "ty": "thm",
            "vars": {
                "a": "nat ⇒ real",
                "b": "real",
                "k": "nat set",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_real_derivative_sequence",
            "prop": [
                "is_realinterval s ",
                "⟶ (∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s)) ",
                "   ⟶ (∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (f1 n x - g1 x) ≤ e)) ",
                "      ⟶ (∃x. ∃l. x ∈ s ∧ tendsto_real (λn. f n x) l sequentially) ",
                "         ⟶ (∃g. ∀x. x ∈ s ",
                "                 ⟶ tendsto_real (λn. f n x) (g x) sequentially ∧ ",
                "                    has_real_derivative g (g1 x) (within (atreal x) s))"
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real ⇒ real",
                "f1": "nat ⇒ real ⇒ real",
                "g1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "has_real_derivative_series",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "is_realinterval s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "is_realinterval s ⊢ is_realinterval s"
                },
                {
                    "args": "∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s) ⊢ ∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s)"
                },
                {
                    "args": "∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e) ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e)"
                },
                {
                    "args": "∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k"
                },
                {
                    "args": "real_sums_def",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∃x. ∃l. x ∈ s ∧ tendsto_real (λn. sum (k ∩ {0..n}) (λn1. f n1 x)) l sequentially"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "is_realinterval s, ∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s), ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e), ∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∀n. ∀x. x ∈ s ⟶ has_real_derivative (λx1. sum (k ∩ {0..n}) (λn1. f n1 x1)) (sum (k ∩ {0..n}) (λn1. f1 n1 x)) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "is_realinterval s, ∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s), ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e), ∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λn1. f1 n1 x) - g1 x) ≤ e)"
                },
                {
                    "args": "has_real_derivative_sequence",
                    "id": "7",
                    "prevs": [
                        "0",
                        "5",
                        "6",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "is_realinterval s, ∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s), ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e), ∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∃g. ∀x. x ∈ s ⟶ tendsto_real (λn. sum (k ∩ {0..n}) (λn1. f n1 x)) (g x) sequentially ∧ has_real_derivative g (g1 x) (within (atreal x) s)"
                },
                {
                    "args": "real_sums_def, ∃g. ∀x. x ∈ s ⟶ real_sums (λn. f n x) (g x) k ∧ has_real_derivative g (g1 x) (within (atreal x) s)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "is_realinterval s, ∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s), ∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e), ∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k ⊢ ∃g. ∀x. x ∈ s ⟶ real_sums (λn. f n x) (g x) k ∧ has_real_derivative g (g1 x) (within (atreal x) s)"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ is_realinterval s ⟶ (∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s)) ⟶ (∀e. 0 < e ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e)) ⟶ (∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k) ⟶ (∃g. ∀x. x ∈ s ⟶ real_sums (λn. f n x) (g x) k ∧ has_real_derivative g (g1 x) (within (atreal x) s))"
                }
            ],
            "prop": [
                "is_realinterval s ",
                "⟶ (∀n. ∀x. x ∈ s ⟶ has_real_derivative (f n) (f1 n x) (within (atreal x) s)) ",
                "   ⟶ (∀e. 0 < e ",
                "         ⟶ (∃N. ∀n. ∀x. n ≥ N ∧ x ∈ s ⟶ abs (sum (k ∩ {0..n}) (λi. f1 i x) - g1 x) < e)) ",
                "      ⟶ (∃x. ∃l. x ∈ s ∧ real_sums (λn. f n x) l k) ",
                "         ⟶ (∃g. ∀x. x ∈ s ",
                "                 ⟶ real_sums (λn. f n x) (g x) k ∧ ",
                "                    has_real_derivative g (g1 x) (within (atreal x) s))"
            ],
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_sums_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_sums_def"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "param_f1": "(%n::nat. %x::real. sum (inter k ({0..n})) (%n. f1 n x))",
                    "theorem": "has_real_derivative_sequence"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real ⇒ real",
                "f1": "nat ⇒ real ⇒ real",
                "g1": "real ⇒ real",
                "k": "nat set",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_differentiable_bound",
            "prop": [
                "is_realinterval s ",
                "⟶ (∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s) ⟶ abs (f1 x) ≤ B) ",
                "   ⟶ (∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ abs (f x - f y) ≤ B * abs (x - y))"
            ],
            "ty": "thm",
            "vars": {
                "B": "real",
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_taylor_mvt_pos",
            "prop": [
                "a < x ",
                "⟶ (∀i. ∀t. t ∈ real_closed_interval a x ",
                "        ⟶ i ≤ n ",
                "           ⟶ has_real_derivative (f i) (f (i + 1) t) ",
                "                (within (atreal t) (real_closed_interval a x))) ",
                "   ⟶ (∃t. t ∈ real_closed_interval a x ∧ ",
                "         f 0 x = ",
                "         sum ({0..n}) (λi. f i a * (x - a) ^ i / of_nat (fact i)) + ",
                "         f (n + 1) t * (x - a) ^ (n + 1) / of_nat (fact (n + 1)))"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "f": "nat ⇒ real ⇒ real",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_taylor_mvt_neg",
            "prop": [
                "x < a ",
                "⟶ (∀i. ∀t. t ∈ real_closed_interval x a ",
                "        ⟶ i ≤ n ",
                "           ⟶ has_real_derivative (f i) (f (i + 1) t) ",
                "                (within (atreal t) (real_closed_interval x a))) ",
                "   ⟶ (∃t. t ∈ real_closed_interval x a ∧ ",
                "         f 0 x = ",
                "         sum ({0..n}) (λi. f i a * (x - a) ^ i / of_nat (fact i)) + ",
                "         f (n + 1) t * (x - a) ^ (n + 1) / of_nat (fact (n + 1)))"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "f": "nat ⇒ real ⇒ real",
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "real_taylor",
            "prop": [
                "is_realinterval s ",
                "⟶ (∀i. ∀x. x ∈ s ⟶ i ≤ n ⟶ has_real_derivative (f i) (f (i + 1) x) (within (atreal x) s)) ",
                "   ⟶ (∀x. x ∈ s ⟶ abs (f (n + 1) x) ≤ B) ",
                "      ⟶ (∀w. ∀z. w ∈ s ",
                "              ⟶ z ∈ s ",
                "                 ⟶ abs (f 0 z - sum ({0..n}) (λi. f i w * (z - w) ^ i / of_nat (fact i))) ≤ ",
                "                    B * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
            ],
            "ty": "thm",
            "vars": {
                "B": "real",
                "f": "nat ⇒ real ⇒ real",
                "n": "nat",
                "s": "real set"
            }
        },
        {
            "name": "real_sum_integral_ubound_increasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m) (of_nat n + 1) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m) (of_nat n + 1)))) ∧ ",
                "(∀x. ∀y. of_nat m ≤ x ∧ x ≤ y ∧ y ≤ of_nat n + 1 ⟶ f x ≤ f y) ",
                "⟶ sum ({m..n}) (λk. f (of_nat k)) ≤ g (of_nat n + 1) - g (of_nat m)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "real_sum_integral_ubound_decreasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m - 1) (of_nat n) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m - 1) (of_nat n)))) ∧ ",
                "(∀x. ∀y. of_nat m - 1 ≤ x ∧ x ≤ y ∧ y ≤ of_nat n ⟶ f y ≤ f x) ",
                "⟶ sum ({m..n}) (λk. f (of_nat k)) ≤ g (of_nat n) - g (of_nat m - 1)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "real_sum_integral_lbound_increasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m - 1) (of_nat n) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m - 1) (of_nat n)))) ∧ ",
                "(∀x. ∀y. of_nat m - 1 ≤ x ∧ x ≤ y ∧ y ≤ of_nat n ⟶ f x ≤ f y) ",
                "⟶ g (of_nat n) - g (of_nat m - 1) ≤ sum ({m..n}) (λk. f (of_nat k))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "real_sum_integral_lbound_decreasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m) (of_nat n + 1) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m) (of_nat n + 1)))) ∧ ",
                "(∀x. ∀y. of_nat m ≤ x ∧ x ≤ y ∧ y ≤ of_nat n + 1 ⟶ f y ≤ f x) ",
                "⟶ g (of_nat n + 1) - g (of_nat m) ≤ sum ({m..n}) (λk. f (of_nat k))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "real_sum_integral_bounds_increasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m - 1) (of_nat n + 1) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m - 1) (of_nat n + 1)))) ∧ ",
                "(∀x. ∀y. of_nat m - 1 ≤ x ∧ x ≤ y ∧ y ≤ of_nat n + 1 ⟶ f x ≤ f y) ",
                "⟶ g (of_nat n) - g (of_nat m - 1) ≤ sum ({m..n}) (λk. f (of_nat k)) ∧ ",
                "   sum ({m..n}) (λk. f (of_nat k)) ≤ g (of_nat n + 1) - g (of_nat m)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "real_sum_integral_bounds_decreasing",
            "prop": [
                "m ≤ n ∧ ",
                "(∀x. x ∈ real_closed_interval (of_nat m - 1) (of_nat n + 1) ",
                "   ⟶ has_real_derivative g (f x) ",
                "        (within (atreal x) (real_closed_interval (of_nat m - 1) (of_nat n + 1)))) ∧ ",
                "(∀x. ∀y. of_nat m - 1 ≤ x ∧ x ≤ y ∧ y ≤ of_nat n + 1 ⟶ f y ≤ f x) ",
                "⟶ g (of_nat n + 1) - g (of_nat m) ≤ sum ({m..n}) (λk. f (of_nat k)) ∧ ",
                "   sum ({m..n}) (λk. f (of_nat k)) ≤ g (of_nat n) - g (of_nat m - 1)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "name": "reallim_posinfinity_sequentially",
            "prop": "tendsto_real f l at_posinfinity ⟷ tendsto_real (λn. f (of_nat n)) l sequentially",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "l": "real"
            }
        },
        {
            "name": "reallim_zero_posinfinity",
            "prop": "tendsto_real (λx. f (1 / x)) l (atreal 0) ⟶ tendsto_real f l at_posinfinity",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "l": "real"
            }
        },
        {
            "name": "reallim_zero_neginfinity",
            "prop": "tendsto_real (λx. f (1 / x)) l (atreal 0) ⟶ tendsto_real f l at_neginfinity",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "l": "real"
            }
        },
        {
            "name": "closed_real_segment",
            "prop": "closed_real_segment a b = {x. ∃u. x = (1 - u) * a + u * b ∧ 0 ≤ u ∧ u ≤ 1}",
            "ty": "def",
            "type": "real ⇒ real ⇒ real set"
        },
        {
            "name": "open_real_segment",
            "prop": "open_real_segment a b = diff (closed_real_segment a b) ({a, b})",
            "ty": "def",
            "type": "real ⇒ real ⇒ real set"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "open_real_segment_interval",
            "prop": [
                "open_real_segment a b = ",
                "(if a ≤ b then real_open_interval a b else real_open_interval b a)"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "closed_real_segment_interval",
            "prop": [
                "closed_real_segment a b = ",
                "(if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "closed_real_interval_subset_real_segment",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ a ≤ b ⟶ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "a ≤ b",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ≤ b ⊢ a ≤ b"
                },
                {
                    "args": "subset_refl, {a: real}, {A: real_closed_interval a b}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_closed_interval a b ⊆ real_closed_interval a b"
                },
                {
                    "args": "if_P, real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)",
                    "id": "0.2",
                    "prevs": [
                        "0.1",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "a ≤ b ⊢ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ a ≤ b ⟶ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(a ≤ b) ⟶ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "¬(a ≤ b)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(a ≤ b) ⊢ ¬(a ≤ b)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(a ≤ b) ⊢ ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ x ∈ {p. b ≤ p ∧ p ≤ a}"
                },
                {
                    "args": "x, real",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ {p. a ≤ p ∧ p ≤ b}",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ x ∈ {p. a ≤ p ∧ p ≤ b}"
                },
                {
                    "args": "member_collect",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ a ≤ x ∧ x ≤ b"
                },
                {
                    "args": "conjD1, {}, {A: a ≤ x, B: x ≤ b}",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ a ≤ x"
                },
                {
                    "args": "conjD2, {}, {A: a ≤ x, B: x ≤ b}",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ x ≤ b"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "¬(a ≤ b), x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ a ≤ b"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "¬(a ≤ b), x ∈ {p. a ≤ p ∧ p ≤ b} ⊢ x ∈ {p. b ≤ p ∧ p ≤ a}"
                },
                {
                    "args": "",
                    "id": "1.1.7",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.6"
                    ],
                    "rule": "intros",
                    "th": "¬(a ≤ b) ⊢ ∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟶ x ∈ {p. b ≤ p ∧ p ≤ a}"
                },
                {
                    "args": "subsetI",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(a ≤ b) ⊢ {p. a ≤ p ∧ p ≤ b} ⊆ {p. b ≤ p ∧ p ≤ a}"
                },
                {
                    "args": "real_closed_interval_def, real_closed_interval a b ⊆ real_closed_interval b a",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(a ≤ b) ⊢ real_closed_interval a b ⊆ real_closed_interval b a"
                },
                {
                    "args": "if_not_P, real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)",
                    "id": "1.4",
                    "prevs": [
                        "1.3",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(a ≤ b) ⊢ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(a ≤ b) ⟶ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_closed_interval a b ⊆ (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "closed_real_segment_interval, real_closed_interval a b ⊆ closed_real_segment a b",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_closed_interval a b ⊆ closed_real_segment a b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_closed_interval a b ⊆ closed_real_segment a b"
                }
            ],
            "prop": "real_closed_interval a b ⊆ closed_real_segment a b",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "closed_real_segment_interval"
                },
                {
                    "case": "a ≤ b",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "subset_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_closed_interval_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.1.1"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "rewrite_fact",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal": "a <= b",
                    "goal_id": "1.1.5",
                    "method_name": "cut"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "open_real_interval_subset_real_segment",
            "prop": "real_open_interval a b ⊆ open_real_segment a b",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "real_continuous_injective_iff_monotonic",
            "prop": [
                "real_continuous_on f s ∧ is_realinterval s ",
                "⟶ (∀x. ∀y. x ∈ s ∧ y ∈ s ∧ f x = f y ⟶ x = y) ⟷ ",
                "   (∀x. ∀y. x ∈ s ∧ y ∈ s ∧ x < y ⟶ f x < f y) ∨ ",
                "   (∀x. ∀y. x ∈ s ∧ y ∈ s ∧ x < y ⟶ f y < f x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_backward"
            ],
            "name": "ends_in_real_segment1",
            "prop": "a ∈ closed_real_segment a b",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_resolve",
                "hint_backward"
            ],
            "name": "ends_in_real_segment2",
            "prop": "b ∈ closed_real_segment a b",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "is_real_interval_contains_segment",
            "prop": "is_realinterval s ⟷ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s)",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_backward",
                "hint_resolve"
            ],
            "name": "is_realinterval_contains_segment_eq",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s) ⟶ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)"
                },
                {
                    "args": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ ∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ ∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "a, real",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ closed_real_segment a b ⊆ s ⟶ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "closed_real_segment a b ⊆ s",
                    "id": "0.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "closed_real_segment a b ⊆ s ⊢ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "ends_in_real_segment1, {}, {a: a, b: b}",
                    "id": "0.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a ∈ closed_real_segment a b"
                },
                {
                    "args": "subsetE",
                    "id": "0.1.2.2",
                    "prevs": [
                        "0.1.2.0",
                        "0.1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "closed_real_segment a b ⊆ s, ∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ a ∈ s"
                },
                {
                    "args": "ends_in_real_segment2, {}, {a: a, b: b}",
                    "id": "0.1.2.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ b ∈ closed_real_segment a b"
                },
                {
                    "args": "subsetE",
                    "id": "0.1.2.4",
                    "prevs": [
                        "0.1.2.0",
                        "0.1.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "closed_real_segment a b ⊆ s, ∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ b ∈ s"
                },
                {
                    "args": "conjI",
                    "id": "0.1.2.5",
                    "prevs": [
                        "0.1.2.2",
                        "0.1.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s, closed_real_segment a b ⊆ s ⊢ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "0.1.2.6",
                    "prevs": [
                        "0.1.2.0",
                        "0.1.2.5"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ closed_real_segment a b ⊆ s ⟶ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "a ∈ s ∧ b ∈ s",
                    "id": "0.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ∧ b ∈ s ⊢ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "0.1.3.1",
                    "prevs": [
                        "0.0",
                        "0.1.3.0"
                    ],
                    "rule": "apply_fact",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s, a ∈ s ∧ b ∈ s ⊢ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "",
                    "id": "0.1.3.2",
                    "prevs": [
                        "0.1.3.0",
                        "0.1.3.1"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "iffI",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.2",
                        "0.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.1",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s ⊢ ∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s) ⟶ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s) ⟶ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s)"
                },
                {
                    "args": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ ∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ ∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "a, real",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "a ∈ s ∧ b ∈ s",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ s ∧ b ∈ s ⊢ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "a",
                    "id": "1.1.3",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "forall_elim",
                    "th": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "b",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "forall_elim",
                    "th": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s"
                },
                {
                    "args": "closed_real_segment a b ⊆ s",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.4",
                        "1.1.2",
                        "1.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "a ∈ s ∧ b ∈ s, ∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s ⊢ ∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s) ⟶ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀a. ∀b. a ∈ s ∧ b ∈ s ⟶ closed_real_segment a b ⊆ s) ⟷ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)"
                },
                {
                    "args": "is_real_interval_contains_segment, is_realinterval s ⟷ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ is_realinterval s ⟷ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)"
                }
            ],
            "prop": "is_realinterval s ⟷ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "is_real_interval_contains_segment"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "a, b"
                },
                {
                    "goal_id": "0.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.1.2.0"
                    ],
                    "goal_id": "0.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetE"
                },
                {
                    "goal_id": "0.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ends_in_real_segment1"
                },
                {
                    "fact_ids": [
                        "0.1.2.0"
                    ],
                    "goal_id": "0.1.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetE"
                },
                {
                    "goal_id": "0.1.2.3",
                    "method_name": "apply_backward_step",
                    "theorem": "ends_in_real_segment2"
                },
                {
                    "goal_id": "0.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1.3.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "a,b"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "forall_elim",
                    "s": "a"
                },
                {
                    "fact_ids": [
                        "1.1.3"
                    ],
                    "goal_id": "1.1.4",
                    "method_name": "forall_elim",
                    "s": "b"
                },
                {
                    "fact_ids": [
                        "1.1.4"
                    ],
                    "goal_id": "1.1.5",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "name": "is_realinterval_contains_segment_imp",
            "prop": "is_realinterval s ⟶ (∀a. ∀b. closed_real_segment a b ⊆ s ⟷ a ∈ s ∧ b ∈ s)",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "name": "is_realinterval_closed_segment",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ a ≤ b ⟶ is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "a ≤ b",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ≤ b ⊢ a ≤ b"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "a ≤ b ⊢ ∀a1. ∀b1. ∀c. a1 ∈ real_closed_interval a b ∧ b1 ∈ real_closed_interval a b ∧ a1 ≤ c ∧ c ≤ b1 ⟶ c ∈ real_closed_interval a b"
                },
                {
                    "args": "is_realinterval_def, is_realinterval (real_closed_interval a b)",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "a ≤ b ⊢ is_realinterval (real_closed_interval a b)"
                },
                {
                    "args": "if_P, is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)",
                    "id": "0.3",
                    "prevs": [
                        "0.2",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "a ≤ b ⊢ is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ a ≤ b ⟶ is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ¬(a ≤ b) ⟶ is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ is_realinterval (if a ≤ b then real_closed_interval a b else real_closed_interval b a)"
                },
                {
                    "args": "closed_real_segment_interval, is_realinterval (closed_real_segment a b)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ is_realinterval (closed_real_segment a b)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ is_realinterval (closed_real_segment a b)"
                }
            ],
            "prop": "is_realinterval (closed_real_segment a b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "closed_real_segment_interval"
                },
                {
                    "case": "a ≤ b",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "is_realinterval_open_segment",
            "prop": "is_realinterval (open_real_segment a b)",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "is_closed_real_segment",
            "prop": "x ∈ closed_real_segment a b ⟷ a ≤ x ∧ x ≤ b ∨ b ≤ x ∧ x ≤ a",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "is_open_real_segment",
            "prop": "x ∈ open_real_segment a b ⟷ a < x ∧ x < b ∨ b < x ∧ x < a",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "x": "real"
            }
        },
        {
            "name": "floor_continuous_monotone_floor",
            "prop": [
                "is_realinterval s ∧ ",
                "real_continuous_on f s ∧ ",
                "(∀x. ∀y. x ∈ s ∧ y ∈ s ∧ x ≤ y ⟶ f x ≤ f y) ∧ ",
                "(∀x. x ∈ s ∧ integer (f x) ⟶ integer x) ",
                "⟶ (∀x. floor x ∈ s ∧ x ∈ s ⟶ floor (f (floor x)) = floor (f x))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_convex_on",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "         ⟶ f (u * x + v * y) ≤ u * f x + v * f y)"
            ],
            "ty": "def",
            "type": "(real ⇒ real) ⇒ real set ⇒ bool"
        },
        {
            "name": "real_convex_on_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ∀y. ∀u. ∀v. x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ f (u * x + v * y) ≤ u * f x + v * f y"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "u, real",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR u"
                },
                {
                    "args": "v, real",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR v"
                },
                {
                    "args": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1"
                },
                {
                    "args": "conjD1, {}, {A: x ∈ ∅, B: y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1}",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ x ∈ ∅"
                },
                {
                    "args": "member_empty, f (u * x + v * y) ≤ u * f x + v * f y",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "resolve_theorem",
                    "th": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ f (u * x + v * y) ≤ u * f x + v * f y"
                },
                {
                    "args": "",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀y. ∀u. ∀v. x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ f (u * x + v * y) ≤ u * f x + v * f y"
                },
                {
                    "args": "real_convex_on_def, real_convex_on f ∅",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_convex_on f ∅"
                }
            ],
            "prop": "real_convex_on f ∅",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_convex_on_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x,y,u,v"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.5"
                    ],
                    "goal_id": "0.6",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real"
            }
        },
        {
            "name": "real_convex_on_eq",
            "prop": [
                "is_realinterval s ∧ (∀x. x ∈ s ⟶ f x = g x) ∧ real_convex_on f s ",
                "⟶ real_convex_on g s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_sing",
            "prop": "real_convex_on f ({a})",
            "ty": "thm",
            "vars": {
                "a": "real",
                "f": "real ⇒ real"
            }
        },
        {
            "name": "real_convex_on_subset",
            "prop": "real_convex_on f t ∧ s ⊆ t ⟶ real_convex_on f s",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set",
                "t": "real set"
            }
        },
        {
            "name": "real_convex_on_const",
            "prop": "real_convex_on (λx. c) s",
            "ty": "thm",
            "vars": {
                "c": "real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_add",
            "prop": "real_convex_on f s ∧ real_convex_on g s ⟶ real_convex_on (λx. f x + g x) s",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_convex_lmul",
            "prop": "0 ≤ c ∧ real_convex_on f s ⟶ real_convex_on (λx. c * f x) s",
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_rmul",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ c ∧ real_convex_on f s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ c ∧ real_convex_on f s ⊢ 0 ≤ c ∧ real_convex_on f s"
                },
                {
                    "args": " real_convex_lmul",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "0 ≤ c ∧ real_convex_on f s ⊢ real_convex_on (λx. c * f x) s"
                },
                {
                    "args": "real_mult_comm, real_convex_on (λx. f x * c) s",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ c ∧ real_convex_on f s ⊢ real_convex_on (λx. f x * c) s"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ c ∧ real_convex_on f s ⟶ real_convex_on (λx. f x * c) s"
                }
            ],
            "prop": "0 ≤ c ∧ real_convex_on f s ⟶ real_convex_on (λx. f x * c) s",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_mult_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_convex_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "c": "real",
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_sum",
            "prop": [
                "finite s ∧ (∀a. a ∈ s ⟶ real_convex_on (f a) t) ",
                "⟶ real_convex_on (λx. sum s (λa. f a x)) t"
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real ⇒ real",
                "s": "'a set",
                "t": "real set"
            }
        },
        {
            "name": "real_convex_compose",
            "prop": [
                "real_convex_on f s ∧ ",
                "real_convex_on g t ∧ ",
                "is_realinterval s ∧ ",
                "is_realinterval t ∧ image f s ⊆ t ∧ (∀x. ∀y. x ∈ t ∧ y ∈ t ∧ x ≤ y ⟶ g x ≤ g y) ",
                "⟶ real_convex_on (g ∘ f) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set",
                "t": "real set"
            }
        },
        {
            "name": "real_convex_lower",
            "prop": [
                "real_convex_on f s ∧ x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "⟶ f (u * x + v * y) ≤ max (f x) (f y)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set",
                "u": "real",
                "v": "real",
                "x": "real",
                "y": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_convex_lower_real_segment",
            "prop": [
                "real_convex_on f s ∧ a ∈ s ∧ b ∈ s ∧ x ∈ closed_real_segment a b ",
                "⟶ f x ≤ max (f a) (f b)"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "real ⇒ real",
                "s": "real set",
                "x": "real"
            }
        },
        {
            "name": "real_convex_lower_real_interval",
            "prop": [
                "real_convex_on f (real_closed_interval a b) ∧ x ∈ closed_real_segment a b ",
                "⟶ f x ≤ max (f a) (f b)"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "real ⇒ real",
                "x": "real"
            }
        },
        {
            "name": "real_convex_local_global_minimum",
            "prop": [
                "real_convex_on f s ∧ x ∈ t ∧ real_open t ∧ t ⊆ s ∧ (∀y. y ∈ t ⟶ f x ≤ f y) ",
                "⟶ (∀y. y ∈ s ⟶ f x ≤ f y)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set",
                "t": "real set",
                "x": "real"
            }
        },
        {
            "name": "real_convex_distance",
            "prop": "real_convex_on (λx. abs (a - x)) s",
            "ty": "thm",
            "vars": {
                "a": "real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_jensen",
            "prop": [
                "is_realinterval s ",
                "⟶ real_convex_on f s ⟷ ",
                "   (∀k. ∀u. ∀x. (∀i. 1 ≤ i ∧ i ≤ k ⟶ 0 < u i ∧ x i ∈ s) ∧ sum ({1..k}) u = 1 ",
                "          ⟶ f (sum ({1..k}) (λi. u i * x i)) ≤ sum ({1..k}) (λi. u i * f (x i)))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_imp_jensen",
            "prop": [
                "real_convex_on f s ∧ ",
                "is_realinterval s ∧ finite k ∧ (∀i. i ∈ k ⟶ 0 ≤ u i ∧ x i ∈ s) ∧ sum k u = 1 ",
                "⟶ f (sum k (λi. u i * x i)) ≤ sum k (λi. u i * f (x i))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "k": "'a set",
                "s": "real set",
                "u": "'a ⇒ real",
                "x": "'a ⇒ real"
            }
        },
        {
            "name": "real_convex_on_continuous",
            "prop": "real_open s ∧ real_convex_on f s ⟶ real_continuous_on f s",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_left_secant_mul",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀a. ∀b. ∀x. a ∈ s ∧ b ∈ s ∧ x ∈ closed_real_segment a b ",
                "       ⟶ (f x - f a) * abs (b - a) ≤ (f b - f a) * abs (x - a))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_right_secant_mul",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀a. ∀b. ∀x. a ∈ s ∧ b ∈ s ∧ x ∈ closed_real_segment a b ",
                "       ⟶ (f b - f a) * abs (b - x) ≤ (f b - f x) * abs (b - a))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_left_secant",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀a. ∀b. ∀x. a ∈ s ∧ b ∈ s ∧ x ∈ closed_real_segment a b ",
                "       ⟶ (f x - f a) / abs (x - a) ≤ (f b - f a) / abs (b - a))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_right_secant",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀a. ∀b. ∀x. a ∈ s ∧ b ∈ s ∧ x ∈ closed_real_segment a b ",
                "       ⟶ (f b - f a) / abs (b - a) ≤ (f b - f x) * abs (b - x))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_derivative_secant_imp",
            "prop": [
                "real_convex_on f s ∧ ",
                "closed_real_segment x y ⊆ s ∧ has_real_derivative f f1 (within (atreal x) s) ",
                "⟶ f1 * (y - x) ≤ f y - f x"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real",
                "s": "real set",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_convex_on_secant_derivative_imp",
            "prop": [
                "real_convex_on f s ∧ ",
                "closed_real_segment x y ⊆ s ∧ has_real_derivative f f1 (within (atreal y) s) ",
                "⟶ f y - f x ≤ f1 * (y - x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real",
                "s": "real set",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_convex_on_derivative_imp",
            "prop": [
                "real_convex_on f s ∧ ",
                "closed_real_segment x y ⊆ s ∧ ",
                "has_real_derivative f f1x (within (atreal x) s) ∧ ",
                "has_real_derivative f f1y (within (atreal y) s) ",
                "⟶ f1x * (y - x) ≤ f1y * (y - x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1x": "real",
                "f1y": "real",
                "s": "real set",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_convex_on_derivative_increasing_imp",
            "prop": [
                "real_convex_on f s ∧ ",
                "real_closed_interval x y ⊆ s ∧ ",
                "has_real_derivative f f1x (within (atreal x) s) ∧ ",
                "has_real_derivative f f1y (within (atreal y) s) ∧ x < y ",
                "⟶ f1x ≤ f1y"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1x": "real",
                "f1y": "real",
                "s": "real set",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_convex_on_derivative_secant",
            "prop": [
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ",
                "⟶ real_convex_on f s ⟷ (∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ f1 x * (y - x) ≤ f y - f x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_secant_derivative",
            "prop": [
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ",
                "⟶ real_convex_on f s ⟷ (∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ f y - f x ≤ f1 y * (y - x))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_derivatives",
            "prop": [
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ",
                "⟶ real_convex_on f s ⟷ (∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ f1 x * (y - x) ≤ f1 y * (y - x))"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_derivatives_increasing",
            "prop": [
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ",
                "⟶ real_convex_on f s ⟷ (∀x. ∀y. x ∈ s ∧ y ∈ s ∧ x ≤ y ⟶ f1 x ≤ f1 y)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "has_real_derivative_increasing_imp",
            "prop": [
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ∧ ",
                "(∀x. x ∈ s ⟶ 0 ≤ f1 x) ∧ a ∈ s ∧ b ∈ s ∧ a ≤ b ",
                "⟶ f a ≤ f b"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "has_real_derivative_increasing",
            "prop": [
                "is_realinterval s ∧ ",
                "¬(∃a. s = {a}) ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ",
                "⟶ (∀x. x ∈ s ⟶ 0 ≤ f1 x) ⟷ (∀x. ∀y. x ∈ s ∧ y ∈ s ∧ x ≤ y ⟶ f x ≤ f y)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "has_real_derivative_strictly_increasing_imp",
            "prop": [
                "(∀x. x ∈ real_closed_interval a b ",
                "   ⟶ has_real_derivative f (f1 x) (within (atreal x) (real_closed_interval a b))) ∧ ",
                "(∀x. x ∈ real_closed_interval a b ⟶ 0 ≤ f1 x) ∧ a < b ",
                "⟶ f a < f b"
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real",
                "f": "real ⇒ real",
                "f1": "real ⇒ real"
            }
        },
        {
            "name": "real_convex_on_second_derivative",
            "prop": [
                "is_realinterval s ∧ ",
                "¬(∃a. s = {a}) ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f (f1 x) (within (atreal x) s)) ∧ ",
                "(∀x. x ∈ s ⟶ has_real_derivative f1 (f2 x) (within (atreal x) s)) ",
                "⟶ real_convex_on f s ⟷ (∀x. x ∈ s ⟶ 0 ≤ f2 x)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "f1": "real ⇒ real",
                "f2": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_asym",
            "prop": [
                "real_convex_on f s ⟷ ",
                "(∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ x < y ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "         ⟶ f (u * x + v * y) ≤ u * f x + v * f y)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_exp",
            "prop": "real_convex_on exp s",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_rpow",
            "prop": "s ⊆ {x. 0 ≤ x} ∧ 1 ≤ t ⟶ real_convex_on (λx. x ^ t) s",
            "ty": "thm",
            "vars": {
                "s": "real set",
                "t": "real"
            }
        },
        {
            "name": "real_convex_on_rpow_neg",
            "prop": "s ⊆ {x. x < 0} ∧ t ≤ 0 ⟶ real_convex_on (λx. x ^ t) s",
            "ty": "thm",
            "vars": {
                "s": "real set",
                "t": "real"
            }
        },
        {
            "name": "real_convex_on_rpow_integer",
            "prop": "s ⊆ {x. 0 < x} ∧ integer t ⟶ real_convex_on (λx. x ^ t) s",
            "ty": "thm",
            "vars": {
                "s": "real set",
                "t": "real"
            }
        },
        {
            "name": "real_convex_on_real_inv",
            "prop": "s ⊆ {x. 0 < x} ⟶ real_convex_on real_inverse s",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_real_",
            "prop": [
                "real_convex_on f s ∧ is_realinterval s ∧ (∀x. x ∈ s ⟶ 0 ≤ f x) ",
                "⟶ real_convex_on (λx. f x ^ n) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "n": "nat",
                "s": "real set"
            }
        },
        {
            "name": "real_convex_on_log",
            "prop": "s ⊆ {x. 0 < x} ⟶ real_convex_on (λx. -(log x)) s",
            "ty": "thm",
            "vars": {
                "s": "real set"
            }
        },
        {
            "name": "real_continuous_midpoint_convex",
            "prop": [
                "real_continuous_on f s ∧ ",
                "is_realinterval s ∧ (∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ f ((x + y) / 2) ≤ (f x + f y) / 2) ",
                "⟶ real_convex_on f s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "agm_gen",
            "prop": [
                "finite k ∧ sum k a = 1 ∧ (∀i. i ∈ k ⟶ 0 ≤ a i ∧ 0 ≤ x i) ",
                "⟶ product k (λi. x i ^ a i) ≤ sum k (λi. a i * x i)"
            ],
            "ty": "thm",
            "vars": {
                "a": "'a ⇒ real",
                "k": "'a set",
                "x": "'a ⇒ real"
            }
        },
        {
            "name": "agm_rpow",
            "prop": [
                "has_size k n ∧ ¬(n = 0) ∧ (∀i. i ∈ k ⟶ 0 ≤ x i) ",
                "⟶ product k (λi. x i ^ (1 / of_nat n)) ≤ sum k (λi. x i / of_nat n)"
            ],
            "ty": "thm",
            "vars": {
                "k": "'a set",
                "n": "nat",
                "x": "'a ⇒ real"
            }
        },
        {
            "name": "agm_boot",
            "prop": [
                "has_size k n ∧ ¬(n = 0) ∧ (∀i. i ∈ k ⟶ 0 ≤ x i) ",
                "⟶ root n (product k x) ≤ sum k x / of_nat n"
            ],
            "ty": "thm",
            "vars": {
                "k": "'a set",
                "n": "nat",
                "x": "'a ⇒ real"
            }
        },
        {
            "name": "agm_sqrt",
            "prop": "0 ≤ x ∧ 0 ≤ y ⟶ sqrt (x + y) ≤ (x + y) / 2",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "agm",
            "prop": [
                "has_size k n ∧ ¬(n = 0) ∧ (∀i. i ∈ k ⟶ 0 ≤ x i) ",
                "⟶ product k x ≤ (sum k x / of_nat n) ^ n"
            ],
            "ty": "thm",
            "vars": {
                "k": "'a set",
                "n": "nat",
                "x": "'a ⇒ real"
            }
        },
        {
            "name": "agm_2",
            "prop": "0 ≤ x ∧ 0 ≤ y ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ x ^ u * y ^ v ≤ u * x + v * y",
            "ty": "thm",
            "vars": {
                "u": "real",
                "v": "real",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "young_inequality",
            "prop": [
                "0 ≤ x ∧ 0 ≤ y ∧ 0 < u ∧ 0 < v ∧ real_inverse u + real_inverse v = 1 ",
                "⟶ x * y ≤ x ^ u / u + y ^ v / v"
            ],
            "ty": "thm",
            "vars": {
                "u": "real",
                "v": "real",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "hoelder",
            "prop": [
                "finite k ∧ sum k a = 1 ∧ (∀i. i ∈ k ⟶ 0 ≤ a i ∧ 0 ≤ x i ∧ 0 ≤ y i) ",
                "⟶ product k (λi. x i ^ a i) + product k (λi. y i ^ a i) ≤ ",
                "   product k (λi. (x i + y i) ^ a i)"
            ],
            "ty": "thm",
            "vars": {
                "a": "'a ⇒ real",
                "k": "'a set",
                "x": "'a ⇒ real",
                "y": "'a ⇒ real"
            }
        },
        {
            "name": "rpow_minus1_quotient_lt",
            "prop": "0 < a ∧ ¬(a = 1) ∧ 0 < x ∧ x < y ⟶ (a ^ x - 1) / x < (a ^ y - 1) / y",
            "ty": "thm",
            "vars": {
                "a": "real",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "rpow_minus1_quotient_le",
            "prop": "0 < a ∧ ¬(a = 1) ∧ 0 < x ∧ x ≤ y ⟶ (a ^ x - 1) / x ≤ (a ^ y - 1) / y",
            "ty": "thm",
            "vars": {
                "a": "real",
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "real_exp_limit_rpow_lt",
            "prop": "0 < r ∧ r < s ∧ ¬(x = 0) ∧ x < r ⟶ (1 - x / r) ^ r < (1 - x / s) ^ s",
            "ty": "thm",
            "vars": {
                "r": "real",
                "s": "real",
                "x": "real"
            }
        },
        {
            "name": "real_exp_limit_rpow_le",
            "prop": "0 ≤ r ∧ r ≤ s ∧ ¬(x = 0) ∧ x ≤ r ⟶ (1 - x / r) ^ r ≤ (1 - x / s) ^ s",
            "ty": "thm",
            "vars": {
                "r": "real",
                "s": "real",
                "x": "real"
            }
        },
        {
            "name": "real_le_x_sinh",
            "prop": "0 ≤ x ⟶ x ≤ (exp x - real_inverse (exp x)) / 2",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "name": "real_le_abs_sinh",
            "prop": "abs x ≤ abs ((exp x - real_inverse (exp x)) / 2)",
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_log_convex_on",
            "prop": [
                "real_log_convex_on f s ⟷ ",
                "(∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "         ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v)"
            ],
            "ty": "def",
            "type": "(real ⇒ real) ⇒ real set ⇒ bool"
        },
        {
            "name": "real_log_convex_on_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ∀y. ∀u. ∀v. x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "u, real",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR u"
                },
                {
                    "args": "v, real",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR v"
                },
                {
                    "args": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1"
                },
                {
                    "args": "0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "z3",
                    "th": "x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. ∀y. ∀u. ∀v. x ∈ ∅ ∧ y ∈ ∅ ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "real_log_convex_on_def, real_log_convex_on f ∅",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_log_convex_on f ∅"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_log_convex_on f ∅"
                }
            ],
            "prop": "real_log_convex_on f ∅",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "theorem": "real_log_convex_on_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x, y,u,v"
                },
                {
                    "fact_ids": [
                        "0.4"
                    ],
                    "goal_id": "0.5",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real"
            }
        },
        {
            "name": "real_log_convex_on_subset",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "real_log_convex_on f t ∧ s ⊆ t",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ real_log_convex_on f t ∧ s ⊆ t"
                },
                {
                    "args": "real_log_convex_on_def",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ (∀x. ∀y. ∀u. ∀v. x ∈ t ∧ y ∈ t ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v) ∧ s ⊆ t"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ ∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "x, real",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "y, real",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "u, real",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR u"
                },
                {
                    "args": "v, real",
                    "id": "2.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR v"
                },
                {
                    "args": "x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1"
                },
                {
                    "args": "conjD1, {}, {A: ∀x. ∀y. ∀u. ∀v. x ∈ t ∧ y ∈ t ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v, B: s ⊆ t}",
                    "id": "2.5",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ ∀x. ∀y. ∀u. ∀v. x ∈ t ∧ y ∈ t ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "conjD2, {}, {A: ∀x. ∀y. ∀u. ∀v. x ∈ t ∧ y ∈ t ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v, B: s ⊆ t}",
                    "id": "2.6",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ s ⊆ t"
                },
                {
                    "args": "",
                    "id": "2.7",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "real_log_convex_on f t ∧ s ⊆ t, x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ x ∈ t ∧ y ∈ t ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [
                        "2.5",
                        "2.7"
                    ],
                    "rule": "apply_fact",
                    "th": "real_log_convex_on f t ∧ s ⊆ t, x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⊢ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "",
                    "id": "2.9",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2",
                        "2.3",
                        "2.4",
                        "2.8"
                    ],
                    "rule": "intros",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ ∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ⟶ 0 ≤ f (u * x + v * y) ∧ f (u * x + v * y) ≤ f x ^ u * f y ^ v"
                },
                {
                    "args": "real_log_convex_on_def, real_log_convex_on f s",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "real_log_convex_on f t ∧ s ⊆ t ⊢ real_log_convex_on f s"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_log_convex_on f t ∧ s ⊆ t ⟶ real_log_convex_on f s"
                }
            ],
            "prop": "real_log_convex_on f t ∧ s ⊆ t ⟶ real_log_convex_on f s",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "theorem": "real_log_convex_on_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "theorem": "real_log_convex_on_def"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "x,y,u,v"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "2.5"
                    ],
                    "goal_id": "2.7",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set",
                "t": "real set"
            }
        },
        {
            "name": "real_log_convex_on_eq",
            "prop": [
                "is_realinterval s ∧ (∀x. x ∈ s ⟶ f x = g x) ∧ real_log_convex_on f s ",
                "⟶ real_log_convex_on g s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_on_sing",
            "prop": "real_log_convex_on f ({a}) ⟷ 0 ≤ f a",
            "ty": "thm",
            "vars": {
                "a": "real",
                "f": "real ⇒ real"
            }
        },
        {
            "name": "real_log_convex_imp_pos",
            "prop": "real_log_convex_on f s ∧ x ∈ s ⟶ 0 ≤ f x",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set",
                "x": "real"
            }
        },
        {
            "name": "real_log_convex_on_convex",
            "prop": [
                "is_realinterval s ",
                "⟶ real_log_convex_on f s ⟷ ",
                "   (∀x. x ∈ s ⟶ 0 ≤ f x) ∧ ",
                "   (∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "            ⟶ f (u * x + v * y) ≤ f x ^ u * f y ^ v)"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_on",
            "prop": [
                "is_realinterval s ∧ (∀x. x ∈ s ⟶ 0 < f x) ",
                "⟶ real_log_convex_on f s ⟷ real_log_convex_on (log ∘ f) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_imp_convex",
            "prop": "real_log_convex_on f s ⟶ real_convex_on f s",
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_add",
            "prop": [
                "real_log_convex_on f s ∧ real_log_convex_on g s ",
                "⟶ real_log_convex_on (λx. f x + g x) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_mul",
            "prop": [
                "real_log_convex_on f s ∧ real_log_convex_on g s ",
                "⟶ real_log_convex_on (λx. f x * g x) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "g": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "midpoint_real_log_convex",
            "prop": [
                "real_continuous_on f s ∧ ",
                "is_realinterval s ∧ ",
                "(∀x. x ∈ s ⟶ 0 < f x) ∧ ",
                "(∀x. ∀y. x ∈ s ∧ y ∈ s ⟶ f ((x + y) / 2) ^ (2::nat) ≤ f x * f y) ",
                "⟶ real_log_convex_on f s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_const",
            "prop": "0 ≤ a ⟶ real_log_convex_on (λx. a) s",
            "ty": "thm",
            "vars": {
                "a": "real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_product",
            "prop": [
                "finite k ∧ (∀i. i ∈ k ⟶ real_log_convex_on (λx. f x i) s) ",
                "⟶ real_log_convex_on (λx. product k (f x)) s"
            ],
            "ty": "thm",
            "vars": {
                "f": "real ⇒ 'a ⇒ real",
                "k": "'a set",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_rpow_right",
            "prop": "0 < a ⟶ real_log_convex_on (λx. a ^ x) s",
            "ty": "thm",
            "vars": {
                "a": "real",
                "s": "real set"
            }
        },
        {
            "name": "real_log_convex_lim",
            "prop": [
                "¬(trivial_limit net) ∧ ",
                "(∀x. ∀y. ∀u. ∀v. x ∈ s ∧ y ∈ s ∧ 0 ≤ u ∧ 0 ≤ v ∧ u + v = 1 ",
                "         ⟶ tendsto_real (λi. f i (u * x + v * y)) (g (u * x + v * y)) net) ∧ ",
                "eventually (λi. real_log_convex_on (f i) s) net ",
                "⟶ real_log_convex_on g s"
            ],
            "ty": "thm",
            "vars": {
                "f": "'a ⇒ real ⇒ real",
                "g": "real ⇒ real",
                "net": "'a net",
                "s": "real set"
            }
        }
    ],
    "description": "Some analytic concepts for real.",
    "imports": [
        "realderivative"
    ],
    "name": "realseries"
}