{
    "content": [
        {
            "name": "forall_inst",
            "prop": "¬(∀x1. P x1) ∨ P x",
            "ty": "thm",
            "vars": {
                "P": "'a ⇒ bool",
                "x": "'a"
            }
        },
        {
            "name": "or_pos",
            "prop": "¬P ∨ P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "equiv1",
            "prop": "P ⟷ Q ⟶ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv2",
            "prop": "P ⟷ Q ⟶ P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_equiv1",
            "prop": "¬(P ⟷ Q) ⟶ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_equiv2",
            "prop": "¬(P ⟷ Q) ⟶ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_pos1",
            "prop": "¬(P ⟷ Q) ∨ P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_pos2",
            "prop": "¬(P ⟷ Q) ∨ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_neg1",
            "prop": "(P ⟷ Q) ∨ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "equiv_neg2",
            "prop": "(P ⟷ Q) ∨ P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "tmp_LA_pre_int",
            "prop": "x = y ⟷ x ≤ y ∧ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "not_implies1",
            "prop": "¬(P ⟶ Q) ⟶ P",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "not_implies2",
            "prop": "¬(P ⟶ Q) ⟶ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite1",
            "prop": "(if P then Q else R) ⟶ P ∨ R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_ite2",
            "prop": "(if P then Q else R) ⟶ ¬P ∨ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_not_ite1",
            "prop": "¬(if P then Q else R) ⟶ P ∨ ¬R",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "verit_not_ite2",
            "prop": "¬(if P then Q else R) ⟶ ¬P ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool",
                "R": "bool"
            }
        },
        {
            "name": "la_disequality_int",
            "prop": "a = b ∨ ¬(a ≤ b) ∨ ¬(b ≤ a)",
            "ty": "thm",
            "vars": {
                "a": "int",
                "b": "int"
            }
        },
        {
            "name": "la_disequality_real",
            "prop": "a = b ∨ ¬(a ≤ b) ∨ ¬(b ≤ a)",
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "name": "tmp_LA_pre_real",
            "prop": "x = y ⟷ x ≤ y ∧ y ≤ x",
            "ty": "thm",
            "vars": {
                "x": "real",
                "y": "real"
            }
        },
        {
            "name": "neg_neg",
            "prop": "¬¬¬A ∨ A",
            "ty": "thm",
            "vars": {
                "A": "bool"
            }
        },
        {
            "name": "let",
            "rules": [
                {
                    "prop": "let s f = f s"
                }
            ],
            "ty": "def.ind",
            "type": "'a ⇒ ('a ⇒ 'b) ⇒ 'b"
        },
        {
            "name": "connective_def1",
            "prop": "(P ⟷ Q) ⟷ (P ⟶ Q) ∧ (Q ⟶ P)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_ite_intro",
            "prop": "if P then x = (if P then x else y) else y = (if P then x else y)",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "x": "'a",
                "y": "'a"
            }
        },
        {
            "name": "verit_eq_conj",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "Q",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Q ⊢ Q"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q ⊢ P ⟶ P ∧ Q"
                },
                {
                    "args": "P",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⊢ P"
                },
                {
                    "args": "conjI",
                    "id": "1.1",
                    "prevs": [
                        "1.0",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "P, Q ⊢ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "Q ⊢ P ⟶ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "Q ⊢ P ∧ Q ⟶ P"
                },
                {
                    "args": "P ∧ Q",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ∧ Q ⊢ P ∧ Q"
                },
                {
                    "args": "conjD1",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "P ∧ Q ⊢ P"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "Q ⊢ P ∧ Q ⟶ P"
                },
                {
                    "args": "iffI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "Q ⊢ P ⟷ P ∧ Q"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ Q ⟶ P ⟷ P ∧ Q"
                }
            ],
            "prop": "Q ⟶ P ⟷ P ∧ Q",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify6",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ P ⟷ true ⟶ P"
                },
                {
                    "args": "P ⟷ true",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⟷ true ⊢ P ⟷ true"
                },
                {
                    "args": "trueI",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "P",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P ⟷ true ⊢ P"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟷ true ⟶ P"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ P ⟶ P ⟷ true"
                },
                {
                    "args": "P",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P ⊢ P"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P ⊢ P ⟶ true"
                },
                {
                    "args": "trueI",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [
                        "1.0",
                        "1.1.0"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟶ true"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P ⊢ true ⟶ P"
                },
                {
                    "args": "true",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "true ⊢ true"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "intros",
                    "th": "P ⊢ true ⟶ P"
                },
                {
                    "args": "iffI",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "P ⊢ P ⟷ true"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ P ⟶ P ⟷ true"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (P ⟷ true) ⟷ P"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (P ⟷ true) ⟷ P"
                }
            ],
            "prop": "(P ⟷ true) ⟷ P",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.0",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify8",
            "prop": "(P ⟷ false) ⟷ ¬P",
            "ty": "thm",
            "vars": {
                "P": "bool"
            }
        },
        {
            "name": "verit_equiv_simplify1",
            "prop": "(¬P ⟷ ¬Q) ⟷ P ⟷ Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_implies_neg1",
            "prop": "(P ⟶ Q) ∨ P",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_implies_neg2",
            "prop": "(P ⟶ Q) ∨ ¬Q",
            "ty": "thm",
            "vars": {
                "P": "bool",
                "Q": "bool"
            }
        },
        {
            "name": "verit_not_simplify1",
            "prop": "¬true ⟷ false",
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "verit_not_simplify2",
            "prop": "¬false ⟷ true",
            "ty": "thm",
            "vars": {}
        },
        {
            "name": "verit_minus_simplify_3_real",
            "prop": "t = t - 0",
            "ty": "thm",
            "vars": {
                "t": "real"
            }
        },
        {
            "name": "verit_minus_simplify_3_int",
            "prop": "t = t - 0",
            "ty": "thm",
            "vars": {
                "t": "int"
            }
        },
        {
            "name": "verit_minus_simplify_4_real",
            "prop": "0 - t = -t",
            "ty": "thm",
            "vars": {
                "t": "real"
            }
        },
        {
            "name": "verit_minus_simplify_4_int",
            "prop": "0 - t = -t",
            "ty": "thm",
            "vars": {
                "t": "int"
            }
        }
    ],
    "description": "Schematic verit proof rule.",
    "imports": [
        "real"
    ],
    "name": "verit"
}