(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source | 
  Simplify front end test suite.
  This benchmark was translated by Michal Moskal.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun URSHIFT_23.32.26 () Int)
(declare-fun PARENEXPR_pre_24.54.7 () Int)
(declare-fun locId_pre_125.20.13 () Int)
(declare-fun NULL_21.82.26 () Int)
(declare-fun BLOCKSTMT_24.25.7 () Int)
(declare-fun PREPPED_pre_7.775.28 () Int)
(declare-fun elemType_pre_28.18.28 () Int)
(declare-fun int_9223372036854775807 () Int)
(declare-fun decl_42.34 () Int)
(declare-fun boolOr (Int Int) Bool)
(declare-fun FLOATTYPE_22.31.26 () Int)
(declare-fun T_javafe.ast.GenericVarDecl () Int)
(declare-fun T_javafe.util.Location () Int)
(declare-fun T_javafe.ast.BranchStmt () Int)
(declare-fun intFirst () Int)
(declare-fun body_34.34.19 () Int)
(declare-fun POSTFIXDEC_pre_23.63.26 () Int)
(declare-fun DIV_23.35.26 () Int)
(declare-fun BITNOT_23.57.26 () Int)
(declare-fun asChild (Int Int) Int)
(declare-fun arrayFresh (Int Int Int Int Int Int Int) Bool)
(declare-fun TYPEDECLELEMPRAGMA_pre_21.27.26 () Int)
(declare-fun s_javaLangException_212.27 () Int)
(declare-fun T_javafe.ast.Name () Int)
(declare-fun LONGTYPE_pre_22.29.26 () Int)
(declare-fun DOUBLELIT_pre_22.43.26 () Int)
(declare-fun locId_38.38.13 () Int)
(declare-fun SUB_pre_23.34.26 () Int)
(declare-fun FORMALPARADECL_24.24.7 () Int)
(declare-fun T_javafe.ast.AmbiguousVariableAccess () Int)
(declare-fun loc_143.22.13 () Int)
(declare-fun s_javaLangError_203.27 () Int)
(declare-fun FIELDACCESS_pre_24.57.7 () Int)
(declare-fun T_javafe.ast.Modifiers () Int)
(declare-fun owner_pre_4.35.28 () Int)
(declare-fun DOUBLETYPE_pre_22.32.26 () Int)
(declare-fun locSuper_150.20.13 () Int)
(declare-fun T_javafe.ast.LabelStmt () Int)
(declare-fun loc_137.49.13 () Int)
(declare-fun SHORTTYPE_pre_22.36.26 () Int)
(declare-fun T_javafe.ast.ParenExpr () Int)
(declare-fun asField (Int Int) Int)
(declare-fun FORMALPARADECL_pre_24.24.7 () Int)
(declare-fun T_javafe.ast.CatchClause () Int)
(declare-fun TRYFINALLYSTMT_pre_24.42.7 () Int)
(declare-fun DEC_pre_23.59.26 () Int)
(declare-fun tag_pre_49.32.13 () Int)
(declare-fun INC_23.58.26 () Int)
(declare-fun floatType_pre_119.4 () Int)
(declare-fun T_javafe.ast.InstanceOfExpr () Int)
(declare-fun InRange (Int Int) Bool)
(declare-fun SWITCHSTMT_24.26.7 () Int)
(declare-fun intType_pre_111.4 () Int)
(declare-fun EQ_pre_23.25.26 () Int)
(declare-fun T_javafe.ast.BinaryExpr () Int)
(declare-fun INTERFACEDECL_pre_24.18.7 () Int)
(declare-fun locId_pre_146.25.13 () Int)
(declare-fun nullType_pre_131.4 () Int)
(declare-fun locOpenBrace_pre_134.21.13 () Int)
(declare-fun type_137.24.28 () Int)
(declare-fun SYNCHRONIZESTMT_pre_24.31.7 () Int)
(declare-fun tokenType_35.90.8 () Int)
(declare-fun count_161.67.33 () Int)
(declare-fun T_javafe.ast.PrimitiveType () Int)
(declare-fun locIds_pre_153.25.29 () Int)
(declare-fun ASGMUL_23.41.26 () Int)
(declare-fun locOpenParen_pre_132.48.13 () Int)
(declare-fun T_javafe.ast.ArrayInit () Int)
(declare-fun T_javafe.ast.PrettyPrint () Int)
(declare-fun POSTFIXINC_pre_23.62.26 () Int)
(declare-fun noTokens_pre_21.212.27 () Int)
(declare-fun int_2147483647 () Int)
(declare-fun locDots_pre_153.31.29 () Int)
(declare-fun intLast () Int)
(declare-fun locCloseParen_pre_142.21.13 () Int)
(declare-fun longFirst () Int)
(declare-fun THROWSTMT_24.34.7 () Int)
(declare-fun INITBLOCK_pre_24.21.7 () Int)
(declare-fun ASGADD_pre_23.44.26 () Int)
(declare-fun locDot_136.29.13 () Int)
(declare-fun arrayType () Int)
(declare-fun T_javafe.tc.LookupException () Int)
(declare-fun loc_129.29.13 () Int)
(declare-fun lenId_914.30 () Int)
(declare-fun state_7.787.15 () Int)
(declare-fun CHARTYPE_22.30.26 () Int)
(declare-fun DOUBLELIT_22.43.26 () Int)
(declare-fun T_javafe.ast.VariableAccess () Int)
(declare-fun locCloseParen_pre_141.24.13 () Int)
(declare-fun loc_81.29.13 () Int)
(declare-fun CASTEXPR_pre_24.53.7 () Int)
(declare-fun T_javafe.reader.TypeReader () Int)
(declare-fun id_pre_144.21.34 () Int)
(declare-fun value_49.45.16 () Int)
(declare-fun LEXICALPRAGMA_pre_21.24.26 () Int)
(declare-fun LT_pre_23.29.26 () Int)
(declare-fun locOpenBrackets_pre_137.65.29 () Int)
(declare-fun ACC_PUBLIC_pre_32.19.26 () Int)
(declare-fun s_javaLangError_pre_203.27 () Int)
(declare-fun elements_89.61.39 () Int)
(declare-fun loc_pre_49.50.13 () Int)
(declare-fun integralMod (Int Int) Int)
(declare-fun loc_117.20.13 () Int)
(declare-fun IDENT_pre_22.25.26 () Int)
(declare-fun CONCVARSYM (Int) Int)
(declare-fun s_javaLangCloneable_pre_249.27 () Int)
(declare-fun T_short () Int)
(declare-fun RETURNSTMT_24.33.7 () Int)
(declare-fun SUB_23.34.26 () Int)
(declare-fun loc_pre_118.20.13 () Int)
(declare-fun elements_pre_39.61.37 () Int)
(declare-fun NULLLIT_pre_22.45.26 () Int)
(declare-fun SYNCHRONIZESTMT_24.31.7 () Int)
(declare-fun typeof (Int) Int)
(declare-fun AMBIGUOUSVARIABLEACCESS_24.55.7 () Int)
(declare-fun floatType_119.4 () Int)
(declare-fun doubleType_pre_115.4 () Int)
(declare-fun VARDECLSTMT_24.27.7 () Int)
(declare-fun locOpenParen_141.21.13 () Int)
(declare-fun booleanType_pre_107.4 () Int)
(declare-fun termConditional (Int Int Int) Int)
(declare-fun VARIABLEACCESS_24.56.7 () Int)
(declare-fun op_pre_53.26.13 () Int)
(declare-fun Smt.true () Int)
(declare-fun count_pre_88.67.33 () Int)
(declare-fun loc_pre_116.20.13 () Int)
(declare-fun count_pre_161.67.33 () Int)
(declare-fun RSHIFT_pre_23.31.26 () Int)
(declare-fun loc_140.21.13 () Int)
(declare-fun T_byte () Int)
(declare-fun IFSTMT_24.38.7 () Int)
(declare-fun ACC_FINAL_32.23.26 () Int)
(declare-fun loc_18.45.13 () Int)
(declare-fun superCall_132.24.17 () Int)
(declare-fun type_pre_137.24.28 () Int)
(declare-fun locCloseBrace_97.25.13 () Int)
(declare-fun SWITCHLABEL_24.41.7 () Int)
(declare-fun keywordStrings_pre_21.181.30 () Int)
(declare-fun inst_pre_43.29.44 () Int)
(declare-fun NEWARRAYEXPR_pre_24.50.7 () Int)
(declare-fun AND_23.20.26 () Int)
(declare-fun T_java.lang.Integer () Int)
(declare-fun type_38.35.28 () Int)
(declare-fun loc_34.40.13 () Int)
(declare-fun T_java.util.Hashtable () Int)
(declare-fun ADD_pre_23.33.26 () Int)
(declare-fun T_java.io.ByteArrayOutputStream () Int)
(declare-fun T_javafe.tc.OutsideEnv () Int)
(declare-fun elements_138.61.33 () Int)
(declare-fun op_pre_52.35.13 () Int)
(declare-fun TYPESIG_20.6.28 () Int)
(declare-fun loc_pre_131.23.13 () Int)
(declare-fun Smt.false () Int)
(declare-fun ASGBITOR_23.50.26 () Int)
(declare-fun ONDEMANDIMPORTDECL_24.16.7 () Int)
(declare-fun decl_144.28.19 () Int)
(declare-fun longType_pre_123.4 () Int)
(declare-fun COMPILATIONUNIT_pre_24.14.7 () Int)
(declare-fun CATCHCLAUSE_24.45.7 () Int)
(declare-fun BOOLEANTYPE_pre_22.27.26 () Int)
(declare-fun IDENT_22.25.26 () Int)
(declare-fun T_java.lang.Cloneable () Int)
(declare-fun locOpenParen_pre_142.18.13 () Int)
(declare-fun RES_33.16_33.16 () Int)
(declare-fun id_pre_143.19.34 () Int)
(declare-fun locOpenBrace_pre_97.22.13 () Int)
(declare-fun int_m9223372036854775808 () Int)
(declare-fun byteType_135.4 () Int)
(declare-fun tokenType_pre_35.90.8 () Int)
(declare-fun returnType_33.18.28 () Int)
(declare-fun locCloseBrace_18.54.13 () Int)
(declare-fun TYPEMODIFIERPRAGMA_pre_21.28.26 () Int)
(declare-fun ONDEMANDIMPORTDECL_pre_24.16.7 () Int)
(declare-fun TYPENAME_24.64.7 () Int)
(declare-fun T_javafe.ast.SingleTypeImportDecl () Int)
(declare-fun T_javafe.ast.NewInstanceExpr () Int)
(declare-fun s_javaLangPackage_163.28 () Int)
(declare-fun loc_126.22.13 () Int)
(declare-fun elements_pre_161.61.43 () Int)
(declare-fun is (Int Int) Int)
(declare-fun T_java.lang.Exception () Int)
(declare-fun DOUBLETYPE_22.32.26 () Int)
(declare-fun CASTEXPR_24.53.7 () Int)
(declare-fun INTLIT_pre_22.39.26 () Int)
(declare-fun id_33.15.34 () Int)
(declare-fun locKeyword_pre_132.45.13 () Int)
(declare-fun T_java.lang.StringBuffer () Int)
(declare-fun ASSIGN_pre_23.40.26 () Int)
(declare-fun loc_133.22.13 () Int)
(declare-fun POSTFIXINC_23.62.26 () Int)
(declare-fun locKeyword_132.45.13 () Int)
(declare-fun loc_123.18.13 () Int)
(declare-fun nullType_131.4 () Int)
(declare-fun locFirstSemi_pre_127.36.13 () Int)
(declare-fun locOpenParen_pre_136.52.13 () Int)
(declare-fun T_javafe.tc.EnvForCU () Int)
(declare-fun loc_136.49.13 () Int)
(declare-fun LAST_KEYWORD_21.103.26 () Int)
(declare-fun loc_pre_151.20.13 () Int)
(declare-fun loc_pre_137.49.13 () Int)
(declare-fun ARRAYREFEXPR_pre_24.48.7 () Int)
(declare-fun OR_23.19.26 () Int)
(declare-fun T_javafe.ast.Stmt () Int)
(declare-fun loc_121.18.13 () Int)
(declare-fun locOpenBrace_pre_18.51.13 () Int)
(declare-fun loc_25.35.13 () Int)
(declare-fun noTokens_21.212.27 () Int)
(declare-fun T_javafe.ast.GeneratedTags () Int)
(declare-fun s_javaLangThrowable_pre_221.27 () Int)
(declare-fun voidType_103.4 () Int)
(declare-fun locOp_pre_53.32.13 () Int)
(declare-fun VARDECLSTMT_pre_24.27.7 () Int)
(declare-fun BREAKSTMT_pre_24.35.7 () Int)
(declare-fun T_java.lang.Comparable () Int)
(declare-fun T_javafe.tc.Env () Int)
(declare-fun LSHIFT_pre_23.30.26 () Int)
(declare-fun LONGTYPE_22.29.26 () Int)
(declare-fun T_javafe.ast.CompilationUnit () Int)
(declare-fun LONGLIT_pre_22.40.26 () Int)
(declare-fun ASGBITXOR_23.51.26 () Int)
(declare-fun ASGREM_23.43.26 () Int)
(declare-fun locIds_153.25.29 () Int)
(declare-fun T_java.util.EscjavaKeyValue () Int)
(declare-fun locId_125.20.13 () Int)
(declare-fun CONDEXPR_pre_24.51.7 () Int)
(declare-fun loc_pre_130.22.13 () Int)
(declare-fun loc_pre_120.18.13 () Int)
(declare-fun methods_7.883.26 () Int)
(declare-fun T_javafe.ast.ExprObjectDesignator () Int)
(declare-fun intType_111.4 () Int)
(declare-fun type_141.18.28 () Int)
(declare-fun TYPEDECLELEMPRAGMA_21.27.26 () Int)
(declare-fun T_javafe.ast.ClassDeclStmt () Int)
(declare-fun CONSTRUCTORDECL_24.19.7 () Int)
(declare-fun loc_pre_81.29.13 () Int)
(declare-fun VOIDTYPE_22.33.26 () Int)
(declare-fun T_javafe.ast.ObjectDesignator () Int)
(declare-fun locOpenParen_pre_145.30.13 () Int)
(declare-fun isNewArray (Int) Int)
(declare-fun TRYCATCHSTMT_24.43.7 () Int)
(declare-fun member_pre_7.44.39 () Int)
(declare-fun SIMPLENAME_pre_24.66.7 () Int)
(declare-fun T_javafe.tc.FieldDeclVec () Int)
(declare-fun locOpenParen_118.23.13 () Int)
(declare-fun count_pre_39.67.33 () Int)
(declare-fun loc_pre_129.29.13 () Int)
(declare-fun locColon_139.25.13 () Int)
(declare-fun EVALSTMT_pre_24.32.7 () Int)
(declare-fun locOpenBrace_134.21.13 () Int)
(declare-fun locFinally_130.25.13 () Int)
(declare-fun locOp_52.43.13 () Int)
(declare-fun BITAND_23.23.26 () Int)
(declare-fun elements_36.61.43 () Int)
(declare-fun s_javaLangClass_pre_258.27 () Int)
(declare-fun T_java.lang.String () Int)
(declare-fun loc_pre_117.20.13 () Int)
(declare-fun LE_23.28.26 () Int)
(declare-fun T_javafe.ast.FormalParaDeclVec () Int)
(declare-fun T_javafe.ast.InitBlock () Int)
(declare-fun MODIFIERPRAGMA_21.25.26 () Int)
(declare-fun locDot_pre_147.23.13 () Int)
(declare-fun init_pre_137.35.19 () Int)
(declare-fun METHODINVOCATION_pre_24.59.7 () Int)
(declare-fun locId_146.25.13 () Int)
(declare-fun locType_pre_33.21.13 () Int)
(declare-fun locCloseBracket_135.23.13 () Int)
(declare-fun BYTETYPE_22.35.26 () Int)
(declare-fun NULLLIT_22.45.26 () Int)
(declare-fun arrayParent (Int) Int)
(declare-fun modifiers_18.28.13 () Int)
(declare-fun BOOLEANLIT_22.38.26 () Int)
(declare-fun BITNOT_pre_23.57.26 () Int)
(declare-fun DOSTMT_pre_24.30.7 () Int)
(declare-fun locDot_147.23.13 () Int)
(declare-fun NE_23.24.26 () Int)
(declare-fun locQuestion_139.22.13 () Int)
(declare-fun FLOATTYPE_pre_22.31.26 () Int)
(declare-fun loc_pre_140.21.13 () Int)
(declare-fun elements_pre_36.61.43 () Int)
(declare-fun BITOR_pre_23.21.26 () Int)
(declare-fun s_javaLangObject_194.27 () Int)
(declare-fun BITXOR_23.22.26 () Int)
(declare-fun count_89.67.33 () Int)
(declare-fun T_javafe.tc.TagConstants () Int)
(declare-fun locId_pre_144.24.13 () Int)
(declare-fun SKIPSTMT_24.40.7 () Int)
(declare-fun elemtype (Int) Int)
(declare-fun simpleName_7.37.38 () Int)
(declare-fun LOCALVARDECL_24.22.7 () Int)
(declare-fun myTypeDecl_7.63.40 () Int)
(declare-fun locColon_pre_139.25.13 () Int)
(declare-fun state_pre_7.787.15 () Int)
(declare-fun id_pre_146.20.34 () Int)
(declare-fun locOpenParen_146.28.13 () Int)
(declare-fun boolImplies (Int Int) Bool)
(declare-fun member_7.44.39 () Int)
(declare-fun type_pre_141.18.28 () Int)
(declare-fun locOp_pre_52.43.13 () Int)
(declare-fun SWITCHSTMT_pre_24.26.7 () Int)
(declare-fun T_java.lang.Object () Int)
(declare-fun BLOCKSTMT_pre_24.25.7 () Int)
(declare-fun classDown (Int Int) Int)
(declare-fun DEC_23.59.26 () Int)
(declare-fun T_javafe.ast.TryFinallyStmt () Int)
(declare-fun booleanType_107.4 () Int)
(declare-fun tag_pre_25.30.13 () Int)
(declare-fun T_javafe.ast.ASTNode () Int)
(declare-fun inst_pre_19.36 () Int)
(declare-fun T_javafe.ast.CondExpr () Int)
(declare-fun LAST_KEYWORD_pre_21.103.26 () Int)
(declare-fun loc_108.18.13 () Int)
(declare-fun NEWINSTANCEEXPR_24.49.7 () Int)
(declare-fun simpleName_30.43 () Int)
(declare-fun TRYCATCHSTMT_pre_24.43.7 () Int)
(declare-fun LEXICALPRAGMA_21.24.26 () Int)
(declare-fun OR_pre_23.19.26 () Int)
(declare-fun locGuardOpenParen_pre_116.23.13 () Int)
(declare-fun loc_151.20.13 () Int)
(declare-fun locId_pre_18.48.13 () Int)
(declare-fun T_javafe.ast.CompoundName () Int)
(declare-fun ASGBITXOR_pre_23.51.26 () Int)
(declare-fun SINGLETYPEIMPORTDECL_pre_24.15.7 () Int)
(declare-fun T_javafe.ast.TypeDecl () Int)
(declare-fun loc_pre_126.22.13 () Int)
(declare-fun locId_pre_34.43.13 () Int)
(declare-fun locOpenBracket_135.20.13 () Int)
(declare-fun T_javafe.ast.ClassLiteral () Int)
(declare-fun T_javafe.ast.TypeName () Int)
(declare-fun locOpenBrace_pre_34.36.13 () Int)
(declare-fun NOTFOUND_pre_47.10.26 () Int)
(declare-fun T_javafe.ast.SimpleName () Int)
(declare-fun locDot_pre_132.41.13 () Int)
(declare-fun INTLIT_22.39.26 () Int)
(declare-fun T_javafe.tc.TypeSig () Int)
(declare-fun NE_pre_23.24.26 () Int)
(declare-fun LONGLIT_22.40.26 () Int)
(declare-fun EVALSTMT_24.32.7 () Int)
(declare-fun ASGDIV_pre_23.42.26 () Int)
(declare-fun loc_113.18.13 () Int)
(declare-fun loc_pre_133.22.13 () Int)
(declare-fun CONDEXPR_24.51.7 () Int)
(declare-fun loc_pre_123.18.13 () Int)
(declare-fun intShiftL (Int Int) Int)
(declare-fun T_java.util.Dictionary () Int)
(declare-fun NULL_pre_21.82.26 () Int)
(declare-fun boolAnd (Int Int) Bool)
(declare-fun loc_pre_25.35.13 () Int)
(declare-fun T_javafe.tc.Types () Int)
(declare-fun lenId_pre_914.30 () Int)
(declare-fun op_53.26.13 () Int)
(declare-fun loc_pre_136.49.13 () Int)
(declare-fun enclosingEnv_31.25 () Int)
(declare-fun UNARYADD_23.54.26 () Int)
(declare-fun FORSTMT_24.39.7 () Int)
(declare-fun FLOATLIT_22.42.26 () Int)
(declare-fun count_152.67.33 () Int)
(declare-fun loc_130.22.13 () Int)
(declare-fun loc_120.18.13 () Int)
(declare-fun CONTINUESTMT_24.36.7 () Int)
(declare-fun elems () Int)
(declare-fun T_javafe.parser.TagConstants () Int)
(declare-fun MODIFIERPRAGMA_pre_21.25.26 () Int)
(declare-fun loc_pre_121.18.13 () Int)
(declare-fun locOpenBrace_97.22.13 () Int)
(declare-fun enclosingInstance_pre_136.25.14 () Int)
(declare-fun decl_32.30 () Int)
(declare-fun locId_pre_38.38.13 () Int)
(declare-fun op_52.35.13 () Int)
(declare-fun T_javafe.ast.NewArrayExpr () Int)
(declare-fun T_javafe.ast.ArrayRefExpr () Int)
(declare-fun T_javafe.ast.TypeDeclElem () Int)
(declare-fun elements_39.61.37 () Int)
(declare-fun longType_123.4 () Int)
(declare-fun fClosedTime (Int) Int)
(declare-fun T_java.io.OutputStream () Int)
(declare-fun T_javafe.ast.TagConstants () Int)
(declare-fun SWITCHLABEL_pre_24.41.7 () Int)
(declare-fun type_140.18.28 () Int)
(declare-fun T_javafe.ast.InterfaceDecl () Int)
(declare-fun BYTETYPE_pre_22.35.26 () Int)
(declare-fun keywordStrings_21.181.30 () Int)
(declare-fun locOpenBracket_pre_28.21.13 () Int)
(declare-fun T_javafe.ast.ThrowStmt () Int)
(declare-fun longLast () Int)
(declare-fun WHILESTMT_pre_24.29.7 () Int)
(declare-fun T_javafe.ast.Expr () Int)
(declare-fun LABELSTMT_pre_24.37.7 () Int)
(declare-fun T_javafe.ast.ContinueStmt () Int)
(declare-fun FIRST_KEYWORD_21.51.26 () Int)
(declare-fun INC_pre_23.58.26 () Int)
(declare-fun T_javafe.ast.ForStmt () Int)
(declare-fun T_javafe.ast.OnDemandImportDecl () Int)
(declare-fun nonnullelements (Int Int) Bool)
(declare-fun T_javafe.ast.ModifierPragmaVec () Int)
(declare-fun NOTFOUND_47.10.26 () Int)
(declare-fun T_javafe.ast.TryCatchStmt () Int)
(declare-fun ASSIGN_23.40.26 () Int)
(declare-fun charType_pre_127.4 () Int)
(declare-fun AND_pre_23.20.26 () Int)
(declare-fun eClosedTime (Int) Int)
(declare-fun locOpenBrace_18.51.13 () Int)
(declare-fun COMPOUNDNAME_pre_24.67.7 () Int)
(declare-fun locOpenParen_pre_141.21.13 () Int)
(declare-fun enclosingInstance_pre_132.37.14 () Int)
(declare-fun args_34.30.41 () Int)
(declare-fun count_pre_36.67.33 () Int)
(declare-fun SKIPSTMT_pre_24.40.7 () Int)
(declare-fun loc_pre_127.33.13 () Int)
(declare-fun CLASSLITERAL_24.60.7 () Int)
(declare-fun CONSTRUCTORDECL_pre_24.19.7 () Int)
(declare-fun s_javaLangCloneable_249.27 () Int)
(declare-fun count_pre_152.67.33 () Int)
(declare-fun CLASSLITERAL_pre_24.60.7 () Int)
(declare-fun s_javaLangObject_pre_194.27 () Int)
(declare-fun refEQ (Int Int) Int)
(declare-fun punctuationStrings_21.134.22 () Int)
(declare-fun s_javaLangString_230.27 () Int)
(declare-fun divides (Int Int) Int)
(declare-fun T_javafe.ast.ReturnStmt () Int)
(declare-fun CLASSDECL_pre_24.17.7 () Int)
(declare-fun stringCat (Int Int) Int)
(declare-fun locDot_pre_82.21.13 () Int)
(declare-fun T_javafe.util.Assert () Int)
(declare-fun EQ_23.25.26 () Int)
(declare-fun CATCHCLAUSE_pre_24.45.7 () Int)
(declare-fun T_java.lang.Double () Int)
(declare-fun id_146.20.34 () Int)
(declare-fun count_88.67.33 () Int)
(declare-fun INTTYPE_pre_22.28.26 () Int)
(declare-fun loc_128.16.13 () Int)
(declare-fun LT_23.29.26 () Int)
(declare-fun after_43.11_43.11 () Int)
(declare-fun T_javafe.ast.TypeObjectDesignator () Int)
(declare-fun SHORTTYPE_22.36.26 () Int)
(declare-fun POSTFIXDEC_23.63.26 () Int)
(declare-fun ASGLSHIFT_23.46.26 () Int)
(declare-fun type_pre_140.18.28 () Int)
(declare-fun T_float () Int)
(declare-fun s_javaLangThrowable_221.27 () Int)
(declare-fun isAllocated (Int Int) Bool)
(declare-fun value_pre_49.45.16 () Int)
(declare-fun T_javafe.ast.ClassDecl () Int)
(declare-fun otherStrings_pre_21.193.30 () Int)
(declare-fun ASGURSHIFT_23.48.26 () Int)
(declare-fun ASGMUL_pre_23.41.26 () Int)
(declare-fun elements_pre_152.61.39 () Int)
(declare-fun CHARLIT_22.41.26 () Int)
(declare-fun T_javafe.ast.IfStmt () Int)
(declare-fun elems_pre () Int)
(declare-fun decl_pre_146.34.20 () Int)
(declare-fun FIELDDECL_24.23.7 () Int)
(declare-fun CONSTRUCTORINVOCATION_pre_24.44.7 () Int)
(declare-fun loc_pre_108.18.13 () Int)
(declare-fun store1 (Int Int Int) Int)
(declare-fun store2 (Int Int Int Int) Int)
(declare-fun otherStrings_21.193.30 () Int)
(declare-fun COMPILATIONUNIT_24.14.7 () Int)
(declare-fun s_javaLangRuntimeException_240.27 () Int)
(declare-fun T_javafe.ast.SynchronizeStmt () Int)
(declare-fun select1 (Int Int) Int)
(declare-fun select2 (Int Int Int) Int)
(declare-fun T_javafe.ast.MethodDecl () Int)
(declare-fun s_javaLangException_pre_212.27 () Int)
(declare-fun STRINGLIT_pre_22.44.26 () Int)
(declare-fun longShiftL (Int Int) Int)
(declare-fun dims_pre_137.45.31 () Int)
(declare-fun STMTPRAGMA_21.26.26 () Int)
(declare-fun COMPOUNDNAME_24.67.7 () Int)
(declare-fun NULLTYPE_22.34.26 () Int)
(declare-fun multiply (Int Int) Int)
(declare-fun int_m2147483648 () Int)
(declare-fun T_java.lang.Class () Int)
(declare-fun locQuestion_pre_139.22.13 () Int)
(declare-fun otherCodes_21.202.27 () Int)
(declare-fun ASGADD_23.44.26 () Int)
(declare-fun doubleType_115.4 () Int)
(declare-fun refNE (Int Int) Int)
(declare-fun loc_pre_113.18.13 () Int)
(declare-fun locId_144.24.13 () Int)
(declare-fun locSuper_pre_150.20.13 () Int)
(declare-fun NOT_pre_23.56.26 () Int)
(declare-fun this () Int)
(declare-fun locOpenBrackets_137.65.29 () Int)
(declare-fun BITOR_23.21.26 () Int)
(declare-fun T_javafe.ast.ConstructorDecl () Int)
(declare-fun classLiteral (Int) Int)
(declare-fun modulo (Int Int) Int)
(declare-fun alloc () Int)
(declare-fun T_javafe.ast.FieldAccess () Int)
(declare-fun STRINGLIT_22.44.26 () Int)
(declare-fun CHARLIT_pre_22.41.26 () Int)
(declare-fun PREPPED_7.775.28 () Int)
(declare-fun BOOLEANLIT_pre_22.38.26 () Int)
(declare-fun integralEQ (Int Int) Int)
(declare-fun vAllocTime (Int) Int)
(declare-fun otherCodes_pre_21.202.27 () Int)
(declare-fun id_144.21.34 () Int)
(declare-fun id_pre_38.32.34 () Int)
(declare-fun locOpenParen_pre_118.23.13 () Int)
(declare-fun owner_4.35.28 () Int)
(declare-fun T_javafe.ast.MethodInvocation () Int)
(declare-fun ASGRSHIFT_23.47.26 () Int)
(declare-fun punctuationCodes_21.164.19 () Int)
(declare-fun INSTANCEOFEXPR_24.52.7 () Int)
(declare-fun init_137.35.19 () Int)
(declare-fun locOpenBrace_34.36.13 () Int)
(declare-fun tag_49.32.13 () Int)
(declare-fun LE_pre_23.28.26 () Int)
(declare-fun integralGE (Int Int) Int)
(declare-fun T_javafe.ast.RoutineDecl () Int)
(declare-fun ARRAYREFEXPR_24.48.7 () Int)
(declare-fun TYPEOBJECTDESIGNATOR_pre_24.62.7 () Int)
(declare-fun BITXOR_pre_23.22.26 () Int)
(declare-fun integralGT (Int Int) Int)
(declare-fun BITAND_pre_23.23.26 () Int)
(declare-fun GE_23.26.26 () Int)
(declare-fun LSHIFT_23.30.26 () Int)
(declare-fun loc_127.33.13 () Int)
(declare-fun CLASSDECL_24.17.7 () Int)
(declare-fun locType_33.21.13 () Int)
(declare-fun locCloseBrace_pre_134.24.13 () Int)
(declare-fun NOT_23.56.26 () Int)
(declare-fun asElems (Int) Int)
(declare-fun UNARYSUB_pre_23.55.26 () Int)
(declare-fun count_39.67.33 () Int)
(declare-fun URSHIFT_pre_23.32.26 () Int)
(declare-fun type_pre_147.20.28 () Int)
(declare-fun METHODDECL_pre_24.20.7 () Int)
(declare-fun lockLE (Int Int) Bool)
(declare-fun UNARYSUB_23.55.26 () Int)
(declare-fun ASGURSHIFT_pre_23.48.26 () Int)
(declare-fun enclosingType_pre_7.32.39 () Int)
(declare-fun T_javafe.ast.EvalStmt () Int)
(declare-fun s_javaLangRuntimeException_pre_240.27 () Int)
(declare-fun LOCALVARDECL_pre_24.22.7 () Int)
(declare-fun args_pre_34.30.41 () Int)
(declare-fun body_pre_34.34.19 () Int)
(declare-fun decl_pre_143.26.38 () Int)
(declare-fun lockLT (Int Int) Bool)
(declare-fun ACC_PUBLIC_32.19.26 () Int)
(declare-fun voidType_pre_103.4 () Int)
(declare-fun T_javafe.ast.ExprVec () Int)
(declare-fun FORSTMT_pre_24.39.7 () Int)
(declare-fun T_java.lang.Boolean () Int)
(declare-fun INSTANCEOFEXPR_pre_24.52.7 () Int)
(declare-fun T_javafe.ast.TypeNameVec () Int)
(declare-fun enclosingEnv_7.52.36 () Int)
(declare-fun locDots_153.31.29 () Int)
(declare-fun locDot_82.21.13 () Int)
(declare-fun AMBIGUOUSMETHODINVOCATION_pre_24.58.7 () Int)
(declare-fun TYPESIG_pre_20.6.28 () Int)
(declare-fun arrayShapeOne (Int) Int)
(declare-fun byteType_pre_135.4 () Int)
(declare-fun integralLE (Int Int) Int)
(declare-fun T_javafe.ast.DoStmt () Int)
(declare-fun locDot_pre_136.29.13 () Int)
(declare-fun locOpenParen_132.48.13 () Int)
(declare-fun integralLT (Int Int) Int)
(declare-fun locOpenParen_pre_146.28.13 () Int)
(declare-fun T_javafe.ast.BreakStmt () Int)
(declare-fun INTERFACEDECL_24.18.7 () Int)
(declare-fun VARIABLEACCESS_pre_24.56.7 () Int)
(declare-fun T_javafe.ast.Type () Int)
(declare-fun locOpenBracket_28.21.13 () Int)
(declare-fun LABELSTMT_24.37.7 () Int)
(declare-fun id_143.19.34 () Int)
(declare-fun CLASSDECLSTMT_24.28.7 () Int)
(declare-fun RETURNSTMT_pre_24.33.7 () Int)
(declare-fun EXPROBJECTDESIGNATOR_24.61.7 () Int)
(declare-fun integralNE (Int Int) Int)
(declare-fun THISEXPR_24.47.7 () Int)
(declare-fun loc_pre_128.16.13 () Int)
(declare-fun T_javafe.ast.ThisExpr () Int)
(declare-fun T_javafe.ast.FormalParaDecl () Int)
(declare-fun T_java.lang.Long () Int)
(declare-fun THISEXPR_pre_24.47.7 () Int)
(declare-fun PARSED_7.772.28 () Int)
(declare-fun EC_43.11_43.11 () Int)
(declare-fun myTypeDecl_pre_7.63.40 () Int)
(declare-fun EXPROBJECTDESIGNATOR_pre_24.61.7 () Int)
(declare-fun AMBIGUOUSVARIABLEACCESS_pre_24.55.7 () Int)
(declare-fun lengthFieldDecl_917.40 () Int)
(declare-fun ARRAYTYPE_24.65.7 () Int)
(declare-fun T_javafe.ast.LocalVarDecl () Int)
(declare-fun locCloseBrace_134.24.13 () Int)
(declare-fun SUPEROBJECTDESIGNATOR_24.63.7 () Int)
(declare-fun T_javafe.ast.CastExpr () Int)
(declare-fun ASGBITAND_23.49.26 () Int)
(declare-fun THROWSTMT_pre_24.34.7 () Int)
(declare-fun TYPEMODIFIERPRAGMA_21.28.26 () Int)
(declare-fun T_javafe.ast.ConstructorInvocation () Int)
(declare-fun CHARTYPE_pre_22.30.26 () Int)
(declare-fun int_4294967295 () Int)
(declare-fun DIV_pre_23.35.26 () Int)
(declare-fun loc_19.30.13 () Int)
(declare-fun fields_7.875.27 () Int)
(declare-fun T_java.io.Serializable () Int)
(declare-fun RSHIFT_23.31.26 () Int)
(declare-fun integralOr (Int Int) Int)
(declare-fun T_javafe.ast.FieldDecl () Int)
(declare-fun count_138.67.33 () Int)
(declare-fun T_java.lang.Throwable () Int)
(declare-fun METHODDECL_24.20.7 () Int)
(declare-fun NEWINSTANCEEXPR_pre_24.49.7 () Int)
(declare-fun SUPEROBJECTDESIGNATOR_pre_24.63.7 () Int)
(declare-fun TYPENAME_pre_24.64.7 () Int)
(declare-fun ids_pre_153.19.37 () Int)
(declare-fun CONSTRUCTORINVOCATION_24.44.7 () Int)
(declare-fun methods_pre_7.883.26 () Int)
(declare-fun CLASSDECLSTMT_pre_24.28.7 () Int)
(declare-fun T_javafe.ast.OperatorTags () Int)
(declare-fun BREAKSTMT_24.35.7 () Int)
(declare-fun T_javafe.ast.SwitchStmt () Int)
(declare-fun lengthFieldDecl_pre_917.40 () Int)
(declare-fun null () Int)
(declare-fun FLOATLIT_pre_22.42.26 () Int)
(declare-fun shortType_pre_139.4 () Int)
(declare-fun T_char () Int)
(declare-fun int_18446744073709551615 () Int)
(declare-fun DOSTMT_24.30.7 () Int)
(declare-fun locDot_132.41.13 () Int)
(declare-fun elements_pre_89.61.39 () Int)
(declare-fun locOpenBracket_pre_135.20.13 () Int)
(declare-fun modifiers_pre_18.28.13 () Int)
(declare-fun T_java.util.Map () Int)
(declare-fun NULL_46.60.26 () Int)
(declare-fun asLockSet (Int) Int)
(declare-fun INITBLOCK_24.21.7 () Int)
(declare-fun CU_pre_7.71.30 () Int)
(declare-fun METHODINVOCATION_24.59.7 () Int)
(declare-fun T_java.lang.Number () Int)
(declare-fun decl_146.34.20 () Int)
(declare-fun T_javafe.ast.SkipStmt () Int)
(declare-fun length_78.50.25 () Int)
(declare-fun locFinally_pre_130.25.13 () Int)
(declare-fun syntax_8.28.29 () Int)
(declare-fun UNARYADD_pre_23.54.26 () Int)
(declare-fun enclosingInstance_136.25.14 () Int)
(declare-fun AMBIGUOUSMETHODINVOCATION_24.58.7 () Int)
(declare-fun subtypes (Int Int) Bool)
(declare-fun locOp_53.32.13 () Int)
(declare-fun locGuardOpenParen_116.23.13 () Int)
(declare-fun elements_152.61.39 () Int)
(declare-fun elements_161.61.43 () Int)
(declare-fun T_int () Int)
(declare-fun punctuationStrings_pre_21.134.22 () Int)
(declare-fun locOpenParen_142.18.13 () Int)
(declare-fun elemType_28.18.28 () Int)
(declare-fun max (Int) Int)
(declare-fun CU_7.71.30 () Int)
(declare-fun count_pre_138.67.33 () Int)
(declare-fun ASGDIV_23.42.26 () Int)
(declare-fun GE_pre_23.26.26 () Int)
(declare-fun IFSTMT_pre_24.38.7 () Int)
(declare-fun T_javafe.ast.IdentifierVec () Int)
(declare-fun T_javafe.ast.SwitchLabel () Int)
(declare-fun locCloseBracket_pre_135.23.13 () Int)
(declare-fun ids_153.19.37 () Int)
(declare-fun T_boolean () Int)
(declare-fun ARRAYTYPE_pre_24.65.7 () Int)
(declare-fun syntax_pre_8.28.29 () Int)
(declare-fun fields_pre_7.875.27 () Int)
(declare-fun NEWARRAYEXPR_24.50.7 () Int)
(declare-fun ARRAYINIT_24.46.7 () Int)
(declare-fun ASGRSHIFT_pre_23.47.26 () Int)
(declare-fun loc_pre_143.22.13 () Int)
(declare-fun ADD_23.33.26 () Int)
(declare-fun ASGSUB_23.45.26 () Int)
(declare-fun NULL_pre_46.60.26 () Int)
(declare-fun T_javafe.ast.VarInit () Int)
(declare-fun T_.TYPE () Int)
(declare-fun T_javafe.ast.WhileStmt () Int)
(declare-fun locOpenParen_136.52.13 () Int)
(declare-fun locCloseBrace_pre_97.25.13 () Int)
(declare-fun LS () Int)
(declare-fun shortType_139.4 () Int)
(declare-fun enclosingInstance_132.37.14 () Int)
(declare-fun T_double () Int)
(declare-fun inst_19.36 () Int)
(declare-fun ASGREM_pre_23.43.26 () Int)
(declare-fun VOIDTYPE_pre_22.33.26 () Int)
(declare-fun PARENEXPR_24.54.7 () Int)
(declare-fun T_javafe.ast.ModifierPragma () Int)
(declare-fun dims_137.45.31 () Int)
(declare-fun WHILESTMT_24.29.7 () Int)
(declare-fun T_javafe.ast.GenericBlockStmt () Int)
(declare-fun SIMPLENAME_24.66.7 () Int)
(declare-fun FIRST_KEYWORD_pre_21.51.26 () Int)
(declare-fun count_36.67.33 () Int)
(declare-fun TYPEOBJECTDESIGNATOR_24.62.7 () Int)
(declare-fun STAR_pre_23.37.26 () Int)
(declare-fun arrayShapeMore (Int Int) Int)
(declare-fun ARRAYINIT_pre_24.46.7 () Int)
(declare-fun GT_23.27.26 () Int)
(declare-fun ASGBITOR_pre_23.50.26 () Int)
(declare-fun boolEq (Int Int) Bool)
(declare-fun ecReturn () Int)
(declare-fun elements_pre_138.61.33 () Int)
(declare-fun arrayLength (Int) Int)
(declare-fun enclosingEnv_pre_7.52.36 () Int)
(declare-fun s_javaLangClass_258.27 () Int)
(declare-fun T_long () Int)
(declare-fun INTTYPE_22.28.26 () Int)
(declare-fun arrayPosition (Int) Int)
(declare-fun T_javafe.ast.SuperObjectDesignator () Int)
(declare-fun STMTPRAGMA_pre_21.26.26 () Int)
(declare-fun T_javafe.ast.BlockStmt () Int)
(declare-fun STAR_23.37.26 () Int)
(declare-fun inst_43.29.44 () Int)
(declare-fun T_javafe.reader.Reader () Int)
(declare-fun BOOLEANTYPE_22.27.26 () Int)
(declare-fun locCloseBrace_pre_18.54.13 () Int)
(declare-fun T_javafe.ast.LiteralExpr () Int)
(declare-fun simpleName_pre_7.37.38 () Int)
(declare-fun T_javafe.ast.UnaryExpr () Int)
(declare-fun PARSED_pre_7.772.28 () Int)
(declare-fun array (Int) Int)
(declare-fun id_38.32.34 () Int)
(declare-fun TRYFINALLYSTMT_24.42.7 () Int)
(declare-fun FIELDDECL_pre_24.23.7 () Int)
(declare-fun T_java.lang.Float () Int)
(declare-fun type_pre_38.35.28 () Int)
(declare-fun locCloseParen_142.21.13 () Int)
(declare-fun loc_118.20.13 () Int)
(declare-fun integralXor (Int Int) Int)
(declare-fun decl_143.26.38 () Int)
(declare-fun locOpenParen_145.30.13 () Int)
(declare-fun id_pre_33.15.34 () Int)
(declare-fun T_javafe.ast.VarDeclStmt () Int)
(declare-fun decl_pre_144.28.19 () Int)
(declare-fun loc_49.50.13 () Int)
(declare-fun cast (Int Int) Int)
(declare-fun MOD_23.36.26 () Int)
(declare-fun boolNot (Int) Bool)
(declare-fun ASGBITAND_pre_23.49.26 () Int)
(declare-fun GT_pre_23.27.26 () Int)
(declare-fun loc_pre_19.30.13 () Int)
(declare-fun locCloseParen_141.24.13 () Int)
(declare-fun integralDiv (Int Int) Int)
(declare-fun elements_88.61.38 () Int)
(declare-fun loc_116.20.13 () Int)
(declare-fun CONTINUESTMT_pre_24.36.7 () Int)
(declare-fun RES_43.11_43.11 () Int)
(declare-fun simpleName_40.47 () Int)
(declare-fun ASGSUB_pre_23.45.26 () Int)
(declare-fun alloc_pre () Int)
(declare-fun T_javafe.ast.Identifier () Int)
(declare-fun integralAnd (Int Int) Int)
(declare-fun count_pre_89.67.33 () Int)
(declare-fun type_147.20.28 () Int)
(declare-fun SINGLETYPEIMPORTDECL_24.15.7 () Int)
(declare-fun T_javafe.ast.ArrayType () Int)
(declare-fun locFirstSemi_127.36.13 () Int)
(declare-fun returnType_pre_33.18.28 () Int)
(declare-fun length_pre_78.50.25 () Int)
(declare-fun loc_131.23.13 () Int)
(declare-fun loc_pre_18.45.13 () Int)
(declare-fun charType_127.4 () Int)
(declare-fun locId_18.48.13 () Int)
(declare-fun ASGLSHIFT_pre_23.46.26 () Int)
(declare-fun ACC_FINAL_pre_32.23.26 () Int)
(declare-fun s_javaLangPackage_pre_163.28 () Int)
(declare-fun T_javafe.ast.AmbiguousMethodInvocation () Int)
(declare-fun FIELDACCESS_24.57.7 () Int)
(declare-fun superCall_pre_132.24.17 () Int)
(declare-fun boolNE (Int Int) Bool)
(declare-fun loc_pre_34.40.13 () Int)
(declare-fun elements_pre_88.61.38 () Int)
(declare-fun locId_34.43.13 () Int)
(declare-fun s_javaLangString_pre_230.27 () Int)
(declare-fun T_javafe.ast.ASTDecoration () Int)
(declare-fun tag_25.30.13 () Int)
(declare-fun punctuationCodes_pre_21.164.19 () Int)
(declare-fun enclosingEnv_41.29 () Int)
(declare-fun enclosingType_7.32.39 () Int)
(declare-fun NULLTYPE_pre_22.34.26 () Int)
(declare-fun MOD_pre_23.36.26 () Int)
(declare-fun T_javafe.ast.ImportDecl () Int)
(declare-fun EC_33.16_33.16 () Int)
(declare-fun T_javafe.tc.MethodDeclVec () Int)
(declare-fun bool_false () Int)
(assert (subtypes T_javafe.ast.ClassLiteral T_javafe.ast.Expr))
(assert (= T_javafe.ast.ClassLiteral (asChild T_javafe.ast.ClassLiteral T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.ASTNode T_java.lang.Object))
(assert (= T_javafe.ast.ASTNode (asChild T_javafe.ast.ASTNode T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ASTNode T_java.lang.Cloneable))
(assert (subtypes T_javafe.ast.ClassDecl T_javafe.ast.TypeDecl))
(assert (= T_javafe.ast.ClassDecl (asChild T_javafe.ast.ClassDecl T_javafe.ast.TypeDecl)))
(assert (subtypes T_java.util.Hashtable T_java.util.Dictionary))
(assert (= T_java.util.Hashtable (asChild T_java.util.Hashtable T_java.util.Dictionary)))
(assert (subtypes T_java.util.Hashtable T_java.util.Map))
(assert (subtypes T_java.util.Hashtable T_java.lang.Cloneable))
(assert (subtypes T_java.util.Hashtable T_java.io.Serializable))
(assert (subtypes T_javafe.reader.Reader T_java.lang.Object))
(assert (= T_javafe.reader.Reader (asChild T_javafe.reader.Reader T_java.lang.Object)))
(assert (subtypes T_javafe.ast.PrettyPrint T_java.lang.Object))
(assert (= T_javafe.ast.PrettyPrint (asChild T_javafe.ast.PrettyPrint T_java.lang.Object)))
(assert (subtypes T_java.lang.Exception T_java.lang.Throwable))
(assert (= T_java.lang.Exception (asChild T_java.lang.Exception T_java.lang.Throwable)))
(assert (subtypes T_java.io.Serializable T_java.lang.Object))
(assert (subtypes T_javafe.ast.BreakStmt T_javafe.ast.BranchStmt))
(assert (= T_javafe.ast.BreakStmt (asChild T_javafe.ast.BreakStmt T_javafe.ast.BranchStmt)))
(assert (subtypes T_javafe.util.Assert T_java.lang.Object))
(assert (= T_javafe.util.Assert (asChild T_javafe.util.Assert T_java.lang.Object)))
(assert (subtypes T_javafe.ast.GenericVarDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.GenericVarDecl (asChild T_javafe.ast.GenericVarDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_java.util.Map T_java.lang.Object))
(assert (subtypes T_java.util.Map T_java.util.EscjavaKeyValue))
(assert (subtypes T_javafe.ast.ArrayInit T_javafe.ast.VarInit))
(assert (= T_javafe.ast.ArrayInit (asChild T_javafe.ast.ArrayInit T_javafe.ast.VarInit)))
(assert (subtypes T_javafe.ast.BinaryExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.BinaryExpr (asChild T_javafe.ast.BinaryExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.PrimitiveType T_javafe.ast.Type))
(assert (= T_javafe.ast.PrimitiveType (asChild T_javafe.ast.PrimitiveType T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.InterfaceDecl T_javafe.ast.TypeDecl))
(assert (= T_javafe.ast.InterfaceDecl (asChild T_javafe.ast.InterfaceDecl T_javafe.ast.TypeDecl)))
(assert (subtypes T_javafe.ast.FieldAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.FieldAccess (asChild T_javafe.ast.FieldAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.SimpleName T_javafe.ast.Name))
(assert (= T_javafe.ast.SimpleName (asChild T_javafe.ast.SimpleName T_javafe.ast.Name)))
(assert (subtypes T_javafe.ast.TypeObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.TypeObjectDesignator (asChild T_javafe.ast.TypeObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_javafe.ast.OperatorTags T_java.lang.Object))
(assert (= T_javafe.ast.OperatorTags (asChild T_javafe.ast.OperatorTags T_java.lang.Object)))
(assert (subtypes T_javafe.ast.OperatorTags T_javafe.ast.GeneratedTags))
(assert (subtypes T_javafe.tc.TagConstants T_javafe.parser.TagConstants))
(assert (= T_javafe.tc.TagConstants (asChild T_javafe.tc.TagConstants T_javafe.parser.TagConstants)))
(assert (subtypes T_java.lang.Double T_java.lang.Number))
(assert (= T_java.lang.Double (asChild T_java.lang.Double T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Double) (= ?t T_java.lang.Double)) :pattern ((subtypes ?t T_java.lang.Double)) )))
(assert (subtypes T_java.lang.Double T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.TagConstants T_javafe.ast.OperatorTags))
(assert (= T_javafe.ast.TagConstants (asChild T_javafe.ast.TagConstants T_javafe.ast.OperatorTags)))
(assert (subtypes T_javafe.ast.SwitchStmt T_javafe.ast.GenericBlockStmt))
(assert (= T_javafe.ast.SwitchStmt (asChild T_javafe.ast.SwitchStmt T_javafe.ast.GenericBlockStmt)))
(assert (subtypes T_javafe.ast.IdentifierVec T_java.lang.Object))
(assert (= T_javafe.ast.IdentifierVec (asChild T_javafe.ast.IdentifierVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.TryCatchStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.TryCatchStmt (asChild T_javafe.ast.TryCatchStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ThrowStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ThrowStmt (asChild T_javafe.ast.ThrowStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.Stmt T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Stmt (asChild T_javafe.ast.Stmt T_javafe.ast.ASTNode)))
(assert (subtypes T_java.lang.Number T_java.lang.Object))
(assert (= T_java.lang.Number (asChild T_java.lang.Number T_java.lang.Object)))
(assert (subtypes T_java.lang.Number T_java.io.Serializable))
(assert (subtypes T_java.lang.Cloneable T_java.lang.Object))
(assert (subtypes T_javafe.ast.Modifiers T_java.lang.Object))
(assert (= T_javafe.ast.Modifiers (asChild T_javafe.ast.Modifiers T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ParenExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ParenExpr (asChild T_javafe.ast.ParenExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.MethodInvocation T_javafe.ast.Expr))
(assert (= T_javafe.ast.MethodInvocation (asChild T_javafe.ast.MethodInvocation T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.LiteralExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.LiteralExpr (asChild T_javafe.ast.LiteralExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.tc.TypeSig T_javafe.ast.Type))
(assert (= T_javafe.tc.TypeSig (asChild T_javafe.tc.TypeSig T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.ObjectDesignator T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ObjectDesignator (asChild T_javafe.ast.ObjectDesignator T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.LocalVarDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.LocalVarDecl (asChild T_javafe.ast.LocalVarDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.ArrayType T_javafe.ast.Type))
(assert (= T_javafe.ast.ArrayType (asChild T_javafe.ast.ArrayType T_javafe.ast.Type)))
(assert (subtypes T_java.lang.String T_java.lang.Object))
(assert (= T_java.lang.String (asChild T_java.lang.String T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.String) (= ?t T_java.lang.String)) :pattern ((subtypes ?t T_java.lang.String)) )))
(assert (subtypes T_java.lang.String T_java.io.Serializable))
(assert (subtypes T_java.lang.String T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.SingleTypeImportDecl T_javafe.ast.ImportDecl))
(assert (= T_javafe.ast.SingleTypeImportDecl (asChild T_javafe.ast.SingleTypeImportDecl T_javafe.ast.ImportDecl)))
(assert (subtypes T_javafe.ast.SkipStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SkipStmt (asChild T_javafe.ast.SkipStmt T_javafe.ast.Stmt)))
(assert (subtypes T_java.io.OutputStream T_java.lang.Object))
(assert (= T_java.io.OutputStream (asChild T_java.io.OutputStream T_java.lang.Object)))
(assert (subtypes T_java.lang.Comparable T_java.lang.Object))
(assert (subtypes T_javafe.ast.ReturnStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ReturnStmt (asChild T_javafe.ast.ReturnStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.CondExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.CondExpr (asChild T_javafe.ast.CondExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.FormalParaDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.FormalParaDecl (asChild T_javafe.ast.FormalParaDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.ImportDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ImportDecl (asChild T_javafe.ast.ImportDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.ArrayRefExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ArrayRefExpr (asChild T_javafe.ast.ArrayRefExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.TypeName T_javafe.ast.Type))
(assert (= T_javafe.ast.TypeName (asChild T_javafe.ast.TypeName T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.EvalStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.EvalStmt (asChild T_javafe.ast.EvalStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.BlockStmt T_javafe.ast.GenericBlockStmt))
(assert (= T_javafe.ast.BlockStmt (asChild T_javafe.ast.BlockStmt T_javafe.ast.GenericBlockStmt)))
(assert (subtypes T_javafe.ast.UnaryExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.UnaryExpr (asChild T_javafe.ast.UnaryExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.tc.Types T_java.lang.Object))
(assert (= T_javafe.tc.Types (asChild T_javafe.tc.Types T_java.lang.Object)))
(assert (subtypes T_javafe.tc.FieldDeclVec T_java.lang.Object))
(assert (= T_javafe.tc.FieldDeclVec (asChild T_javafe.tc.FieldDeclVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.Expr T_javafe.ast.VarInit))
(assert (= T_javafe.ast.Expr (asChild T_javafe.ast.Expr T_javafe.ast.VarInit)))
(assert (subtypes T_java.lang.Throwable T_java.lang.Object))
(assert (= T_java.lang.Throwable (asChild T_java.lang.Throwable T_java.lang.Object)))
(assert (subtypes T_java.lang.Throwable T_java.io.Serializable))
(assert (subtypes T_javafe.ast.CatchClause T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.CatchClause (asChild T_javafe.ast.CatchClause T_javafe.ast.ASTNode)))
(assert (subtypes T_java.io.ByteArrayOutputStream T_java.io.OutputStream))
(assert (= T_java.io.ByteArrayOutputStream (asChild T_java.io.ByteArrayOutputStream T_java.io.OutputStream)))
(assert (subtypes T_javafe.ast.BranchStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.BranchStmt (asChild T_javafe.ast.BranchStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ModifierPragmaVec T_java.lang.Object))
(assert (= T_javafe.ast.ModifierPragmaVec (asChild T_javafe.ast.ModifierPragmaVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.VariableAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.VariableAccess (asChild T_javafe.ast.VariableAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.CompilationUnit T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.CompilationUnit (asChild T_javafe.ast.CompilationUnit T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.ModifierPragma T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ModifierPragma (asChild T_javafe.ast.ModifierPragma T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.ExprObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.ExprObjectDesignator (asChild T_javafe.ast.ExprObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_java.lang.Boolean T_java.lang.Object))
(assert (= T_java.lang.Boolean (asChild T_java.lang.Boolean T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Boolean) (= ?t T_java.lang.Boolean)) :pattern ((subtypes ?t T_java.lang.Boolean)) )))
(assert (subtypes T_java.lang.Boolean T_java.io.Serializable))
(assert (subtypes T_java.lang.Float T_java.lang.Number))
(assert (= T_java.lang.Float (asChild T_java.lang.Float T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Float) (= ?t T_java.lang.Float)) :pattern ((subtypes ?t T_java.lang.Float)) )))
(assert (subtypes T_java.lang.Float T_java.lang.Comparable))
(assert (subtypes T_java.util.EscjavaKeyValue T_java.lang.Object))
(assert (subtypes T_javafe.ast.InitBlock T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.InitBlock (asChild T_javafe.ast.InitBlock T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.InitBlock T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.SynchronizeStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SynchronizeStmt (asChild T_javafe.ast.SynchronizeStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.tc.OutsideEnv T_java.lang.Object))
(assert (= T_javafe.tc.OutsideEnv (asChild T_javafe.tc.OutsideEnv T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_javafe.tc.OutsideEnv) (= ?t T_javafe.tc.OutsideEnv)) :pattern ((subtypes ?t T_javafe.tc.OutsideEnv)) )))
(assert (subtypes T_javafe.ast.GeneratedTags T_java.lang.Object))
(assert (subtypes T_javafe.ast.TryFinallyStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.TryFinallyStmt (asChild T_javafe.ast.TryFinallyStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.AmbiguousMethodInvocation T_javafe.ast.Expr))
(assert (= T_javafe.ast.AmbiguousMethodInvocation (asChild T_javafe.ast.AmbiguousMethodInvocation T_javafe.ast.Expr)))
(assert (subtypes T_java.lang.StringBuffer T_java.lang.Object))
(assert (= T_java.lang.StringBuffer (asChild T_java.lang.StringBuffer T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.StringBuffer) (= ?t T_java.lang.StringBuffer)) :pattern ((subtypes ?t T_java.lang.StringBuffer)) )))
(assert (subtypes T_java.lang.StringBuffer T_java.io.Serializable))
(assert (subtypes T_javafe.ast.CastExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.CastExpr (asChild T_javafe.ast.CastExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.GenericBlockStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.GenericBlockStmt (asChild T_javafe.ast.GenericBlockStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ForStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ForStmt (asChild T_javafe.ast.ForStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.tc.MethodDeclVec T_java.lang.Object))
(assert (= T_javafe.tc.MethodDeclVec (asChild T_javafe.tc.MethodDeclVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ExprVec T_java.lang.Object))
(assert (= T_javafe.ast.ExprVec (asChild T_javafe.ast.ExprVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ConstructorInvocation T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ConstructorInvocation (asChild T_javafe.ast.ConstructorInvocation T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.AmbiguousVariableAccess (asChild T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.NewArrayExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.NewArrayExpr (asChild T_javafe.ast.NewArrayExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.TypeDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.TypeDecl (asChild T_javafe.ast.TypeDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.TypeDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.DoStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.DoStmt (asChild T_javafe.ast.DoStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.MethodDecl T_javafe.ast.RoutineDecl))
(assert (= T_javafe.ast.MethodDecl (asChild T_javafe.ast.MethodDecl T_javafe.ast.RoutineDecl)))
(assert (subtypes T_javafe.ast.IfStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.IfStmt (asChild T_javafe.ast.IfStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ThisExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ThisExpr (asChild T_javafe.ast.ThisExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.SuperObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.SuperObjectDesignator (asChild T_javafe.ast.SuperObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_javafe.ast.WhileStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.WhileStmt (asChild T_javafe.ast.WhileStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ASTDecoration T_java.lang.Object))
(assert (= T_javafe.ast.ASTDecoration (asChild T_javafe.ast.ASTDecoration T_java.lang.Object)))
(assert (subtypes T_javafe.util.Location T_java.lang.Object))
(assert (= T_javafe.util.Location (asChild T_javafe.util.Location T_java.lang.Object)))
(assert (subtypes T_javafe.ast.FieldDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.FieldDecl (asChild T_javafe.ast.FieldDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.FieldDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.LabelStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.LabelStmt (asChild T_javafe.ast.LabelStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.Identifier T_java.lang.Object))
(assert (= T_javafe.ast.Identifier (asChild T_javafe.ast.Identifier T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_javafe.ast.Identifier) (= ?t T_javafe.ast.Identifier)) :pattern ((subtypes ?t T_javafe.ast.Identifier)) )))
(assert (subtypes T_javafe.ast.VarInit T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.VarInit (asChild T_javafe.ast.VarInit T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.FormalParaDeclVec T_java.lang.Object))
(assert (= T_javafe.ast.FormalParaDeclVec (asChild T_javafe.ast.FormalParaDeclVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.Name T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Name (asChild T_javafe.ast.Name T_javafe.ast.ASTNode)))
(assert (subtypes T_java.util.Dictionary T_java.lang.Object))
(assert (= T_java.util.Dictionary (asChild T_java.util.Dictionary T_java.lang.Object)))
(assert (subtypes T_java.util.Dictionary T_java.util.EscjavaKeyValue))
(assert (subtypes T_javafe.tc.Env T_java.lang.Object))
(assert (= T_javafe.tc.Env (asChild T_javafe.tc.Env T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ClassDeclStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ClassDeclStmt (asChild T_javafe.ast.ClassDeclStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.parser.TagConstants T_javafe.ast.TagConstants))
(assert (= T_javafe.parser.TagConstants (asChild T_javafe.parser.TagConstants T_javafe.ast.TagConstants)))
(assert (subtypes T_javafe.ast.SwitchLabel T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SwitchLabel (asChild T_javafe.ast.SwitchLabel T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.tc.EnvForCU T_javafe.tc.Env))
(assert (= T_javafe.tc.EnvForCU (asChild T_javafe.tc.EnvForCU T_javafe.tc.Env)))
(assert (subtypes T_javafe.ast.Type T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Type (asChild T_javafe.ast.Type T_javafe.ast.ASTNode)))
(assert (subtypes T_java.lang.Long T_java.lang.Number))
(assert (= T_java.lang.Long (asChild T_java.lang.Long T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Long) (= ?t T_java.lang.Long)) :pattern ((subtypes ?t T_java.lang.Long)) )))
(assert (subtypes T_java.lang.Long T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.InstanceOfExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.InstanceOfExpr (asChild T_javafe.ast.InstanceOfExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.tc.LookupException T_java.lang.Exception))
(assert (= T_javafe.tc.LookupException (asChild T_javafe.tc.LookupException T_java.lang.Exception)))
(assert (subtypes T_javafe.ast.TypeNameVec T_java.lang.Object))
(assert (= T_javafe.ast.TypeNameVec (asChild T_javafe.ast.TypeNameVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ContinueStmt T_javafe.ast.BranchStmt))
(assert (= T_javafe.ast.ContinueStmt (asChild T_javafe.ast.ContinueStmt T_javafe.ast.BranchStmt)))
(assert (subtypes T_javafe.ast.OnDemandImportDecl T_javafe.ast.ImportDecl))
(assert (= T_javafe.ast.OnDemandImportDecl (asChild T_javafe.ast.OnDemandImportDecl T_javafe.ast.ImportDecl)))
(assert (subtypes T_javafe.ast.CompoundName T_javafe.ast.Name))
(assert (= T_javafe.ast.CompoundName (asChild T_javafe.ast.CompoundName T_javafe.ast.Name)))
(assert (subtypes T_javafe.ast.TypeDeclElem T_java.lang.Object))
(assert (subtypes T_javafe.ast.RoutineDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.RoutineDecl (asChild T_javafe.ast.RoutineDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.RoutineDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.ConstructorDecl T_javafe.ast.RoutineDecl))
(assert (= T_javafe.ast.ConstructorDecl (asChild T_javafe.ast.ConstructorDecl T_javafe.ast.RoutineDecl)))
(assert (subtypes T_javafe.reader.TypeReader T_javafe.reader.Reader))
(assert (= T_javafe.reader.TypeReader (asChild T_javafe.reader.TypeReader T_javafe.reader.Reader)))
(assert (subtypes T_javafe.ast.NewInstanceExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.NewInstanceExpr (asChild T_javafe.ast.NewInstanceExpr T_javafe.ast.Expr)))
(assert (subtypes T_java.lang.Integer T_java.lang.Number))
(assert (= T_java.lang.Integer (asChild T_java.lang.Integer T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Integer) (= ?t T_java.lang.Integer)) :pattern ((subtypes ?t T_java.lang.Integer)) )))
(assert (subtypes T_java.lang.Integer T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.VarDeclStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.VarDeclStmt (asChild T_javafe.ast.VarDeclStmt T_javafe.ast.Stmt)))
(assert (distinct arrayType T_boolean T_char T_byte T_short T_int T_long T_float T_double T_.TYPE T_javafe.ast.ClassLiteral T_javafe.ast.ASTNode T_javafe.ast.ClassDecl T_java.util.Hashtable T_javafe.reader.Reader T_javafe.ast.PrettyPrint T_java.lang.Exception T_java.io.Serializable T_javafe.ast.BreakStmt T_javafe.util.Assert T_javafe.ast.GenericVarDecl T_java.util.Map T_javafe.ast.ArrayInit T_javafe.ast.BinaryExpr T_javafe.ast.PrimitiveType T_javafe.ast.InterfaceDecl T_javafe.ast.FieldAccess T_javafe.ast.SimpleName T_javafe.ast.TypeObjectDesignator T_javafe.ast.OperatorTags T_javafe.tc.TagConstants T_java.lang.Double T_javafe.ast.TagConstants T_javafe.ast.SwitchStmt T_javafe.ast.IdentifierVec T_javafe.ast.TryCatchStmt T_javafe.ast.ThrowStmt T_javafe.ast.Stmt T_java.lang.Number T_java.lang.Cloneable T_javafe.ast.Modifiers T_javafe.ast.ParenExpr T_javafe.ast.MethodInvocation T_java.lang.Object T_javafe.ast.LiteralExpr T_javafe.tc.TypeSig T_javafe.ast.ObjectDesignator T_javafe.ast.LocalVarDecl T_javafe.ast.ArrayType T_java.lang.String T_javafe.ast.SingleTypeImportDecl T_javafe.ast.SkipStmt T_java.io.OutputStream T_java.lang.Comparable T_javafe.ast.ReturnStmt T_javafe.ast.CondExpr T_javafe.ast.FormalParaDecl T_javafe.ast.ImportDecl T_javafe.ast.ArrayRefExpr T_javafe.ast.TypeName T_javafe.ast.EvalStmt T_javafe.ast.BlockStmt T_javafe.ast.UnaryExpr T_javafe.tc.Types T_javafe.tc.FieldDeclVec T_javafe.ast.Expr T_java.lang.Throwable T_javafe.ast.CatchClause T_java.io.ByteArrayOutputStream T_javafe.ast.BranchStmt T_javafe.ast.ModifierPragmaVec T_javafe.ast.VariableAccess T_javafe.ast.CompilationUnit T_javafe.ast.ModifierPragma T_javafe.ast.ExprObjectDesignator T_java.lang.Boolean T_java.lang.Float T_java.util.EscjavaKeyValue T_javafe.ast.InitBlock T_javafe.ast.SynchronizeStmt T_javafe.tc.OutsideEnv T_javafe.ast.GeneratedTags T_javafe.ast.TryFinallyStmt T_javafe.ast.AmbiguousMethodInvocation T_java.lang.StringBuffer T_javafe.ast.CastExpr T_javafe.ast.GenericBlockStmt T_javafe.ast.ForStmt T_javafe.tc.MethodDeclVec T_javafe.ast.ExprVec T_javafe.ast.ConstructorInvocation T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.NewArrayExpr T_javafe.ast.TypeDecl T_javafe.ast.DoStmt T_javafe.ast.MethodDecl T_javafe.ast.IfStmt T_javafe.ast.ThisExpr T_javafe.ast.SuperObjectDesignator T_javafe.ast.WhileStmt T_javafe.ast.ASTDecoration T_javafe.util.Location T_javafe.ast.FieldDecl T_javafe.ast.LabelStmt T_javafe.ast.Identifier T_javafe.ast.VarInit T_javafe.ast.FormalParaDeclVec T_javafe.ast.Name T_java.util.Dictionary T_javafe.tc.Env T_javafe.ast.ClassDeclStmt T_javafe.parser.TagConstants T_javafe.ast.SwitchLabel T_javafe.tc.EnvForCU T_javafe.ast.Type T_java.lang.Long T_javafe.ast.InstanceOfExpr T_javafe.tc.LookupException T_javafe.ast.TypeNameVec T_javafe.ast.ContinueStmt T_javafe.ast.OnDemandImportDecl T_javafe.ast.CompoundName T_javafe.ast.TypeDeclElem T_javafe.ast.RoutineDecl T_javafe.ast.ConstructorDecl T_javafe.reader.TypeReader T_javafe.ast.NewInstanceExpr T_java.lang.Integer T_javafe.ast.VarDeclStmt))
(assert (= Smt.true (is INC_23.58.26 T_int)))
(assert (= INC_23.58.26 89))
(assert (= Smt.true (is PARSED_7.772.28 T_int)))
(assert (= PARSED_7.772.28 2))
(assert (= Smt.true (is ARRAYREFEXPR_24.48.7 T_int)))
(assert (= ARRAYREFEXPR_24.48.7 34))
(assert (= Smt.true (is ASGDIV_23.42.26 T_int)))
(assert (= ASGDIV_23.42.26 75))
(assert (= Smt.true (is STMTPRAGMA_21.26.26 T_int)))
(assert (= STMTPRAGMA_21.26.26 116))
(assert (= Smt.true (is THROWSTMT_24.34.7 T_int)))
(assert (= THROWSTMT_24.34.7 20))
(assert (= Smt.true (is INTLIT_22.39.26 T_int)))
(assert (= INTLIT_22.39.26 105))
(assert (= Smt.true (is GE_23.26.26 T_int)))
(assert (= GE_23.26.26 61))
(assert (= Smt.true (is METHODDECL_24.20.7 T_int)))
(assert (= METHODDECL_24.20.7 6))
(assert (= Smt.true (is EXPROBJECTDESIGNATOR_24.61.7 T_int)))
(assert (= EXPROBJECTDESIGNATOR_24.61.7 47))
(assert (= Smt.true (is BITNOT_23.57.26 T_int)))
(assert (= BITNOT_23.57.26 88))
(assert (= Smt.true (is THISEXPR_24.47.7 T_int)))
(assert (= THISEXPR_24.47.7 33))
(assert (= Smt.true (is ASGMUL_23.41.26 T_int)))
(assert (= ASGMUL_23.41.26 74))
(assert (= Smt.true (is ACC_FINAL_32.23.26 T_int)))
(assert (= ACC_FINAL_32.23.26 16))
(assert (= Smt.true (is RETURNSTMT_24.33.7 T_int)))
(assert (= RETURNSTMT_24.33.7 19))
(assert (= Smt.true (is MODIFIERPRAGMA_21.25.26 T_int)))
(assert (= MODIFIERPRAGMA_21.25.26 115))
(assert (= Smt.true (is BOOLEANLIT_22.38.26 T_int)))
(assert (= BOOLEANLIT_22.38.26 104))
(assert (= Smt.true (is EQ_23.25.26 T_int)))
(assert (= EQ_23.25.26 60))
(assert (= Smt.true (is CONSTRUCTORDECL_24.19.7 T_int)))
(assert (= CONSTRUCTORDECL_24.19.7 5))
(assert (= Smt.true (is CLASSLITERAL_24.60.7 T_int)))
(assert (= CLASSLITERAL_24.60.7 46))
(assert (= Smt.true (is NOT_23.56.26 T_int)))
(assert (= NOT_23.56.26 87))
(assert (= Smt.true (is ARRAYINIT_24.46.7 T_int)))
(assert (= ARRAYINIT_24.46.7 32))
(assert (= Smt.true (is punctuationCodes_21.164.19 (array T_int))))
(assert (not (= punctuationCodes_21.164.19 null)))
(assert (= (typeof punctuationCodes_21.164.19) (array T_int)))
(assert (= (arrayLength punctuationCodes_21.164.19) 48))
(assert (= Smt.true (is ASSIGN_23.40.26 T_int)))
(assert (= ASSIGN_23.40.26 73))
(assert (= Smt.true (is EVALSTMT_24.32.7 T_int)))
(assert (= EVALSTMT_24.32.7 18))
(assert (= Smt.true (is SHORTTYPE_22.36.26 T_int)))
(assert (= SHORTTYPE_22.36.26 103))
(assert (= Smt.true (is NE_23.24.26 T_int)))
(assert (= NE_23.24.26 59))
(assert (= Smt.true (is INTERFACEDECL_24.18.7 T_int)))
(assert (= INTERFACEDECL_24.18.7 4))
(assert (= Smt.true (is METHODINVOCATION_24.59.7 T_int)))
(assert (= METHODINVOCATION_24.59.7 45))
(assert (= Smt.true (is LEXICALPRAGMA_21.24.26 T_int)))
(assert (= LEXICALPRAGMA_21.24.26 114))
(assert (= Smt.true (is UNARYSUB_23.55.26 T_int)))
(assert (= UNARYSUB_23.55.26 86))
(assert (= Smt.true (is CATCHCLAUSE_24.45.7 T_int)))
(assert (= CATCHCLAUSE_24.45.7 31))
(assert (= Smt.true (is FIRST_KEYWORD_21.51.26 T_int)))
(assert (= FIRST_KEYWORD_21.51.26 133))
(assert (= Smt.true (is STAR_23.37.26 T_int)))
(assert (= STAR_23.37.26 72))
(assert (= Smt.true (is LAST_KEYWORD_21.103.26 T_int)))
(assert (= LAST_KEYWORD_21.103.26 183))
(assert (= Smt.true (is SYNCHRONIZESTMT_24.31.7 T_int)))
(assert (= SYNCHRONIZESTMT_24.31.7 17))
(assert (= Smt.true (is BYTETYPE_22.35.26 T_int)))
(assert (= BYTETYPE_22.35.26 102))
(assert (= Smt.true (is BITAND_23.23.26 T_int)))
(assert (= BITAND_23.23.26 58))
(assert (= Smt.true (is CLASSDECL_24.17.7 T_int)))
(assert (= CLASSDECL_24.17.7 3))
(assert (= Smt.true (is AMBIGUOUSMETHODINVOCATION_24.58.7 T_int)))
(assert (= AMBIGUOUSMETHODINVOCATION_24.58.7 44))
(assert (= Smt.true (is TYPESIG_20.6.28 T_int)))
(assert (= TYPESIG_20.6.28 184))
(assert (= Smt.true (is UNARYADD_23.54.26 T_int)))
(assert (= UNARYADD_23.54.26 85))
(assert (= Smt.true (is NULL_46.60.26 T_int)))
(assert (= NULL_46.60.26 0))
(assert (= Smt.true (is keywordStrings_21.181.30 (array T_java.lang.String))))
(assert (not (= keywordStrings_21.181.30 null)))
(assert (= (typeof keywordStrings_21.181.30) (array T_java.lang.String)))
(assert (= (arrayLength keywordStrings_21.181.30) 51))
(assert (= Smt.true (is CONSTRUCTORINVOCATION_24.44.7 T_int)))
(assert (= CONSTRUCTORINVOCATION_24.44.7 30))
(assert (= Smt.true (is NULL_21.82.26 T_int)))
(assert (= NULL_21.82.26 163))
(assert (= Smt.true (is MOD_23.36.26 T_int)))
(assert (= MOD_23.36.26 71))
(assert (= Smt.true (is DOSTMT_24.30.7 T_int)))
(assert (= DOSTMT_24.30.7 16))
(assert (= Smt.true (is NULLTYPE_22.34.26 T_int)))
(assert (= NULLTYPE_22.34.26 101))
(assert (= Smt.true (is BITXOR_23.22.26 T_int)))
(assert (= BITXOR_23.22.26 57))
(assert (= Smt.true (is ONDEMANDIMPORTDECL_24.16.7 T_int)))
(assert (= ONDEMANDIMPORTDECL_24.16.7 2))
(assert (= Smt.true (is FIELDACCESS_24.57.7 T_int)))
(assert (= FIELDACCESS_24.57.7 43))
(assert (= Smt.true (is ASGBITXOR_23.51.26 T_int)))
(assert (= ASGBITXOR_23.51.26 84))
(assert (= Smt.true (is ACC_PUBLIC_32.19.26 T_int)))
(assert (= ACC_PUBLIC_32.19.26 1))
(assert (= Smt.true (is TRYCATCHSTMT_24.43.7 T_int)))
(assert (= TRYCATCHSTMT_24.43.7 29))
(assert (= Smt.true (is DIV_23.35.26 T_int)))
(assert (= DIV_23.35.26 70))
(assert (= Smt.true (is WHILESTMT_24.29.7 T_int)))
(assert (= WHILESTMT_24.29.7 15))
(assert (= Smt.true (is VOIDTYPE_22.33.26 T_int)))
(assert (= VOIDTYPE_22.33.26 100))
(assert (= Smt.true (is BITOR_23.21.26 T_int)))
(assert (= BITOR_23.21.26 56))
(assert (= Smt.true (is SINGLETYPEIMPORTDECL_24.15.7 T_int)))
(assert (= SINGLETYPEIMPORTDECL_24.15.7 1))
(assert (= Smt.true (is VARIABLEACCESS_24.56.7 T_int)))
(assert (= VARIABLEACCESS_24.56.7 42))
(assert (= Smt.true (is otherCodes_21.202.27 (array T_int))))
(assert (not (= otherCodes_21.202.27 null)))
(assert (= (typeof otherCodes_21.202.27) (array T_int)))
(assert (= (arrayLength otherCodes_21.202.27) 15))
(assert (= Smt.true (is ASGBITOR_23.50.26 T_int)))
(assert (= ASGBITOR_23.50.26 83))
(assert (= Smt.true (is TRYFINALLYSTMT_24.42.7 T_int)))
(assert (= TRYFINALLYSTMT_24.42.7 28))
(assert (= Smt.true (is SUB_23.34.26 T_int)))
(assert (= SUB_23.34.26 69))
(assert (= Smt.true (is CLASSDECLSTMT_24.28.7 T_int)))
(assert (= CLASSDECLSTMT_24.28.7 14))
(assert (= Smt.true (is DOUBLETYPE_22.32.26 T_int)))
(assert (= DOUBLETYPE_22.32.26 99))
(assert (= Smt.true (is COMPILATIONUNIT_24.14.7 T_int)))
(assert (= COMPILATIONUNIT_24.14.7 0))
(assert (= Smt.true (is AMBIGUOUSVARIABLEACCESS_24.55.7 T_int)))
(assert (= AMBIGUOUSVARIABLEACCESS_24.55.7 41))
(assert (= Smt.true (is ASGBITAND_23.49.26 T_int)))
(assert (= ASGBITAND_23.49.26 82))
(assert (= Smt.true (is SWITCHLABEL_24.41.7 T_int)))
(assert (= SWITCHLABEL_24.41.7 27))
(assert (= Smt.true (is ADD_23.33.26 T_int)))
(assert (= ADD_23.33.26 68))
(assert (= Smt.true (is VARDECLSTMT_24.27.7 T_int)))
(assert (= VARDECLSTMT_24.27.7 13))
(assert (= Smt.true (is FLOATTYPE_22.31.26 T_int)))
(assert (= FLOATTYPE_22.31.26 98))
(assert (= Smt.true (is PARENEXPR_24.54.7 T_int)))
(assert (= PARENEXPR_24.54.7 40))
(assert (= Smt.true (is AND_23.20.26 T_int)))
(assert (= AND_23.20.26 55))
(assert (= Smt.true (is ASGURSHIFT_23.48.26 T_int)))
(assert (= ASGURSHIFT_23.48.26 81))
(assert (= Smt.true (is SKIPSTMT_24.40.7 T_int)))
(assert (= SKIPSTMT_24.40.7 26))
(assert (= Smt.true (is NULLLIT_22.45.26 T_int)))
(assert (= NULLLIT_22.45.26 111))
(assert (= Smt.true (is URSHIFT_23.32.26 T_int)))
(assert (= URSHIFT_23.32.26 67))
(assert (= Smt.true (is SWITCHSTMT_24.26.7 T_int)))
(assert (= SWITCHSTMT_24.26.7 12))
(assert (= Smt.true (is COMPOUNDNAME_24.67.7 T_int)))
(assert (= COMPOUNDNAME_24.67.7 53))
(assert (= Smt.true (is otherStrings_21.193.30 (array T_java.lang.String))))
(assert (not (= otherStrings_21.193.30 null)))
(assert (= (typeof otherStrings_21.193.30) (array T_java.lang.String)))
(assert (= (arrayLength otherStrings_21.193.30) 15))
(assert (= Smt.true (is CHARTYPE_22.30.26 T_int)))
(assert (= CHARTYPE_22.30.26 97))
(assert (= Smt.true (is CASTEXPR_24.53.7 T_int)))
(assert (= CASTEXPR_24.53.7 39))
(assert (= Smt.true (is OR_23.19.26 T_int)))
(assert (= OR_23.19.26 54))
(assert (= Smt.true (is ASGRSHIFT_23.47.26 T_int)))
(assert (= ASGRSHIFT_23.47.26 80))
(assert (= Smt.true (is FORSTMT_24.39.7 T_int)))
(assert (= FORSTMT_24.39.7 25))
(assert (= Smt.true (is STRINGLIT_22.44.26 T_int)))
(assert (= STRINGLIT_22.44.26 110))
(assert (= Smt.true (is RSHIFT_23.31.26 T_int)))
(assert (= RSHIFT_23.31.26 66))
(assert (= Smt.true (is BLOCKSTMT_24.25.7 T_int)))
(assert (= BLOCKSTMT_24.25.7 11))
(assert (= Smt.true (is SIMPLENAME_24.66.7 T_int)))
(assert (= SIMPLENAME_24.66.7 52))
(assert (= Smt.true (is LONGTYPE_22.29.26 T_int)))
(assert (= LONGTYPE_22.29.26 96))
(assert (= Smt.true (is INSTANCEOFEXPR_24.52.7 T_int)))
(assert (= INSTANCEOFEXPR_24.52.7 38))
(assert (= Smt.true (is ASGLSHIFT_23.46.26 T_int)))
(assert (= ASGLSHIFT_23.46.26 79))
(assert (= Smt.true (is IFSTMT_24.38.7 T_int)))
(assert (= IFSTMT_24.38.7 24))
(assert (= Smt.true (is DOUBLELIT_22.43.26 T_int)))
(assert (= DOUBLELIT_22.43.26 109))
(assert (= Smt.true (is LSHIFT_23.30.26 T_int)))
(assert (= LSHIFT_23.30.26 65))
(assert (= Smt.true (is FORMALPARADECL_24.24.7 T_int)))
(assert (= FORMALPARADECL_24.24.7 10))
(assert (= Smt.true (is ARRAYTYPE_24.65.7 T_int)))
(assert (= ARRAYTYPE_24.65.7 51))
(assert (= Smt.true (is INTTYPE_22.28.26 T_int)))
(assert (= INTTYPE_22.28.26 95))
(assert (= Smt.true (is POSTFIXDEC_23.63.26 T_int)))
(assert (= POSTFIXDEC_23.63.26 92))
(assert (= Smt.true (is PREPPED_7.775.28 T_int)))
(assert (= PREPPED_7.775.28 5))
(assert (= Smt.true (is CONDEXPR_24.51.7 T_int)))
(assert (= CONDEXPR_24.51.7 37))
(assert (= Smt.true (is ASGSUB_23.45.26 T_int)))
(assert (= ASGSUB_23.45.26 78))
(assert (= Smt.true (is LABELSTMT_24.37.7 T_int)))
(assert (= LABELSTMT_24.37.7 23))
(assert (= Smt.true (is FLOATLIT_22.42.26 T_int)))
(assert (= FLOATLIT_22.42.26 108))
(assert (= Smt.true (is LT_23.29.26 T_int)))
(assert (= LT_23.29.26 64))
(assert (= Smt.true (is TYPEMODIFIERPRAGMA_21.28.26 T_int)))
(assert (= TYPEMODIFIERPRAGMA_21.28.26 118))
(assert (= Smt.true (is FIELDDECL_24.23.7 T_int)))
(assert (= FIELDDECL_24.23.7 9))
(assert (= Smt.true (is TYPENAME_24.64.7 T_int)))
(assert (= TYPENAME_24.64.7 50))
(assert (= Smt.true (is NOTFOUND_47.10.26 T_int)))
(assert (= NOTFOUND_47.10.26 0))
(assert (= Smt.true (is BOOLEANTYPE_22.27.26 T_int)))
(assert (= BOOLEANTYPE_22.27.26 94))
(assert (= Smt.true (is POSTFIXINC_23.62.26 T_int)))
(assert (= POSTFIXINC_23.62.26 91))
(assert (= Smt.true (is NEWARRAYEXPR_24.50.7 T_int)))
(assert (= NEWARRAYEXPR_24.50.7 36))
(assert (= Smt.true (is ASGADD_23.44.26 T_int)))
(assert (= ASGADD_23.44.26 77))
(assert (= Smt.true (is CONTINUESTMT_24.36.7 T_int)))
(assert (= CONTINUESTMT_24.36.7 22))
(assert (= Smt.true (is CHARLIT_22.41.26 T_int)))
(assert (= CHARLIT_22.41.26 107))
(assert (= Smt.true (is LE_23.28.26 T_int)))
(assert (= LE_23.28.26 63))
(assert (= Smt.true (is LOCALVARDECL_24.22.7 T_int)))
(assert (= LOCALVARDECL_24.22.7 8))
(assert (= Smt.true (is SUPEROBJECTDESIGNATOR_24.63.7 T_int)))
(assert (= SUPEROBJECTDESIGNATOR_24.63.7 49))
(assert (= Smt.true (is IDENT_22.25.26 T_int)))
(assert (= IDENT_22.25.26 93))
(assert (= Smt.true (is DEC_23.59.26 T_int)))
(assert (= DEC_23.59.26 90))
(assert (= Smt.true (is TYPEDECLELEMPRAGMA_21.27.26 T_int)))
(assert (= TYPEDECLELEMPRAGMA_21.27.26 117))
(assert (= Smt.true (is NEWINSTANCEEXPR_24.49.7 T_int)))
(assert (= NEWINSTANCEEXPR_24.49.7 35))
(assert (= Smt.true (is ASGREM_23.43.26 T_int)))
(assert (= ASGREM_23.43.26 76))
(assert (= Smt.true (is BREAKSTMT_24.35.7 T_int)))
(assert (= BREAKSTMT_24.35.7 21))
(assert (= Smt.true (is noTokens_21.212.27 T_int)))
(assert (= Smt.true (is LONGLIT_22.40.26 T_int)))
(assert (= LONGLIT_22.40.26 106))
(assert (= Smt.true (is GT_23.27.26 T_int)))
(assert (= GT_23.27.26 62))
(assert (= Smt.true (is punctuationStrings_21.134.22 (array T_java.lang.String))))
(assert (not (= punctuationStrings_21.134.22 null)))
(assert (= (typeof punctuationStrings_21.134.22) (array T_java.lang.String)))
(assert (= (arrayLength punctuationStrings_21.134.22) 48))
(assert (= Smt.true (is INITBLOCK_24.21.7 T_int)))
(assert (= INITBLOCK_24.21.7 7))
(assert (= Smt.true (is TYPEOBJECTDESIGNATOR_24.62.7 T_int)))
(assert (= TYPEOBJECTDESIGNATOR_24.62.7 48))
(assert (forall ((?n Int)) (! (=> (and (<= 0 ?n) (< ?n 63)) (<= 1 (longShiftL 1 ?n))) :pattern ((longShiftL 1 ?n)) )))
(assert (forall ((?n Int)) (! (=> (and (<= 0 ?n) (< ?n 31)) (<= 1 (intShiftL 1 ?n))) :pattern ((intShiftL 1 ?n)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (and (<= 0 ?x) (<= 0 ?y)) (<= 0 (integralXor ?x ?y))) :pattern ((integralXor ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (integralDiv ?x ?y))) (=> (and (<= 0 ?x) (< 0 ?y)) (and (<= 0 ?v_0) (<= ?v_0 ?x)))) :pattern ((integralDiv ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (integralOr ?x ?y))) (=> (and (<= 0 ?x) (<= 0 ?y)) (and (<= ?x ?v_0) (<= ?y ?v_0)))) :pattern ((integralOr ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (<= 0 ?y) (<= (integralAnd ?x ?y) ?y)) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (<= 0 ?x) (<= (integralAnd ?x ?y) ?x)) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (or (<= 0 ?x) (<= 0 ?y)) (<= 0 (integralAnd ?x ?y))) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?t Int)) (! (let ((?v_0 (classLiteral ?t))) (and (not (= ?v_0 null)) (= Smt.true (is ?v_0 T_java.lang.Class)) (isAllocated ?v_0 alloc))) :pattern ((classLiteral ?t)) )))
(assert (forall ((?x Int) (?e Int)) (= (nonnullelements ?x ?e) (and (not (= ?x null)) (forall ((?i Int)) (=> (and (<= 0 ?i) (< ?i (arrayLength ?x))) (not (= (select1 (select1 ?e ?x) ?i) null))))))))
(assert (forall ((?b Int) (?x Int) (?y Int)) (! (=> (not (= ?b Smt.true)) (= (termConditional ?b ?x ?y) ?y)) :pattern ((termConditional ?b ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (termConditional Smt.true ?x ?y) ?x) :pattern ((termConditional Smt.true ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (refNE ?x ?y) Smt.true) (not (= ?x ?y))) :pattern ((refNE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (refEQ ?x ?y) Smt.true) (= ?x ?y)) :pattern ((refEQ ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralNE ?x ?y) Smt.true) (not (= ?x ?y))) :pattern ((integralNE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralLT ?x ?y) Smt.true) (< ?x ?y)) :pattern ((integralLT ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralLE ?x ?y) Smt.true) (<= ?x ?y)) :pattern ((integralLE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralGT ?x ?y) Smt.true) (> ?x ?y)) :pattern ((integralGT ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralGE ?x ?y) Smt.true) (>= ?x ?y)) :pattern ((integralGE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (stringCat ?x ?y))) (and (not (= ?v_0 null)) (subtypes (typeof ?v_0) T_java.lang.String))) :pattern ((stringCat ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralEQ ?x ?y) Smt.true) (= ?x ?y)) :pattern ((integralEQ ?x ?y)) )))
(assert (forall ((?a Int) (?b Int)) (= (boolOr ?a ?b) (or (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int)) (= (boolNot ?a) (not (= ?a Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolNE ?a ?b) (not (= (= ?a Smt.true) (= ?b Smt.true))))))
(assert (forall ((?a Int) (?b Int)) (= (boolImplies ?a ?b) (=> (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolEq ?a ?b) (= (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolAnd ?a ?b) (and (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?x Int) (?y Int)) (let ((?v_0 (multiply ?x ?y))) (= (multiply (integralDiv ?v_0 ?y) ?y) ?v_0))))
(assert (forall ((?i Int) (?j Int)) (= (integralMod (+ ?j ?i) ?j) (integralMod ?i ?j))))
(assert (forall ((?i Int) (?j Int)) (= (integralMod (+ ?i ?j) ?j) (integralMod ?i ?j))))
(assert (forall ((?i Int) (?j Int)) (! (let ((?v_0 (integralMod ?i ?j))) (=> (< ?j 0) (and (< ?j ?v_0) (<= ?v_0 0)))) :pattern ((integralMod ?i ?j)) )))
(assert (forall ((?i Int) (?j Int)) (! (let ((?v_0 (integralMod ?i ?j))) (=> (< 0 ?j) (and (<= 0 ?v_0) (< ?v_0 ?j)))) :pattern ((integralMod ?i ?j)) )))
(assert (forall ((?i Int) (?j Int)) (! (= (+ (multiply (integralDiv ?i ?j) ?j) (integralMod ?i ?j)) ?i) :pattern ((integralMod ?i ?j))  :pattern ((integralDiv ?i ?j)) )))
(assert (forall ((?s Int)) (! (=> (= Smt.true (isNewArray ?s)) (subtypes (typeof ?s) arrayType)) :pattern ((isNewArray ?s)) )))
(assert (forall ((?t Int)) (! (subtypes (array ?t) arrayType) :pattern ((array ?t)) )))
(assert (= arrayType (asChild arrayType T_java.lang.Object)))
(assert (forall ((?a Int) (?a0 Int) (?b0 Int) (?e Int) (?n Int) (?T Int) (?v Int)) (! (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v) (and (<= ?a0 (vAllocTime ?a)) (isAllocated ?a ?b0) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (! (= (select1 (select1 ?e ?a) ?i) ?v) :pattern ((select1 (select1 ?e ?a) ?i)) )))) :pattern ((arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v)) )))
(assert (forall ((?a Int) (?a0 Int) (?b0 Int) (?e Int) (?n Int) (?s Int) (?T Int) (?v Int)) (! (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v) (and (<= ?a0 (vAllocTime ?a)) (isAllocated ?a ?b0) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (! (let ((?v_0 (select1 (select1 ?e ?a) ?i))) (and (arrayFresh ?v_0 ?a0 ?b0 ?e ?s (elemtype ?T) ?v) (= (arrayParent ?v_0) ?a) (= (arrayPosition ?v_0) ?i))) :pattern ((select1 (select1 ?e ?a) ?i)) )))) :pattern ((arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v)) )))
(assert (forall ((?a Int)) (! (let ((?v_0 (arrayLength ?a))) (and (<= 0 ?v_0) (= Smt.true (is ?v_0 T_int)))) :pattern ((arrayLength ?a)) )))
(assert (forall ((?x Int)) (! (=> (subtypes (typeof ?x) T_java.lang.Object) (lockLE null ?x)) :pattern ((lockLE null ?x))  :pattern ((lockLT null ?x))  :pattern ((lockLE ?x null))  :pattern ((lockLT ?x null)) )))
(assert (forall ((?S Int) (?mu Int)) (let ((?v_0 (asLockSet ?S))) (=> (= (select1 ?v_0 ?mu) Smt.true) (lockLE ?mu (max ?v_0))))))
(assert (forall ((?x Int) (?y Int)) (= (lockLT ?x ?y) (< ?x ?y))))
(assert (forall ((?x Int) (?y Int)) (= (lockLE ?x ?y) (<= ?x ?y))))
(assert (forall ((?S Int)) (! (= (select1 (asLockSet ?S) null) Smt.true) :pattern ((asLockSet ?S)) )))
(assert (forall ((?S Int)) (let ((?v_0 (asLockSet ?S))) (= (select1 ?v_0 (max ?v_0)) Smt.true))))
(assert (forall ((?a Int) (?e Int) (?i Int) (?a0 Int)) (! (=> (and (< (eClosedTime ?e) ?a0) (isAllocated ?a ?a0)) (isAllocated (select1 (select1 ?e ?a) ?i) ?a0)) :pattern ((isAllocated (select1 (select1 ?e ?a) ?i) ?a0)) )))
(assert (forall ((?x Int) (?f Int) (?a0 Int)) (! (=> (and (< (fClosedTime ?f) ?a0) (isAllocated ?x ?a0)) (isAllocated (select1 ?f ?x) ?a0)) :pattern ((isAllocated (select1 ?f ?x) ?a0)) )))
(assert (forall ((?x Int) (?a0 Int)) (= (isAllocated ?x ?a0) (< (vAllocTime ?x) ?a0))))
(assert (forall ((?e Int) (?a Int) (?i Int)) (! (= Smt.true (is (select1 (select1 (asElems ?e) ?a) ?i) (elemtype (typeof ?a)))) :pattern ((select1 (select1 (asElems ?e) ?a) ?i)) )))
(assert (forall ((?f Int) (?t Int) (?x Int)) (! (= Smt.true (is (select1 (asField ?f ?t) ?x) ?t)) :pattern ((select1 (asField ?f ?t) ?x)) )))
(assert (forall ((?x Int) (?t Int)) (! (=> (subtypes ?t T_java.lang.Object) (= (= Smt.true (is ?x ?t)) (or (= ?x null) (subtypes (typeof ?x) ?t)))) :pattern ((subtypes ?t T_java.lang.Object) (is ?x ?t)) )))
(assert (< intLast longLast))
(assert (< 1000000 intLast))
(assert (< intFirst (- 1000000)))
(assert (< longFirst intFirst))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_long)) (and (<= longFirst ?x) (<= ?x longLast))) :pattern ((is ?x T_long)) )))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_int)) (and (<= intFirst ?x) (<= ?x intLast))) :pattern ((is ?x T_int)) )))
(assert (forall ((?x Int)) (= (= Smt.true (is ?x T_short)) (and (<= (- 32768) ?x) (<= ?x 32767)))))
(assert (forall ((?x Int)) (= (= Smt.true (is ?x T_byte)) (and (<= (- 128) ?x) (<= ?x 127)))))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_char)) (and (<= 0 ?x) (<= ?x 65535))) :pattern ((is ?x T_char)) )))
(assert (distinct bool_false Smt.true))
(assert (forall ((?x Int) (?t Int)) (! (=> (= Smt.true (is ?x ?t)) (= (cast ?x ?t) ?x)) :pattern ((cast ?x ?t)) )))
(assert (forall ((?x Int) (?t Int)) (! (= Smt.true (is (cast ?x ?t) ?t)) :pattern ((cast ?x ?t)) )))
(assert (forall ((?t0 Int) (?t1 Int)) (! (let ((?v_0 (elemtype ?t0))) (= (subtypes ?t0 (array ?t1)) (and (= ?t0 (array ?v_0)) (subtypes ?v_0 ?t1)))) :pattern ((subtypes ?t0 (array ?t1))) )))
(assert (forall ((?t Int)) (! (= (elemtype (array ?t)) ?t) :pattern ((elemtype (array ?t))) )))
(assert (forall ((?t Int)) (! (subtypes (array ?t) T_java.lang.Cloneable) :pattern ((array ?t)) )))
(assert (subtypes T_java.lang.Cloneable T_java.lang.Object))
(assert (forall ((?t0 Int) (?t1 Int) (?t2 Int)) (let ((?v_0 (asChild ?t1 ?t2))) (=> (subtypes ?t0 ?v_0) (= (classDown ?t2 ?t0) ?v_0)))))
(assert (forall ((?t Int)) (! (=> (subtypes T_double ?t) (= ?t T_double)) :pattern ((subtypes T_double ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_float ?t) (= ?t T_float)) :pattern ((subtypes T_float ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_long ?t) (= ?t T_long)) :pattern ((subtypes T_long ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_int ?t) (= ?t T_int)) :pattern ((subtypes T_int ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_short ?t) (= ?t T_short)) :pattern ((subtypes T_short ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_byte ?t) (= ?t T_byte)) :pattern ((subtypes T_byte ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_char ?t) (= ?t T_char)) :pattern ((subtypes T_char ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_boolean ?t) (= ?t T_boolean)) :pattern ((subtypes T_boolean ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_double) (= ?t T_double)) :pattern ((subtypes ?t T_double)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_float) (= ?t T_float)) :pattern ((subtypes ?t T_float)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_long) (= ?t T_long)) :pattern ((subtypes ?t T_long)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_int) (= ?t T_int)) :pattern ((subtypes ?t T_int)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_short) (= ?t T_short)) :pattern ((subtypes ?t T_short)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_byte) (= ?t T_byte)) :pattern ((subtypes ?t T_byte)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_char) (= ?t T_char)) :pattern ((subtypes ?t T_char)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_boolean) (= ?t T_boolean)) :pattern ((subtypes ?t T_boolean)) )))
(assert (forall ((?t0 Int) (?t1 Int)) (! (=> (and (subtypes ?t0 ?t1) (subtypes ?t1 ?t0)) (= ?t0 ?t1)) :pattern ((subtypes ?t0 ?t1) (subtypes ?t1 ?t0)) )))
(assert (forall ((?t0 Int) (?t1 Int) (?t2 Int)) (! (=> (and (subtypes ?t0 ?t1) (subtypes ?t1 ?t2)) (subtypes ?t0 ?t2)) :pattern ((subtypes ?t0 ?t1) (subtypes ?t1 ?t2)) )))
(assert (subtypes T_java.lang.Object T_java.lang.Object))
(assert (forall ((?t Int)) (! (subtypes ?t ?t) :pattern ((subtypes ?t ?t)) )))
(assert (forall ((?m Int) (?i Int) (?j Int) (?x Int)) (=> (not (= ?i ?j)) (= (select1 (store1 ?m ?i ?x) ?j) (select1 ?m ?j)))))
(assert (forall ((?m Int) (?i Int) (?x Int)) (= (select1 (store1 ?m ?i ?x) ?i) ?x)))
(assert (let ((?v_0 (array T_int)) (?v_1 (array T_java.lang.String)) (?v_2 (not (= enclosingEnv_41.29 null)))) (let ((?v_3 (not (and (= Smt.true (is enclosingEnv_41.29 T_javafe.tc.EnvForCU)) ?v_2))) (?v_5 (not (= RES_43.11_43.11 null))) (?v_4 (= ecReturn ecReturn))) (not (=> true (=> (and (= INC_pre_23.58.26 INC_23.58.26) (= Smt.true (is INC_23.58.26 T_int)) (= locDot_pre_82.21.13 locDot_82.21.13) (= locDot_82.21.13 (asField locDot_82.21.13 T_int)) (= PARSED_pre_7.772.28 PARSED_7.772.28) (= Smt.true (is PARSED_7.772.28 T_int)) (= ARRAYREFEXPR_pre_24.48.7 ARRAYREFEXPR_24.48.7) (= Smt.true (is ARRAYREFEXPR_24.48.7 T_int)) (= decl_pre_146.34.20 decl_146.34.20) (= decl_146.34.20 (asField decl_146.34.20 T_javafe.ast.MethodDecl)) (< (fClosedTime decl_146.34.20) alloc) (= CU_pre_7.71.30 CU_7.71.30) (= CU_7.71.30 (asField CU_7.71.30 T_javafe.ast.CompilationUnit)) (< (fClosedTime CU_7.71.30) alloc) (= ASGDIV_pre_23.42.26 ASGDIV_23.42.26) (= Smt.true (is ASGDIV_23.42.26 T_int)) (= STMTPRAGMA_pre_21.26.26 STMTPRAGMA_21.26.26) (= Smt.true (is STMTPRAGMA_21.26.26 T_int)) (= THROWSTMT_pre_24.34.7 THROWSTMT_24.34.7) (= Smt.true (is THROWSTMT_24.34.7 T_int)) (= locQuestion_pre_139.22.13 locQuestion_139.22.13) (= locQuestion_139.22.13 (asField locQuestion_139.22.13 T_int)) (= INTLIT_pre_22.39.26 INTLIT_22.39.26) (= Smt.true (is INTLIT_22.39.26 T_int)) (= GE_pre_23.26.26 GE_23.26.26) (= Smt.true (is GE_23.26.26 T_int)) (= locIds_pre_153.25.29 locIds_153.25.29) (= locIds_153.25.29 (asField locIds_153.25.29 ?v_0)) (< (fClosedTime locIds_153.25.29) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (select1 locIds_153.25.29 ?s) null)))) (= METHODDECL_pre_24.20.7 METHODDECL_24.20.7) (= Smt.true (is METHODDECL_24.20.7 T_int)) (= EXPROBJECTDESIGNATOR_pre_24.61.7 EXPROBJECTDESIGNATOR_24.61.7) (= Smt.true (is EXPROBJECTDESIGNATOR_24.61.7 T_int)) (= decl_pre_143.26.38 decl_143.26.38) (= decl_143.26.38 (asField decl_143.26.38 T_javafe.ast.GenericVarDecl)) (< (fClosedTime decl_143.26.38) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (select1 decl_143.26.38 ?s_1_) null)))) (= decl_pre_144.28.19 decl_144.28.19) (= decl_144.28.19 (asField decl_144.28.19 T_javafe.ast.FieldDecl)) (< (fClosedTime decl_144.28.19) alloc) (= locCloseBrace_pre_134.24.13 locCloseBrace_134.24.13) (= locCloseBrace_134.24.13 (asField locCloseBrace_134.24.13 T_int)) (= locOpenBracket_pre_135.20.13 locOpenBracket_135.20.13) (= locOpenBracket_135.20.13 (asField locOpenBracket_135.20.13 T_int)) (= BITNOT_pre_23.57.26 BITNOT_23.57.26) (= Smt.true (is BITNOT_23.57.26 T_int)) (= THISEXPR_pre_24.47.7 THISEXPR_24.47.7) (= Smt.true (is THISEXPR_24.47.7 T_int)) (= loc_pre_18.45.13 loc_18.45.13) (= loc_18.45.13 (asField loc_18.45.13 T_int)) (= loc_pre_137.49.13 loc_137.49.13) (= loc_137.49.13 (asField loc_137.49.13 T_int)) (= loc_pre_108.18.13 loc_108.18.13) (= loc_108.18.13 (asField loc_108.18.13 T_int)) (= ASGMUL_pre_23.41.26 ASGMUL_23.41.26) (= Smt.true (is ASGMUL_23.41.26 T_int)) (= ACC_FINAL_pre_32.23.26 ACC_FINAL_32.23.26) (= Smt.true (is ACC_FINAL_32.23.26 T_int)) (= type_pre_137.24.28 type_137.24.28) (= type_137.24.28 (asField type_137.24.28 T_javafe.ast.Type)) (< (fClosedTime type_137.24.28) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (select1 type_137.24.28 ?s_2_) null)))) (= enclosingInstance_pre_136.25.14 enclosingInstance_136.25.14) (= enclosingInstance_136.25.14 (asField enclosingInstance_136.25.14 T_javafe.ast.Expr)) (< (fClosedTime enclosingInstance_136.25.14) alloc) (= count_pre_138.67.33 count_138.67.33) (= count_138.67.33 (asField count_138.67.33 T_int)) (= loc_pre_136.49.13 loc_136.49.13) (= loc_136.49.13 (asField loc_136.49.13 T_int)) (= RETURNSTMT_pre_24.33.7 RETURNSTMT_24.33.7) (= Smt.true (is RETURNSTMT_24.33.7 T_int)) (= doubleType_pre_115.4 doubleType_115.4) (= Smt.true (is doubleType_115.4 T_javafe.ast.PrimitiveType)) (isAllocated doubleType_115.4 alloc) (= elements_pre_36.61.43 elements_36.61.43) (= elements_36.61.43 (asField elements_36.61.43 (array T_javafe.ast.FormalParaDecl))) (< (fClosedTime elements_36.61.43) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (select1 elements_36.61.43 ?s_3_) null)))) (= MODIFIERPRAGMA_pre_21.25.26 MODIFIERPRAGMA_21.25.26) (= Smt.true (is MODIFIERPRAGMA_21.25.26 T_int)) (= BOOLEANLIT_pre_22.38.26 BOOLEANLIT_22.38.26) (= Smt.true (is BOOLEANLIT_22.38.26 T_int)) (= EQ_pre_23.25.26 EQ_23.25.26) (= Smt.true (is EQ_23.25.26 T_int)) (= id_pre_38.32.34 id_38.32.34) (= id_38.32.34 (asField id_38.32.34 T_javafe.ast.Identifier)) (< (fClosedTime id_38.32.34) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (select1 id_38.32.34 ?s_4_) null)))) (= CONSTRUCTORDECL_pre_24.19.7 CONSTRUCTORDECL_24.19.7) (= Smt.true (is CONSTRUCTORDECL_24.19.7 T_int)) (= args_pre_34.30.41 args_34.30.41) (= args_34.30.41 (asField args_34.30.41 T_javafe.ast.FormalParaDeclVec)) (< (fClosedTime args_34.30.41) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (select1 args_34.30.41 ?s_5_) null)))) (= CLASSLITERAL_pre_24.60.7 CLASSLITERAL_24.60.7) (= Smt.true (is CLASSLITERAL_24.60.7 T_int)) (= locDot_pre_132.41.13 locDot_132.41.13) (= locDot_132.41.13 (asField locDot_132.41.13 T_int)) (= NOT_pre_23.56.26 NOT_23.56.26) (= Smt.true (is NOT_23.56.26 T_int)) (= ARRAYINIT_pre_24.46.7 ARRAYINIT_24.46.7) (= Smt.true (is ARRAYINIT_24.46.7 T_int)) (= locOpenBrackets_pre_137.65.29 locOpenBrackets_137.65.29) (= locOpenBrackets_137.65.29 (asField locOpenBrackets_137.65.29 ?v_0)) (< (fClosedTime locOpenBrackets_137.65.29) alloc) (forall ((?s_6_ Int)) (=> (not (= ?s_6_ null)) (not (= (select1 locOpenBrackets_137.65.29 ?s_6_) null)))) (= punctuationCodes_pre_21.164.19 punctuationCodes_21.164.19) (= Smt.true (is punctuationCodes_21.164.19 ?v_0)) (isAllocated punctuationCodes_21.164.19 alloc) (= ASSIGN_pre_23.40.26 ASSIGN_23.40.26) (= Smt.true (is ASSIGN_23.40.26 T_int)) (= type_pre_147.20.28 type_147.20.28) (= type_147.20.28 (asField type_147.20.28 T_javafe.ast.Type)) (< (fClosedTime type_147.20.28) alloc) (forall ((?s_7_ Int)) (=> (not (= ?s_7_ null)) (not (= (select1 type_147.20.28 ?s_7_) null)))) (= EVALSTMT_pre_24.32.7 EVALSTMT_24.32.7) (= Smt.true (is EVALSTMT_24.32.7 T_int)) (= SHORTTYPE_pre_22.36.26 SHORTTYPE_22.36.26) (= Smt.true (is SHORTTYPE_22.36.26 T_int)) (= NE_pre_23.24.26 NE_23.24.26) (= Smt.true (is NE_23.24.26 T_int)) (= value_pre_49.45.16 value_49.45.16) (= value_49.45.16 (asField value_49.45.16 T_java.lang.Object)) (< (fClosedTime value_49.45.16) alloc) (= inst_pre_43.29.44 inst_43.29.44) (= Smt.true (is inst_43.29.44 T_javafe.ast.PrettyPrint)) (isAllocated inst_43.29.44 alloc) (not (= inst_43.29.44 null)) (= enclosingEnv_pre_7.52.36 enclosingEnv_7.52.36) (= enclosingEnv_7.52.36 (asField enclosingEnv_7.52.36 T_javafe.tc.Env)) (< (fClosedTime enclosingEnv_7.52.36) alloc) (= locOpenParen_pre_145.30.13 locOpenParen_145.30.13) (= locOpenParen_145.30.13 (asField locOpenParen_145.30.13 T_int)) (= INTERFACEDECL_pre_24.18.7 INTERFACEDECL_24.18.7) (= Smt.true (is INTERFACEDECL_24.18.7 T_int)) (= locDots_pre_153.31.29 locDots_153.31.29) (= locDots_153.31.29 (asField locDots_153.31.29 ?v_0)) (< (fClosedTime locDots_153.31.29) alloc) (forall ((?s_8_ Int)) (=> (not (= ?s_8_ null)) (not (= (select1 locDots_153.31.29 ?s_8_) null)))) (= METHODINVOCATION_pre_24.59.7 METHODINVOCATION_24.59.7) (= Smt.true (is METHODINVOCATION_24.59.7 T_int)) (= LEXICALPRAGMA_pre_21.24.26 LEXICALPRAGMA_21.24.26) (= Smt.true (is LEXICALPRAGMA_21.24.26 T_int)) (= UNARYSUB_pre_23.55.26 UNARYSUB_23.55.26) (= Smt.true (is UNARYSUB_23.55.26 T_int)) (= CATCHCLAUSE_pre_24.45.7 CATCHCLAUSE_24.45.7) (= Smt.true (is CATCHCLAUSE_24.45.7 T_int)) (= locCloseParen_pre_141.24.13 locCloseParen_141.24.13) (= locCloseParen_141.24.13 (asField locCloseParen_141.24.13 T_int)) (= locId_pre_34.43.13 locId_34.43.13) (= locId_34.43.13 (asField locId_34.43.13 T_int)) (= FIRST_KEYWORD_pre_21.51.26 FIRST_KEYWORD_21.51.26) (= Smt.true (is FIRST_KEYWORD_21.51.26 T_int)) (= charType_pre_127.4 charType_127.4) (= Smt.true (is charType_127.4 T_javafe.ast.PrimitiveType)) (isAllocated charType_127.4 alloc) (= STAR_pre_23.37.26 STAR_23.37.26) (= Smt.true (is STAR_23.37.26 T_int)) (= LAST_KEYWORD_pre_21.103.26 LAST_KEYWORD_21.103.26) (= Smt.true (is LAST_KEYWORD_21.103.26 T_int)) (= loc_pre_117.20.13 loc_117.20.13) (= loc_117.20.13 (asField loc_117.20.13 T_int)) (= SYNCHRONIZESTMT_pre_24.31.7 SYNCHRONIZESTMT_24.31.7) (= Smt.true (is SYNCHRONIZESTMT_24.31.7 T_int)) (= s_javaLangClass_pre_258.27 s_javaLangClass_258.27) (= Smt.true (is s_javaLangClass_258.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangClass_258.27 alloc) (= returnType_pre_33.18.28 returnType_33.18.28) (= returnType_33.18.28 (asField returnType_33.18.28 T_javafe.ast.Type)) (< (fClosedTime returnType_33.18.28) alloc) (forall ((?s_9_ Int)) (=> (not (= ?s_9_ null)) (not (= (select1 returnType_33.18.28 ?s_9_) null)))) (= op_pre_52.35.13 op_52.35.13) (= op_52.35.13 (asField op_52.35.13 T_int)) (= BYTETYPE_pre_22.35.26 BYTETYPE_22.35.26) (= Smt.true (is BYTETYPE_22.35.26 T_int)) (= BITAND_pre_23.23.26 BITAND_23.23.26) (= Smt.true (is BITAND_23.23.26 T_int)) (= s_javaLangRuntimeException_pre_240.27 s_javaLangRuntimeException_240.27) (= Smt.true (is s_javaLangRuntimeException_240.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangRuntimeException_240.27 alloc) (= count_pre_36.67.33 count_36.67.33) (= count_36.67.33 (asField count_36.67.33 T_int)) (= CLASSDECL_pre_24.17.7 CLASSDECL_24.17.7) (= Smt.true (is CLASSDECL_24.17.7 T_int)) (= AMBIGUOUSMETHODINVOCATION_pre_24.58.7 AMBIGUOUSMETHODINVOCATION_24.58.7) (= Smt.true (is AMBIGUOUSMETHODINVOCATION_24.58.7 T_int)) (= locOpenBrace_pre_134.21.13 locOpenBrace_134.21.13) (= locOpenBrace_134.21.13 (asField locOpenBrace_134.21.13 T_int)) (= TYPESIG_pre_20.6.28 TYPESIG_20.6.28) (= Smt.true (is TYPESIG_20.6.28 T_int)) (= UNARYADD_pre_23.54.26 UNARYADD_23.54.26) (= Smt.true (is UNARYADD_23.54.26 T_int)) (= NULL_pre_46.60.26 NULL_46.60.26) (= Smt.true (is NULL_46.60.26 T_int)) (= keywordStrings_pre_21.181.30 keywordStrings_21.181.30) (= Smt.true (is keywordStrings_21.181.30 ?v_1)) (isAllocated keywordStrings_21.181.30 alloc) (= locId_pre_125.20.13 locId_125.20.13) (= locId_125.20.13 (asField locId_125.20.13 T_int)) (= CONSTRUCTORINVOCATION_pre_24.44.7 CONSTRUCTORINVOCATION_24.44.7) (= Smt.true (is CONSTRUCTORINVOCATION_24.44.7 T_int)) (= NULL_pre_21.82.26 NULL_21.82.26) (= Smt.true (is NULL_21.82.26 T_int)) (= loc_pre_151.20.13 loc_151.20.13) (= loc_151.20.13 (asField loc_151.20.13 T_int)) (= dims_pre_137.45.31 dims_137.45.31) (= dims_137.45.31 (asField dims_137.45.31 T_javafe.ast.ExprVec)) (< (fClosedTime dims_137.45.31) alloc) (forall ((?s_10_ Int)) (=> (not (= ?s_10_ null)) (not (= (select1 dims_137.45.31 ?s_10_) null)))) (= locCloseBrace_pre_18.54.13 locCloseBrace_18.54.13) (= locCloseBrace_18.54.13 (asField locCloseBrace_18.54.13 T_int)) (= s_javaLangPackage_pre_163.28 s_javaLangPackage_163.28) (= Smt.true (is s_javaLangPackage_163.28 ?v_1)) (isAllocated s_javaLangPackage_163.28 alloc) (= MOD_pre_23.36.26 MOD_23.36.26) (= Smt.true (is MOD_23.36.26 T_int)) (= locFirstSemi_pre_127.36.13 locFirstSemi_127.36.13) (= locFirstSemi_127.36.13 (asField locFirstSemi_127.36.13 T_int)) (= DOSTMT_pre_24.30.7 DOSTMT_24.30.7) (= Smt.true (is DOSTMT_24.30.7 T_int)) (= loc_pre_133.22.13 loc_133.22.13) (= loc_133.22.13 (asField loc_133.22.13 T_int)) (= locId_pre_144.24.13 locId_144.24.13) (= locId_144.24.13 (asField locId_144.24.13 T_int)) (= NULLTYPE_pre_22.34.26 NULLTYPE_22.34.26) (= Smt.true (is NULLTYPE_22.34.26 T_int)) (= BITXOR_pre_23.22.26 BITXOR_23.22.26) (= Smt.true (is BITXOR_23.22.26 T_int)) (= ONDEMANDIMPORTDECL_pre_24.16.7 ONDEMANDIMPORTDECL_24.16.7) (= Smt.true (is ONDEMANDIMPORTDECL_24.16.7 T_int)) (= FIELDACCESS_pre_24.57.7 FIELDACCESS_24.57.7) (= Smt.true (is FIELDACCESS_24.57.7 T_int)) (= elements_pre_161.61.43 elements_161.61.43) (= elements_161.61.43 (asField elements_161.61.43 (array T_javafe.ast.ModifierPragma))) (< (fClosedTime elements_161.61.43) alloc) (forall ((?s_11_ Int)) (=> (not (= ?s_11_ null)) (not (= (select1 elements_161.61.43 ?s_11_) null)))) (= myTypeDecl_pre_7.63.40 myTypeDecl_7.63.40) (= myTypeDecl_7.63.40 (asField myTypeDecl_7.63.40 T_javafe.ast.TypeDecl)) (< (fClosedTime myTypeDecl_7.63.40) alloc) (= ASGBITXOR_pre_23.51.26 ASGBITXOR_23.51.26) (= Smt.true (is ASGBITXOR_23.51.26 T_int)) (= ACC_PUBLIC_pre_32.19.26 ACC_PUBLIC_32.19.26) (= Smt.true (is ACC_PUBLIC_32.19.26 T_int)) (= loc_pre_143.22.13 loc_143.22.13) (= loc_143.22.13 (asField loc_143.22.13 T_int)) (= locCloseParen_pre_142.21.13 locCloseParen_142.21.13) (= locCloseParen_142.21.13 (asField locCloseParen_142.21.13 T_int)) (= TRYCATCHSTMT_pre_24.43.7 TRYCATCHSTMT_24.43.7) (= Smt.true (is TRYCATCHSTMT_24.43.7 T_int)) (= DIV_pre_23.35.26 DIV_23.35.26) (= Smt.true (is DIV_23.35.26 T_int)) (= loc_pre_113.18.13 loc_113.18.13) (= loc_113.18.13 (asField loc_113.18.13 T_int)) (= intType_pre_111.4 intType_111.4) (= Smt.true (is intType_111.4 T_javafe.ast.PrimitiveType)) (isAllocated intType_111.4 alloc) (= WHILESTMT_pre_24.29.7 WHILESTMT_24.29.7) (= Smt.true (is WHILESTMT_24.29.7 T_int)) (= VOIDTYPE_pre_22.33.26 VOIDTYPE_22.33.26) (= Smt.true (is VOIDTYPE_22.33.26 T_int)) (= BITOR_pre_23.21.26 BITOR_23.21.26) (= Smt.true (is BITOR_23.21.26 T_int)) (= SINGLETYPEIMPORTDECL_pre_24.15.7 SINGLETYPEIMPORTDECL_24.15.7) (= Smt.true (is SINGLETYPEIMPORTDECL_24.15.7 T_int)) (= VARIABLEACCESS_pre_24.56.7 VARIABLEACCESS_24.56.7) (= Smt.true (is VARIABLEACCESS_24.56.7 T_int)) (= lenId_pre_914.30 lenId_914.30) (= Smt.true (is lenId_914.30 T_javafe.ast.Identifier)) (isAllocated lenId_914.30 alloc) (= shortType_pre_139.4 shortType_139.4) (= Smt.true (is shortType_139.4 T_javafe.ast.PrimitiveType)) (isAllocated shortType_139.4 alloc) (= locOpenParen_pre_146.28.13 locOpenParen_146.28.13) (= locOpenParen_146.28.13 (asField locOpenParen_146.28.13 T_int)) (= s_javaLangThrowable_pre_221.27 s_javaLangThrowable_221.27) (= Smt.true (is s_javaLangThrowable_221.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangThrowable_221.27 alloc) (= methods_pre_7.883.26 methods_7.883.26) (= methods_7.883.26 (asField methods_7.883.26 T_javafe.tc.MethodDeclVec)) (< (fClosedTime methods_7.883.26) alloc) (= enclosingInstance_pre_132.37.14 enclosingInstance_132.37.14) (= enclosingInstance_132.37.14 (asField enclosingInstance_132.37.14 T_javafe.ast.Expr)) (< (fClosedTime enclosingInstance_132.37.14) alloc) (= otherCodes_pre_21.202.27 otherCodes_21.202.27) (= Smt.true (is otherCodes_21.202.27 ?v_0)) (isAllocated otherCodes_21.202.27 alloc) (= ASGBITOR_pre_23.50.26 ASGBITOR_23.50.26) (= Smt.true (is ASGBITOR_23.50.26 T_int)) (= elements_pre_89.61.39 elements_89.61.39) (= elements_89.61.39 (asField elements_89.61.39 (array T_javafe.ast.MethodDecl))) (< (fClosedTime elements_89.61.39) alloc) (forall ((?s_12_ Int)) (=> (not (= ?s_12_ null)) (not (= (select1 elements_89.61.39 ?s_12_) null)))) (= TRYFINALLYSTMT_pre_24.42.7 TRYFINALLYSTMT_24.42.7) (= Smt.true (is TRYFINALLYSTMT_24.42.7 T_int)) (= locGuardOpenParen_pre_116.23.13 locGuardOpenParen_116.23.13) (= locGuardOpenParen_116.23.13 (asField locGuardOpenParen_116.23.13 T_int)) (= loc_pre_131.23.13 loc_131.23.13) (= loc_131.23.13 (asField loc_131.23.13 T_int)) (= member_pre_7.44.39 member_7.44.39) (= member_7.44.39 (asField member_7.44.39 T_boolean)) (= state_pre_7.787.15 state_7.787.15) (= state_7.787.15 (asField state_7.787.15 T_int)) (= loc_pre_34.40.13 loc_34.40.13) (= loc_34.40.13 (asField loc_34.40.13 T_int)) (= s_javaLangError_pre_203.27 s_javaLangError_203.27) (= Smt.true (is s_javaLangError_203.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangError_203.27 alloc) (= SUB_pre_23.34.26 SUB_23.34.26) (= Smt.true (is SUB_23.34.26 T_int)) (= CLASSDECLSTMT_pre_24.28.7 CLASSDECLSTMT_24.28.7) (= Smt.true (is CLASSDECLSTMT_24.28.7 T_int)) (= locOpenParen_pre_141.21.13 locOpenParen_141.21.13) (= locOpenParen_141.21.13 (asField locOpenParen_141.21.13 T_int)) (= DOUBLETYPE_pre_22.32.26 DOUBLETYPE_22.32.26) (= Smt.true (is DOUBLETYPE_22.32.26 T_int)) (= locOpenBracket_pre_28.21.13 locOpenBracket_28.21.13) (= locOpenBracket_28.21.13 (asField locOpenBracket_28.21.13 T_int)) (= COMPILATIONUNIT_pre_24.14.7 COMPILATIONUNIT_24.14.7) (= Smt.true (is COMPILATIONUNIT_24.14.7 T_int)) (= AMBIGUOUSVARIABLEACCESS_pre_24.55.7 AMBIGUOUSVARIABLEACCESS_24.55.7) (= Smt.true (is AMBIGUOUSVARIABLEACCESS_24.55.7 T_int)) (= loc_pre_129.29.13 loc_129.29.13) (= loc_129.29.13 (asField loc_129.29.13 T_int)) (= count_pre_161.67.33 count_161.67.33) (= count_161.67.33 (asField count_161.67.33 T_int)) (= inst_pre_19.36 inst_19.36) (= Smt.true (is inst_19.36 T_javafe.tc.Types)) (isAllocated inst_19.36 alloc) (not (= inst_19.36 null)) (= ASGBITAND_pre_23.49.26 ASGBITAND_23.49.26) (= Smt.true (is ASGBITAND_23.49.26 T_int)) (= owner_pre_4.35.28 owner_4.35.28) (= owner_4.35.28 (asField owner_4.35.28 T_java.lang.Object)) (< (fClosedTime owner_4.35.28) alloc) (= locOpenParen_pre_118.23.13 locOpenParen_118.23.13) (= locOpenParen_118.23.13 (asField locOpenParen_118.23.13 T_int)) (= SWITCHLABEL_pre_24.41.7 SWITCHLABEL_24.41.7) (= Smt.true (is SWITCHLABEL_24.41.7 T_int)) (= ADD_pre_23.33.26 ADD_23.33.26) (= Smt.true (is ADD_23.33.26 T_int)) (= locOp_pre_53.32.13 locOp_53.32.13) (= locOp_53.32.13 (asField locOp_53.32.13 T_int)) (= VARDECLSTMT_pre_24.27.7 VARDECLSTMT_24.27.7) (= Smt.true (is VARDECLSTMT_24.27.7 T_int)) (= id_pre_33.15.34 id_33.15.34) (= id_33.15.34 (asField id_33.15.34 T_javafe.ast.Identifier)) (< (fClosedTime id_33.15.34) alloc) (forall ((?s_13_ Int)) (=> (not (= ?s_13_ null)) (not (= (select1 id_33.15.34 ?s_13_) null)))) (= id_pre_144.21.34 id_144.21.34) (= id_144.21.34 (asField id_144.21.34 T_javafe.ast.Identifier)) (< (fClosedTime id_144.21.34) alloc) (forall ((?s_14_ Int)) (=> (not (= ?s_14_ null)) (not (= (select1 id_144.21.34 ?s_14_) null)))) (= FLOATTYPE_pre_22.31.26 FLOATTYPE_22.31.26) (= Smt.true (is FLOATTYPE_22.31.26 T_int)) (= loc_pre_120.18.13 loc_120.18.13) (= loc_120.18.13 (asField loc_120.18.13 T_int)) (= loc_pre_127.33.13 loc_127.33.13) (= loc_127.33.13 (asField loc_127.33.13 T_int)) (= PARENEXPR_pre_24.54.7 PARENEXPR_24.54.7) (= Smt.true (is PARENEXPR_24.54.7 T_int)) (= longType_pre_123.4 longType_123.4) (= Smt.true (is longType_123.4 T_javafe.ast.PrimitiveType)) (isAllocated longType_123.4 alloc) (= locOpenBrace_pre_18.51.13 locOpenBrace_18.51.13) (= locOpenBrace_18.51.13 (asField locOpenBrace_18.51.13 T_int)) (= AND_pre_23.20.26 AND_23.20.26) (= Smt.true (is AND_23.20.26 T_int)) (= loc_pre_140.21.13 loc_140.21.13) (= loc_140.21.13 (asField loc_140.21.13 T_int)) (= ASGURSHIFT_pre_23.48.26 ASGURSHIFT_23.48.26) (= Smt.true (is ASGURSHIFT_23.48.26 T_int)) (= SKIPSTMT_pre_24.40.7 SKIPSTMT_24.40.7) (= Smt.true (is SKIPSTMT_24.40.7 T_int)) (= count_pre_89.67.33 count_89.67.33) (= count_89.67.33 (asField count_89.67.33 T_int)) (= id_pre_143.19.34 id_143.19.34) (= id_143.19.34 (asField id_143.19.34 T_javafe.ast.Identifier)) (< (fClosedTime id_143.19.34) alloc) (forall ((?s_15_ Int)) (=> (not (= ?s_15_ null)) (not (= (select1 id_143.19.34 ?s_15_) null)))) (= syntax_pre_8.28.29 syntax_8.28.29) (= syntax_8.28.29 (asField syntax_8.28.29 T_boolean)) (= locId_pre_38.38.13 locId_38.38.13) (= locId_38.38.13 (asField locId_38.38.13 T_int)) (= NULLLIT_pre_22.45.26 NULLLIT_22.45.26) (= Smt.true (is NULLLIT_22.45.26 T_int)) (= URSHIFT_pre_23.32.26 URSHIFT_23.32.26) (= Smt.true (is URSHIFT_23.32.26 T_int)) (= SWITCHSTMT_pre_24.26.7 SWITCHSTMT_24.26.7) (= Smt.true (is SWITCHSTMT_24.26.7 T_int)) (= COMPOUNDNAME_pre_24.67.7 COMPOUNDNAME_24.67.7) (= Smt.true (is COMPOUNDNAME_24.67.7 T_int)) (= otherStrings_pre_21.193.30 otherStrings_21.193.30) (= Smt.true (is otherStrings_21.193.30 ?v_1)) (isAllocated otherStrings_21.193.30 alloc) (= loc_pre_25.35.13 loc_25.35.13) (= loc_25.35.13 (asField loc_25.35.13 T_int)) (= CHARTYPE_pre_22.30.26 CHARTYPE_22.30.26) (= Smt.true (is CHARTYPE_22.30.26 T_int)) (= CASTEXPR_pre_24.53.7 CASTEXPR_24.53.7) (= Smt.true (is CASTEXPR_24.53.7 T_int)) (= OR_pre_23.19.26 OR_23.19.26) (= Smt.true (is OR_23.19.26 T_int)) (= locId_pre_146.25.13 locId_146.25.13) (= locId_146.25.13 (asField locId_146.25.13 T_int)) (= ASGRSHIFT_pre_23.47.26 ASGRSHIFT_23.47.26) (= Smt.true (is ASGRSHIFT_23.47.26 T_int)) (= locSuper_pre_150.20.13 locSuper_150.20.13) (= locSuper_150.20.13 (asField locSuper_150.20.13 T_int)) (= FORSTMT_pre_24.39.7 FORSTMT_24.39.7) (= Smt.true (is FORSTMT_24.39.7 T_int)) (= booleanType_pre_107.4 booleanType_107.4) (= Smt.true (is booleanType_107.4 T_javafe.ast.PrimitiveType)) (isAllocated booleanType_107.4 alloc) (= elements_pre_152.61.39 elements_152.61.39) (= elements_152.61.39 (asField elements_152.61.39 (array T_javafe.ast.Identifier))) (< (fClosedTime elements_152.61.39) alloc) (forall ((?s_16_ Int)) (=> (not (= ?s_16_ null)) (not (= (select1 elements_152.61.39 ?s_16_) null)))) (= locOpenParen_pre_132.48.13 locOpenParen_132.48.13) (= locOpenParen_132.48.13 (asField locOpenParen_132.48.13 T_int)) (= loc_pre_128.16.13 loc_128.16.13) (= loc_128.16.13 (asField loc_128.16.13 T_int)) (= length_pre_78.50.25 length_78.50.25) (= length_78.50.25 (asField length_78.50.25 T_int)) (= STRINGLIT_pre_22.44.26 STRINGLIT_22.44.26) (= Smt.true (is STRINGLIT_22.44.26 T_int)) (= RSHIFT_pre_23.31.26 RSHIFT_23.31.26) (= Smt.true (is RSHIFT_23.31.26 T_int)) (= BLOCKSTMT_pre_24.25.7 BLOCKSTMT_24.25.7) (= Smt.true (is BLOCKSTMT_24.25.7 T_int)) (= lengthFieldDecl_pre_917.40 lengthFieldDecl_917.40) (= Smt.true (is lengthFieldDecl_917.40 T_javafe.ast.FieldDecl)) (isAllocated lengthFieldDecl_917.40 alloc) (not (= lengthFieldDecl_917.40 null)) (= SIMPLENAME_pre_24.66.7 SIMPLENAME_24.66.7) (= Smt.true (is SIMPLENAME_24.66.7 T_int)) (= simpleName_pre_7.37.38 simpleName_7.37.38) (= simpleName_7.37.38 (asField simpleName_7.37.38 T_java.lang.String)) (< (fClosedTime simpleName_7.37.38) alloc) (= byteType_pre_135.4 byteType_135.4) (= Smt.true (is byteType_135.4 T_javafe.ast.PrimitiveType)) (isAllocated byteType_135.4 alloc) (= locOp_pre_52.43.13 locOp_52.43.13) (= locOp_52.43.13 (asField locOp_52.43.13 T_int)) (= tag_pre_49.32.13 tag_49.32.13) (= tag_49.32.13 (asField tag_49.32.13 T_int)) (= locOpenParen_pre_142.18.13 locOpenParen_142.18.13) (= locOpenParen_142.18.13 (asField locOpenParen_142.18.13 T_int)) (= type_pre_141.18.28 type_141.18.28) (= type_141.18.28 (asField type_141.18.28 T_javafe.ast.Type)) (< (fClosedTime type_141.18.28) alloc) (forall ((?s_17_ Int)) (=> (not (= ?s_17_ null)) (not (= (select1 type_141.18.28 ?s_17_) null)))) (= LONGTYPE_pre_22.29.26 LONGTYPE_22.29.26) (= Smt.true (is LONGTYPE_22.29.26 T_int)) (= loc_pre_19.30.13 loc_19.30.13) (= loc_19.30.13 (asField loc_19.30.13 T_int)) (= INSTANCEOFEXPR_pre_24.52.7 INSTANCEOFEXPR_24.52.7) (= Smt.true (is INSTANCEOFEXPR_24.52.7 T_int)) (= init_pre_137.35.19 init_137.35.19) (= init_137.35.19 (asField init_137.35.19 T_javafe.ast.ArrayInit)) (< (fClosedTime init_137.35.19) alloc) (= tokenType_pre_35.90.8 tokenType_35.90.8) (= tokenType_35.90.8 (asField tokenType_35.90.8 T_int)) (= elements_pre_39.61.37 elements_39.61.37) (= elements_39.61.37 (asField elements_39.61.37 (array T_javafe.ast.TypeName))) (< (fClosedTime elements_39.61.37) alloc) (forall ((?s_18_ Int)) (=> (not (= ?s_18_ null)) (not (= (select1 elements_39.61.37 ?s_18_) null)))) (= elements_pre_88.61.38 elements_88.61.38) (= elements_88.61.38 (asField elements_88.61.38 (array T_javafe.ast.FieldDecl))) (< (fClosedTime elements_88.61.38) alloc) (forall ((?s_19_ Int)) (=> (not (= ?s_19_ null)) (not (= (select1 elements_88.61.38 ?s_19_) null)))) (= ASGLSHIFT_pre_23.46.26 ASGLSHIFT_23.46.26) (= Smt.true (is ASGLSHIFT_23.46.26 T_int)) (= locFinally_pre_130.25.13 locFinally_130.25.13) (= locFinally_130.25.13 (asField locFinally_130.25.13 T_int)) (= IFSTMT_pre_24.38.7 IFSTMT_24.38.7) (= Smt.true (is IFSTMT_24.38.7 T_int)) (= DOUBLELIT_pre_22.43.26 DOUBLELIT_22.43.26) (= Smt.true (is DOUBLELIT_22.43.26 T_int)) (= LSHIFT_pre_23.30.26 LSHIFT_23.30.26) (= Smt.true (is LSHIFT_23.30.26 T_int)) (= s_javaLangCloneable_pre_249.27 s_javaLangCloneable_249.27) (= Smt.true (is s_javaLangCloneable_249.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangCloneable_249.27 alloc) (= locCloseBrace_pre_97.25.13 locCloseBrace_97.25.13) (= locCloseBrace_97.25.13 (asField locCloseBrace_97.25.13 T_int)) (= FORMALPARADECL_pre_24.24.7 FORMALPARADECL_24.24.7) (= Smt.true (is FORMALPARADECL_24.24.7 T_int)) (= ARRAYTYPE_pre_24.65.7 ARRAYTYPE_24.65.7) (= Smt.true (is ARRAYTYPE_24.65.7 T_int)) (= INTTYPE_pre_22.28.26 INTTYPE_22.28.26) (= Smt.true (is INTTYPE_22.28.26 T_int)) (= POSTFIXDEC_pre_23.63.26 POSTFIXDEC_23.63.26) (= Smt.true (is POSTFIXDEC_23.63.26 T_int)) (= PREPPED_pre_7.775.28 PREPPED_7.775.28) (= Smt.true (is PREPPED_7.775.28 T_int)) (= enclosingType_pre_7.32.39 enclosingType_7.32.39) (= enclosingType_7.32.39 (asField enclosingType_7.32.39 T_javafe.tc.TypeSig)) (< (fClosedTime enclosingType_7.32.39) alloc) (= CONDEXPR_pre_24.51.7 CONDEXPR_24.51.7) (= Smt.true (is CONDEXPR_24.51.7 T_int)) (= loc_pre_81.29.13 loc_81.29.13) (= loc_81.29.13 (asField loc_81.29.13 T_int)) (= loc_pre_116.20.13 loc_116.20.13) (= loc_116.20.13 (asField loc_116.20.13 T_int)) (= locColon_pre_139.25.13 locColon_139.25.13) (= locColon_139.25.13 (asField locColon_139.25.13 T_int)) (= ASGSUB_pre_23.45.26 ASGSUB_23.45.26) (= Smt.true (is ASGSUB_23.45.26 T_int)) (= type_pre_140.18.28 type_140.18.28) (= type_140.18.28 (asField type_140.18.28 T_javafe.ast.Type)) (< (fClosedTime type_140.18.28) alloc) (forall ((?s_20_ Int)) (=> (not (= ?s_20_ null)) (not (= (select1 type_140.18.28 ?s_20_) null)))) (= s_javaLangString_pre_230.27 s_javaLangString_230.27) (= Smt.true (is s_javaLangString_230.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangString_230.27 alloc) (= fields_pre_7.875.27 fields_7.875.27) (= fields_7.875.27 (asField fields_7.875.27 T_javafe.tc.FieldDeclVec)) (< (fClosedTime fields_7.875.27) alloc) (= LABELSTMT_pre_24.37.7 LABELSTMT_24.37.7) (= Smt.true (is LABELSTMT_24.37.7 T_int)) (= locId_pre_18.48.13 locId_18.48.13) (= locId_18.48.13 (asField locId_18.48.13 T_int)) (= locDot_pre_136.29.13 locDot_136.29.13) (= locDot_136.29.13 (asField locDot_136.29.13 T_int)) (= locCloseBracket_pre_135.23.13 locCloseBracket_135.23.13) (= locCloseBracket_135.23.13 (asField locCloseBracket_135.23.13 T_int)) (= count_pre_152.67.33 count_152.67.33) (= count_152.67.33 (asField count_152.67.33 T_int)) (= FLOATLIT_pre_22.42.26 FLOATLIT_22.42.26) (= Smt.true (is FLOATLIT_22.42.26 T_int)) (= LT_pre_23.29.26 LT_23.29.26) (= Smt.true (is LT_23.29.26 T_int)) (= type_pre_38.35.28 type_38.35.28) (= type_38.35.28 (asField type_38.35.28 T_javafe.ast.Type)) (< (fClosedTime type_38.35.28) alloc) (forall ((?s_21_ Int)) (=> (not (= ?s_21_ null)) (not (= (select1 type_38.35.28 ?s_21_) null)))) (= loc_pre_118.20.13 loc_118.20.13) (= loc_118.20.13 (asField loc_118.20.13 T_int)) (= TYPEMODIFIERPRAGMA_pre_21.28.26 TYPEMODIFIERPRAGMA_21.28.26) (= Smt.true (is TYPEMODIFIERPRAGMA_21.28.26 T_int)) (= FIELDDECL_pre_24.23.7 FIELDDECL_24.23.7) (= Smt.true (is FIELDDECL_24.23.7 T_int)) (= elemType_pre_28.18.28 elemType_28.18.28) (= elemType_28.18.28 (asField elemType_28.18.28 T_javafe.ast.Type)) (< (fClosedTime elemType_28.18.28) alloc) (forall ((?s_22_ Int)) (=> (not (= ?s_22_ null)) (not (= (select1 elemType_28.18.28 ?s_22_) null)))) (= TYPENAME_pre_24.64.7 TYPENAME_24.64.7) (= Smt.true (is TYPENAME_24.64.7 T_int)) (= floatType_pre_119.4 floatType_119.4) (= Smt.true (is floatType_119.4 T_javafe.ast.PrimitiveType)) (isAllocated floatType_119.4 alloc) (= locDot_pre_147.23.13 locDot_147.23.13) (= locDot_147.23.13 (asField locDot_147.23.13 T_int)) (= NOTFOUND_pre_47.10.26 NOTFOUND_47.10.26) (= Smt.true (is NOTFOUND_47.10.26 T_int)) (= BOOLEANTYPE_pre_22.27.26 BOOLEANTYPE_22.27.26) (= Smt.true (is BOOLEANTYPE_22.27.26 T_int)) (= POSTFIXINC_pre_23.62.26 POSTFIXINC_23.62.26) (= Smt.true (is POSTFIXINC_23.62.26 T_int)) (= NEWARRAYEXPR_pre_24.50.7 NEWARRAYEXPR_24.50.7) (= Smt.true (is NEWARRAYEXPR_24.50.7 T_int)) (= tag_pre_25.30.13 tag_25.30.13) (= tag_25.30.13 (asField tag_25.30.13 T_int)) (= ids_pre_153.19.37 ids_153.19.37) (= ids_153.19.37 (asField ids_153.19.37 T_javafe.ast.IdentifierVec)) (< (fClosedTime ids_153.19.37) alloc) (forall ((?s_23_ Int)) (=> (not (= ?s_23_ null)) (not (= (select1 ids_153.19.37 ?s_23_) null)))) (= loc_pre_126.22.13 loc_126.22.13) (= loc_126.22.13 (asField loc_126.22.13 T_int)) (= locOpenParen_pre_136.52.13 locOpenParen_136.52.13) (= locOpenParen_136.52.13 (asField locOpenParen_136.52.13 T_int)) (= count_pre_39.67.33 count_39.67.33) (= count_39.67.33 (asField count_39.67.33 T_int)) (= ASGADD_pre_23.44.26 ASGADD_23.44.26) (= Smt.true (is ASGADD_23.44.26 T_int)) (= count_pre_88.67.33 count_88.67.33) (= count_88.67.33 (asField count_88.67.33 T_int)) (= CONTINUESTMT_pre_24.36.7 CONTINUESTMT_24.36.7) (= Smt.true (is CONTINUESTMT_24.36.7 T_int)) (= locKeyword_pre_132.45.13 locKeyword_132.45.13) (= locKeyword_132.45.13 (asField locKeyword_132.45.13 T_int)) (= locType_pre_33.21.13 locType_33.21.13) (= locType_33.21.13 (asField locType_33.21.13 T_int)) (= CHARLIT_pre_22.41.26 CHARLIT_22.41.26) (= Smt.true (is CHARLIT_22.41.26 T_int)) (= LE_pre_23.28.26 LE_23.28.26) (= Smt.true (is LE_23.28.26 T_int)) (= locOpenBrace_pre_34.36.13 locOpenBrace_34.36.13) (= locOpenBrace_34.36.13 (asField locOpenBrace_34.36.13 T_int)) (= LOCALVARDECL_pre_24.22.7 LOCALVARDECL_24.22.7) (= Smt.true (is LOCALVARDECL_24.22.7 T_int)) (= modifiers_pre_18.28.13 modifiers_18.28.13) (= modifiers_18.28.13 (asField modifiers_18.28.13 T_int)) (= SUPEROBJECTDESIGNATOR_pre_24.63.7 SUPEROBJECTDESIGNATOR_24.63.7) (= Smt.true (is SUPEROBJECTDESIGNATOR_24.63.7 T_int)) (= id_pre_146.20.34 id_146.20.34) (= id_146.20.34 (asField id_146.20.34 T_javafe.ast.Identifier)) (< (fClosedTime id_146.20.34) alloc) (forall ((?s_24_ Int)) (=> (not (= ?s_24_ null)) (not (= (select1 id_146.20.34 ?s_24_) null)))) (= op_pre_53.26.13 op_53.26.13) (= op_53.26.13 (asField op_53.26.13 T_int)) (= IDENT_pre_22.25.26 IDENT_22.25.26) (= Smt.true (is IDENT_22.25.26 T_int)) (= DEC_pre_23.59.26 DEC_23.59.26) (= Smt.true (is DEC_23.59.26 T_int)) (= TYPEDECLELEMPRAGMA_pre_21.27.26 TYPEDECLELEMPRAGMA_21.27.26) (= Smt.true (is TYPEDECLELEMPRAGMA_21.27.26 T_int)) (= NEWINSTANCEEXPR_pre_24.49.7 NEWINSTANCEEXPR_24.49.7) (= Smt.true (is NEWINSTANCEEXPR_24.49.7 T_int)) (= s_javaLangException_pre_212.27 s_javaLangException_212.27) (= Smt.true (is s_javaLangException_212.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangException_212.27 alloc) (= body_pre_34.34.19 body_34.34.19) (= body_34.34.19 (asField body_34.34.19 T_javafe.ast.BlockStmt)) (< (fClosedTime body_34.34.19) alloc) (= elements_pre_138.61.33 elements_138.61.33) (= elements_138.61.33 (asField elements_138.61.33 (array T_javafe.ast.Expr))) (< (fClosedTime elements_138.61.33) alloc) (forall ((?s_25_ Int)) (=> (not (= ?s_25_ null)) (not (= (select1 elements_138.61.33 ?s_25_) null)))) (= loc_pre_121.18.13 loc_121.18.13) (= loc_121.18.13 (asField loc_121.18.13 T_int)) (= ASGREM_pre_23.43.26 ASGREM_23.43.26) (= Smt.true (is ASGREM_23.43.26 T_int)) (= BREAKSTMT_pre_24.35.7 BREAKSTMT_24.35.7) (= Smt.true (is BREAKSTMT_24.35.7 T_int)) (= noTokens_pre_21.212.27 noTokens_21.212.27) (= Smt.true (is noTokens_21.212.27 T_int)) (= nullType_pre_131.4 nullType_131.4) (= Smt.true (is nullType_131.4 T_javafe.ast.PrimitiveType)) (isAllocated nullType_131.4 alloc) (= s_javaLangObject_pre_194.27 s_javaLangObject_194.27) (= Smt.true (is s_javaLangObject_194.27 T_javafe.tc.TypeSig)) (isAllocated s_javaLangObject_194.27 alloc) (= loc_pre_130.22.13 loc_130.22.13) (= loc_130.22.13 (asField loc_130.22.13 T_int)) (= loc_pre_49.50.13 loc_49.50.13) (= loc_49.50.13 (asField loc_49.50.13 T_int)) (= LONGLIT_pre_22.40.26 LONGLIT_22.40.26) (= Smt.true (is LONGLIT_22.40.26 T_int)) (= GT_pre_23.27.26 GT_23.27.26) (= Smt.true (is GT_23.27.26 T_int)) (= punctuationStrings_pre_21.134.22 punctuationStrings_21.134.22) (= Smt.true (is punctuationStrings_21.134.22 ?v_1)) (isAllocated punctuationStrings_21.134.22 alloc) (= loc_pre_123.18.13 loc_123.18.13) (= loc_123.18.13 (asField loc_123.18.13 T_int)) (= INITBLOCK_pre_24.21.7 INITBLOCK_24.21.7) (= Smt.true (is INITBLOCK_24.21.7 T_int)) (= TYPEOBJECTDESIGNATOR_pre_24.62.7 TYPEOBJECTDESIGNATOR_24.62.7) (= Smt.true (is TYPEOBJECTDESIGNATOR_24.62.7 T_int)) (= voidType_pre_103.4 voidType_103.4) (= Smt.true (is voidType_103.4 T_javafe.ast.PrimitiveType)) (isAllocated voidType_103.4 alloc) (= superCall_pre_132.24.17 superCall_132.24.17) (= superCall_132.24.17 (asField superCall_132.24.17 T_boolean)) (= locOpenBrace_pre_97.22.13 locOpenBrace_97.22.13) (= locOpenBrace_97.22.13 (asField locOpenBrace_97.22.13 T_int)) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc)) (not (and (= Smt.true (is this T_javafe.tc.Types)) (isAllocated this alloc) (not (= this null)) (= Smt.true (is simpleName_40.47 T_java.lang.String)) (isAllocated simpleName_40.47 alloc) (= Smt.true (is enclosingEnv_41.29 T_javafe.tc.Env)) (isAllocated enclosingEnv_41.29 alloc) ?v_2 (= Smt.true (is decl_42.34 T_javafe.ast.TypeDecl)) (isAllocated decl_42.34 alloc) (not (= decl_42.34 null)) ?v_3 (or (not ?v_3) (and (< alloc after_43.11_43.11) ?v_5 (not (isAllocated RES_43.11_43.11 alloc)) (= Smt.true (is RES_43.11_43.11 T_javafe.tc.TypeSig)) (isAllocated RES_43.11_43.11 after_43.11_43.11) (= EC_43.11_43.11 ecReturn) (= (select1 owner_4.35.28 RES_43.11_43.11) null) (= (typeof RES_43.11_43.11) T_javafe.tc.TypeSig) (= Smt.true Smt.true) (or (not ?v_4) (and ?v_4 (not (=> ?v_4 ?v_5))))))))))))))
(check-sat)
(exit)
