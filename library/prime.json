{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime",
            "prop": "coprime a b ⟷ (∀d. divides d a ∧ divides d b ⟷ d = 1)",
            "ty": "def",
            "type": "nat ⇒ nat ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_gcd",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟶ gcd a b = 1"
                },
                {
                    "args": "∀d. divides d a ∧ divides d b ⟷ d = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides_1, {x: b}",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 b"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀b1. divides b1 a ⟶ divides b1 b ⟶ divides b1 1"
                },
                {
                    "args": "d, nat",
                    "id": "0.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "divides d a",
                    "id": "0.3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ⊢ divides d a"
                },
                {
                    "args": "divides d b",
                    "id": "0.3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d b ⊢ divides d b"
                },
                {
                    "args": "conjI",
                    "id": "0.3.3",
                    "prevs": [
                        "0.3.1",
                        "0.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a, divides d b ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "",
                    "id": "0.3.4",
                    "prevs": [
                        "0.0",
                        "0.3.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides d a, divides d b, ∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_one, divides 1 1",
                    "id": "0.3.5",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ divides 1 1"
                },
                {
                    "args": "divides d 1",
                    "id": "0.3.6",
                    "prevs": [
                        "0.3.4",
                        "0.3.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "divides d a, divides d b, ∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ divides d 1"
                },
                {
                    "args": "",
                    "id": "0.3.7",
                    "prevs": [
                        "0.3.0",
                        "0.3.1",
                        "0.3.2",
                        "0.3.6"
                    ],
                    "rule": "intros",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ ∀d. divides d a ⟶ divides d b ⟶ divides d 1"
                },
                {
                    "args": "gcd_equals",
                    "id": "0.4",
                    "prevs": [
                        "0.1",
                        "0.2",
                        "0.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀d. divides d a ∧ divides d b ⟷ d = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟶ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd a b = 1 ⟶ (∀d. divides d a ∧ divides d b ⟷ d = 1)"
                },
                {
                    "args": "gcd a b = 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟶ d = 1"
                },
                {
                    "args": "divides d a ∧ divides d b",
                    "id": "1.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d a ∧ divides d b ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "conjD1",
                    "id": "1.1.1.1",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d a"
                },
                {
                    "args": "conjD2",
                    "id": "1.1.1.2",
                    "prevs": [
                        "1.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d b"
                },
                {
                    "args": "gcd_is_max",
                    "id": "1.1.1.3",
                    "prevs": [
                        "1.1.1.1",
                        "1.1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d a ∧ divides d b ⊢ divides d (gcd a b)"
                },
                {
                    "args": "",
                    "id": "1.1.1.4",
                    "prevs": [
                        "1.0",
                        "1.1.1.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "gcd a b = 1, divides d a ∧ divides d b ⊢ divides d 1"
                },
                {
                    "args": "divides_one",
                    "id": "1.1.1.5",
                    "prevs": [
                        "1.1.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "gcd a b = 1, divides d a ∧ divides d b ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.1.6",
                    "prevs": [
                        "1.1.1.0",
                        "1.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "gcd a b = 1 ⊢ d = 1 ⟶ divides d a ∧ divides d b"
                },
                {
                    "args": "d = 1",
                    "id": "1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "1.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "divides_1, {x: b}",
                    "id": "1.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 b"
                },
                {
                    "args": "conjI",
                    "id": "1.1.2.3",
                    "prevs": [
                        "1.1.2.1",
                        "1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "d = 1, gcd a b = 1 ⊢ divides 1 a ∧ divides 1 b"
                },
                {
                    "args": "divides d a ∧ divides d b",
                    "id": "1.1.2.4",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "d = 1, gcd a b = 1 ⊢ divides d a ∧ divides d b"
                },
                {
                    "args": "",
                    "id": "1.1.2.5",
                    "prevs": [
                        "1.1.2.0",
                        "1.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ d = 1 ⟶ divides d a ∧ divides d b"
                },
                {
                    "args": "iffI",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "gcd a b = 1 ⊢ divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.0",
                        "1.1.3"
                    ],
                    "rule": "intros",
                    "th": "gcd a b = 1 ⊢ ∀d. divides d a ∧ divides d b ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd a b = 1 ⟶ (∀d. divides d a ∧ divides d b ⟷ d = 1)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀d. divides d a ∧ divides d b ⟷ d = 1) ⟷ gcd a b = 1"
                },
                {
                    "args": "coprime_def, coprime a b ⟷ gcd a b = 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ gcd a b = 1"
                }
            ],
            "prop": "coprime a b ⟷ gcd a b = 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_equals"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "0.3.1",
                        "0.3.2"
                    ],
                    "goal_id": "0.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "0.0",
                        "0.3.3"
                    ],
                    "goal_id": "0.3.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.3.4"
                    ],
                    "goal_id": "0.3.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.3.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.1.1.0"
                    ],
                    "goal_id": "1.1.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.1.1.1",
                        "1.1.1.2"
                    ],
                    "goal_id": "1.1.1.3",
                    "method_name": "apply_forward_step",
                    "theorem": "gcd_is_max"
                },
                {
                    "fact_ids": [
                        "1.0",
                        "1.1.1.3"
                    ],
                    "goal_id": "1.1.1.4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.1.1.4"
                    ],
                    "goal_id": "1.1.1.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.2.0"
                    ],
                    "goal_id": "1.1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_backward"
            ],
            "name": "coprime_sym",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd a b = 1 ⟶ gcd b a = 1"
                },
                {
                    "args": "gcd a b = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd a b = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "gcd_comm, gcd b a = 1",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "gcd a b = 1 ⊢ gcd b a = 1"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd a b = 1 ⟶ gcd b a = 1"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ gcd b a = 1 ⟶ gcd a b = 1"
                },
                {
                    "args": "gcd b a = 1",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "gcd b a = 1 ⊢ gcd b a = 1"
                },
                {
                    "args": "gcd_comm, gcd a b = 1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "gcd b a = 1 ⊢ gcd a b = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ gcd b a = 1 ⟶ gcd a b = 1"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ gcd a b = 1 ⟷ gcd b a = 1"
                },
                {
                    "args": "coprime_gcd, coprime a b ⟷ coprime b a",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ coprime b a"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ coprime b a"
                }
            ],
            "prop": "coprime a b ⟷ coprime b a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_comm"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_bezout",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides_one, gcd a b = 1 ⟷ divides (gcd a b) 1",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a b = 1 ⟷ divides (gcd a b) 1"
                },
                {
                    "args": "gcd_bezout, gcd a b = 1 ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd a b = 1 ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                },
                {
                    "args": "coprime_gcd, coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)"
                }
            ],
            "prop": "coprime a b ⟷ (∃x. ∃y. a * x - b * y = 1 ∨ b * x - a * y = 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_bezout"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_one"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "coprime_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides d (a * b)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d (a * b) ⊢ divides d (a * b)"
                },
                {
                    "args": "coprime d a",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime d a ⊢ coprime d a"
                },
                {
                    "args": "divides_lmul_gcd",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "divides d (a * b) ⊢ divides d (gcd d a * b)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "3",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d a ⊢ gcd d a = 1"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "coprime d a, divides d (a * b) ⊢ divides d (1 * b)"
                },
                {
                    "args": "mult_1_left",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime d a, divides d (a * b) ⊢ divides d b"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ divides d (a * b) ⟶ coprime d a ⟶ divides d b"
                }
            ],
            "prop": "divides d (a * b) ⟶ coprime d a ⟶ divides d b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "divides_lmul_gcd"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "3",
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_left"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "d": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_rmod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "division_simp1, {m: a, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ a DIV n * n + a MOD n = a"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ a = a DIV n * n + a MOD n"
                },
                {
                    "args": "division_simp1, (a DIV n * n + a MOD n) MOD n = a MOD n",
                    "id": "2",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (a DIV n * n + a MOD n) MOD n = a MOD n"
                },
                {
                    "args": "gcd_mod, gcd n (a MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1",
                    "id": "3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd n (a MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1"
                },
                {
                    "args": "gcd n ((a DIV n * n + a MOD n) MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ gcd n ((a DIV n * n + a MOD n) MOD n) = 1 ⟷ gcd n (a DIV n * n + a MOD n) = 1"
                },
                {
                    "args": "gcd n (a MOD n) = 1 ⟷ gcd n a = 1",
                    "id": "5",
                    "prevs": [
                        "1",
                        "4"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ gcd n (a MOD n) = 1 ⟷ gcd n a = 1"
                },
                {
                    "args": "coprime_gcd, coprime n (a MOD n) ⟷ coprime n a",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                }
            ],
            "prop": "coprime n (a MOD n) ⟷ coprime n a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "n",
                    "theorem": "division_simp1"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "(a DIV n * n + a MOD n) MOD n = a MOD n",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "division_simp1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_mod"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "coprime_lmod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "coprime_rmod, coprime n (a MOD n) ⟷ coprime n a",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime n (a MOD n) ⟷ coprime n a"
                },
                {
                    "args": "coprime_sym, coprime (a MOD n) n ⟷ coprime a n",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ coprime (a MOD n) n ⟷ coprime a n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime (a MOD n) n ⟷ coprime a n"
                }
            ],
            "prop": "coprime (a MOD n) n ⟷ coprime a n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_sym"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_rmod"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "gcd_coprime_lmul",
            "num_gaps": 3,
            "proof": [
                {
                    "args": "coprime a b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime a b ⊢ coprime a b"
                },
                {
                    "args": "gcd_divide1, {m: a * b, n: c}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd (a * b) c) (a * b)"
                },
                {
                    "args": "gcd_divide1, {m: a, n: c}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd a c) a"
                },
                {
                    "args": "gcd_divide1, {m: b, n: c}",
                    "id": "3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd b c) b"
                },
                {
                    "args": "divides_def",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. a * b = gcd (a * b) c * k"
                },
                {
                    "args": "divides_def",
                    "id": "5",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. a = gcd a c * k"
                },
                {
                    "args": "divides_def",
                    "id": "6",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ ∃k. b = gcd b c * k"
                },
                {
                    "args": "k1, nat",
                    "id": "7",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k1"
                },
                {
                    "args": "a * b = gcd (a * b) c * k1",
                    "id": "8",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a * b = gcd (a * b) c * k1 ⊢ a * b = gcd (a * b) c * k1"
                },
                {
                    "args": "k2, nat",
                    "id": "9",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k2"
                },
                {
                    "args": "a = gcd a c * k2",
                    "id": "10",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a = gcd a c * k2 ⊢ a = gcd a c * k2"
                },
                {
                    "args": "k3, nat",
                    "id": "11",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k3"
                },
                {
                    "args": "b = gcd b c * k3",
                    "id": "12",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b = gcd b c * k3 ⊢ b = gcd b c * k3"
                },
                {
                    "args": "coprime_gcd",
                    "id": "13",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime a b ⊢ gcd a b = 1"
                },
                {
                    "args": "gcd_divides2, {m: b, n: c}",
                    "id": "14",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (gcd b c) c"
                },
                {
                    "args": "gcd_equal_right",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd c (gcd b c) = gcd b c"
                },
                {
                    "args": "gcd_1_left, gcd 1 c = 1",
                    "id": "16",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ gcd 1 c = 1"
                },
                {
                    "args": "gcd (gcd a b) c = 1",
                    "id": "17",
                    "prevs": [
                        "13",
                        "16"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd a b) c = 1"
                },
                {
                    "args": "gcd_assoc, gcd a (gcd b c) = 1",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd a (gcd b c) = 1"
                },
                {
                    "args": "gcd a (gcd c (gcd b c)) = 1",
                    "id": "19",
                    "prevs": [
                        "15",
                        "18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd a (gcd c (gcd b c)) = 1"
                },
                {
                    "args": "gcd_assoc, gcd (gcd a c) (gcd b c) = 1",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd a c) (gcd b c) = 1"
                },
                {
                    "args": "coprime_gcd, coprime (gcd a c) (gcd b c)",
                    "id": "21",
                    "prevs": [
                        "20"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ coprime (gcd a c) (gcd b c)"
                },
                {
                    "args": "divides_mul2",
                    "id": "22",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides (gcd a c * gcd b c) (a * b)"
                },
                {
                    "args": "gcd_equal_left",
                    "id": "23",
                    "prevs": [
                        "22"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd a c * gcd b c) (a * b) = gcd a c * gcd b c"
                },
                {
                    "args": "",
                    "id": "24",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ ∀d. divides d (gcd a c * gcd b c) ∧ divides d c ⟷ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "d, nat",
                    "id": "24.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "24.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides d (gcd a c * gcd b c) ∧ divides d c ⟶ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "divides d (gcd a c * gcd b c) ∧ divides d c",
                    "id": "24.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d (gcd a c * gcd b c) ∧ divides d c"
                },
                {
                    "args": "conjD1",
                    "id": "24.1.1",
                    "prevs": [
                        "24.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d (gcd a c * gcd b c)"
                },
                {
                    "args": "conjD2",
                    "id": "24.1.2",
                    "prevs": [
                        "24.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d c"
                },
                {
                    "args": "divides_trans",
                    "id": "24.1.3",
                    "prevs": [
                        "24.1.1",
                        "22"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1, divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d (a * b)"
                },
                {
                    "args": "conjD2",
                    "id": "24.1.4",
                    "prevs": [
                        "24.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d c"
                },
                {
                    "args": "conjI",
                    "id": "24.1.5",
                    "prevs": [
                        "24.1.3",
                        "24.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1, divides d (gcd a c * gcd b c) ∧ divides d c ⊢ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "24.1.6",
                    "prevs": [
                        "24.1.0",
                        "24.1.5"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides d (gcd a c * gcd b c) ∧ divides d c ⟶ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "24.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides d (a * b) ∧ divides d c ⟶ divides d (gcd a c * gcd b c) ∧ divides d c"
                },
                {
                    "args": "divides d (a * b) ∧ divides d c",
                    "id": "24.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d (a * b) ∧ divides d c ⊢ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "conjD1",
                    "id": "24.2.1",
                    "prevs": [
                        "24.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d (a * b) ∧ divides d c ⊢ divides d (a * b)"
                },
                {
                    "args": "conjD2",
                    "id": "24.2.2",
                    "prevs": [
                        "24.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d (a * b) ∧ divides d c ⊢ divides d c"
                },
                {
                    "args": "",
                    "id": "24.2.3",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, divides d (a * b) ∧ divides d c, a * b = gcd (a * b) c * k1 ⊢ divides d (gcd a c * gcd b c)"
                },
                {
                    "args": "",
                    "id": "24.2.4",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, divides d (a * b) ∧ divides d c, a * b = gcd (a * b) c * k1 ⊢ divides d c"
                },
                {
                    "args": "conjI",
                    "id": "24.2.5",
                    "prevs": [
                        "24.2.3",
                        "24.2.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, divides d (a * b) ∧ divides d c, a * b = gcd (a * b) c * k1 ⊢ divides d (gcd a c * gcd b c) ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "24.2.6",
                    "prevs": [
                        "24.2.0",
                        "24.2.5"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides d (a * b) ∧ divides d c ⟶ divides d (gcd a c * gcd b c) ∧ divides d c"
                },
                {
                    "args": "iffI",
                    "id": "24.3",
                    "prevs": [
                        "24.1",
                        "24.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides d (gcd a c * gcd b c) ∧ divides d c ⟷ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "",
                    "id": "24.4",
                    "prevs": [
                        "24.0",
                        "24.3"
                    ],
                    "rule": "intros",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ ∀d. divides d (gcd a c * gcd b c) ∧ divides d c ⟷ divides d (a * b) ∧ divides d c"
                },
                {
                    "args": "gcd_eq",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd a c * gcd b c) c = gcd (a * b) c"
                },
                {
                    "args": "gcd (gcd (gcd a c * gcd b c) (a * b)) c = gcd (a * b) c",
                    "id": "26",
                    "prevs": [
                        "23",
                        "25"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd (gcd a c * gcd b c) (a * b)) c = gcd (a * b) c"
                },
                {
                    "args": "gcd_assoc, gcd (gcd a c * gcd b c) (gcd (a * b) c) = gcd (a * b) c",
                    "id": "27",
                    "prevs": [
                        "26"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (gcd a c * gcd b c) (gcd (a * b) c) = gcd (a * b) c"
                },
                {
                    "args": "divides_gcd_right, divides (gcd (a * b) c) (gcd a c * gcd b c)",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "rewrite_goal",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides (gcd (a * b) c) (gcd a c * gcd b c)"
                },
                {
                    "args": "",
                    "id": "29",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ divides (gcd a c * gcd b c) (gcd (a * b) c)"
                },
                {
                    "args": "divides_antisym",
                    "id": "30",
                    "prevs": [
                        "28",
                        "29"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime a b, a = gcd a c * k2, b = gcd b c * k3, a * b = gcd (a * b) c * k1 ⊢ gcd (a * b) c = gcd a c * gcd b c"
                },
                {
                    "args": "∃k. b = gcd b c * k, ∃k. a = gcd a c * k, ∃k. a * b = gcd (a * b) c * k",
                    "id": "31",
                    "prevs": [
                        "0",
                        "4",
                        "7",
                        "8",
                        "5",
                        "9",
                        "10",
                        "6",
                        "11",
                        "12",
                        "30"
                    ],
                    "rule": "intros",
                    "th": "⊢ coprime a b ⟶ gcd (a * b) c = gcd a c * gcd b c"
                }
            ],
            "prop": "coprime a b ⟶ gcd (a * b) c = gcd a c * gcd b c",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_forward_step",
                    "param_m": "a*b",
                    "param_n": "c",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_forward_step",
                    "param_m": "a",
                    "param_n": "c",
                    "theorem": "gcd_divide1"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "param_m": "b",
                    "param_n": "c",
                    "theorem": "gcd_divide1"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "7",
                    "method_name": "exists_elim",
                    "names": "k1"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "9",
                    "method_name": "exists_elim",
                    "names": "k2"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "11",
                    "method_name": "exists_elim",
                    "names": "k3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal": "coprime (gcd a c) (gcd b c)",
                    "goal_id": "14",
                    "method_name": "cut"
                },
                {
                    "goal_id": "14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "goal_id": "14",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_assoc"
                },
                {
                    "goal": "gcd c (gcd b c) = (gcd b c)",
                    "goal_id": "14",
                    "method_name": "cut"
                },
                {
                    "goal_id": "14",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_equal_right"
                },
                {
                    "goal_id": "14",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_divides2"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "gcd_assoc"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "gcd_1_left"
                },
                {
                    "goal_id": "22",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_gcd_right"
                },
                {
                    "goal_id": "22",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "gcd_assoc"
                },
                {
                    "goal": "divides (gcd a c * gcd b c) (a * b)",
                    "goal_id": "22",
                    "method_name": "cut"
                },
                {
                    "goal_id": "22",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_mul2"
                },
                {
                    "goal": "gcd (gcd a c * gcd b c) (a * b) = (gcd a c * gcd b c)",
                    "goal_id": "23",
                    "method_name": "cut"
                },
                {
                    "goal_id": "23",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_equal_left"
                },
                {
                    "fact_ids": [
                        "23"
                    ],
                    "goal_id": "24",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "gcd_eq"
                },
                {
                    "goal_id": "24",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "24.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "24.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "24.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "24.1.0"
                    ],
                    "goal_id": "24.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "24.1.0"
                    ],
                    "goal_id": "24.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "24.1.1"
                    ],
                    "goal_id": "24.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                },
                {
                    "fact_ids": [
                        "24.1.0"
                    ],
                    "goal_id": "24.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "24.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "24.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "24.2.0"
                    ],
                    "goal_id": "24.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "24.2.0"
                    ],
                    "goal_id": "24.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "c": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime",
            "prop": "prime p ⟷ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
            "ty": "def",
            "type": "nat ⇒ bool"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "one_or_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "p = 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "n, nat",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides n p",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides n p ⊢ divides n p"
                },
                {
                    "args": "",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides n p, p = 1 ⊢ divides n 1"
                },
                {
                    "args": "",
                    "id": "0.1.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides n p, p = 1 ⊢ divides n 1"
                },
                {
                    "args": "divides_one",
                    "id": "0.1.1.4",
                    "prevs": [
                        "0.1.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides n p, p = 1 ⊢ n = 1"
                },
                {
                    "args": "disjI1, {A: n = 1, B: n = p}",
                    "id": "0.1.1.5",
                    "prevs": [
                        "0.1.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides n p, p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.1.1.6",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.1",
                        "0.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ p = 1 ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.0",
                        "0.2.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟶ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀n. divides n p ⟶ n = 1 ∨ n = p) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "∀n. divides n p ⟶ n = 1 ∨ n = p",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "p = 1",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)}",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1",
                    "prevs": [
                        "1.2.0",
                        "1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "disjI2, {A: p = 1, B: ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)}",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ ¬(p = 1) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀n. divides n p ⟶ n = 1 ∨ n = p ⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. divides n p ⟶ n = 1 ∨ n = p) ⟶ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 1 ∨ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p) ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "prime_def, p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)"
                }
            ],
            "prop": "p = 1 ∨ prime p ⟷ (∀n. divides n p ⟶ n = 1 ∨ n = p)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "goal_id": "0.1.1.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1.0",
                        "0.1.1.1"
                    ],
                    "goal_id": "0.1.1.3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.1.1.3"
                    ],
                    "goal_id": "0.1.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "goal_id": "0.1.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p = 1",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "one_or_prime_divides_or_coprime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ∨ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "p = 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "n, nat",
                    "id": "0.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "0.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "disjI1, {A: divides 1 n, B: coprime 1 n}",
                    "id": "0.1.1.2",
                    "prevs": [
                        "0.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "",
                    "id": "0.1.1.3",
                    "prevs": [
                        "0.1.1.0",
                        "0.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides 1 n ∨ coprime 1 n"
                },
                {
                    "args": "∀n. divides p n ∨ coprime p n",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.0",
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "prime p",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "prime_def",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "0.2.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "n, nat",
                    "id": "0.2.3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "",
                    "id": "0.2.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "divides p n",
                    "id": "0.2.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "disjI1, {A: divides p n, B: ∀d. divides d p ∧ divides d n ⟷ d = 1}",
                    "id": "0.2.3.1.1",
                    "prevs": [
                        "0.2.3.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p n, p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.1.2",
                    "prevs": [
                        "0.2.3.1.0",
                        "0.2.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "0.2.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "d, nat",
                    "id": "0.2.3.2.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟶ d = 1"
                },
                {
                    "args": "divides d p ∧ divides d n",
                    "id": "0.2.3.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides d p ∧ divides d n ⊢ divides d p ∧ divides d n"
                },
                {
                    "args": "conjD1",
                    "id": "0.2.3.2.1.1.1",
                    "prevs": [
                        "0.2.3.2.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d n ⊢ divides d p"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.2",
                    "prevs": [
                        "0.2.2",
                        "0.2.3.2.1.1.1"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, divides d p ∧ divides d n ⊢ d = 1 ∨ d = p"
                },
                {
                    "args": "d = 1 ⟶ d = 1",
                    "id": "0.2.3.2.1.1.3",
                    "prevs": [],
                    "rule": "trivial",
                    "th": "⊢ d = 1 ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "d = p",
                    "id": "0.2.3.2.1.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = p ⊢ d = p"
                },
                {
                    "args": "conjD2",
                    "id": "0.2.3.2.1.1.4.1",
                    "prevs": [
                        "0.2.3.2.1.1.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides d p ∧ divides d n ⊢ divides d n"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4.2",
                    "prevs": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "d = p, divides d p ∧ divides d n ⊢ divides p n"
                },
                {
                    "args": "negE_gen, {A: divides p n, C: d = 1}",
                    "id": "0.2.3.2.1.1.4.3",
                    "prevs": [
                        "0.2.3.2.0",
                        "0.2.3.2.1.1.4.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "d = p, ¬(divides p n), divides d p ∧ divides d n ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.4.4",
                    "prevs": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = p ⟶ d = 1"
                },
                {
                    "args": "disjE",
                    "id": "0.2.3.2.1.1.5",
                    "prevs": [
                        "0.2.3.2.1.1.2",
                        "0.2.3.2.1.1.3",
                        "0.2.3.2.1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p, divides d p ∧ divides d n ⊢ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.1.6",
                    "prevs": [
                        "0.2.3.2.1.1.0",
                        "0.2.3.2.1.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟶ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ d = 1 ⟶ divides d p ∧ divides d n"
                },
                {
                    "args": "d = 1",
                    "id": "0.2.3.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 1 ⊢ d = 1"
                },
                {
                    "args": "divides_1, {x: p}",
                    "id": "0.2.3.2.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 p"
                },
                {
                    "args": "divides_1, {x: n}",
                    "id": "0.2.3.2.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 n"
                },
                {
                    "args": "conjI",
                    "id": "0.2.3.2.1.2.3",
                    "prevs": [
                        "0.2.3.2.1.2.1",
                        "0.2.3.2.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, d = 1, ¬(divides p n), p = 1 ∨ prime p ⊢ divides 1 p ∧ divides 1 n"
                },
                {
                    "args": "divides d p ∧ divides d n",
                    "id": "0.2.3.2.1.2.4",
                    "prevs": [
                        "0.2.3.2.1.2.0",
                        "0.2.3.2.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, d = 1, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.2.5",
                    "prevs": [
                        "0.2.3.2.1.2.0",
                        "0.2.3.2.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ d = 1 ⟶ divides d p ∧ divides d n"
                },
                {
                    "args": "iffI",
                    "id": "0.2.3.2.1.3",
                    "prevs": [
                        "0.2.3.2.1.1",
                        "0.2.3.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.1.4",
                    "prevs": [
                        "0.2.3.2.1.0",
                        "0.2.3.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "disjI2, {A: divides p n, B: ∀d. divides d p ∧ divides d n ⟷ d = 1}",
                    "id": "0.2.3.2.2",
                    "prevs": [
                        "0.2.3.2.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p n), p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "",
                    "id": "0.2.3.2.3",
                    "prevs": [
                        "0.2.3.2.0",
                        "0.2.3.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "classical_cases",
                    "id": "0.2.3.3",
                    "prevs": [
                        "0.2.3.1",
                        "0.2.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ∨ (∀d. divides d p ∧ divides d n ⟷ d = 1)"
                },
                {
                    "args": "coprime_def, divides p n ∨ coprime p n",
                    "id": "0.2.3.4",
                    "prevs": [
                        "0.2.3.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, p = 1 ∨ prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.2.3.5",
                    "prevs": [
                        "0.2.3.0",
                        "0.2.3.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.0",
                        "0.2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "disjE",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟶ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀n. divides p n ∨ coprime p n) ⟶ p = 1 ∨ prime p"
                },
                {
                    "args": "∀n. divides p n ∨ coprime p n",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "n, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "divides n p",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides n p ⊢ divides n p"
                },
                {
                    "args": "n",
                    "id": "1.1.2",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "divides p n",
                    "id": "1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.1.3.1",
                    "prevs": [
                        "1.1.1",
                        "1.1.3.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides n p, divides p n, ∀n. divides p n ∨ coprime p n ⊢ n = p"
                },
                {
                    "args": "disjI2, {A: n = 1, B: n = p}",
                    "id": "1.1.3.2",
                    "prevs": [
                        "1.1.3.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides n p, divides p n, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.3.3",
                    "prevs": [
                        "1.1.3.0",
                        "1.1.3.2"
                    ],
                    "rule": "intros",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ coprime p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "coprime p n",
                    "id": "1.1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "coprime_def",
                    "id": "1.1.4.1",
                    "prevs": [
                        "1.1.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "n",
                    "id": "1.1.4.2",
                    "prevs": [
                        "1.1.4.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides n p ∧ divides n n ⟷ n = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.1.4.3",
                    "prevs": [
                        "1.1.4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ n = 1 ⟷ divides n p ∧ divides n n"
                },
                {
                    "args": "divides_self, {n: n}",
                    "id": "1.1.4.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides n n"
                },
                {
                    "args": "conjI",
                    "id": "1.1.4.5",
                    "prevs": [
                        "1.1.1",
                        "1.1.4.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ divides n p ∧ divides n n"
                },
                {
                    "args": "n = 1",
                    "id": "1.1.4.6",
                    "prevs": [
                        "1.1.4.3",
                        "1.1.4.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1"
                },
                {
                    "args": "disjI1, {A: n = 1, B: n = p}",
                    "id": "1.1.4.7",
                    "prevs": [
                        "1.1.4.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "coprime p n, divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.4.8",
                    "prevs": [
                        "1.1.4.0",
                        "1.1.4.7"
                    ],
                    "rule": "intros",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ coprime p n ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "disjE",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.2",
                        "1.1.3",
                        "1.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides n p, ∀n. divides p n ∨ coprime p n ⊢ n = 1 ∨ n = p"
                },
                {
                    "args": "",
                    "id": "1.1.6",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.5"
                    ],
                    "rule": "intros",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ ∀n. divides n p ⟶ n = 1 ∨ n = p"
                },
                {
                    "args": "one_or_prime, p = 1 ∨ prime p",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "∀n. divides p n ∨ coprime p n ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. divides p n ∨ coprime p n) ⟶ p = 1 ∨ prime p"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                }
            ],
            "prop": "p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "0.2.3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.2.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "case": "divides p n",
                    "goal_id": "0.2.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0.2.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.3.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0.2.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.2.3.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0.2.3.2.1",
                    "method_name": "introduction",
                    "names": "d"
                },
                {
                    "goal_id": "0.2.3.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.2.3.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.0"
                    ],
                    "goal_id": "0.2.3.2.1.1.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.2.2",
                        "0.2.3.2.1.1.1"
                    ],
                    "goal_id": "0.2.3.2.1.1.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.2"
                    ],
                    "goal_id": "0.2.3.2.1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "0.2.3.2.1.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.0"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.1",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.1.4.0",
                        "0.2.3.2.1.1.4.1"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.0",
                        "0.2.3.2.1.1.4.2"
                    ],
                    "goal_id": "0.2.3.2.1.1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.2.3.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.3.2.1.2.0"
                    ],
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0.2.3.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "0.2.3.2.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "one_or_prime"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.1.2"
                    ],
                    "goal_id": "1.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1.1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1.4.0"
                    ],
                    "goal_id": "1.1.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.1.4.1"
                    ],
                    "goal_id": "1.1.4.2",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "goal_id": "1.1.4.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "fact_ids": [
                        "1.1.4.2"
                    ],
                    "goal_id": "1.1.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.1.4.3"
                    ],
                    "goal_id": "1.1.4.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "prime_coprime_eq_nondivisiable",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 1 ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "p = 1",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ⊢ prime 1 ⟶ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "prime 1",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime 1 ⊢ prime 1"
                },
                {
                    "args": "prime_def",
                    "id": "0.1.1",
                    "prevs": [
                        "0.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime 1 ⊢ ¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1)"
                },
                {
                    "args": "conjD1",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime 1 ⊢ ¬((1::nat) = 1)"
                },
                {
                    "args": "eq_refl, {x: (1::nat)}",
                    "id": "0.1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (1::nat) = 1"
                },
                {
                    "args": "negE_gen, {A: (1::nat) = 1, C: ∀n. coprime 1 n ⟷ ¬(divides 1 n)}",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.2",
                        "0.1.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime 1, p = 1 ⊢ ∀n. coprime 1 n ⟷ ¬(divides 1 n)"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ⊢ prime 1 ⟶ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ⊢ (∀n. coprime 1 n ⟷ ¬(divides 1 n)) ⟶ prime 1"
                },
                {
                    "args": "∀n. coprime 1 n ⟷ ¬(divides 1 n)",
                    "id": "0.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ ∀n. coprime 1 n ⟷ ¬(divides 1 n)"
                },
                {
                    "args": "(1::nat)",
                    "id": "0.2.1",
                    "prevs": [
                        "0.2.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ coprime 1 1 ⟷ ¬(divides 1 1)"
                },
                {
                    "args": "divides_one",
                    "id": "0.2.2",
                    "prevs": [
                        "0.2.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ coprime 1 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "coprime_gcd",
                    "id": "0.2.3",
                    "prevs": [
                        "0.2.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ gcd 1 1 = 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "gcd_1_right",
                    "id": "0.2.4",
                    "prevs": [
                        "0.2.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ (1::nat) = 1 ⟷ ¬((1::nat) = 1)"
                },
                {
                    "args": "prime 1",
                    "id": "0.2.5",
                    "prevs": [
                        "0.2.4"
                    ],
                    "rule": "z3",
                    "th": "∀n. coprime 1 n ⟷ ¬(divides 1 n) ⊢ prime 1"
                },
                {
                    "args": "",
                    "id": "0.2.6",
                    "prevs": [
                        "0.2.0",
                        "0.2.5"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ⊢ (∀n. coprime 1 n ⟷ ¬(divides 1 n)) ⟶ prime 1"
                },
                {
                    "args": "iffI",
                    "id": "0.3",
                    "prevs": [
                        "0.1",
                        "0.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ⊢ prime 1 ⟷ (∀n. coprime 1 n ⟷ ¬(divides 1 n))"
                },
                {
                    "args": "prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))",
                    "id": "0.4",
                    "prevs": [
                        "0.0",
                        "0.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1 ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 1 ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(p = 1) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "one_or_prime_divides_or_coprime, {p: p}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ p = 1 ∨ prime p ⟷ (∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1) ⊢ p = 1 ∨ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "prime p",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.0",
                    "prevs": [
                        "1.1",
                        "1.2.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = 1 ∨ prime p ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "n, nat",
                    "id": "1.2.1.1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n",
                    "id": "1.2.1.1.1.1",
                    "prevs": [
                        "1.2.1.1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "p = 1 ∨ prime p ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "divides p n",
                    "id": "1.2.1.1.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "coprime p n",
                    "id": "1.2.1.1.1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "coprime_def",
                    "id": "1.2.1.1.1.2.1.1",
                    "prevs": [
                        "1.2.1.1.1.2.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "p",
                    "id": "1.2.1.1.1.2.1.2",
                    "prevs": [
                        "1.2.1.1.1.2.1.1"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides p p ∧ divides p n ⟷ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.1.1.1.2.1.3.0",
                    "prevs": [
                        "1.2.1.1.1.2.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ p = 1 ⟷ divides p p ∧ divides p n"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "1.2.1.1.1.2.1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.1.1.2.1.3.2",
                    "prevs": [
                        "1.2.1.1.1.2.1.3.1",
                        "1.2.1.1.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p p ∧ divides p n"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.1.1.2.1.3.3",
                    "prevs": [
                        "1.2.1.1.1.2.1.3.0",
                        "1.2.1.1.1.2.1.3.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.3.4",
                    "prevs": [
                        "1.2.1.1.1.2.0",
                        "1.2.1.1.1.2.1.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "double_neg, ¬¬(divides p n) ⟶ ¬¬(p = 1)",
                    "id": "1.2.1.1.1.2.1.4",
                    "prevs": [
                        "1.2.1.1.1.2.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬¬(divides p n) ⟶ ¬¬(p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.1.1.1.2.1.5",
                    "prevs": [
                        "1.0",
                        "1.2.1.1.1.2.1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.1.6",
                    "prevs": [
                        "1.2.1.1.1.2.1.0",
                        "1.2.1.1.1.2.1.5"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "1.2.1.1.1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "negE_gen, {A: divides p n, C: coprime p n}",
                    "id": "1.2.1.1.1.2.2.1",
                    "prevs": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides p n, ¬(divides p n) ⊢ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.2.2",
                    "prevs": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.1.1.2.3",
                    "prevs": [
                        "1.2.1.1.1.2.1",
                        "1.2.1.1.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.2.4",
                    "prevs": [
                        "1.2.1.1.1.2.0",
                        "1.2.1.1.1.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "coprime p n",
                    "id": "1.2.1.1.1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "coprime p n ⊢ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "coprime_def",
                    "id": "1.2.1.1.1.3.1.0",
                    "prevs": [
                        "1.2.1.1.1.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ ∀d. divides d p ∧ divides d n ⟷ d = 1"
                },
                {
                    "args": "p",
                    "id": "1.2.1.1.1.3.1.1",
                    "prevs": [
                        "1.2.1.1.1.3.1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "coprime p n ⊢ divides p p ∧ divides p n ⟷ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "divides p n",
                    "id": "1.2.1.1.1.3.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p n ⊢ divides p n"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.1.1.1.3.1.2.1",
                    "prevs": [
                        "1.2.1.1.1.3.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "coprime p n ⊢ p = 1 ⟷ divides p p ∧ divides p n"
                },
                {
                    "args": "divides_self, {n: p}",
                    "id": "1.2.1.1.1.3.1.2.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.1.1.1.3.1.2.3",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.2",
                        "1.2.1.1.1.3.1.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p p ∧ divides p n"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.1.1.3.1.2.4",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.1",
                        "1.2.1.1.1.3.1.2.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, coprime p n, divides p n, ¬(p = 1), p = 1 ∨ prime p ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.2.5",
                    "prevs": [
                        "1.2.1.1.1.3.1.2.0",
                        "1.2.1.1.1.3.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ divides p n ⟶ p = 1"
                },
                {
                    "args": "double_neg, ¬¬(divides p n) ⟶ ¬¬(p = 1)",
                    "id": "1.2.1.1.1.3.1.3",
                    "prevs": [
                        "1.2.1.1.1.3.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬¬(divides p n) ⟶ ¬¬(p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.2.1.1.1.3.1.4",
                    "prevs": [
                        "1.0",
                        "1.2.1.1.1.3.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.1.5",
                    "prevs": [
                        "1.2.1.1.1.3.0",
                        "1.2.1.1.1.3.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "¬(divides p n)",
                    "id": "1.2.1.1.1.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p n) ⊢ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.2.1",
                    "prevs": [
                        "1.2.1.1.1.3.2.0",
                        "1.2.1.1.1.3.0"
                    ],
                    "rule": "intros",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ ¬(divides p n) ⟶ coprime p n"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.1.1.3.3",
                    "prevs": [
                        "1.2.1.1.1.3.1",
                        "1.2.1.1.1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, coprime p n, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.3.4",
                    "prevs": [
                        "1.2.1.1.1.3.0",
                        "1.2.1.1.1.3.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟶ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "disjE",
                    "id": "1.2.1.1.1.4",
                    "prevs": [
                        "1.2.1.1.1.1",
                        "1.2.1.1.1.2",
                        "1.2.1.1.1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.1.5",
                    "prevs": [
                        "1.2.1.1.1.0",
                        "1.2.1.1.1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.1.2",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "∀n. coprime p n ⟷ ¬(divides p n)",
                    "id": "1.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.2.1.2.1",
                    "prevs": [
                        "1.2.1.2.0",
                        "1.2.1.0"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.1",
                        "1.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.1.4",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "0",
                        "1.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), p = 1 ∨ prime p ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1) ⊢ p = 1 ∨ prime p ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1) ⊢ ¬(p = 1 ∨ prime p) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "¬(p = 1 ∨ prime p)",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(p = 1 ∨ prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [
                        "1.1",
                        "1.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(∀n. divides p n ∨ coprime p n)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(p = 1) ∧ ¬(prime p)"
                },
                {
                    "args": "conjD2",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1 ∨ prime p) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "prime p",
                    "id": "1.3.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "negE_gen, {A: prime p, C: ∀n. coprime p n ⟷ ¬(divides p n)}",
                    "id": "1.3.4.1",
                    "prevs": [
                        "1.3.3",
                        "1.3.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(p = 1 ∨ prime p) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.3.4.2",
                    "prevs": [
                        "1.3.4.0",
                        "1.3.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟶ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "∀n. coprime p n ⟷ ¬(divides p n)",
                    "id": "1.3.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "",
                    "id": "1.3.5.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "n, nat",
                    "id": "1.3.5.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "n",
                    "id": "1.3.5.1.1",
                    "prevs": [
                        "1.3.5.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀n. coprime p n ⟷ ¬(divides p n) ⊢ coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "classical, {A: divides p n}",
                    "id": "1.3.5.1.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides p n ∨ ¬(divides p n)"
                },
                {
                    "args": "divides p n ∨ coprime p n",
                    "id": "1.3.5.1.3",
                    "prevs": [
                        "1.3.5.1.1",
                        "1.3.5.1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ divides p n ∨ coprime p n"
                },
                {
                    "args": "",
                    "id": "1.3.5.1.4",
                    "prevs": [
                        "1.3.5.1.0",
                        "1.3.5.1.3"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ ∀n. divides p n ∨ coprime p n"
                },
                {
                    "args": "negE_gen, {A: ∀n. divides p n ∨ coprime p n, C: prime p}",
                    "id": "1.3.5.2",
                    "prevs": [
                        "1.3.1",
                        "1.3.5.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p), ∀n. coprime p n ⟷ ¬(divides p n) ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1.3.5.3",
                    "prevs": [
                        "1.3.5.0",
                        "1.3.5.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ (∀n. coprime p n ⟷ ¬(divides p n)) ⟶ prime p"
                },
                {
                    "args": "iffI",
                    "id": "1.3.6",
                    "prevs": [
                        "1.3.4",
                        "1.3.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 1 ∨ prime p) ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.3.7",
                    "prevs": [
                        "1.3.0",
                        "1.3.6"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1) ⊢ ¬(p = 1 ∨ prime p) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "classical_cases",
                    "id": "1.4",
                    "prevs": [
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1) ⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(p = 1) ⟶ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))"
                }
            ],
            "prop": "prime p ⟷ (∀n. coprime p n ⟷ ¬(divides p n))",
            "steps": [
                {
                    "case": "p=1",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.1.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "0.1.1"
                    ],
                    "goal_id": "0.1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "0.1.2"
                    ],
                    "goal_id": "0.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "0.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.2.0"
                    ],
                    "goal_id": "0.2.1",
                    "method_name": "forall_elim",
                    "s": "(1::nat)"
                },
                {
                    "fact_ids": [
                        "0.2.1"
                    ],
                    "goal_id": "0.2.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "0.2.2"
                    ],
                    "goal_id": "0.2.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_gcd"
                },
                {
                    "fact_ids": [
                        "0.2.3"
                    ],
                    "goal_id": "0.2.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "gcd_1_right"
                },
                {
                    "fact_ids": [
                        "0.2.4"
                    ],
                    "goal_id": "0.2.5",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_forward_step",
                    "param_p": "p",
                    "theorem": "one_or_prime_divides_or_coprime"
                },
                {
                    "case": "p = 1 ∨ prime p",
                    "goal_id": "1.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1.1.0",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.1",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.1.1.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.2",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.2"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3.0",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.1.3.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.1.1.2.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.2.1.1.1.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.2.2.0",
                        "1.2.1.1.1.2.0"
                    ],
                    "goal_id": "1.2.1.1.1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.1.1.1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.0",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "coprime_def"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.1",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.1"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.1.1.1.3.1.2.1"
                    ],
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.1.1.1.3.1.2.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.2.1.1.1.3.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.3.2"
                    ],
                    "goal_id": "1.3.3",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "1.3.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.3",
                        "1.3.4.0"
                    ],
                    "goal_id": "1.3.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.3.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1"
                    ],
                    "goal_id": "1.3.5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.3.5.1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "fact_ids": [
                        "1.3.5.0"
                    ],
                    "goal_id": "1.3.5.1.1",
                    "method_name": "forall_elim",
                    "s": "n"
                },
                {
                    "fact_ids": [
                        "1.3.5.1.1"
                    ],
                    "goal_id": "1.3.5.1.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.5.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "classical"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "zero_one_or_prime_divprod",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "p = 0 ∨ p = 1 ∨ prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "mult_eq_0, a * b = 0 ⟷ a = 0 ∨ b = 0",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ a * b = 0 ⟷ a = 0 ∨ b = 0"
                },
                {
                    "args": "divides_0, divides 0 (a * b) ⟷ divides 0 a ∨ divides 0 b",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p = 0, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 0 (a * b) ⟷ divides 0 a ∨ divides 0 b"
                },
                {
                    "args": "divides p (a * b) ⟷ divides p a ∨ divides p b",
                    "id": "1.3",
                    "prevs": [
                        "1.0",
                        "1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 0, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 1 ∨ prime p",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ∨ prime p ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "p = 1",
                    "id": "2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "",
                    "id": "2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟶ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides 1 (a * b)",
                    "id": "2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 (a * b) ⊢ divides 1 (a * b)"
                },
                {
                    "args": "divides_1, {x: a}",
                    "id": "2.1.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 a"
                },
                {
                    "args": "disjI1, {A: divides 1 a, B: divides 1 b}",
                    "id": "2.1.1.2",
                    "prevs": [
                        "2.1.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, divides 1 (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "",
                    "id": "2.1.1.3",
                    "prevs": [
                        "2.1.1.0",
                        "2.1.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟶ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "",
                    "id": "2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b ⟶ divides 1 (a * b)"
                },
                {
                    "args": "divides 1 a ∨ divides 1 b",
                    "id": "2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides 1 a ∨ divides 1 b ⊢ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides_1, {x: a * b}",
                    "id": "2.1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 1 (a * b)"
                },
                {
                    "args": "",
                    "id": "2.1.2.2",
                    "prevs": [
                        "2.1.2.0",
                        "2.1.2.1"
                    ],
                    "rule": "intros",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 a ∨ divides 1 b ⟶ divides 1 (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "2.1.3",
                    "prevs": [
                        "2.1.1",
                        "2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides 1 (a * b) ⟷ divides 1 a ∨ divides 1 b"
                },
                {
                    "args": "divides p (a * b) ⟷ divides p a ∨ divides p b",
                    "id": "2.1.4",
                    "prevs": [
                        "2.1.0",
                        "2.1.3"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p = 1, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.1.5",
                    "prevs": [
                        "2.1.0",
                        "2.1.4"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "prime p",
                    "id": "2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "divides p (a * b)",
                    "id": "2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p (a * b) ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "divides p a",
                    "id": "2.2.1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "disjI1, {A: divides p a, B: divides p b}",
                    "id": "2.2.1.1.1",
                    "prevs": [
                        "2.2.1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p a, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.1.2",
                    "prevs": [
                        "2.2.1.1.0",
                        "2.2.1.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ ¬(divides p a) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "¬(divides p a)",
                    "id": "2.2.1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides p a) ⊢ ¬(divides p a)"
                },
                {
                    "args": "prime_coprime_eq_nondivisiable",
                    "id": "2.2.1.2.1",
                    "prevs": [
                        "2.2.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∀n. coprime p n ⟷ ¬(divides p n)"
                },
                {
                    "args": "coprime p a",
                    "id": "2.2.1.2.2",
                    "prevs": [
                        "2.2.1.2.1",
                        "2.2.1.2.0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ coprime p a"
                },
                {
                    "args": "coprime_divprod",
                    "id": "2.2.1.2.3",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b"
                },
                {
                    "args": "disjI2, {A: divides p a, B: divides p b}",
                    "id": "2.2.1.2.4",
                    "prevs": [
                        "2.2.1.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, ¬(divides p a), divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.2.5",
                    "prevs": [
                        "2.2.1.2.0",
                        "2.2.1.2.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ ¬(divides p a) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "classical_cases",
                    "id": "2.2.1.3",
                    "prevs": [
                        "2.2.1.1",
                        "2.2.1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, divides p (a * b), p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.1.4",
                    "prevs": [
                        "2.2.1.0",
                        "2.2.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟶ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p a ∨ divides p b",
                    "id": "2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ∨ divides p b ⊢ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p a",
                    "id": "2.2.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p a ⊢ divides p a"
                },
                {
                    "args": "divides_rmul, {a: a, d: p, x: b}",
                    "id": "2.2.2.1.1",
                    "prevs": [
                        "2.2.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p a, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.1.2",
                    "prevs": [
                        "2.2.2.1.0",
                        "2.2.2.1.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ⟶ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "divides p b",
                    "id": "2.2.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides p b ⊢ divides p b"
                },
                {
                    "args": "divides_lmul, {a: b, d: p, x: a}",
                    "id": "2.2.2.2.1",
                    "prevs": [
                        "2.2.2.2.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p, divides p b, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.2.2",
                    "prevs": [
                        "2.2.2.2.0",
                        "2.2.2.2.1"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "disjE",
                    "id": "2.2.2.3",
                    "prevs": [
                        "2.2.2.0",
                        "2.2.2.1",
                        "2.2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p, divides p a ∨ divides p b, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b)"
                },
                {
                    "args": "",
                    "id": "2.2.2.4",
                    "prevs": [
                        "2.2.2.0",
                        "2.2.2.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p a ∨ divides p b ⟶ divides p (a * b)"
                },
                {
                    "args": "iffI",
                    "id": "2.2.3",
                    "prevs": [
                        "2.2.1",
                        "2.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.2.4",
                    "prevs": [
                        "2.2.0",
                        "2.2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "disjE",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 1 ∨ prime p, p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "disjE",
                    "id": "3",
                    "prevs": [
                        "0",
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b"
                }
            ],
            "prop": "p = 0 ∨ p = 1 ∨ prime p ⟶ divides p (a * b) ⟷ divides p a ∨ divides p b",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_eq_0"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.1.0"
                    ],
                    "goal_id": "2.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_1"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "2.2.1",
                    "method_name": "introduction"
                },
                {
                    "case": "divides p a",
                    "goal_id": "2.2.1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2.2.1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "2.2.1.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "2.2.1.0"
                    ],
                    "goal_id": "2.2.1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "coprime_divprod"
                },
                {
                    "fact_ids": [
                        "2.2.0"
                    ],
                    "goal_id": "2.2.1.2.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_coprime_eq_nondivisiable"
                },
                {
                    "fact_ids": [
                        "2.2.1.2.1"
                    ],
                    "goal_id": "2.2.1.2.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.2.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.2.2.0"
                    ],
                    "goal_id": "2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2.2.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_rmul"
                },
                {
                    "goal_id": "2.2.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "2.2.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "nat",
                "b": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "zero_one_or_prime",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b)"
                },
                {
                    "args": "p = 0 ∨ p = 1 ∨ prime p",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "a, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, nat",
                    "id": "0.1.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "zero_one_or_prime_divprod, {a: a, b: b, p: p}",
                    "id": "0.1.2",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.0",
                        "0.1.1",
                        "0.1.2"
                    ],
                    "rule": "intros",
                    "th": "p = 0 ∨ p = 1 ∨ prime p ⊢ ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟶ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "p = 0",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "disjI1, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.1.1",
                    "prevs": [
                        "1.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 0, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.0",
                        "1.1.1"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ¬(p = 0) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "¬(p = 0)",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 0) ⊢ ¬(p = 0)"
                },
                {
                    "args": "",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 1 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "p = 1",
                    "id": "1.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "disjI1, {A: p = 1, B: prime p}",
                    "id": "1.2.1.1",
                    "prevs": [
                        "1.2.1.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.2.1.2",
                    "prevs": [
                        "1.2.1.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "p = 1, ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.1.3",
                    "prevs": [
                        "1.2.1.0",
                        "1.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 1 ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ¬(p = 1) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "¬(p = 1)",
                    "id": "1.2.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p = 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "",
                    "id": "1.2.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "x, nat",
                    "id": "1.2.2.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "divides x p",
                    "id": "1.2.2.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides x p ⊢ divides x p"
                },
                {
                    "args": "divides_def",
                    "id": "1.2.2.1.2",
                    "prevs": [
                        "1.2.2.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p ⊢ ∃k. p = x * k"
                },
                {
                    "args": "k, nat",
                    "id": "1.2.2.1.3",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR k"
                },
                {
                    "args": "p = x * k",
                    "id": "1.2.2.1.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = x * k ⊢ p = x * k"
                },
                {
                    "args": "x",
                    "id": "1.2.2.1.5",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ∀b. divides p (x * b) ⟷ divides p x ∨ divides p b"
                },
                {
                    "args": "k",
                    "id": "1.2.2.1.6",
                    "prevs": [
                        "1.2.2.1.5"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides p (x * k) ⟷ divides p x ∨ divides p k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.7",
                    "prevs": [
                        "1.2.2.1.4",
                        "1.2.2.1.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) (x * k) ⟷ divides (x * k) x ∨ divides (x * k) k"
                },
                {
                    "args": "divides_self, {n: x * k}",
                    "id": "1.2.2.1.8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides (x * k) (x * k)"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.9",
                    "prevs": [
                        "1.2.2.1.7",
                        "1.2.2.1.8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) x ∨ divides (x * k) k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) x ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "divides (x * k) x",
                    "id": "1.2.2.1.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (x * k) x ⊢ divides (x * k) x"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "1.2.2.1.10.1",
                    "prevs": [
                        "1.2.2.1.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "p = x * k ⊢ x * k = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10.2",
                    "prevs": [
                        "1.2.2.1.10.1",
                        "1.2.2.1.10.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "p = x * k, divides (x * k) x ⊢ divides p x"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.2.2.1.10.3",
                    "prevs": [
                        "1.2.2.1.1",
                        "1.2.2.1.10.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) x, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = p"
                },
                {
                    "args": "disjI2, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.10.4",
                    "prevs": [
                        "1.2.2.1.10.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) x, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.10.5",
                    "prevs": [
                        "1.2.2.1.10.0",
                        "1.2.2.1.10.4"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) x ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) k ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "divides (x * k) k",
                    "id": "1.2.2.1.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides (x * k) k ⊢ divides (x * k) k"
                },
                {
                    "args": "divides_self, {n: k}",
                    "id": "1.2.2.1.11.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides k k"
                },
                {
                    "args": "divides_lmul, {a: k, d: k, x: x}",
                    "id": "1.2.2.1.11.2",
                    "prevs": [
                        "1.2.2.1.11.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides k (x * k)"
                },
                {
                    "args": "divides_antisym",
                    "id": "1.2.2.1.11.3",
                    "prevs": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x * k = k"
                },
                {
                    "args": "mult_1_left, k = 1 * k",
                    "id": "1.2.2.1.11.4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ k = 1 * k"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.5",
                    "prevs": [
                        "1.2.2.1.11.4",
                        "1.2.2.1.11.3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x * (1 * k) = 1 * k"
                },
                {
                    "args": "mult_assoc",
                    "id": "1.2.2.1.11.6",
                    "prevs": [
                        "1.2.2.1.11.5"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x * 1 * k = 1 * k"
                },
                {
                    "args": "mult_1_right",
                    "id": "1.2.2.1.11.7",
                    "prevs": [
                        "1.2.2.1.11.6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x * k = 1 * k"
                },
                {
                    "args": "eq_mult_rcancel",
                    "id": "1.2.2.1.11.8",
                    "prevs": [
                        "1.2.2.1.11.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ k = 0 ∨ x = 1"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ k = 0 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "k = 0",
                    "id": "1.2.2.1.11.9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "k = 0 ⊢ k = 0"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9.1",
                    "prevs": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "k = 0, p = x * k ⊢ p = x * 0"
                },
                {
                    "args": "mult_0_right",
                    "id": "1.2.2.1.11.9.2",
                    "prevs": [
                        "1.2.2.1.11.9.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "k = 0, p = x * k ⊢ p = 0"
                },
                {
                    "args": "negE_gen, {A: p = 0, C: x = p}",
                    "id": "1.2.2.1.11.9.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2.1.11.9.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "k = 0, ¬(p = 0), p = x * k ⊢ x = p"
                },
                {
                    "args": "disjI2, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.11.9.4",
                    "prevs": [
                        "1.2.2.1.11.9.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, k = 0, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.9.5",
                    "prevs": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.11.9.4"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ k = 0 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.10",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "x = 1",
                    "id": "1.2.2.1.11.10.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 1 ⊢ x = 1"
                },
                {
                    "args": "disjI1, {A: x = 1, B: x = p}",
                    "id": "1.2.2.1.11.10.1",
                    "prevs": [
                        "1.2.2.1.11.10.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "divides x p, x = 1, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.10.2",
                    "prevs": [
                        "1.2.2.1.11.10.0",
                        "1.2.2.1.11.10.1"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.1.11.11",
                    "prevs": [
                        "1.2.2.1.11.8",
                        "1.2.2.1.11.9",
                        "1.2.2.1.11.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, divides (x * k) k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "",
                    "id": "1.2.2.1.11.12",
                    "prevs": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.11"
                    ],
                    "rule": "intros",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ divides (x * k) k ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "disjE",
                    "id": "1.2.2.1.12",
                    "prevs": [
                        "1.2.2.1.9",
                        "1.2.2.1.10",
                        "1.2.2.1.11"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x p, ¬(p = 1), ¬(p = 0), p = x * k, ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ x = 1 ∨ x = p"
                },
                {
                    "args": "∃k. p = x * k",
                    "id": "1.2.2.1.13",
                    "prevs": [
                        "1.2.2.1.0",
                        "1.2.2.1.1",
                        "1.2.2.1.2",
                        "1.2.2.1.3",
                        "1.2.2.1.4",
                        "1.2.2.1.12"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ∀x. divides x p ⟶ x = 1 ∨ x = p"
                },
                {
                    "args": "conjI",
                    "id": "1.2.2.2",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ¬(p = 1) ∧ (∀x. divides x p ⟶ x = 1 ∨ x = p)"
                },
                {
                    "args": "prime_def, prime p",
                    "id": "1.2.2.3",
                    "prevs": [
                        "1.2.2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ prime p"
                },
                {
                    "args": "disjI2, {A: p = 1, B: prime p}",
                    "id": "1.2.2.4",
                    "prevs": [
                        "1.2.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 1 ∨ prime p"
                },
                {
                    "args": "disjI2, {A: p = 0, B: p = 1 ∨ prime p}",
                    "id": "1.2.2.5",
                    "prevs": [
                        "1.2.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(p = 1), ¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.2.6",
                    "prevs": [
                        "1.2.2.0",
                        "1.2.2.5"
                    ],
                    "rule": "intros",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ¬(p = 1) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "classical_cases",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.1",
                        "1.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(p = 0), ∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ ¬(p = 0) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "classical_cases",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b ⊢ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b) ⟶ p = 0 ∨ p = 1 ∨ prime p"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟷ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ p = 0 ∨ p = 1 ∨ prime p ⟷ (∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b)"
                }
            ],
            "prop": [
                "p = 0 ∨ p = 1 ∨ prime p ⟷ ",
                "(∀a. ∀b. divides p (a * b) ⟷ divides p a ∨ divides p b)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "a,b"
                },
                {
                    "goal_id": "0.1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "zero_one_or_prime_divprod"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "case": "p = 0",
                    "goal_id": "1.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "case": "p=1",
                    "goal_id": "1.2.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.2.2.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.1"
                    ],
                    "goal_id": "1.2.2.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.2"
                    ],
                    "goal_id": "1.2.2.1.3",
                    "method_name": "exists_elim",
                    "names": "k"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.2.2.1.5",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.5"
                    ],
                    "goal_id": "1.2.2.1.6",
                    "method_name": "forall_elim",
                    "s": "k"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.4",
                        "1.2.2.1.6"
                    ],
                    "goal_id": "1.2.2.1.7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.7"
                    ],
                    "goal": "divides (x * k) (x * k)",
                    "goal_id": "1.2.2.1.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.7",
                        "1.2.2.1.8"
                    ],
                    "goal_id": "1.2.2.1.9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.9"
                    ],
                    "goal_id": "1.2.2.1.10",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.1.10",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.4"
                    ],
                    "goal_id": "1.2.2.1.10.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.10.1",
                        "1.2.2.1.10.0"
                    ],
                    "goal_id": "1.2.2.1.10.2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal_id": "1.2.2.1.10.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "1.2.2.1.10.3",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal_id": "1.2.2.1.11",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.0"
                    ],
                    "goal": "divides k (x * k)",
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_lmul"
                },
                {
                    "goal_id": "1.2.2.1.11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.0",
                        "1.2.2.1.11.2"
                    ],
                    "goal_id": "1.2.2.1.11.3",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_antisym"
                },
                {
                    "goal": "k = 1 * k",
                    "goal_id": "1.2.2.1.11.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.2.1.11.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_left"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.4",
                        "1.2.2.1.11.3"
                    ],
                    "goal_id": "1.2.2.1.11.5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.5"
                    ],
                    "goal_id": "1.2.2.1.11.6",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "mult_assoc"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.6"
                    ],
                    "goal_id": "1.2.2.1.11.7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.7"
                    ],
                    "goal_id": "1.2.2.1.11.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_mult_rcancel"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.8"
                    ],
                    "goal_id": "1.2.2.1.11.9",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2.2.1.11.9",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1.11.9.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.9.0",
                        "1.2.2.1.4"
                    ],
                    "goal_id": "1.2.2.1.11.9.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "1.2.2.1.11.9.1"
                    ],
                    "goal_id": "1.2.2.1.11.9.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "fact_ids": [
                        "1.2.0",
                        "1.2.2.1.11.9.2"
                    ],
                    "goal_id": "1.2.2.1.11.9.3",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.2.2.1.11.10",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.2.2.1.11.10.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "divides_zero, {n: (2::nat)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 2 0"
                },
                {
                    "args": "¬((2::nat) = 1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 1)"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "2",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "conjI",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬((2::nat) = 1) ∧ ¬((2::nat) = 0)"
                },
                {
                    "args": "de_morgan_thm2, ¬((2::nat) = 1 ∨ (2::nat) = 0)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬((2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "conjI",
                    "id": "5",
                    "prevs": [
                        "0",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ divides 2 0 ∧ ¬((2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "not_imp, ¬(divides 2 0 ⟶ (2::nat) = 1 ∨ (2::nat) = 0)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(divides 2 0 ⟶ (2::nat) = 1 ∨ (2::nat) = 0)"
                },
                {
                    "args": "exI, {P: λx. ¬(divides x 0 ⟶ x = 1 ∨ x = 0), a: (2::nat)}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. ¬(divides a1 0 ⟶ a1 = 1 ∨ a1 = 0)"
                },
                {
                    "args": "not_all, ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)"
                },
                {
                    "args": "disjI2, {A: ¬¬((0::nat) = 1), B: ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)}",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬¬((0::nat) = 1) ∨ ¬(∀x. divides x 0 ⟶ x = 1 ∨ x = 0)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬((0::nat) = 1) ∧ (∀x. divides x 0 ⟶ x = 1 ∨ x = 0))",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(¬((0::nat) = 1) ∧ (∀x. divides x 0 ⟶ x = 1 ∨ x = 0))"
                },
                {
                    "args": "prime_def, ¬(prime 0)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(prime 0)"
                }
            ],
            "prop": "¬(prime 0)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "0",
                    "method_name": "inst_exists_goal",
                    "s": "(2::nat)"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "2",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "double_neg, ¬¬((1::nat) = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬¬((1::nat) = 1)"
                },
                {
                    "args": "disjI1, {A: ¬¬((1::nat) = 1), B: ¬(∀x. divides x 1 ⟶ x = 1 ∨ x = 1)}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬¬((1::nat) = 1) ∨ ¬(∀x. divides x 1 ⟶ x = 1 ∨ x = 1)"
                },
                {
                    "args": "de_morgan_thm1, ¬(¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1))",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(¬((1::nat) = 1) ∧ (∀x. divides x 1 ⟶ x = 1 ∨ x = 1))"
                },
                {
                    "args": "prime_def, ¬(prime 1)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(prime 1)"
                }
            ],
            "prop": "¬(prime 1)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬((2::nat) = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. divides x 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "x, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "divides x 2",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "divides x 2 ⊢ divides x 2"
                },
                {
                    "args": "divides_le",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2 ⊢ x ≤ 2 ∨ (2::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2 ⊢ x ≤ 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "x ≤ 2",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 2 ⊢ x ≤ 2"
                },
                {
                    "args": "",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 0 ⟶ ¬(divides x 2)"
                },
                {
                    "args": "x = 0",
                    "id": "1.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x = 0 ⊢ x = 0"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "1.3.1.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "divides_0, ¬(divides 0 2)",
                    "id": "1.3.1.2",
                    "prevs": [
                        "1.3.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x = 0, divides x 2, x ≤ 2 ⊢ ¬(divides 0 2)"
                },
                {
                    "args": "¬(divides x 2)",
                    "id": "1.3.1.3",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "x = 0, divides x 2, x ≤ 2 ⊢ ¬(divides x 2)"
                },
                {
                    "args": "",
                    "id": "1.3.1.4",
                    "prevs": [
                        "1.3.1.0",
                        "1.3.1.3"
                    ],
                    "rule": "intros",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 0 ⟶ ¬(divides x 2)"
                },
                {
                    "args": "double_neg, ¬¬(x = 0) ⟶ ¬(divides x 2)",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "divides x 2, x ≤ 2 ⊢ ¬¬(x = 0) ⟶ ¬(divides x 2)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.3.3",
                    "prevs": [
                        "1.1",
                        "1.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2, x ≤ 2 ⊢ ¬(x = 0)"
                },
                {
                    "args": "x = 1 ∨ x = 2",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "z3",
                    "th": "divides x 2, x ≤ 2 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.3.5",
                    "prevs": [
                        "1.3.0",
                        "1.3.4"
                    ],
                    "rule": "intros",
                    "th": "divides x 2 ⊢ x ≤ 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2 ⊢ (2::nat) = 0 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "(2::nat) = 0",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(2::nat) = 0 ⊢ (2::nat) = 0"
                },
                {
                    "args": "",
                    "id": "1.4.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "divides x 2, (2::nat) = 0 ⊢ ¬(x = 1 ∨ x = 2) ⟶ ¬((2::nat) = 0)"
                },
                {
                    "args": "¬(x = 1 ∨ x = 2)",
                    "id": "1.4.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(x = 1 ∨ x = 2) ⊢ ¬(x = 1 ∨ x = 2)"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "1.4.1.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "1.4.1.2",
                    "prevs": [
                        "1.4.1.0",
                        "1.4.1.1"
                    ],
                    "rule": "intros",
                    "th": "divides x 2, (2::nat) = 0 ⊢ ¬(x = 1 ∨ x = 2) ⟶ ¬((2::nat) = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.0",
                        "1.4.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2, (2::nat) = 0 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.0",
                        "1.4.2"
                    ],
                    "rule": "intros",
                    "th": "divides x 2 ⊢ (2::nat) = 0 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "disjE",
                    "id": "1.5",
                    "prevs": [
                        "1.2",
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "divides x 2 ⊢ x = 1 ∨ x = 2"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. divides x 2 ⟶ x = 1 ∨ x = 2"
                },
                {
                    "args": "conjI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬((2::nat) = 1) ∧ (∀x. divides x 2 ⟶ x = 1 ∨ x = 2)"
                },
                {
                    "args": "prime_def, prime 2",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime 2"
                }
            ],
            "prop": "prime 2",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "0",
                    "method_name": "nat_const_ineq"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "goal": "~(x = 0)",
                    "goal_id": "1.3.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.1.0"
                    ],
                    "goal_id": "1.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "divides_0"
                },
                {
                    "goal_id": "1.3.1.1",
                    "method_name": "nat_const_ineq"
                },
                {
                    "fact_ids": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "goal_id": "1.3.4",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1.4.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.4.1.1",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_ge_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ⊢ p < 2 ⟶ ¬(prime p)"
                },
                {
                    "args": "p < 2",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p < 2 ⊢ p < 2"
                },
                {
                    "args": "p = 0 ∨ p = 1",
                    "id": "1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "p < 2 ⊢ p = 0 ∨ p = 1"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p < 2 ⊢ p = 0 ⟶ ¬(prime p)"
                },
                {
                    "args": "p = 0",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 0 ⊢ p = 0"
                },
                {
                    "args": "prime_0",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.0",
                        "1.2.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = 0, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.0",
                        "1.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p < 2 ⊢ p = 0 ⟶ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, p < 2 ⊢ p = 1 ⟶ ¬(prime p)"
                },
                {
                    "args": "p = 1",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 1 ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0",
                        "1.3.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, p = 1, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.0",
                        "1.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, p < 2 ⊢ p = 1 ⟶ ¬(prime p)"
                },
                {
                    "args": "disjE",
                    "id": "1.4",
                    "prevs": [
                        "1.1",
                        "1.2",
                        "1.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, p < 2 ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "1.5",
                    "prevs": [
                        "1.0",
                        "1.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ⊢ p < 2 ⟶ ¬(prime p)"
                },
                {
                    "args": "not_le, ¬(2 ≤ p) ⟶ ¬(prime p)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ⊢ ¬(2 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ 2 ≤ p"
                }
            ],
            "prop": "prime p ⟶ 2 ≤ p",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal": "p = 0 | p = 1",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1"
                    ],
                    "goal_id": "1.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2.0"
                    ],
                    "goal_id": "1.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.3.0"
                    ],
                    "goal_id": "1.3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                }
            ],
            "ty": "thm",
            "vars": {
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_factor",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "¬(n = 1)",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 1) ⊢ ¬(n = 1)"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1) ⊢ ∀n. (∀m. m < n ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)) ⟶ ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                },
                {
                    "args": "n1, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n1"
                },
                {
                    "args": "∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)"
                },
                {
                    "args": "¬(n1 = 1)",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n1 = 1) ⊢ ¬(n1 = 1)"
                },
                {
                    "args": "",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "prime n1",
                    "id": "1.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime n1 ⊢ prime n1"
                },
                {
                    "args": "divides_self, {n: n1}",
                    "id": "1.3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides n1 n1"
                },
                {
                    "args": "conjI",
                    "id": "1.3.2",
                    "prevs": [
                        "1.3.0",
                        "1.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime n1, ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ∧ divides n1 n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: n1}",
                    "id": "1.3.3",
                    "prevs": [
                        "1.3.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime n1, ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "",
                    "id": "1.3.4",
                    "prevs": [
                        "1.3.0",
                        "1.3.3"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(prime n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "¬(prime n1)",
                    "id": "1.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(prime n1) ⊢ ¬(prime n1)"
                },
                {
                    "args": "prime_def",
                    "id": "1.4.1",
                    "prevs": [
                        "1.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ ¬(¬(n1 = 1) ∧ (∀x. divides x n1 ⟶ x = 1 ∨ x = n1))"
                },
                {
                    "args": "de_morgan_thm1",
                    "id": "1.4.2",
                    "prevs": [
                        "1.4.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ ¬¬(n1 = 1) ∨ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "double_neg",
                    "id": "1.4.3",
                    "prevs": [
                        "1.4.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(prime n1) ⊢ n1 = 1 ∨ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "",
                    "id": "1.4.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "n1 = 1",
                    "id": "1.4.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 = 1 ⊢ n1 = 1"
                },
                {
                    "args": "negE_gen, {A: n1 = 1, C: ∃p. prime p ∧ divides p n1}",
                    "id": "1.4.4.1",
                    "prevs": [
                        "1.2",
                        "1.4.4.0"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "n1 = 1, ¬(n1 = 1) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.4.4.2",
                    "prevs": [
                        "1.4.4.0",
                        "1.4.4.1"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4.5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)",
                    "id": "1.4.5.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "not_all",
                    "id": "1.4.5.1",
                    "prevs": [
                        "1.4.5.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⊢ ∃x. ¬(divides x n1 ⟶ x = 1 ∨ x = n1)"
                },
                {
                    "args": "m, nat",
                    "id": "1.4.5.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "¬(divides m n1 ⟶ m = 1 ∨ m = n1)",
                    "id": "1.4.5.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(divides m n1 ⟶ m = 1 ∨ m = n1)"
                },
                {
                    "args": "not_imp",
                    "id": "1.4.5.4",
                    "prevs": [
                        "1.4.5.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1 ∧ ¬(m = 1 ∨ m = n1)"
                },
                {
                    "args": "de_morgan_thm2",
                    "id": "1.4.5.5",
                    "prevs": [
                        "1.4.5.4"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1 ∧ ¬(m = 1) ∧ ¬(m = n1)"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.6",
                    "prevs": [
                        "1.4.5.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides m n1"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.7",
                    "prevs": [
                        "1.4.5.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = 1) ∧ ¬(m = n1)"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.8",
                    "prevs": [
                        "1.4.5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = 1)"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.9",
                    "prevs": [
                        "1.4.5.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ ¬(m = n1)"
                },
                {
                    "args": "divides_le",
                    "id": "1.4.5.10",
                    "prevs": [
                        "1.4.5.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ m ≤ n1 ∨ n1 = 0"
                },
                {
                    "args": "",
                    "id": "1.4.5.11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ m ≤ n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "m ≤ n1",
                    "id": "1.4.5.11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ n1 ⊢ m ≤ n1"
                },
                {
                    "args": "m < n1",
                    "id": "1.4.5.11.1",
                    "prevs": [
                        "1.4.5.11.0",
                        "1.4.5.9"
                    ],
                    "rule": "z3",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ m < n1"
                },
                {
                    "args": "",
                    "id": "1.4.5.11.2",
                    "prevs": [
                        "1.1",
                        "1.4.5.11.1"
                    ],
                    "rule": "apply_fact",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)"
                },
                {
                    "args": "",
                    "id": "1.4.5.11.3",
                    "prevs": [
                        "1.4.5.11.2",
                        "1.4.5.8"
                    ],
                    "rule": "apply_fact",
                    "th": "m ≤ n1, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p m"
                },
                {
                    "args": "p, nat",
                    "id": "1.4.5.11.4",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p m",
                    "id": "1.4.5.11.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p m ⊢ prime p ∧ divides p m"
                },
                {
                    "args": "conjD1",
                    "id": "1.4.5.11.6",
                    "prevs": [
                        "1.4.5.11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "1.4.5.11.7",
                    "prevs": [
                        "1.4.5.11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m ⊢ divides p m"
                },
                {
                    "args": "divides_trans",
                    "id": "1.4.5.11.8",
                    "prevs": [
                        "1.4.5.11.7",
                        "1.4.5.6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1) ⊢ divides p n1"
                },
                {
                    "args": "conjI",
                    "id": "1.4.5.11.9",
                    "prevs": [
                        "1.4.5.11.6",
                        "1.4.5.11.8"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), m ≤ n1, ¬(n = 1), ¬(n1 = 1), prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime p ∧ divides p n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: p}",
                    "id": "1.4.5.11.10",
                    "prevs": [
                        "1.4.5.11.9"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(prime n1), m ≤ n1, ¬(n = 1), ¬(n1 = 1), prime p ∧ divides p m, ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "∃p. prime p ∧ divides p m",
                    "id": "1.4.5.11.11",
                    "prevs": [
                        "1.4.5.11.0",
                        "1.4.5.11.3",
                        "1.4.5.11.4",
                        "1.4.5.11.5",
                        "1.4.5.11.10"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ m ≤ n1 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "",
                    "id": "1.4.5.12",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 0 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "n1 = 0",
                    "id": "1.4.5.12.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n1 = 0 ⊢ n1 = 0"
                },
                {
                    "args": "prime_2",
                    "id": "1.4.5.12.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ prime 2"
                },
                {
                    "args": "divides_zero, {n: (2::nat)}",
                    "id": "1.4.5.12.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ divides 2 0"
                },
                {
                    "args": "divides 2 n1",
                    "id": "1.4.5.12.3",
                    "prevs": [
                        "1.4.5.12.0",
                        "1.4.5.12.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ divides 2 n1"
                },
                {
                    "args": "conjI",
                    "id": "1.4.5.12.4",
                    "prevs": [
                        "1.4.5.12.1",
                        "1.4.5.12.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ prime 2 ∧ divides 2 n1"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ divides p n1, a: (2::nat)}",
                    "id": "1.4.5.12.5",
                    "prevs": [
                        "1.4.5.12.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(prime n1), n1 = 0, ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃a1. prime a1 ∧ divides a1 n1"
                },
                {
                    "args": "",
                    "id": "1.4.5.12.6",
                    "prevs": [
                        "1.4.5.12.0",
                        "1.4.5.12.5"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ n1 = 0 ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "disjE",
                    "id": "1.4.5.13",
                    "prevs": [
                        "1.4.5.10",
                        "1.4.5.11",
                        "1.4.5.12"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ¬(divides m n1 ⟶ m = 1 ∨ m = n1), ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "∃x. ¬(divides x n1 ⟶ x = 1 ∨ x = n1)",
                    "id": "1.4.5.14",
                    "prevs": [
                        "1.4.5.0",
                        "1.4.5.1",
                        "1.4.5.2",
                        "1.4.5.3",
                        "1.4.5.13"
                    ],
                    "rule": "intros",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(∀x. divides x n1 ⟶ x = 1 ∨ x = n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "disjE",
                    "id": "1.4.6",
                    "prevs": [
                        "1.4.3",
                        "1.4.4",
                        "1.4.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(prime n1), ¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.4.7",
                    "prevs": [
                        "1.4.0",
                        "1.4.6"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ¬(prime n1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "classical_cases",
                    "id": "1.5",
                    "prevs": [
                        "1.3",
                        "1.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1), ¬(n1 = 1), ∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m) ⊢ ∃p. prime p ∧ divides p n1"
                },
                {
                    "args": "",
                    "id": "1.6",
                    "prevs": [
                        "1.0",
                        "1.1",
                        "1.2",
                        "1.5"
                    ],
                    "rule": "intros",
                    "th": "¬(n = 1) ⊢ ∀n1. (∀m. m < n1 ⟶ ¬(m = 1) ⟶ (∃p. prime p ∧ divides p m)) ⟶ ¬(n1 = 1) ⟶ (∃p. prime p ∧ divides p n1)"
                },
                {
                    "args": "nat_WF",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1) ⊢ ∀n. ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                },
                {
                    "args": "n",
                    "id": "3",
                    "prevs": [
                        "2",
                        "0"
                    ],
                    "rule": "apply_fact_for",
                    "th": "¬(n = 1) ⊢ ∃p. prime p ∧ divides p n"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)"
                }
            ],
            "prop": "¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)",
            "steps": [
                {
                    "goal": "!n. ¬(n = 1) ⟶ (∃p. prime p ∧ divides p n)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_WF"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n1"
                },
                {
                    "case": "prime (n1)",
                    "goal_id": "1.3",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "inst_exists_goal",
                    "s": "n1"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_self"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.0"
                    ],
                    "goal_id": "1.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "prime_def"
                },
                {
                    "fact_ids": [
                        "1.4.1"
                    ],
                    "goal_id": "1.4.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm1"
                },
                {
                    "fact_ids": [
                        "1.4.2"
                    ],
                    "goal_id": "1.4.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "1.4.3"
                    ],
                    "goal_id": "1.4.4",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.2",
                        "1.4.4.0"
                    ],
                    "goal_id": "1.4.4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "negE_gen"
                },
                {
                    "goal_id": "1.4.5",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.4.5.0"
                    ],
                    "goal_id": "1.4.5.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "fact_ids": [
                        "1.4.5.1"
                    ],
                    "goal_id": "1.4.5.2",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "1.4.5.3"
                    ],
                    "goal_id": "1.4.5.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "fact_ids": [
                        "1.4.5.4"
                    ],
                    "goal_id": "1.4.5.5",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "de_morgan_thm2"
                },
                {
                    "fact_ids": [
                        "1.4.5.5"
                    ],
                    "goal_id": "1.4.5.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.5"
                    ],
                    "goal_id": "1.4.5.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.4.5.7"
                    ],
                    "goal_id": "1.4.5.8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.7"
                    ],
                    "goal_id": "1.4.5.9",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "1.4.5.6"
                    ],
                    "goal_id": "1.4.5.10",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "1.4.5.10"
                    ],
                    "goal_id": "1.4.5.11",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "1.4.5.11",
                    "method_name": "introduction"
                },
                {
                    "goal": "m < n1",
                    "goal_id": "1.4.5.11.1",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.0",
                        "1.4.5.9"
                    ],
                    "goal_id": "1.4.5.11.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.1",
                        "1.4.5.11.1"
                    ],
                    "goal_id": "1.4.5.11.2",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.2",
                        "1.4.5.8"
                    ],
                    "goal_id": "1.4.5.11.3",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.3"
                    ],
                    "goal_id": "1.4.5.11.4",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "1.4.5.11.6",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.5"
                    ],
                    "goal_id": "1.4.5.11.6",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.5"
                    ],
                    "goal_id": "1.4.5.11.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "1.4.5.11.8",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "1.4.5.11.7",
                        "1.4.5.6"
                    ],
                    "goal_id": "1.4.5.11.8",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_trans"
                },
                {
                    "goal_id": "1.4.5.12",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "inst_exists_goal",
                    "s": "(2::nat)"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "1.4.5.12.1",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_2"
                },
                {
                    "fact_ids": [
                        "1.4.5.12.0"
                    ],
                    "goal_id": "1.4.5.12.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.4.5.12.2",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_zero"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_factor_lt",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime p",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "n = p * m",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p * m ⊢ n = p * m"
                },
                {
                    "args": "prime_ge_2",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ⊢ 2 ≤ p"
                },
                {
                    "args": "less_eq_exist",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ⊢ ∃p1. p = 2 + p1"
                },
                {
                    "args": "q, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR q"
                },
                {
                    "args": "p = 2 + q",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p = 2 + q ⊢ p = 2 + q"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "n = p * m, p = 2 + q ⊢ n = (2 + q) * m"
                },
                {
                    "args": "m + q * m = (1 + q) * m",
                    "id": "8",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ m + q * m = (1 + q) * m"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ Suc q * m = 0 ⟶ false"
                },
                {
                    "args": "Suc q * m = 0",
                    "id": "9.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc q * m = 0 ⊢ Suc q * m = 0"
                },
                {
                    "args": "mult_nonzero",
                    "id": "9.1",
                    "prevs": [
                        "9.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "Suc q * m = 0 ⊢ Suc q = 0 ∨ m = 0"
                },
                {
                    "args": "",
                    "id": "9.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ Suc q = 0 ⟶ false"
                },
                {
                    "args": "Suc q = 0",
                    "id": "9.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "Suc q = 0 ⊢ Suc q = 0"
                },
                {
                    "args": "",
                    "id": "9.2.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬(Suc q = 0)"
                },
                {
                    "args": "¬false",
                    "id": "9.2.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "nat_zero_Suc_neq, {n: q}",
                    "id": "9.2.1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(0 = Suc q)"
                },
                {
                    "args": "ineq_sym",
                    "id": "9.2.1.2",
                    "prevs": [
                        "9.2.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬false, prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬(Suc q = 0)"
                },
                {
                    "args": "",
                    "id": "9.2.1.3",
                    "prevs": [
                        "9.2.1.0",
                        "9.2.1.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬(Suc q = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "9.2.2",
                    "prevs": [
                        "9.2.0",
                        "9.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), Suc q = 0, n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.2.3",
                    "prevs": [
                        "9.2.0",
                        "9.2.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ Suc q = 0 ⟶ false"
                },
                {
                    "args": "",
                    "id": "9.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ m = 0 ⟶ false"
                },
                {
                    "args": "m = 0",
                    "id": "9.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m = 0 ⊢ m = 0"
                },
                {
                    "args": "",
                    "id": "9.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬¬(n = 0)"
                },
                {
                    "args": "¬false",
                    "id": "9.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬false ⊢ ¬false"
                },
                {
                    "args": "",
                    "id": "9.3.1.1",
                    "prevs": [
                        "9.3.0",
                        "2"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "m = 0, n = p * m ⊢ n = p * 0"
                },
                {
                    "args": "mult_0_right",
                    "id": "9.3.1.2",
                    "prevs": [
                        "9.3.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "m = 0, n = p * m ⊢ n = 0"
                },
                {
                    "args": "double_neg, ¬¬(n = 0)",
                    "id": "9.3.1.3",
                    "prevs": [
                        "9.3.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬false, prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "9.3.1.4",
                    "prevs": [
                        "9.3.1.0",
                        "9.3.1.3"
                    ],
                    "rule": "intros",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ ¬false ⟶ ¬¬(n = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "9.3.2",
                    "prevs": [
                        "1",
                        "9.3.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, m = 0, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.3.3",
                    "prevs": [
                        "9.3.0",
                        "9.3.2"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ m = 0 ⟶ false"
                },
                {
                    "args": "disjE",
                    "id": "9.4",
                    "prevs": [
                        "9.1",
                        "9.2",
                        "9.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, Suc q * m = 0, p = 2 + q ⊢ false"
                },
                {
                    "args": "",
                    "id": "9.5",
                    "prevs": [
                        "9.0",
                        "9.4"
                    ],
                    "rule": "intros",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ Suc q * m = 0 ⟶ false"
                },
                {
                    "args": "negI",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬(Suc q * m = 0)"
                },
                {
                    "args": "add_1_left, ¬((1 + q) * m = 0)",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬((1 + q) * m = 0)"
                },
                {
                    "args": "¬(m + q * m = 0)",
                    "id": "12",
                    "prevs": [
                        "8",
                        "11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ ¬(m + q * m = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ 0 < m + q * m"
                },
                {
                    "args": "lt_add, m < m + (m + q * m)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < m + (m + q * m)"
                },
                {
                    "args": "add_assoc, m < m + m + q * m",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < m + m + q * m"
                },
                {
                    "args": "mult_2, m < 2 * m + q * m",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < 2 * m + q * m"
                },
                {
                    "args": "distrib_r, m < (2 + q) * m",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < (2 + q) * m"
                },
                {
                    "args": "m < n",
                    "id": "18",
                    "prevs": [
                        "7",
                        "17"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "prime p, ¬(n = 0), n = p * m, p = 2 + q ⊢ m < n"
                },
                {
                    "args": "∃p1. p = 2 + p1",
                    "id": "19",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4",
                        "5",
                        "6",
                        "18"
                    ],
                    "rule": "intros",
                    "th": "⊢ prime p ⟶ ¬(n = 0) ⟶ n = p * m ⟶ m < n"
                }
            ],
            "prop": "prime p ⟶ ¬(n = 0) ⟶ n = p * m ⟶ m < n",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_ge_2"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_eq_exist"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "q"
                },
                {
                    "fact_ids": [
                        "6",
                        "2"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "distrib_r"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_2"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_assoc"
                },
                {
                    "goal_id": "8",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "lt_add"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_backward_step",
                    "theorem": "le_1_1"
                },
                {
                    "goal": "m + q * m = (1+ q) * m",
                    "goal_id": "8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "8",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_left"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "negI"
                },
                {
                    "goal_id": "9",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "9.0"
                    ],
                    "goal_id": "9.1",
                    "method_name": "apply_forward_step",
                    "theorem": "mult_nonzero"
                },
                {
                    "fact_ids": [
                        "9.1"
                    ],
                    "goal_id": "9.2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "9.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "9.2.0"
                    ],
                    "goal_id": "9.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "9.2.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "9.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "ineq_sym"
                },
                {
                    "goal_id": "9.2.1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_zero_Suc_neq"
                },
                {
                    "goal_id": "9.3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "9.3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "9.3.1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "9.3.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "9.3.0",
                        "2"
                    ],
                    "goal_id": "9.3.1.1",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9.3.1.1"
                    ],
                    "goal_id": "9.3.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "prime_factor_induct",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "P 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 1 ⊢ P 1"
                },
                {
                    "args": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. (∀m. m < n ⟶ P m) ⟶ P n"
                },
                {
                    "args": "n, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "∀m. m < n ⟶ P m",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. m < n ⟶ P m ⊢ ∀m. m < n ⟶ P m"
                },
                {
                    "args": "",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 0 ⟶ P n"
                },
                {
                    "args": "n = 0",
                    "id": "3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "P n",
                    "id": "3.2.1",
                    "prevs": [
                        "3.2.0",
                        "0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, n = 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.2.2",
                    "prevs": [
                        "3.2.0",
                        "3.2.1"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 0 ⟶ P n"
                },
                {
                    "args": "",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 0) ⟶ P n"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "3.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 1 ⟶ P n"
                },
                {
                    "args": "n = 1",
                    "id": "3.3.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 1 ⊢ n = 1"
                },
                {
                    "args": "P n",
                    "id": "3.3.1.1",
                    "prevs": [
                        "3.3.1.0",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, n = 1, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.3.1.2",
                    "prevs": [
                        "3.3.1.0",
                        "3.3.1.1"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ n = 1 ⟶ P n"
                },
                {
                    "args": "",
                    "id": "3.3.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 1) ⟶ P n"
                },
                {
                    "args": "¬(n = 1)",
                    "id": "3.3.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 1) ⊢ ¬(n = 1)"
                },
                {
                    "args": "prime_factor",
                    "id": "3.3.2.1",
                    "prevs": [
                        "3.3.2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 1) ⊢ ∃p. prime p ∧ divides p n"
                },
                {
                    "args": "p, nat",
                    "id": "3.3.2.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p n",
                    "id": "3.3.2.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p n ⊢ prime p ∧ divides p n"
                },
                {
                    "args": "p",
                    "id": "3.3.2.4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "conjD1",
                    "id": "3.3.2.5",
                    "prevs": [
                        "3.3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ prime p"
                },
                {
                    "args": "",
                    "id": "3.3.2.6",
                    "prevs": [
                        "3.3.2.4",
                        "3.3.2.5"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p ∧ divides p n, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "conjD2",
                    "id": "3.3.2.7",
                    "prevs": [
                        "3.3.2.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p n ⊢ divides p n"
                },
                {
                    "args": "divides_def",
                    "id": "3.3.2.8",
                    "prevs": [
                        "3.3.2.7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ divides p n ⊢ ∃k. n = p * k"
                },
                {
                    "args": "d, nat",
                    "id": "3.3.2.9",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR d"
                },
                {
                    "args": "n = p * d",
                    "id": "3.3.2.10",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = p * d ⊢ n = p * d"
                },
                {
                    "args": "d",
                    "id": "3.3.2.11",
                    "prevs": [
                        "3.3.2.6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "prime p ∧ divides p n, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(d = 0) ⟶ P d ⟶ P (p * d)"
                },
                {
                    "args": "",
                    "id": "3.3.2.12",
                    "prevs": [
                        "3.3.2.10",
                        "3.3.0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0), n = p * d ⊢ ¬(p * d = 0)"
                },
                {
                    "args": "",
                    "id": "3.3.2.13",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d = 0 ⟶ p * d = 0"
                },
                {
                    "args": "d = 0",
                    "id": "3.3.2.13.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "d = 0 ⊢ d = 0"
                },
                {
                    "args": "mult_0_right, p * 0 = 0",
                    "id": "3.3.2.13.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ p * 0 = 0"
                },
                {
                    "args": "p * d = 0",
                    "id": "3.3.2.13.2",
                    "prevs": [
                        "3.3.2.13.0",
                        "3.3.2.13.1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, d = 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ p * d = 0"
                },
                {
                    "args": "",
                    "id": "3.3.2.13.3",
                    "prevs": [
                        "3.3.2.13.0",
                        "3.3.2.13.2"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d = 0 ⟶ p * d = 0"
                },
                {
                    "args": "double_neg, ¬¬(d = 0) ⟶ ¬¬(p * d = 0)",
                    "id": "3.3.2.14",
                    "prevs": [
                        "3.3.2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬¬(d = 0) ⟶ ¬¬(p * d = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "3.3.2.15",
                    "prevs": [
                        "3.3.2.12",
                        "3.3.2.14"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(d = 0)"
                },
                {
                    "args": "prime_factor_lt",
                    "id": "3.3.2.16",
                    "prevs": [
                        "3.3.2.5",
                        "3.3.0",
                        "3.3.2.10"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ d < n"
                },
                {
                    "args": "d",
                    "id": "3.3.2.17",
                    "prevs": [
                        "3.1",
                        "3.3.2.16"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P d"
                },
                {
                    "args": "",
                    "id": "3.3.2.18",
                    "prevs": [
                        "3.3.2.11",
                        "3.3.2.15",
                        "3.3.2.17"
                    ],
                    "rule": "apply_fact",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P (p * d)"
                },
                {
                    "args": "P n",
                    "id": "3.3.2.19",
                    "prevs": [
                        "3.3.2.10",
                        "3.3.2.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "P 1, P 0, ¬(n = 1), ¬(n = 0), n = p * d, prime p ∧ divides p n, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "∃k. n = p * k, ∃p. prime p ∧ divides p n",
                    "id": "3.3.2.20",
                    "prevs": [
                        "3.3.2.0",
                        "3.3.2.1",
                        "3.3.2.2",
                        "3.3.2.3",
                        "3.3.2.8",
                        "3.3.2.9",
                        "3.3.2.10",
                        "3.3.2.19"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 1) ⟶ P n"
                },
                {
                    "args": "classical_cases",
                    "id": "3.3.3",
                    "prevs": [
                        "3.3.1",
                        "3.3.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ¬(n = 0), ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.3.4",
                    "prevs": [
                        "3.3.0",
                        "3.3.3"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ¬(n = 0) ⟶ P n"
                },
                {
                    "args": "classical_cases",
                    "id": "3.4",
                    "prevs": [
                        "3.2",
                        "3.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀m. m < n ⟶ P m, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ P n"
                },
                {
                    "args": "",
                    "id": "3.5",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.4"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. (∀m. m < n ⟶ P m) ⟶ P n"
                },
                {
                    "args": "nat_WF",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n) ⊢ ∀n. P n"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ P 1 ⟶ (∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)) ⟶ (∀n. P n)"
                }
            ],
            "prop": "P 0 ⟶ P 1 ⟶ (∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)) ⟶ (∀n. P n)",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_WF"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "case": "n=0",
                    "goal_id": "3.2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.2.0"
                    ],
                    "goal_id": "3.2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3",
                    "method_name": "introduction"
                },
                {
                    "case": "n=1",
                    "goal_id": "3.3.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "3.3.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.1.0"
                    ],
                    "goal_id": "3.3.1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.2.0"
                    ],
                    "goal_id": "3.3.2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "prime_factor"
                },
                {
                    "fact_ids": [
                        "3.3.2.1"
                    ],
                    "goal_id": "3.3.2.2",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3.3.2.4",
                    "method_name": "forall_elim",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "3.3.2.3"
                    ],
                    "goal_id": "3.3.2.5",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "3.3.2.4",
                        "3.3.2.5"
                    ],
                    "goal_id": "3.3.2.6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.3.2.3"
                    ],
                    "goal_id": "3.3.2.7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "3.3.2.7"
                    ],
                    "goal_id": "3.3.2.8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_def"
                },
                {
                    "fact_ids": [
                        "3.3.2.8"
                    ],
                    "goal_id": "3.3.2.9",
                    "method_name": "exists_elim",
                    "names": "d"
                },
                {
                    "fact_ids": [
                        "3.3.2.6"
                    ],
                    "goal_id": "3.3.2.11",
                    "method_name": "forall_elim",
                    "s": "d"
                },
                {
                    "fact_ids": [
                        "3.3.2.10"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.11"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.10",
                        "3.3.0"
                    ],
                    "goal_id": "3.3.2.12",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3.3.2.12"
                    ],
                    "goal_id": "3.3.2.13",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3.3.2.13",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "3.3.2.13",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.3.2.13.0"
                    ],
                    "goal_id": "3.3.2.13.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.3.2.13.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.3.2.16",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "3.3.2.16",
                    "method_name": "apply_backward_step",
                    "param_p": "p",
                    "theorem": "prime_factor_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "complete_factor_induct",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "P 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 0 ⊢ P 0"
                },
                {
                    "args": "P 1",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P 1 ⊢ P 1"
                },
                {
                    "args": "∀p. prime p ⟶ P p",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀p. prime p ⟶ P p ⊢ ∀p. prime p ⟶ P p"
                },
                {
                    "args": "∀m. ∀n. P m ⟶ P n ⟶ P (m * n)",
                    "id": "3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀m. ∀n. P m ⟶ P n ⟶ P (m * n)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "p, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "n, nat",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "prime p",
                    "id": "4.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ⊢ prime p"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "P n",
                    "id": "4.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "P n ⊢ P n"
                },
                {
                    "args": "",
                    "id": "4.5",
                    "prevs": [
                        "2",
                        "4.2"
                    ],
                    "rule": "apply_fact",
                    "th": "prime p, ∀p. prime p ⟶ P p ⊢ P p"
                },
                {
                    "args": "p, n",
                    "id": "4.6",
                    "prevs": [
                        "3",
                        "4.5",
                        "4.4"
                    ],
                    "rule": "apply_fact_for",
                    "th": "P n, prime p, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ P (p * n)"
                },
                {
                    "args": "",
                    "id": "4.7",
                    "prevs": [
                        "4.0",
                        "4.1",
                        "4.2",
                        "4.3",
                        "4.4",
                        "4.6"
                    ],
                    "rule": "intros",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀p. ∀n. prime p ⟶ ¬(n = 0) ⟶ P n ⟶ P (p * n)"
                },
                {
                    "args": "prime_factor_induct",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "P 1, P 0, ∀p. prime p ⟶ P p, ∀m. ∀n. P m ⟶ P n ⟶ P (m * n) ⊢ ∀n. P n"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ P 0 ⟶ P 1 ⟶ (∀p. prime p ⟶ P p) ⟶ (∀m. ∀n. P m ⟶ P n ⟶ P (m * n)) ⟶ (∀n. P n)"
                }
            ],
            "prop": "P 0 ⟶ P 1 ⟶ (∀p. prime p ⟶ P p) ⟶ (∀m. ∀n. P m ⟶ P n ⟶ P (m * n)) ⟶ (∀n. P n)",
            "steps": [
                {
                    "goal_id": "4",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_factor_induct"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "p,n"
                },
                {
                    "fact_ids": [
                        "2",
                        "4.2"
                    ],
                    "goal_id": "4.5",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3",
                        "4.5",
                        "4.4"
                    ],
                    "goal_id": "4.6",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "P": "nat ⇒ bool"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euclid_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "prime_factor, {n: fact n + 1}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact n + 1 = 1) ⟶ (∃p. prime p ∧ divides p (fact n + 1))"
                },
                {
                    "args": "∀n::nat. 0 < n ⟶ ¬(n + 1 = 1)",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀n::nat. 0 < n ⟶ ¬(n + 1 = 1)"
                },
                {
                    "args": "fact_lt, {n: n}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 < fact n"
                },
                {
                    "args": "fact n",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ ¬(fact n + 1 = 1)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∃p. prime p ∧ divides p (fact n + 1)"
                },
                {
                    "args": "p, nat",
                    "id": "5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ divides p (fact n + 1)",
                    "id": "6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p ∧ divides p (fact n + 1)"
                },
                {
                    "args": "conjD1",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "8",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n + 1)"
                },
                {
                    "args": "divides_sum2",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ⟶ divides p 1"
                },
                {
                    "args": "divides_one",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ⟶ p = 1"
                },
                {
                    "args": "",
                    "id": "11",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ n ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "p ≤ n",
                    "id": "11.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ n ⊢ p ≤ n"
                },
                {
                    "args": "",
                    "id": "11.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(1 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬(1 ≤ p)",
                    "id": "11.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(1 ≤ p) ⊢ ¬(1 ≤ p)"
                },
                {
                    "args": "not_le",
                    "id": "11.1.1",
                    "prevs": [
                        "11.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p < 1"
                },
                {
                    "args": "nat_one_def",
                    "id": "11.1.2",
                    "prevs": [
                        "11.1.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p < Suc 0"
                },
                {
                    "args": "less_Suc_lesseq",
                    "id": "11.1.3",
                    "prevs": [
                        "11.1.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p ≤ 0"
                },
                {
                    "args": "nat_less_eq_def_1",
                    "id": "11.1.4",
                    "prevs": [
                        "11.1.3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬(1 ≤ p) ⊢ p = 0"
                },
                {
                    "args": "prime_0",
                    "id": "11.1.5",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 0)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "11.1.6",
                    "prevs": [
                        "11.1.4",
                        "11.1.5"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p ≤ n, ¬(1 ≤ p), prime p ∧ divides p (fact n + 1) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "11.1.7",
                    "prevs": [
                        "11.1.0",
                        "11.1.6"
                    ],
                    "rule": "intros",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(1 ≤ p) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "11.2",
                    "prevs": [
                        "7",
                        "11.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ 1 ≤ p"
                },
                {
                    "args": "divides_fact",
                    "id": "11.3",
                    "prevs": [
                        "11.2",
                        "11.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n)"
                },
                {
                    "args": "",
                    "id": "11.4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "¬¬(p = 1)",
                    "id": "11.4.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬¬(p = 1) ⊢ ¬¬(p = 1)"
                },
                {
                    "args": "double_neg",
                    "id": "11.4.1",
                    "prevs": [
                        "11.4.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "¬¬(p = 1) ⊢ p = 1"
                },
                {
                    "args": "prime_1",
                    "id": "11.4.2",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ ¬(prime 1)"
                },
                {
                    "args": "¬(prime p)",
                    "id": "11.4.3",
                    "prevs": [
                        "11.4.1",
                        "11.4.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "p ≤ n, ¬¬(p = 1), prime p ∧ divides p (fact n + 1) ⊢ ¬(prime p)"
                },
                {
                    "args": "",
                    "id": "11.4.4",
                    "prevs": [
                        "11.4.0",
                        "11.4.3"
                    ],
                    "rule": "intros",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬¬(p = 1) ⟶ ¬(prime p)"
                },
                {
                    "args": "contrapositive",
                    "id": "11.5",
                    "prevs": [
                        "7",
                        "11.4"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(p = 1)"
                },
                {
                    "args": "conjI",
                    "id": "11.6",
                    "prevs": [
                        "11.3",
                        "11.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ divides p (fact n) ∧ ¬(p = 1)"
                },
                {
                    "args": "not_imp, ¬(divides p (fact n) ⟶ p = 1)",
                    "id": "11.7",
                    "prevs": [
                        "11.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "p ≤ n, prime p ∧ divides p (fact n + 1) ⊢ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "",
                    "id": "11.8",
                    "prevs": [
                        "11.0",
                        "11.7"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ n ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "not_lt, ¬(n < p) ⟶ ¬(divides p (fact n) ⟶ p = 1)",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ ¬(n < p) ⟶ ¬(divides p (fact n) ⟶ p = 1)"
                },
                {
                    "args": "contrapositive",
                    "id": "13",
                    "prevs": [
                        "10",
                        "12"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ n < p"
                },
                {
                    "args": "divides_le",
                    "id": "14",
                    "prevs": [
                        "8"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ∨ fact n + 1 = 0"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "p ≤ fact n + 1",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "p ≤ fact n + 1 ⊢ p ≤ fact n + 1"
                },
                {
                    "args": "add_1_right, p ≤ Suc (fact n)",
                    "id": "15.1",
                    "prevs": [
                        "15.0"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "p ≤ fact n + 1, prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "15.2",
                    "prevs": [
                        "15.0",
                        "15.1"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ fact n + 1 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "16",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ fact n + 1 = 0 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "fact n + 1 = 0",
                    "id": "16.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "fact n + 1 = 0 ⊢ fact n + 1 = 0"
                },
                {
                    "args": "add_is_zero",
                    "id": "16.1",
                    "prevs": [
                        "16.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0 ⊢ fact n = 0 ∧ (1::nat) = 0"
                },
                {
                    "args": "conjD2",
                    "id": "16.2",
                    "prevs": [
                        "16.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0 ⊢ (1::nat) = 0"
                },
                {
                    "args": "",
                    "id": "16.3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ ¬(p ≤ Suc (fact n)) ⟶ ¬((1::nat) = 0)"
                },
                {
                    "args": "¬(p ≤ Suc (fact n))",
                    "id": "16.3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(p ≤ Suc (fact n)) ⊢ ¬(p ≤ Suc (fact n))"
                },
                {
                    "args": "¬((1::nat) = 0)",
                    "id": "16.3.1",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((1::nat) = 0)"
                },
                {
                    "args": "",
                    "id": "16.3.2",
                    "prevs": [
                        "16.3.0",
                        "16.3.1"
                    ],
                    "rule": "intros",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ ¬(p ≤ Suc (fact n)) ⟶ ¬((1::nat) = 0)"
                },
                {
                    "args": "contrapositive",
                    "id": "16.4",
                    "prevs": [
                        "16.2",
                        "16.3"
                    ],
                    "rule": "apply_theorem",
                    "th": "fact n + 1 = 0, prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "",
                    "id": "16.5",
                    "prevs": [
                        "16.0",
                        "16.4"
                    ],
                    "rule": "intros",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ fact n + 1 = 0 ⟶ p ≤ Suc (fact n)"
                },
                {
                    "args": "disjE",
                    "id": "17",
                    "prevs": [
                        "14",
                        "15",
                        "16"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjI",
                    "id": "18",
                    "prevs": [
                        "13",
                        "17"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjI",
                    "id": "19",
                    "prevs": [
                        "7",
                        "18"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ n < p ∧ p ≤ Suc (fact n), a: p}",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ divides p (fact n + 1) ⊢ ∃a1. prime a1 ∧ n < a1 ∧ a1 ≤ Suc (fact n)"
                },
                {
                    "args": "∃p. prime p ∧ divides p (fact n + 1)",
                    "id": "21",
                    "prevs": [
                        "4",
                        "5",
                        "6",
                        "20"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                }
            ],
            "prop": "∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "fact n + 1",
                    "theorem": "prime_factor"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal": "¬(fact n + 1 = 1)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal": "!n::nat. 0 < n --> ~(n + 1 = 1)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_lt"
                },
                {
                    "fact_ids": [
                        "0",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "7",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_sum2"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "divides_one"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_lt"
                },
                {
                    "goal_id": "11",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "divides_fact"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "11.1",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "11.1.0"
                    ],
                    "goal_id": "11.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "fact_ids": [
                        "11.1.1"
                    ],
                    "goal_id": "11.1.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "fact_ids": [
                        "11.1.2"
                    ],
                    "goal_id": "11.1.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "less_Suc_lesseq"
                },
                {
                    "fact_ids": [
                        "11.1.3"
                    ],
                    "goal_id": "11.1.4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "nat_less_eq_def_1"
                },
                {
                    "fact_ids": [
                        "11.1.4"
                    ],
                    "goal_id": "11.1.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "11.1.5",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_0"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "11.4",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "11.4",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "11.4.0"
                    ],
                    "goal_id": "11.4.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "11.4.1"
                    ],
                    "goal_id": "11.4.2",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "11.4.2",
                    "method_name": "apply_backward_step",
                    "theorem": "prime_1"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "14",
                    "method_name": "apply_forward_step",
                    "theorem": "divides_le"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "15.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "16",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "16.0"
                    ],
                    "goal_id": "16.1",
                    "method_name": "apply_forward_step",
                    "theorem": "add_is_zero"
                },
                {
                    "fact_ids": [
                        "16.1"
                    ],
                    "goal_id": "16.2",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "16.2"
                    ],
                    "goal_id": "16.3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "16.3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "16.3.1",
                    "method_name": "nat_const_ineq"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "euclid",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "euclid_bound, {n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "p, nat",
                    "id": "1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR p"
                },
                {
                    "args": "prime p ∧ n < p ∧ p ≤ Suc (fact n)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p ∧ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjD1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p"
                },
                {
                    "args": "conjD2",
                    "id": "4",
                    "prevs": [
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ n < p ∧ p ≤ Suc (fact n)"
                },
                {
                    "args": "conjD1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ n < p"
                },
                {
                    "args": "conjI",
                    "id": "6",
                    "prevs": [
                        "3",
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ prime p ∧ n < p"
                },
                {
                    "args": "exI, {P: λp. prime p ∧ n < p, a: p}",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ ∃a1. prime a1 ∧ n < a1"
                },
                {
                    "args": "greater_def, ∃p. prime p ∧ p > n",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "prime p ∧ n < p ∧ p ≤ Suc (fact n) ⊢ ∃p. prime p ∧ p > n"
                },
                {
                    "args": "∃p. prime p ∧ n < p ∧ p ≤ Suc (fact n)",
                    "id": "9",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "8"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃p. prime p ∧ p > n"
                }
            ],
            "prop": "∃p. prime p ∧ p > n",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "greater_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "n",
                    "theorem": "euclid_bound"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "exists_elim",
                    "names": "p"
                },
                {
                    "goal_id": "3",
                    "method_name": "inst_exists_goal",
                    "s": "p"
                },
                {
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_forward_step",
                    "theorem": "conjD2"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "conjD1"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "prime_infinite",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. ¬(∀x1. prime x1 ⟶ x1 ≤ x)"
                },
                {
                    "args": "n, nat",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "euclid, {n: n}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃p. prime p ∧ p > n"
                },
                {
                    "args": "greater_def, ∃x. prime x ∧ n < x",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ ∃x. prime x ∧ n < x"
                },
                {
                    "args": "not_le, ∃x. prime x ∧ ¬(x ≤ n)",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃x. prime x ∧ ¬(x ≤ n)"
                },
                {
                    "args": "not_imp, ∃x. ¬(prime x ⟶ x ≤ n)",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∃x. ¬(prime x ⟶ x ≤ n)"
                },
                {
                    "args": "not_all, ¬(∀x. prime x ⟶ x ≤ n)",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∀x. prime x ⟶ x ≤ n)"
                },
                {
                    "args": "",
                    "id": "0.6",
                    "prevs": [
                        "0.0",
                        "0.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀n. ¬(∀x. prime x ⟶ x ≤ n)"
                },
                {
                    "args": "not_exists, ¬(∃a. ∀x. prime x ⟶ x ≤ a)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∃a. ∀x. prime x ⟶ x ≤ a)"
                },
                {
                    "args": "member_collect, ¬(∃a. ∀x. x ∈ {p. prime p} ⟶ x ≤ a)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(∃a. ∀x. x ∈ {p. prime p} ⟶ x ≤ a)"
                },
                {
                    "args": "nat_finite, ¬(finite ({p. prime p}))",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(finite ({p. prime p}))"
                },
                {
                    "args": "infinite_def, infinite ({p. prime p})",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ infinite ({p. prime p})"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ infinite ({p. prime p})"
                }
            ],
            "prop": "infinite ({p. prime p})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "infinite_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_finite"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_exists"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_all"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_imp"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_le"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "greater_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "euclid"
                }
            ],
            "ty": "thm",
            "vars": {}
        }
    ],
    "description": "Basic theory of divisibility, gcd, coprimality and primality (over N).",
    "imports": [
        "gcd"
    ],
    "name": "prime"
}