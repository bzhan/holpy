{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "abs_sqare_lt_1",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_pow_one, x ^ (2::nat) < 1 ⟷ x ^ (2::nat) < 1 ^ (2::nat)",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (2::nat) < 1 ⟷ x ^ (2::nat) < 1 ^ (2::nat)"
                },
                {
                    "args": "real_one_def, x ^ (2::nat) < of_nat 1 ⟷ x ^ (2::nat) < of_nat 1 ^ (2::nat)",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ x ^ (2::nat) < of_nat 1 ⟷ x ^ (2::nat) < of_nat 1 ^ (2::nat)"
                },
                {
                    "args": "real_abs_nat, x ^ (2::nat) < abs of_nat 1 ⟷ x ^ (2::nat) < of_nat 1 ^ (2::nat)",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (2::nat) < abs of_nat 1 ⟷ x ^ (2::nat) < of_nat 1 ^ (2::nat)"
                },
                {
                    "args": "real_lt_square_abs, x ^ (2::nat) < abs of_nat 1 ⟷ abs x < abs of_nat 1",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (2::nat) < abs of_nat 1 ⟷ abs x < abs of_nat 1"
                },
                {
                    "args": "real_abs_nat, x ^ (2::nat) < of_nat 1 ⟷ abs x < of_nat 1",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ x ^ (2::nat) < of_nat 1 ⟷ abs x < of_nat 1"
                },
                {
                    "args": "real_one_def, x ^ (2::nat) < 1 ⟷ abs x < 1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ^ (2::nat) < 1 ⟷ abs x < 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ^ (2::nat) < 1 ⟷ abs x < 1"
                }
            ],
            "prop": "x ^ (2::nat) < 1 ⟷ abs x < 1",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_lt_square_abs"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_nat"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_one"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_lt_between",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ a < b ⟶ (∃x. a < x ∧ x < b)"
                },
                {
                    "args": "a < b",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a < b ⊢ a < b"
                },
                {
                    "args": "a < (a + b) / 2 ∧ (a + b) / 2 < b",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "a < b ⊢ a < (a + b) / 2 ∧ (a + b) / 2 < b"
                },
                {
                    "args": "exI, {P: λx. a < x ∧ x < b, a: (a + b) / 2}",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "a < b ⊢ ∃a1. a < a1 ∧ a1 < b"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ a < b ⟶ (∃x. a < x ∧ x < b)"
                },
                {
                    "args": "(∃x. a < x ∧ x < b) ⟶ a < b",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∃x. a < x ∧ x < b) ⟶ a < b"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ a < b ⟷ (∃x. a < x ∧ x < b)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ a < b ⟷ (∃x. a < x ∧ x < b)"
                }
            ],
            "prop": "a < b ⟷ (∃x. a < x ∧ x < b)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "inst_exists_goal",
                    "s": "(a+b)/2"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "is_realinterval",
            "prop": "is_realinterval s ⟷ (∀a. ∀b. ∀c. a ∈ s ⟶ b ∈ s ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ s)",
            "ty": "def",
            "type": "real set ⇒ bool"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "is_realinterval_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀a::real. ∀b. ∀c. a ∈ ∅ ⟶ b ∈ ∅ ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ ∅"
                },
                {
                    "args": "a, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "c, real",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "a ∈ ∅",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ ∅ ⊢ a ∈ ∅"
                },
                {
                    "args": "b ∈ ∅",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b ∈ ∅ ⊢ b ∈ ∅"
                },
                {
                    "args": "a ≤ c",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ≤ c ⊢ a ≤ c"
                },
                {
                    "args": "c ≤ b",
                    "id": "0.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c ≤ b ⊢ c ≤ b"
                },
                {
                    "args": "member_empty, c ∈ ∅",
                    "id": "0.7",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "resolve_theorem",
                    "th": "a ∈ ∅ ⊢ c ∈ ∅"
                },
                {
                    "args": "",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.5",
                        "0.6",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀a::real. ∀b. ∀c. a ∈ ∅ ⟶ b ∈ ∅ ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ ∅"
                },
                {
                    "args": "is_realinterval_def, is_realinterval ∅",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ is_realinterval ∅"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ is_realinterval ∅"
                }
            ],
            "prop": "is_realinterval ∅",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "a,b,c"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.7",
                    "method_name": "apply_resolve_step",
                    "theorem": "member_empty"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "is_realinterval_union",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "is_realinterval s",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "is_realinterval s ⊢ is_realinterval s"
                },
                {
                    "args": "is_realinterval t",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "is_realinterval t ⊢ is_realinterval t"
                },
                {
                    "args": "¬(s ∩ t = ∅)",
                    "id": "2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(s ∩ t = ∅) ⊢ ¬(s ∩ t = ∅)"
                },
                {
                    "args": "is_realinterval_def",
                    "id": "3",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "is_realinterval s ⊢ ∀a. ∀b. ∀c. a ∈ s ⟶ b ∈ s ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ s"
                },
                {
                    "args": "is_realinterval_def",
                    "id": "4",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "is_realinterval t ⊢ ∀a. ∀b. ∀c. a ∈ t ⟶ b ∈ t ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ t"
                },
                {
                    "args": "∀a. ∀b. ∀c. a ∈ s ∪ t ⟶ b ∈ s ∪ t ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ s ∪ t",
                    "id": "5",
                    "prevs": [
                        "3",
                        "4",
                        "2"
                    ],
                    "rule": "z3",
                    "th": "is_realinterval s, is_realinterval t, ¬(s ∩ t = ∅) ⊢ ∀a. ∀b. ∀c. a ∈ s ∪ t ⟶ b ∈ s ∪ t ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ s ∪ t"
                },
                {
                    "args": "is_realinterval_def, is_realinterval (s ∪ t)",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "is_realinterval s, is_realinterval t, ¬(s ∩ t = ∅) ⊢ is_realinterval (s ∪ t)"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "0",
                        "1",
                        "2",
                        "6"
                    ],
                    "rule": "intros",
                    "th": "⊢ is_realinterval s ⟶ is_realinterval t ⟶ ¬(s ∩ t = ∅) ⟶ is_realinterval (s ∪ t)"
                }
            ],
            "prop": "is_realinterval s ⟶ is_realinterval t ⟶ ¬(s ∩ t = ∅) ⟶ is_realinterval (s ∪ t)",
            "steps": [
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                },
                {
                    "fact_ids": [
                        "3",
                        "4",
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "real set",
                "t": "real set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "is_realinterval_univ",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀a::real. ∀b. ∀c. a ∈ univ ⟶ b ∈ univ ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ univ"
                },
                {
                    "args": "a, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "c, real",
                    "id": "0.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR c"
                },
                {
                    "args": "a ∈ univ",
                    "id": "0.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ∈ univ ⊢ a ∈ univ"
                },
                {
                    "args": "b ∈ univ",
                    "id": "0.4",
                    "prevs": [],
                    "rule": "assume",
                    "th": "b ∈ univ ⊢ b ∈ univ"
                },
                {
                    "args": "a ≤ c",
                    "id": "0.5",
                    "prevs": [],
                    "rule": "assume",
                    "th": "a ≤ c ⊢ a ≤ c"
                },
                {
                    "args": "c ≤ b",
                    "id": "0.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "c ≤ b ⊢ c ≤ b"
                },
                {
                    "args": "member_univ, {x: c}",
                    "id": "0.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ c ∈ univ"
                },
                {
                    "args": "",
                    "id": "0.8",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.2",
                        "0.3",
                        "0.4",
                        "0.5",
                        "0.6",
                        "0.7"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀a::real. ∀b. ∀c. a ∈ univ ⟶ b ∈ univ ⟶ a ≤ c ⟶ c ≤ b ⟶ c ∈ univ"
                },
                {
                    "args": "is_realinterval_def, is_realinterval univ",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ is_realinterval univ"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ is_realinterval univ"
                }
            ],
            "prop": "is_realinterval univ",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "is_realinterval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "a,b,c"
                },
                {
                    "goal_id": "0.7",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_closed_interval",
            "prop": "real_closed_interval a b = {p. a ≤ p ∧ p ≤ b}",
            "ty": "def",
            "type": "real ⇒ real ⇒ real set"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_open_interval",
            "prop": "real_open_interval a b = {p. a < p ∧ p < b}",
            "ty": "def",
            "type": "real ⇒ real ⇒ real set"
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "real_interval_open_subset_closed",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ real_open_interval a b ⟶ x ∈ real_closed_interval a b"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ real_open_interval a b",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ real_open_interval a b ⊢ x ∈ real_open_interval a b"
                },
                {
                    "args": "real_open_interval_def",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ real_open_interval a b ⊢ x ∈ {p. a < p ∧ p < b}"
                },
                {
                    "args": "member_collect",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "x ∈ real_open_interval a b ⊢ a < x ∧ x < b"
                },
                {
                    "args": "a ≤ x ∧ x ≤ b",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "z3",
                    "th": "x ∈ real_open_interval a b ⊢ a ≤ x ∧ x ≤ b"
                },
                {
                    "args": "member_collect, x ∈ {p. a ≤ p ∧ p ≤ b}",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ real_open_interval a b ⊢ x ∈ {p. a ≤ p ∧ p ≤ b}"
                },
                {
                    "args": "real_closed_interval_def, x ∈ real_closed_interval a b",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "x ∈ real_open_interval a b ⊢ x ∈ real_closed_interval a b"
                },
                {
                    "args": "",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.1",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ real_open_interval a b ⟶ x ∈ real_closed_interval a b"
                },
                {
                    "args": "subsetI",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_open_interval a b ⊆ real_closed_interval a b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open_interval a b ⊆ real_closed_interval a b"
                }
            ],
            "prop": "real_open_interval a b ⊆ real_closed_interval a b",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "subsetI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_closed_interval_def"
                },
                {
                    "fact_ids": [
                        "0.1"
                    ],
                    "goal_id": "0.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_open_interval_def"
                },
                {
                    "goal_id": "0.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "0.2"
                    ],
                    "goal_id": "0.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "0.3"
                    ],
                    "goal_id": "0.4",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_closed_interval_eq_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "(∀x. a ≤ x ∧ x ≤ b ⟷ x ∈ ∅) ⟷ b < a",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (∀x. a ≤ x ∧ x ≤ b ⟷ x ∈ ∅) ⟷ b < a"
                },
                {
                    "args": "member_collect, (∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟷ x ∈ ∅) ⟷ b < a",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∀x. x ∈ {p. a ≤ p ∧ p ≤ b} ⟷ x ∈ ∅) ⟷ b < a"
                },
                {
                    "args": "set_equal_iff, {p. a ≤ p ∧ p ≤ b} = ∅ ⟷ b < a",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ {p. a ≤ p ∧ p ≤ b} = ∅ ⟷ b < a"
                },
                {
                    "args": "real_closed_interval_def, real_closed_interval a b = ∅ ⟷ b < a",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_closed_interval a b = ∅ ⟷ b < a"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_closed_interval a b = ∅ ⟷ b < a"
                }
            ],
            "prop": "real_closed_interval a b = ∅ ⟷ b < a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_closed_interval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": " real_open_interval_eq_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "{p. a < p ∧ p < b} = ∅ ⟷ b ≤ a",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ {p. a < p ∧ p < b} = ∅ ⟷ b ≤ a"
                },
                {
                    "args": "real_open_interval_def, real_open_interval a b = ∅ ⟷ b ≤ a",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ real_open_interval a b = ∅ ⟷ b ≤ a"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open_interval a b = ∅ ⟷ b ≤ a"
                }
            ],
            "prop": "real_open_interval a b = ∅ ⟷ b ≤ a",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_interval_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_closed_interval_ne_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_not_lt, ¬(b < a) ⟷ a ≤ b",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(b < a) ⟷ a ≤ b"
                },
                {
                    "args": "real_closed_interval_eq_empty, ¬(real_closed_interval a b = ∅) ⟷ a ≤ b",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(real_closed_interval a b = ∅) ⟷ a ≤ b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(real_closed_interval a b = ∅) ⟷ a ≤ b"
                }
            ],
            "prop": "¬(real_closed_interval a b = ∅) ⟷ a ≤ b",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_closed_interval_eq_empty"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_not_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "real_open_interval_ne_empty",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_less_def, ¬(b ≤ a) ⟷ a < b",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(b ≤ a) ⟷ a < b"
                },
                {
                    "args": " real_open_interval_eq_empty, ¬(real_open_interval a b = ∅) ⟷ a < b",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(real_open_interval a b = ∅) ⟷ a < b"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(real_open_interval a b = ∅) ⟷ a < b"
                }
            ],
            "prop": "¬(real_open_interval a b = ∅) ⟷ a < b",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": " real_open_interval_eq_empty"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_less_def"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite",
                "hint_rewrite_sym"
            ],
            "name": "real_open_closed_interval",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ real_open_interval a b ⟷ x ∈ diff (real_closed_interval a b) ({a, b})"
                },
                {
                    "args": "x, real",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "a < x ∧ x < b ⟷ (a ≤ x ∧ x ≤ b) ∧ ¬(x ∈ {a, b})",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ a < x ∧ x < b ⟷ (a ≤ x ∧ x ≤ b) ∧ ¬(x ∈ {a, b})"
                },
                {
                    "args": "member_collect, a < x ∧ x < b ⟷ x ∈ {p. a ≤ p ∧ p ≤ b} ∧ ¬(x ∈ {a, b})",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ a < x ∧ x < b ⟷ x ∈ {p. a ≤ p ∧ p ≤ b} ∧ ¬(x ∈ {a, b})"
                },
                {
                    "args": "member_collect, x ∈ {p. a < p ∧ p < b} ⟷ x ∈ {x1. x1 ∈ {p. a ≤ p ∧ p ≤ b} ∧ ¬(x1 ∈ {a, b})}",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ∈ {p. a < p ∧ p < b} ⟷ x ∈ {x1. x1 ∈ {p. a ≤ p ∧ p ≤ b} ∧ ¬(x1 ∈ {a, b})}"
                },
                {
                    "args": "diff_def, x ∈ {p. a < p ∧ p < b} ⟷ x ∈ diff ({p. a ≤ p ∧ p ≤ b}) ({a, b})",
                    "id": "0.4",
                    "prevs": [
                        "0.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ∈ {p. a < p ∧ p < b} ⟷ x ∈ diff ({p. a ≤ p ∧ p ≤ b}) ({a, b})"
                },
                {
                    "args": "real_closed_interval_def, x ∈ {p. a < p ∧ p < b} ⟷ x ∈ diff (real_closed_interval a b) ({a, b})",
                    "id": "0.5",
                    "prevs": [
                        "0.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ∈ {p. a < p ∧ p < b} ⟷ x ∈ diff (real_closed_interval a b) ({a, b})"
                },
                {
                    "args": "real_open_interval_def, x ∈ real_open_interval a b ⟷ x ∈ diff (real_closed_interval a b) ({a, b})",
                    "id": "0.6",
                    "prevs": [
                        "0.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ x ∈ real_open_interval a b ⟷ x ∈ diff (real_closed_interval a b) ({a, b})"
                },
                {
                    "args": "",
                    "id": "0.7",
                    "prevs": [
                        "0.0",
                        "0.6"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀x. x ∈ real_open_interval a b ⟷ x ∈ diff (real_closed_interval a b) ({a, b})"
                },
                {
                    "args": "member_ext",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_open_interval a b = diff (real_closed_interval a b) ({a, b})"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ real_open_interval a b = diff (real_closed_interval a b) ({a, b})"
                }
            ],
            "prop": "real_open_interval a b = diff (real_closed_interval a b) ({a, b})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_open_interval_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_closed_interval_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "a": "real",
                "b": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from",
            "prop": "from n = {m. n ≤ m}",
            "ty": "def",
            "type": "nat ⇒ nat set"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x::nat. 0 ≤ x ⟷ x ∈ univ",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::nat. 0 ≤ x ⟷ x ∈ univ"
                },
                {
                    "args": "member_collect, ∀x::nat. x ∈ {m. 0 ≤ m} ⟷ x ∈ univ",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x::nat. x ∈ {m. 0 ≤ m} ⟷ x ∈ univ"
                },
                {
                    "args": "member_ext",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ {m::nat. 0 ≤ m} = univ"
                },
                {
                    "args": "from_def, from 0 = univ",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ from 0 = univ"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ from 0 = univ"
                }
            ],
            "prop": "from 0 = univ",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "from_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {}
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "in_from",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "member_collect, m ∈ {m1. n ≤ m1} ⟷ n ≤ m",
                    "id": "0",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ m ∈ {m1. n ≤ m1} ⟷ n ≤ m"
                },
                {
                    "args": "from_def, m ∈ from n ⟷ n ≤ m",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ m ∈ from n ⟷ n ≤ m"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ m ∈ from n ⟷ n ≤ m"
                }
            ],
            "prop": "m ∈ from n ⟷ n ≤ m",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "from_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from_mono",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ (∀x. m ≤ x ⟶ n ≤ x) ⟶ n ≤ m"
                },
                {
                    "args": "∀x. m ≤ x ⟶ n ≤ x",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀x. m ≤ x ⟶ n ≤ x ⊢ ∀x. m ≤ x ⟶ n ≤ x"
                },
                {
                    "args": "less_eq_refl, {n: m}",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ m ≤ m"
                },
                {
                    "args": "m",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "apply_fact_for",
                    "th": "∀x. m ≤ x ⟶ n ≤ x ⊢ n ≤ m"
                },
                {
                    "args": "",
                    "id": "0.3",
                    "prevs": [
                        "0.0",
                        "0.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀x. m ≤ x ⟶ n ≤ x) ⟶ n ≤ m"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ n ≤ m ⟶ (∀x. m ≤ x ⟶ n ≤ x)"
                },
                {
                    "args": "n ≤ m",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ m ⊢ n ≤ m"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "n ≤ m ⊢ ∀x. m ≤ x ⟶ n ≤ x"
                },
                {
                    "args": "x, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "m ≤ x",
                    "id": "1.1.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m ≤ x ⊢ m ≤ x"
                },
                {
                    "args": "less_eq_trans",
                    "id": "1.1.2",
                    "prevs": [
                        "1.0",
                        "1.1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m ≤ x, n ≤ m ⊢ n ≤ x"
                },
                {
                    "args": "",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.0",
                        "1.1.1",
                        "1.1.2"
                    ],
                    "rule": "intros",
                    "th": "n ≤ m ⊢ ∀x. m ≤ x ⟶ n ≤ x"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [
                        "1.0",
                        "1.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ n ≤ m ⟶ (∀x. m ≤ x ⟶ n ≤ x)"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (∀x. m ≤ x ⟶ n ≤ x) ⟷ n ≤ m"
                },
                {
                    "args": "in_from, (∀x. x ∈ from m ⟶ x ∈ from n) ⟷ n ≤ m",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (∀x. x ∈ from m ⟶ x ∈ from n) ⟷ n ≤ m"
                },
                {
                    "args": "subset_def, from m ⊆ from n ⟷ n ≤ m",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ from m ⊆ from n ⟷ n ≤ m"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ from m ⊆ from n ⟷ n ≤ m"
                }
            ],
            "prop": "from m ⊆ from n ⟷ n ≤ m",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "",
                    "theorem": "subset_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_from"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "less_eq_refl"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "1.1.2",
                    "method_name": "apply_backward_step",
                    "param_m": "m",
                    "theorem": "less_eq_trans"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from_inter_natseg_gen",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ m < k ⟶ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "m < k",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "m < k ⊢ m < k"
                },
                {
                    "args": "",
                    "id": "0.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "m < k ⊢ ∀x. x ∈ {m1. k ≤ m1} ∩ {m..n} ⟷ x ∈ {k..n}"
                },
                {
                    "args": "x, nat",
                    "id": "0.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "k ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ k ≤ x ∧ x ≤ n",
                    "id": "0.1.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "z3",
                    "th": "m < k ⊢ k ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ k ≤ x ∧ x ≤ n"
                },
                {
                    "args": "member_collect, x ∈ {m1. k ≤ m1} ∧ m ≤ x ∧ x ≤ n ⟷ k ≤ x ∧ x ≤ n",
                    "id": "0.1.2",
                    "prevs": [
                        "0.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m < k ⊢ x ∈ {m1. k ≤ m1} ∧ m ≤ x ∧ x ≤ n ⟷ k ≤ x ∧ x ≤ n"
                },
                {
                    "args": "member_natseg, x ∈ {m1. k ≤ m1} ∧ x ∈ {m..n} ⟷ x ∈ {k..n}",
                    "id": "0.1.3",
                    "prevs": [
                        "0.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m < k ⊢ x ∈ {m1. k ≤ m1} ∧ x ∈ {m..n} ⟷ x ∈ {k..n}"
                },
                {
                    "args": "member_inter_iff, x ∈ {m1. k ≤ m1} ∩ {m..n} ⟷ x ∈ {k..n}",
                    "id": "0.1.4",
                    "prevs": [
                        "0.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m < k ⊢ x ∈ {m1. k ≤ m1} ∩ {m..n} ⟷ x ∈ {k..n}"
                },
                {
                    "args": "",
                    "id": "0.1.5",
                    "prevs": [
                        "0.1.0",
                        "0.1.4"
                    ],
                    "rule": "intros",
                    "th": "m < k ⊢ ∀x. x ∈ {m1. k ≤ m1} ∩ {m..n} ⟷ x ∈ {k..n}"
                },
                {
                    "args": "member_ext",
                    "id": "0.2",
                    "prevs": [
                        "0.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "m < k ⊢ {m1. k ≤ m1} ∩ {m..n} = {k..n}"
                },
                {
                    "args": "from_def, from k ∩ {m..n} = {k..n}",
                    "id": "0.3",
                    "prevs": [
                        "0.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m < k ⊢ from k ∩ {m..n} = {k..n}"
                },
                {
                    "args": "if_P, from k ∩ {m..n} = (if m < k then {k..n} else {m..n})",
                    "id": "0.4",
                    "prevs": [
                        "0.3",
                        "0.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "m < k ⊢ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "",
                    "id": "0.5",
                    "prevs": [
                        "0.0",
                        "0.4"
                    ],
                    "rule": "intros",
                    "th": "⊢ m < k ⟶ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(m < k) ⟶ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "¬(m < k)",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(m < k) ⊢ ¬(m < k)"
                },
                {
                    "args": "",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "¬(m < k) ⊢ ∀x. x ∈ from k ∩ {m..n} ⟷ x ∈ {m..n}"
                },
                {
                    "args": "x, nat",
                    "id": "1.1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "k ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ m ≤ x ∧ x ≤ n",
                    "id": "1.1.1",
                    "prevs": [
                        "1.0"
                    ],
                    "rule": "z3",
                    "th": "¬(m < k) ⊢ k ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ m ≤ x ∧ x ≤ n"
                },
                {
                    "args": "member_natseg, k ≤ x ∧ x ∈ {m..n} ⟷ x ∈ {m..n}",
                    "id": "1.1.2",
                    "prevs": [
                        "1.1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m < k) ⊢ k ≤ x ∧ x ∈ {m..n} ⟷ x ∈ {m..n}"
                },
                {
                    "args": "in_from, x ∈ from k ∧ x ∈ {m..n} ⟷ x ∈ {m..n}",
                    "id": "1.1.3",
                    "prevs": [
                        "1.1.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m < k) ⊢ x ∈ from k ∧ x ∈ {m..n} ⟷ x ∈ {m..n}"
                },
                {
                    "args": "member_inter_iff, x ∈ from k ∩ {m..n} ⟷ x ∈ {m..n}",
                    "id": "1.1.4",
                    "prevs": [
                        "1.1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m < k) ⊢ x ∈ from k ∩ {m..n} ⟷ x ∈ {m..n}"
                },
                {
                    "args": "",
                    "id": "1.1.5",
                    "prevs": [
                        "1.1.0",
                        "1.1.4"
                    ],
                    "rule": "intros",
                    "th": "¬(m < k) ⊢ ∀x. x ∈ from k ∩ {m..n} ⟷ x ∈ {m..n}"
                },
                {
                    "args": "member_ext",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(m < k) ⊢ from k ∩ {m..n} = {m..n}"
                },
                {
                    "args": "if_not_P, from k ∩ {m..n} = (if m < k then {k..n} else {m..n})",
                    "id": "1.3",
                    "prevs": [
                        "1.2",
                        "1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(m < k) ⊢ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(m < k) ⟶ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ from k ∩ {m..n} = (if m < k then {k..n} else {m..n})"
                }
            ],
            "prop": "from k ∩ {m..n} = (if m < k then {k..n} else {m..n})",
            "steps": [
                {
                    "case": "m < k",
                    "goal_id": "0",
                    "method_name": "cases"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "from_def"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "0.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "0.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "introduction",
                    "names": "x"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_from"
                },
                {
                    "goal_id": "1.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1.1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "m": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from_inter_natseg_max",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. p ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ max p m ≤ x ∧ x ≤ n",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. p ≤ x ∧ m ≤ x ∧ x ≤ n ⟷ max p m ≤ x ∧ x ≤ n"
                },
                {
                    "args": "member_natseg, ∀x. p ≤ x ∧ x ∈ {m..n} ⟷ x ∈ {max p m..n}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. p ≤ x ∧ x ∈ {m..n} ⟷ x ∈ {max p m..n}"
                },
                {
                    "args": "in_from, ∀x. x ∈ from p ∧ x ∈ {m..n} ⟷ x ∈ {max p m..n}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ from p ∧ x ∈ {m..n} ⟷ x ∈ {max p m..n}"
                },
                {
                    "args": "member_inter_iff, ∀x. x ∈ from p ∩ {m..n} ⟷ x ∈ {max p m..n}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ from p ∩ {m..n} ⟷ x ∈ {max p m..n}"
                },
                {
                    "args": "set_equal_iff, from p ∩ {m..n} = {max p m..n}",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ from p ∩ {m..n} = {max p m..n}"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ from p ∩ {m..n} = {max p m..n}"
                }
            ],
            "prop": "from p ∩ {m..n} = {max p m..n}",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "set_equal_iff"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_inter_iff"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_from"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_natseg"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "p": "nat"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "from_inter_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "max k 0 = k",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ max k 0 = k"
                },
                {
                    "args": "{max k 0..n} = {k..n}",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ {max k 0..n} = {k..n}"
                },
                {
                    "args": "from_inter_natseg_max, from k ∩ {0..n} = {k..n}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ from k ∩ {0..n} = {k..n}"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ from k ∩ {0..n} = {k..n}"
                }
            ],
            "prop": "from k ∩ {0..n} = {k..n}",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "from_inter_natseg_max"
                },
                {
                    "goal": "max k 0 = k",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "k": "nat",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "infinite_from",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀x. n ≤ x ⟷ x ∈ univ ∧ ¬(x < n)",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x. n ≤ x ⟷ x ∈ univ ∧ ¬(x < n)"
                },
                {
                    "args": "member_collect, ∀x. n ≤ x ⟷ x ∈ univ ∧ ¬(x ∈ {i. i < n})",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. n ≤ x ⟷ x ∈ univ ∧ ¬(x ∈ {i. i < n})"
                },
                {
                    "args": "member_collect, ∀x. n ≤ x ⟷ x ∈ {x1. x1 ∈ univ ∧ ¬(x1 ∈ {i. i < n})}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. n ≤ x ⟷ x ∈ {x1. x1 ∈ univ ∧ ¬(x1 ∈ {i. i < n})}"
                },
                {
                    "args": "in_from, ∀x. x ∈ from n ⟷ x ∈ {x1. x1 ∈ univ ∧ ¬(x1 ∈ {i. i < n})}",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ from n ⟷ x ∈ {x1. x1 ∈ univ ∧ ¬(x1 ∈ {i. i < n})}"
                },
                {
                    "args": "diff_def, ∀x. x ∈ from n ⟷ x ∈ diff univ ({i. i < n})",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀x. x ∈ from n ⟷ x ∈ diff univ ({i. i < n})"
                },
                {
                    "args": "member_ext",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ from n = diff univ ({i. i < n})"
                },
                {
                    "args": "nat_infinite",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ infinite (univ::nat set)"
                },
                {
                    "args": "finite_natseg_lt, {n: n}",
                    "id": "7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m. m < n})"
                },
                {
                    "args": "infinite_diff_finite",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ infinite (diff univ ({i. i < n}))"
                },
                {
                    "args": "infinite (from n)",
                    "id": "9",
                    "prevs": [
                        "5",
                        "8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ infinite (from n)"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ infinite (from n)"
                }
            ],
            "prop": "infinite (from n)",
            "steps": [
                {
                    "goal": "from n = diff (univ::nat set) {i. i < n}",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "member_ext"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "diff_def"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "in_from"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "member_collect"
                },
                {
                    "goal_id": "0",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "infinite_diff_finite"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "nat_infinite"
                },
                {
                    "goal_id": "7",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg_lt"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "finite_inter_natseg",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "finite_natseg, {m: m, n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ finite ({m..n})"
                },
                {
                    "args": "s ∩ {p. m ≤ p ∧ p ≤ n} ⊆ {p. m ≤ p ∧ p ≤ n}",
                    "id": "1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ s ∩ {p. m ≤ p ∧ p ≤ n} ⊆ {p. m ≤ p ∧ p ≤ n}"
                },
                {
                    "args": "nat_interval_def, s ∩ {m..n} ⊆ {m..n}",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ s ∩ {m..n} ⊆ {m..n}"
                },
                {
                    "args": "finite_subset",
                    "id": "3",
                    "prevs": [
                        "0",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ finite (s ∩ {m..n})"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ finite (s ∩ {m..n})"
                }
            ],
            "prop": "finite (s ∩ {m..n})",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "param_t": "{m..n}",
                    "theorem": "finite_subset"
                },
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "finite_natseg"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_interval_def"
                },
                {
                    "goal_id": "1",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "m": "nat",
                "n": "nat",
                "s": "nat set"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "monotone_bigger",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀m. ∀n. m < n ⟶ R m < R n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀m. ∀n. m < n ⟶ R m < R n"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. n ≤ R n"
                },
                {
                    "args": "n, nat",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR n"
                },
                {
                    "args": "le_0, {n: R 0}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ R 0"
                },
                {
                    "args": "",
                    "id": "1.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. n ≤ R n ⟶ Suc n ≤ R (Suc n)"
                },
                {
                    "args": "n ≤ R n",
                    "id": "1.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n ≤ R n ⊢ n ≤ R n"
                },
                {
                    "args": "n < n + 1",
                    "id": "1.2.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ n < n + 1"
                },
                {
                    "args": "n + 1 ≤ R (n + 1)",
                    "id": "1.2.2",
                    "prevs": [
                        "1.2.1",
                        "1.2.0",
                        "0"
                    ],
                    "rule": "z3",
                    "th": "n ≤ R n, ∀m. ∀n. m < n ⟶ R m < R n ⊢ n + 1 ≤ R (n + 1)"
                },
                {
                    "args": "add_1_right, Suc n ≤ R (Suc n)",
                    "id": "1.2.3",
                    "prevs": [
                        "1.2.2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n, n ≤ R n ⊢ Suc n ≤ R (Suc n)"
                },
                {
                    "args": "",
                    "id": "1.2.4",
                    "prevs": [
                        "1.0",
                        "1.2.0",
                        "1.2.3"
                    ],
                    "rule": "intros",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. n ≤ R n ⟶ Suc n ≤ R (Suc n)"
                },
                {
                    "args": "nat_induct, {P: λn. n ≤ R n, x: n}",
                    "id": "1.3",
                    "prevs": [
                        "1.1",
                        "1.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ n ≤ R n"
                },
                {
                    "args": "",
                    "id": "1.4",
                    "prevs": [
                        "1.0",
                        "1.3"
                    ],
                    "rule": "intros",
                    "th": "∀m. ∀n. m < n ⟶ R m < R n ⊢ ∀n. n ≤ R n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀m. ∀n. m < n ⟶ R m < R n) ⟶ (∀n. n ≤ R n)"
                }
            ],
            "prop": "(∀m. ∀n. m < n ⟶ R m < R n) ⟶ (∀n. n ≤ R n)",
            "steps": [
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "induction",
                    "theorem": "nat_induct",
                    "var": "n"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "goal_id": "1.2",
                    "method_name": "introduction",
                    "names": "n"
                },
                {
                    "goal": "n < n+1",
                    "goal_id": "1.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.2.1",
                    "method_name": "z3"
                },
                {
                    "goal_id": "1.2.2",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "fact_ids": [
                        "1.2.1",
                        "1.2.0",
                        "0"
                    ],
                    "goal_id": "1.2.2",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "R": "nat ⇒ nat"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_forward"
            ],
            "name": "infinite_enumerate_weak",
            "prop": "infinite s ⟶ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))",
            "ty": "thm",
            "vars": {
                "s": "nat set"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "infinite_enumerate_eq_alt",
            "num_gaps": 1,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ infinite s ⟶ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))"
                },
                {
                    "args": "infinite s",
                    "id": "0.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "infinite s ⊢ infinite s"
                },
                {
                    "args": "infinite_enumerate_weak",
                    "id": "0.1",
                    "prevs": [
                        "0.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "infinite s ⊢ ∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s)"
                },
                {
                    "args": "",
                    "id": "0.2",
                    "prevs": [
                        "0.0",
                        "0.1"
                    ],
                    "rule": "intros",
                    "th": "⊢ infinite s ⟶ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s)) ⟶ infinite s"
                },
                {
                    "args": "iffI",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ infinite s ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ infinite s ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))"
                }
            ],
            "prop": "infinite s ⟷ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ (∀n. r n ∈ s))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_backward_step",
                    "theorem": "iffI"
                },
                {
                    "goal_id": "0",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "0.0"
                    ],
                    "goal_id": "0.1",
                    "method_name": "apply_backward_step",
                    "theorem": "infinite_enumerate_weak"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "nat set"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "monotone_subsequence",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "",
                    "id": "0",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ (∀n. ∃p. n < p ∧ (∀m. p ≤ m ⟶ s m ≤ s p)) ⟶ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ ((∀m. ∀n. m < n ⟶ s (r m) ≤ s (r n)) ∨ (∀m. ∀n. m < n ⟶ s (r n) ≤ s (r m))))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "⊢ ¬(∀n. ∃p. n < p ∧ (∀m. p ≤ m ⟶ s m ≤ s p)) ⟶ (∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ ((∀m. ∀n. m < n ⟶ s (r m) ≤ s (r n)) ∨ (∀m. ∀n. m < n ⟶ s (r n) ≤ s (r m))))"
                },
                {
                    "args": "classical_cases",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ ∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ ((∀m. ∀n. m < n ⟶ s (r m) ≤ s (r n)) ∨ (∀m. ∀n. m < n ⟶ s (r n) ≤ s (r m)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ ((∀m. ∀n. m < n ⟶ s (r m) ≤ s (r n)) ∨ (∀m. ∀n. m < n ⟶ s (r n) ≤ s (r m)))"
                }
            ],
            "prop": [
                "∃r. (∀m::nat. ∀n. m < n ⟶ r m < r n) ∧ ",
                "  ((∀m. ∀n. m < n ⟶ s (r m) ≤ s (r n)) ∨ (∀m. ∀n. m < n ⟶ s (r n) ≤ s (r m)))"
            ],
            "steps": [
                {
                    "case": "!n. ?p. n < p & !m. p <= m --> s m <= s p",
                    "goal_id": "0",
                    "method_name": "cases"
                }
            ],
            "ty": "thm",
            "vars": {
                "s": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "convergent_bounded_increasing",
            "prop": [
                "(∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ",
                "⟶ (∀n. abs (s n) ≤ b) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "s": "nat ⇒ real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "convergent_bounded_monotone",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "∀n. abs (s n) ≤ b",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀n. abs (s n) ≤ b ⊢ ∀n. abs (s n) ≤ b"
                },
                {
                    "args": "(∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m)",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "(∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⊢ (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. abs (s n) ≤ b, (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⊢ (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
                },
                {
                    "args": "∀m. ∀n. m ≤ n ⟶ s m ≤ s n",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. m ≤ n ⟶ s m ≤ s n ⊢ ∀m. ∀n. m ≤ n ⟶ s m ≤ s n"
                },
                {
                    "args": "convergent_bounded_increasing",
                    "id": "2.1",
                    "prevs": [
                        "2.0",
                        "0"
                    ],
                    "rule": "apply_theorem",
                    "th": "∀m. ∀n. m ≤ n ⟶ s m ≤ s n, ∀n. abs (s n) ≤ b ⊢ ∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e)"
                },
                {
                    "args": "",
                    "id": "2.2",
                    "prevs": [
                        "2.0",
                        "2.1"
                    ],
                    "rule": "intros",
                    "th": "∀n. abs (s n) ≤ b, (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⊢ (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "∀n. abs (s n) ≤ b, (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⊢ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
                },
                {
                    "args": "∀m. ∀n. m ≤ n ⟶ s n ≤ s m",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀m. ∀n. m ≤ n ⟶ s n ≤ s m ⊢ ∀m. ∀n. m ≤ n ⟶ s n ≤ s m"
                },
                {
                    "args": "convergent_bounded_increasing, {b: b, s: λn. -(s n)}",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (∀m. ∀n. m ≤ n ⟶ -(s m) ≤ -(s n)) ⟶ (∀n. abs (-(s n)) ≤ b) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e))"
                },
                {
                    "args": "real_le_lneg2",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⟶ (∀n. abs (-(s n)) ≤ b) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e))"
                },
                {
                    "args": "real_abs_neg",
                    "id": "3.3",
                    "prevs": [
                        "3.2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⟶ (∀n. abs (s n) ≤ b) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e))"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.3",
                        "3.0",
                        "0"
                    ],
                    "rule": "apply_fact",
                    "th": "∀m. ∀n. m ≤ n ⟶ s n ≤ s m, ∀n. abs (s n) ≤ b ⊢ ∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e)"
                },
                {
                    "args": "l, real",
                    "id": "3.5",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR l"
                },
                {
                    "args": "∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e)",
                    "id": "3.6",
                    "prevs": [],
                    "rule": "assume",
                    "th": "∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e) ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e)"
                },
                {
                    "args": "∀n. abs (-(s n) - l) = abs (s n - -l)",
                    "id": "3.7",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀n. abs (-(s n) - l) = abs (s n - -l)"
                },
                {
                    "args": "",
                    "id": "3.8",
                    "prevs": [
                        "3.7",
                        "3.6"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e) ⊢ ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - -l) < e)"
                },
                {
                    "args": "exI, {P: λl. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e), a: -l}",
                    "id": "3.9",
                    "prevs": [
                        "3.8"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "∀n. abs (s n) ≤ b, (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m), ∀m. ∀n. m ≤ n ⟶ s n ≤ s m, ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e) ⊢ ∃a1. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - a1) < e)"
                },
                {
                    "args": "∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (-(s n) - l) < e)",
                    "id": "3.10",
                    "prevs": [
                        "3.0",
                        "3.4",
                        "3.5",
                        "3.6",
                        "3.9"
                    ],
                    "rule": "intros",
                    "th": "∀n. abs (s n) ≤ b, (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⊢ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
                },
                {
                    "args": "disjE",
                    "id": "4",
                    "prevs": [
                        "1",
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "(∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m), ∀n. abs (s n) ≤ b ⊢ ∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ (∀n. abs (s n) ≤ b) ⟶ (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
                }
            ],
            "prop": [
                "(∀n. abs (s n) ≤ b) ",
                "⟶ (∀m. ∀n. m ≤ n ⟶ s m ≤ s n) ∨ (∀m. ∀n. m ≤ n ⟶ s n ≤ s m) ",
                "   ⟶ (∃l. ∀e. 0 < e ⟶ (∃N. ∀n. N ≤ n ⟶ abs (s n - l) < e))"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "disjE"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0",
                        "0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "convergent_bounded_increasing"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_forward_step",
                    "param_b": "b",
                    "param_s": "(%n. -s n)",
                    "theorem": "convergent_bounded_increasing"
                },
                {
                    "fact_ids": [
                        "3.1"
                    ],
                    "goal_id": "3.2",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_le_lneg2"
                },
                {
                    "fact_ids": [
                        "3.2"
                    ],
                    "goal_id": "3.3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_abs_neg"
                },
                {
                    "fact_ids": [
                        "3.3",
                        "3.0",
                        "0"
                    ],
                    "goal_id": "3.4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "3.4"
                    ],
                    "goal_id": "3.5",
                    "method_name": "exists_elim",
                    "names": "l"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "inst_exists_goal",
                    "s": "-l"
                },
                {
                    "goal": "!n. abs (-(s n) - l) = abs (s n - -l) ",
                    "goal_id": "3.7",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3.7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "3.7",
                        "3.6"
                    ],
                    "goal_id": "3.8",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "b": "real",
                "s": "nat ⇒ real"
            }
        }
    ],
    "description": "Various convenient background stuff. Refer to misc.ml from HOL Light.",
    "imports": [
        "floor",
        "card"
    ],
    "name": "misc"
}