{
    "content": [
        {
            "args": [],
            "name": "int",
            "ty": "type.ax"
        },
        {
            "name": "of_nat",
            "ty": "def.ax",
            "type": "nat ⇒ int"
        },
        {
            "name": "zero",
            "prop": "(0::int) = of_nat 0",
            "ty": "def",
            "type": "int"
        },
        {
            "name": "one",
            "prop": "(1::int) = of_nat 1",
            "ty": "def",
            "type": "int"
        },
        {
            "name": "plus",
            "ty": "def.ax",
            "type": "int ⇒ int ⇒ int"
        },
        {
            "name": "uminus",
            "overloaded": true,
            "ty": "def.ax",
            "type": "'a ⇒ 'a"
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "abs",
            "prop": "abs n = (if 0 ≤ n then n else -n)",
            "ty": "def",
            "type": "'a ⇒ 'a"
        },
        {
            "name": "uminus",
            "ty": "def.ax",
            "type": "int ⇒ int"
        },
        {
            "name": "minus",
            "ty": "def.ax",
            "type": "int ⇒ int ⇒ int"
        },
        {
            "name": "times",
            "ty": "def.ax",
            "type": "int ⇒ int ⇒ int"
        },
        {
            "name": "less_eq",
            "ty": "def.ax",
            "type": "int ⇒ int ⇒ bool"
        },
        {
            "name": "less",
            "ty": "def.ax",
            "type": "int ⇒ int ⇒ bool"
        },
        {
            "name": "int_add_assoc",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x + (y + z) = x + y + z",
                    "id": "0",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ x + (y + z) = x + y + z"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "intros",
                    "th": "⊢ x + (y + z) = x + y + z"
                }
            ],
            "prop": "x + (y + z) = x + y + z",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "z3"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int",
                "z": "int"
            }
        },
        {
            "name": "int_add_comm",
            "prop": "x + y = y + x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        },
        {
            "name": "int_mult_assoc",
            "prop": "x * (y * z) = x * y * z",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int",
                "z": "int"
            }
        },
        {
            "name": "int_mult_comm",
            "prop": "x * y = y * x",
            "ty": "thm",
            "vars": {
                "x": "int",
                "y": "int"
            }
        }
    ],
    "description": "integers",
    "imports": [
        "list"
    ],
    "name": "int"
}