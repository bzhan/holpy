{
    "content": [
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "cos_pi_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "pi / 2 - (x + pi / 2) = -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ pi / 2 - (x + pi / 2) = -x"
                },
                {
                    "args": "sin_neg, sin (-x) = -(sin x)",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sin (-x) = -(sin x)"
                },
                {
                    "args": "sin (pi / 2 - (x + pi / 2)) = -(sin x)",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sin (pi / 2 - (x + pi / 2)) = -(sin x)"
                },
                {
                    "args": "cos_sin, cos (x + pi / 2) = -(sin x)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ cos (x + pi / 2) = -(sin x)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ cos (x + pi / 2) = -(sin x)"
                }
            ],
            "prop": "cos (x + pi / 2) = -(sin x)",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "cos_sin"
                },
                {
                    "goal": "pi / 2 - (x + pi / 2) = -x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sin_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "cos_derivatives",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_derivative_cos_compose, {f: λx1. x1 + of_nat n * pi / 2, x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x) ⟶ real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x = -(sin (x + of_nat n * pi / 2)) * real_derivative (λx1. x1 + of_nat n * pi / 2) x"
                },
                {
                    "args": "real_differentiable_id, {net: atreal x}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. x1) (atreal x)"
                },
                {
                    "args": "real_differentiable_const, {c: of_nat n * pi / 2, net: atreal x}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. of_nat n * pi / 2) (atreal x)"
                },
                {
                    "args": "real_differentiable_add",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x = -(sin (x + of_nat n * pi / 2)) * real_derivative (λx1. x1 + of_nat n * pi / 2) x"
                },
                {
                    "args": "real_derivative_add",
                    "id": "5",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_derivative (λx1. x1 + of_nat n * pi / 2) x = real_derivative (λx1. x1) x + real_derivative (λx1. of_nat n * pi / 2) x"
                },
                {
                    "args": "real_derivative_id",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. x1 + of_nat n * pi / 2) x = 1 + real_derivative (λx1. of_nat n * pi / 2) x"
                },
                {
                    "args": "real_derivative_const",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. x1 + of_nat n * pi / 2) x = 1 + 0"
                },
                {
                    "args": "real_add_rid",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. x1 + of_nat n * pi / 2) x = 1"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "8",
                        "4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x = -(sin (x + of_nat n * pi / 2)) * 1"
                },
                {
                    "args": "real_mul_rid",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "cos_pi_2, cos (x + of_nat n * pi / 2 + pi / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "11",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + of_nat n * pi / 2 + pi / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_add_assoc, cos (x + (of_nat n * pi / 2 + pi / 2)) = -(sin (x + of_nat n * pi / 2))",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + (of_nat n * pi / 2 + pi / 2)) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_divide_def, cos (x + (of_nat n * pi * real_inverse 2 + pi * real_inverse 2)) = -(sin (x + of_nat n * pi * real_inverse 2))",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ cos (x + (of_nat n * pi * real_inverse 2 + pi * real_inverse 2)) = -(sin (x + of_nat n * pi * real_inverse 2))"
                },
                {
                    "args": "real_add_rdistrib, cos (x + (of_nat n * pi + pi) * real_inverse 2) = -(sin (x + of_nat n * pi * real_inverse 2))",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + (of_nat n * pi + pi) * real_inverse 2) = -(sin (x + of_nat n * pi * real_inverse 2))"
                },
                {
                    "args": "real_divide_def, cos (x + (of_nat n * pi + pi) / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + (of_nat n * pi + pi) / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_mul_lid, cos (x + (of_nat n * pi + 1 * pi) / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + (of_nat n * pi + 1 * pi) / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_add_rdistrib, cos (x + (of_nat n + 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (x + (of_nat n + 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_one_def, cos (x + (of_nat n + of_nat 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ cos (x + (of_nat n + of_nat 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "real_of_nat_add, cos (x + of_nat (n + 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))",
                    "id": "19",
                    "prevs": [
                        "18"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ cos (x + of_nat (n + 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "20",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ -(sin (x + of_nat n * pi / 2)) = real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x"
                },
                {
                    "args": "has_real_derivative_differentiable, {f: λx1. cos (x1 + of_nat n * pi / 2), x: x}",
                    "id": "21",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x) (atreal x) ⟷ real_differentiable (λx1. cos (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "real_differentiable_compose_atreal, {g: cos}",
                    "id": "22",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable cos (atreal (x + of_nat n * pi / 2)) ⟶ real_differentiable (cos ∘ (λx1. x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "comp_fun_def",
                    "id": "23",
                    "prevs": [
                        "22"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_differentiable cos (atreal (x + of_nat n * pi / 2)) ⟶ real_differentiable (λx1. cos (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "real_differentiable_at_cos, {x: x + of_nat n * pi / 2}",
                    "id": "24",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable cos (atreal (x + of_nat n * pi / 2))"
                },
                {
                    "args": "",
                    "id": "25",
                    "prevs": [
                        "23",
                        "24"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ real_differentiable (λx1. cos (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x) (atreal x)",
                    "id": "26",
                    "prevs": [
                        "21",
                        "25"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) x) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (-(sin (x + of_nat n * pi / 2))) (atreal x)",
                    "id": "27",
                    "prevs": [
                        "20",
                        "26"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (-(sin (x + of_nat n * pi / 2))) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (cos (x + of_nat (n + 1) * pi / 2)) (atreal x)",
                    "id": "28",
                    "prevs": [
                        "19",
                        "27"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (cos (x + of_nat (n + 1) * pi / 2)) (atreal x)"
                },
                {
                    "args": "",
                    "id": "29",
                    "prevs": [
                        "28"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) (cos (x + of_nat (n + 1) * pi / 2)) (atreal x)"
                }
            ],
            "prop": [
                "has_real_derivative (λx1. cos (x1 + of_nat n * pi / 2)) ",
                "  (cos (x + of_nat (n + 1) * pi / 2)) ",
                "  (atreal x)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. x1 + of_nat n * pi / 2)",
                    "param_x": "x",
                    "theorem": "real_derivative_cos_compose"
                },
                {
                    "goal": "real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_id"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_const"
                },
                {
                    "fact_ids": [
                        "0",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "1",
                        "2"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "real_derivative_add"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_derivative_id"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_derivative_const"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "8",
                        "4"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "goal": "cos (x + of_nat (n + 1) * pi / 2) = -(sin (x + of_nat n * pi / 2))",
                    "goal_id": "11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_of_nat_add"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rdistrib"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rdistrib"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_assoc"
                },
                {
                    "goal_id": "11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cos_pi_2"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "20"
                    ],
                    "goal_id": "21",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "21",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. cos (x1 + of_nat n * pi / 2))",
                    "param_x": "x",
                    "theorem": "has_real_derivative_differentiable"
                },
                {
                    "fact_ids": [
                        "21"
                    ],
                    "goal_id": "22",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_forward_step",
                    "param_g": "cos",
                    "theorem": "real_differentiable_compose_atreal"
                },
                {
                    "fact_ids": [
                        "22"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "comp_fun_def"
                },
                {
                    "fact_ids": [
                        "23"
                    ],
                    "goal_id": "24",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "24",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_at_cos"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "taylor_cos_raw",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_taylor, {B: (1::real), f: λi. λx. cos (x + of_nat i * pi / 2), n: n, s: (univ::real set)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ is_realinterval univ ⟶ (∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)) ⟶ (∀x. x ∈ univ ⟶ abs (cos (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (cos (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "is_realinterval_univ",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ is_realinterval univ"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)) ⟶ (∀x. x ∈ univ ⟶ abs (cos (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (cos (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)"
                },
                {
                    "args": "i, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "y, real",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "y ∈ univ",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ univ ⊢ y ∈ univ"
                },
                {
                    "args": "i ≤ n",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "cos_derivatives, {n: i, x: y}",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (y + of_nat (i + 1) * pi / 2)) (atreal y)"
                },
                {
                    "args": "withinreal_univ, has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (y + of_nat (i + 1) * pi / 2)) (within (atreal y) univ)",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "i ≤ n, y ∈ univ ⊢ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (y + of_nat (i + 1) * pi / 2)) (within (atreal y) univ)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. ∀y. y ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (y + of_nat (i + 1) * pi / 2)) (within (atreal y) univ)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀x. x ∈ univ ⟶ abs (cos (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (cos (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ univ ⟶ abs (cos (x + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "y, real",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "y ∈ univ",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ univ ⊢ y ∈ univ"
                },
                {
                    "args": "cos_bound, {x: y + of_nat (n + 1) * pi / 2}",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (cos (y + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "",
                    "id": "5.3",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀y. y ∈ univ ⟶ abs (cos (y + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (cos (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "(0::real)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "⊢ ∀z. (0::real) ∈ univ ⟶ z ∈ univ ⟶ abs (cos (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (0 + of_nat i * pi / 2) * (z - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (z - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "x",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (cos (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "member_univ, {x: (0::real)}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ∈ univ"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "8",
                        "9"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ x ∈ univ ⟶ abs (cos (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "member_univ, {x: x}",
                    "id": "11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ∈ univ"
                },
                {
                    "args": "",
                    "id": "12",
                    "prevs": [
                        "10",
                        "11"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ abs (cos (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_sub_rzero",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ abs (cos (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (0 + of_nat i * pi / 2) * x ^ i / of_nat (fact i))) ≤ 1 * abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_add_lid",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ abs (cos (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i))) ≤ 1 * abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_zero_def",
                    "id": "15",
                    "prevs": [
                        "14"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "⊢ abs (cos (x + 0 * pi / 2) - sum ({0..n}) (λi. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i))) ≤ 1 * abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "x + 0 * pi / 2 = x",
                    "id": "16",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ x + 0 * pi / 2 = x"
                },
                {
                    "args": "",
                    "id": "17",
                    "prevs": [
                        "16",
                        "15"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i))) ≤ 1 * abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "",
                    "id": "18",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "i, nat",
                    "id": "18.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "",
                    "id": "18.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ even i ⟶ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "even i",
                    "id": "18.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even i ⊢ even i"
                },
                {
                    "args": "even_exists",
                    "id": "18.1.1",
                    "prevs": [
                        "18.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even i ⊢ ∃m. i = 2 * m"
                },
                {
                    "args": "m, nat",
                    "id": "18.1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "i = 2 * m",
                    "id": "18.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i = 2 * m ⊢ i = 2 * m"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "18.1.4",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "div_mult, {m: (2::nat), n: m}",
                    "id": "18.1.5",
                    "prevs": [
                        "18.1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even i, i = 2 * m ⊢ 2 * m DIV 2 = m"
                },
                {
                    "args": "of_nat (2 * m) * pi / 2 = of_nat m * pi",
                    "id": "18.1.6",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ of_nat (2 * m) * pi / 2 = of_nat m * pi"
                },
                {
                    "args": "cos_npi, cos (of_nat m * pi) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ m * x ^ (2 * m) / of_nat (fact (2 * m))",
                    "id": "18.1.7",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (of_nat m * pi) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ m * x ^ (2 * m) / of_nat (fact (2 * m))"
                },
                {
                    "args": "cos (of_nat (2 * m) * pi / 2) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ m * x ^ (2 * m) / of_nat (fact (2 * m))",
                    "id": "18.1.8",
                    "prevs": [
                        "18.1.6",
                        "18.1.7"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even i, i = 2 * m ⊢ cos (of_nat (2 * m) * pi / 2) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ m * x ^ (2 * m) / of_nat (fact (2 * m))"
                },
                {
                    "args": "cos (of_nat (2 * m) * pi / 2) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ (2 * m DIV 2) * x ^ (2 * m) / of_nat (fact (2 * m))",
                    "id": "18.1.9",
                    "prevs": [
                        "18.1.5",
                        "18.1.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even i, i = 2 * m ⊢ cos (of_nat (2 * m) * pi / 2) * x ^ (2 * m) / of_nat (fact (2 * m)) = -1 ^ (2 * m DIV 2) * x ^ (2 * m) / of_nat (fact (2 * m))"
                },
                {
                    "args": "cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = -1 ^ (i DIV 2) * x ^ i / of_nat (fact i)",
                    "id": "18.1.10",
                    "prevs": [
                        "18.1.3",
                        "18.1.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even i, i = 2 * m ⊢ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = -1 ^ (i DIV 2) * x ^ i / of_nat (fact i)"
                },
                {
                    "args": "if_P, cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)",
                    "id": "18.1.11",
                    "prevs": [
                        "18.1.10",
                        "18.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even i, i = 2 * m ⊢ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "∃m. i = 2 * m",
                    "id": "18.1.12",
                    "prevs": [
                        "18.1.0",
                        "18.1.1",
                        "18.1.2",
                        "18.1.3",
                        "18.1.11"
                    ],
                    "rule": "intros",
                    "th": "⊢ even i ⟶ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "18.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(even i) ⟶ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "¬(even i)",
                    "id": "18.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(even i) ⊢ ¬(even i)"
                },
                {
                    "args": "of_nat i * pi / 2 = of_nat i * (pi / 2)",
                    "id": "18.2.1",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ of_nat i * pi / 2 = of_nat i * (pi / 2)"
                },
                {
                    "args": "conjI",
                    "id": "18.2.2",
                    "prevs": [
                        "18.2.0",
                        "18.2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(even i) ⊢ ¬(even i) ∧ of_nat i * pi / 2 = of_nat i * (pi / 2)"
                },
                {
                    "args": "exI, {P: λn. ¬(even n) ∧ of_nat i * pi / 2 = of_nat n * (pi / 2), a: i}",
                    "id": "18.2.3",
                    "prevs": [
                        "18.2.2"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(even i) ⊢ ∃a1. ¬(even a1) ∧ of_nat i * pi / 2 = of_nat a1 * (pi / 2)"
                },
                {
                    "args": "disjI1, {A: ∃n. ¬(even n) ∧ of_nat i * pi / 2 = of_nat n * (pi / 2), B: ∃n. ¬(even n) ∧ of_nat i * pi / 2 = -(of_nat n * (pi / 2))}",
                    "id": "18.2.4",
                    "prevs": [
                        "18.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(even i) ⊢ (∃n. ¬(even n) ∧ of_nat i * pi / 2 = of_nat n * (pi / 2)) ∨ (∃n. ¬(even n) ∧ of_nat i * pi / 2 = -(of_nat n * (pi / 2)))"
                },
                {
                    "args": "cos_zero, cos (of_nat i * pi / 2) = 0",
                    "id": "18.2.5",
                    "prevs": [
                        "18.2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even i) ⊢ cos (of_nat i * pi / 2) = 0"
                },
                {
                    "args": "eq_refl, {x: (0::real)}",
                    "id": "18.2.6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) = 0"
                },
                {
                    "args": "disjI1, {A: (0::real) = 0, B: of_nat (fact i) = (0::real)}",
                    "id": "18.2.7",
                    "prevs": [
                        "18.2.6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(even i) ⊢ (0::real) = 0 ∨ of_nat (fact i) = (0::real)"
                },
                {
                    "args": "real_div_eq_0, 0 / of_nat (fact i) = 0",
                    "id": "18.2.8",
                    "prevs": [
                        "18.2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even i) ⊢ 0 / of_nat (fact i) = 0"
                },
                {
                    "args": "real_mul_lzero, 0 * x ^ i / of_nat (fact i) = 0",
                    "id": "18.2.9",
                    "prevs": [
                        "18.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even i) ⊢ 0 * x ^ i / of_nat (fact i) = 0"
                },
                {
                    "args": "cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = 0",
                    "id": "18.2.10",
                    "prevs": [
                        "18.2.5",
                        "18.2.9"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(even i) ⊢ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = 0"
                },
                {
                    "args": "if_not_P, cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)",
                    "id": "18.2.11",
                    "prevs": [
                        "18.2.10",
                        "18.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(even i) ⊢ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "18.2.12",
                    "prevs": [
                        "18.2.0",
                        "18.2.11"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(even i) ⟶ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "18.3",
                    "prevs": [
                        "18.1",
                        "18.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "18.4",
                    "prevs": [
                        "18.0",
                        "18.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "19",
                    "prevs": [
                        "18",
                        "17"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)) ≤ 1 * abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_mul_lid",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "",
                    "id": "21",
                    "prevs": [
                        "20"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λk. if even k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                }
            ],
            "prop": [
                "abs ",
                "  (cos x - ",
                "   sum ({0..n}) ",
                "     (λk. if even k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ ",
                "abs x ^ (n + 1) / of_nat (fact (n + 1))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_B": "(1::real)",
                    "param_f": "(%i. %x. cos (x + (of_nat i) * pi / 2))",
                    "param_n": "n",
                    "param_s": "(univ::real set)",
                    "theorem": "real_taylor"
                },
                {
                    "goal": "is_realinterval univ",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "is_realinterval_univ"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. cos (x1 + of_nat i * pi / 2)) (cos (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "i,y"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "withinreal_univ"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "cos_derivatives"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀x. x ∈ univ ⟶ abs (cos (x + of_nat (n + 1) * pi / 2)) ≤ 1)",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "y"
                },
                {
                    "goal_id": "5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "cos_bound"
                },
                {
                    "fact_ids": [
                        "4",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "forall_elim",
                    "s": "(0::real)"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "goal": "(0::real) ∈ univ",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                },
                {
                    "fact_ids": [
                        "8",
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "x ∈ univ",
                    "goal_id": "11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "11",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                },
                {
                    "fact_ids": [
                        "10",
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_sub_rzero"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_zero_def"
                },
                {
                    "goal": "x + 0 * pi / 2 = x",
                    "goal_id": "16",
                    "method_name": "cut"
                },
                {
                    "goal_id": "16",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "16",
                        "15"
                    ],
                    "goal_id": "17",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "!i. cos (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = if even i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0",
                    "goal_id": "18",
                    "method_name": "cut"
                },
                {
                    "goal_id": "18",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "case": "even i",
                    "goal_id": "18.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "18.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "18.1.0"
                    ],
                    "goal_id": "18.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "18.1.0"
                    ],
                    "goal_id": "18.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "even_exists"
                },
                {
                    "fact_ids": [
                        "18.1.1"
                    ],
                    "goal_id": "18.1.2",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "18.1.3"
                    ],
                    "goal_id": "18.1.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "2 * m DIV 2 = m",
                    "goal_id": "18.1.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "18.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "div_mult"
                },
                {
                    "goal_id": "18.1.4",
                    "method_name": "nat_const_ineq"
                },
                {
                    "fact_ids": [
                        "18.1.5"
                    ],
                    "goal_id": "18.1.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "of_nat (2 * m) * pi / 2 = of_nat (m) * pi",
                    "goal_id": "18.1.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "18.1.6",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "18.1.6"
                    ],
                    "goal_id": "18.1.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "18.1.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cos_npi"
                },
                {
                    "goal_id": "18.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "18.2.0"
                    ],
                    "goal_id": "18.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal": "cos (of_nat i * pi / 2) = 0",
                    "goal_id": "18.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "18.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cos_zero"
                },
                {
                    "goal_id": "18.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "18.2.1",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "goal_id": "18.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "18.2.1",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "18.2.5"
                    ],
                    "goal_id": "18.2.6",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "18.2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "18.2.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_div_eq_0"
                },
                {
                    "goal_id": "18.2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "18.2.6",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "18",
                        "17"
                    ],
                    "goal_id": "19",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "19"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sum_pair_from_0",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "sum_pair, {f: f, m: (0::nat), n: n}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ sum ({2 * 0..2 * n + 1}) f = sum ({0..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "mult_0_right",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ sum ({0..2 * n + 1}) f = sum ({0..n}) (λi. f (2 * i) + f (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "intros",
                    "th": "⊢ sum ({0..2 * n + 1}) f = sum ({0..n}) (λi. f (2 * i) + f (2 * i + 1))"
                }
            ],
            "prop": "sum ({0..2 * n + 1}) f = sum ({0..n}) (λi. f (2 * i) + f (2 * i + 1))",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "f",
                    "param_m": "(0::nat)",
                    "param_n": "n",
                    "theorem": "sum_pair"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "mult_0_right"
                }
            ],
            "ty": "thm",
            "vars": {
                "f": "nat ⇒ real",
                "n": "nat"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "taylor_cos",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "taylor_cos_raw, {n: 2 * n + 1, x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (cos x - sum ({0..2 * n + 1}) (λk. if even k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ abs x ^ (2 * n + 1 + 1) / of_nat (fact (2 * n + 1 + 1))"
                },
                {
                    "args": "sum_pair_from_0",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0))) ≤ abs x ^ (2 * n + 1 + 1) / of_nat (fact (2 * n + 1 + 1))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "i, nat",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "even_double, {n: i}",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * i)"
                },
                {
                    "args": "double_neg, ¬¬(even (2 * i))",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬¬(even (2 * i))"
                },
                {
                    "args": "even_def_2, ¬(even (Suc (2 * i)))",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(even (Suc (2 * i)))"
                },
                {
                    "args": "add_1_right, ¬(even (2 * i + 1))",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(even (2 * i + 1))"
                },
                {
                    "args": "¬((2::nat) = 0)",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "nat_const_ineq",
                    "th": "⊢ ¬((2::nat) = 0)"
                },
                {
                    "args": "div_mult, {m: (2::nat), n: i}",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 2 * i DIV 2 = i"
                },
                {
                    "args": "-1 ^ i * x ^ (2 * i) * real_inverse (of_nat (fact (2 * i))) = -1 ^ i * real_inverse (of_nat (fact (2 * i))) * x ^ (2 * i)",
                    "id": "2.7",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ -1 ^ i * x ^ (2 * i) * real_inverse (of_nat (fact (2 * i))) = -1 ^ i * real_inverse (of_nat (fact (2 * i))) * x ^ (2 * i)"
                },
                {
                    "args": "real_divide_def, -1 ^ i * x ^ (2 * i) / of_nat (fact (2 * i)) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "id": "2.8",
                    "prevs": [
                        "2.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -1 ^ i * x ^ (2 * i) / of_nat (fact (2 * i)) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "-1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "id": "2.9",
                    "prevs": [
                        "2.6",
                        "2.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "real_add_rid, -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) + 0 = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) + 0 = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "if_not_P, -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "id": "2.11",
                    "prevs": [
                        "2.10",
                        "2.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "if_P, (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "id": "2.12",
                    "prevs": [
                        "2.11",
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "",
                    "id": "2.13",
                    "prevs": [
                        "2.0",
                        "2.12"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * n + 1 + 1) / of_nat (fact (2 * n + 1 + 1))"
                },
                {
                    "args": "2 * n + 1 + 1 = 2 * n + 2",
                    "id": "4",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ 2 * n + 1 + 1 = 2 * n + 2"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4",
                        "3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * n + 2) / of_nat (fact (2 * n + 2))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (cos x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * n + 2) / of_nat (fact (2 * n + 2))"
                }
            ],
            "prop": [
                "abs (cos x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ ",
                "abs x ^ (2 * n + 2) / of_nat (fact (2 * n + 2))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "2 * n + 1",
                    "param_x": "x",
                    "theorem": "taylor_cos_raw"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_pair_from_0"
                },
                {
                    "goal": "!i. (if even (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if even (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "goal": "even (2 * i)",
                    "goal_id": "2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal": "~even (2 * i + 1)",
                    "goal_id": "2.2",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "2.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "goal": "2 * i DIV 2 = i",
                    "goal_id": "2.5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "apply_backward_step",
                    "theorem": "div_mult"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "nat_const_ineq"
                },
                {
                    "fact_ids": [
                        "2.6"
                    ],
                    "goal_id": "2.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.7",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "2",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal": "2 * n + 1 + 1 = 2 * n + 2",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "4",
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "cos_poly_upper_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "even n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n ⊢ n = 0 ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "n = 0",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "cos_ubound, {x: x}",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ cos x ≤ 1"
                },
                {
                    "args": "real_div_1, cos x ≤ 1 / 1",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ 1 / 1"
                },
                {
                    "args": "real_one_def, cos x ≤ 1 / of_nat 1",
                    "id": "1.3",
                    "prevs": [
                        "1.2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "even n, n = 0 ⊢ cos x ≤ 1 / of_nat 1"
                },
                {
                    "args": "real_mul_rid, cos x ≤ 1 / of_nat 1 * 1",
                    "id": "1.4",
                    "prevs": [
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ 1 / of_nat 1 * 1"
                },
                {
                    "args": "fact_def_1, cos x ≤ 1 / of_nat (fact 0) * 1",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ 1 / of_nat (fact 0) * 1"
                },
                {
                    "args": "real_nat_power_def_1, cos x ≤ -1 ^ (0::nat) / of_nat (fact 0) * x ^ (0::nat)",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ -1 ^ (0::nat) / of_nat (fact 0) * x ^ (0::nat)"
                },
                {
                    "args": "mult_0_right, cos x ≤ -1 ^ (0::nat) / of_nat (fact (2 * 0)) * x ^ ((2::nat) * 0)",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ -1 ^ (0::nat) / of_nat (fact (2 * 0)) * x ^ ((2::nat) * 0)"
                },
                {
                    "args": "sum_sing_natseg, cos x ≤ sum ({0..0}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))",
                    "id": "1.8",
                    "prevs": [
                        "1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0 ⊢ cos x ≤ sum ({0..0}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))",
                    "id": "1.9",
                    "prevs": [
                        "1.0",
                        "1.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, n = 0 ⊢ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "",
                    "id": "1.10",
                    "prevs": [
                        "1.0",
                        "1.9"
                    ],
                    "rule": "intros",
                    "th": "even n ⊢ n = 0 ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n ⊢ ¬(n = 0) ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "¬(n = 0)",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(n = 0) ⊢ ¬(n = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "2.1",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ 0 < n"
                },
                {
                    "args": "lt_imp_le",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ 0 ≤ n"
                },
                {
                    "args": "sum_clauses_right",
                    "id": "2.3",
                    "prevs": [
                        "2.1",
                        "2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(n = 0) ⊢ ∀f. sum ({0..n}) f = sum ({0..n - 1}) f + f n"
                },
                {
                    "args": "taylor_cos, {n: n - 1, x: x}",
                    "id": "2.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * (n - 1) + 2) / of_nat (fact (2 * (n - 1) + 2))"
                },
                {
                    "args": "real_pow_one, (1::real) ^ n = 1",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ (1::real) ^ n = 1"
                },
                {
                    "args": "if_P, (if even n then (1::real) ^ n else -(1 ^ n)) = 1",
                    "id": "2.6",
                    "prevs": [
                        "2.5",
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, ¬(n = 0) ⊢ (if even n then (1::real) ^ n else -(1 ^ n)) = 1"
                },
                {
                    "args": "real_pow_neg, -(1::real) ^ n = 1",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, ¬(n = 0) ⊢ -(1::real) ^ n = 1"
                },
                {
                    "args": "",
                    "id": "2.8",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n, ¬(n = 0) ⊢ ∀a. ∀b. 1 / a * b = b / a"
                },
                {
                    "args": "a, real",
                    "id": "2.8.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "2.8.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "1 * real_inverse a * b = b * real_inverse a",
                    "id": "2.8.2",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ 1 * real_inverse a * b = b * real_inverse a"
                },
                {
                    "args": "real_divide_def, 1 / a * b = b / a",
                    "id": "2.8.3",
                    "prevs": [
                        "2.8.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, ¬(n = 0) ⊢ 1 / a * b = b / a"
                },
                {
                    "args": "",
                    "id": "2.8.4",
                    "prevs": [
                        "2.8.0",
                        "2.8.1",
                        "2.8.3"
                    ],
                    "rule": "intros",
                    "th": "even n, ¬(n = 0) ⊢ ∀a. ∀b. 1 / a * b = b / a"
                },
                {
                    "args": "2 * (n - 1) + 2 = 2 * n",
                    "id": "2.9",
                    "prevs": [
                        "2.0"
                    ],
                    "rule": "z3",
                    "th": "¬(n = 0) ⊢ 2 * (n - 1) + 2 = 2 * n"
                },
                {
                    "args": "",
                    "id": "2.10",
                    "prevs": [
                        "2.9",
                        "2.4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "¬(n = 0) ⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * n) / of_nat (fact (2 * n))"
                },
                {
                    "args": "even_double, {n: n}",
                    "id": "2.11",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * n)"
                },
                {
                    "args": "real_abs_abs, abs (abs x) = abs x",
                    "id": "2.12",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (abs x) = abs x"
                },
                {
                    "args": "disjI2, {A: 2 * n = 0, B: abs (abs x) = abs x}",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "even n, ¬(n = 0) ⊢ 2 * n = 0 ∨ abs (abs x) = abs x"
                },
                {
                    "args": "if_P, if even (2 * n) then 2 * n = 0 ∨ abs (abs x) = abs x else abs x = x",
                    "id": "2.14",
                    "prevs": [
                        "2.13",
                        "2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, ¬(n = 0) ⊢ if even (2 * n) then 2 * n = 0 ∨ abs (abs x) = abs x else abs x = x"
                },
                {
                    "args": "real_pow_eq_eq, abs x ^ (2 * n) = x ^ (2 * n)",
                    "id": "2.15",
                    "prevs": [
                        "2.14"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, ¬(n = 0) ⊢ abs x ^ (2 * n) = x ^ (2 * n)"
                },
                {
                    "args": "",
                    "id": "2.16",
                    "prevs": [
                        "2.15",
                        "2.10"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "even n, ¬(n = 0) ⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ x ^ (2 * n) / of_nat (fact (2 * n))"
                },
                {
                    "args": "∀x::real. ∀y. ∀z. abs (x - y) ≤ z ⟶ x ≤ y + z",
                    "id": "2.17",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. ∀y. ∀z. abs (x - y) ≤ z ⟶ x ≤ y + z"
                },
                {
                    "args": "cos x, sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)), x ^ (2 * n) / of_nat (fact (2 * n))",
                    "id": "2.18",
                    "prevs": [
                        "2.17",
                        "2.16"
                    ],
                    "rule": "apply_fact_for",
                    "th": "even n, ¬(n = 0) ⊢ cos x ≤ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + x ^ (2 * n) / of_nat (fact (2 * n))"
                },
                {
                    "args": "cos x ≤ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + 1 / of_nat (fact (2 * n)) * x ^ (2 * n)",
                    "id": "2.19",
                    "prevs": [
                        "2.8",
                        "2.18"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, ¬(n = 0) ⊢ cos x ≤ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + 1 / of_nat (fact (2 * n)) * x ^ (2 * n)"
                },
                {
                    "args": "cos x ≤ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 ^ n / of_nat (fact (2 * n)) * x ^ (2 * n)",
                    "id": "2.20",
                    "prevs": [
                        "2.7",
                        "2.19"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, ¬(n = 0) ⊢ cos x ≤ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 ^ n / of_nat (fact (2 * n)) * x ^ (2 * n)"
                },
                {
                    "args": "cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))",
                    "id": "2.21",
                    "prevs": [
                        "2.3",
                        "2.20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, ¬(n = 0) ⊢ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "",
                    "id": "2.22",
                    "prevs": [
                        "2.0",
                        "2.21"
                    ],
                    "rule": "intros",
                    "th": "even n ⊢ ¬(n = 0) ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "classical_cases",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n ⊢ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ even n ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))"
                }
            ],
            "prop": "even n ⟶ cos x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))",
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "1.0"
                    ],
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing_natseg"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_div_1"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "apply_backward_step",
                    "theorem": "cos_ubound"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "apply_forward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "2.1"
                    ],
                    "goal_id": "2.2",
                    "method_name": "apply_forward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "2.1",
                        "2.2"
                    ],
                    "goal_id": "2.3",
                    "method_name": "apply_forward_step",
                    "param_f": "",
                    "theorem": "sum_clauses_right"
                },
                {
                    "fact_ids": [
                        "2.3"
                    ],
                    "goal_id": "2.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.4",
                    "method_name": "apply_forward_step",
                    "param_n": "n-1",
                    "param_x": "x",
                    "theorem": "taylor_cos"
                },
                {
                    "goal": "-1 ^ n = (1::real)",
                    "goal_id": "2.5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "2.7"
                    ],
                    "goal_id": "2.8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. 1/a * b = b /a",
                    "goal_id": "2.8",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.8",
                    "method_name": "introduction",
                    "names": "a,b"
                },
                {
                    "goal_id": "2.8.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "2.8.2",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "2.8"
                    ],
                    "goal_id": "2.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal": "(2 * (n - 1) + 2) = 2 * n",
                    "goal_id": "2.9",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.9",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.9",
                        "2.4"
                    ],
                    "goal_id": "2.10",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "abs x ^ (2 * n) = x ^ (2 * n)",
                    "goal_id": "2.11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_eq_eq"
                },
                {
                    "goal": "even (2 * n)",
                    "goal_id": "2.11",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.11",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "2.11"
                    ],
                    "goal_id": "2.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "2.12",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "2.12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_abs"
                },
                {
                    "fact_ids": [
                        "2.15",
                        "2.10"
                    ],
                    "goal_id": "2.16",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "!x::real. !y. !z. abs (x-y) <= z --> x <= y + z",
                    "goal_id": "2.17",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.17",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2.17"
                    ],
                    "goal_id": "2.18",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "cos_poly_lower_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "odd n",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd n ⊢ odd n"
                },
                {
                    "args": "not_even",
                    "id": "1",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "odd n ⊢ ¬(even n)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd n ⊢ n = 0 ⟶ even n"
                },
                {
                    "args": "n = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "trueI",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "even_def_1, even 0",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, n = 0 ⊢ even 0"
                },
                {
                    "args": "even n",
                    "id": "2.3",
                    "prevs": [
                        "2.0",
                        "2.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, n = 0 ⊢ even n"
                },
                {
                    "args": "",
                    "id": "2.4",
                    "prevs": [
                        "2.0",
                        "2.3"
                    ],
                    "rule": "intros",
                    "th": "odd n ⊢ n = 0 ⟶ even n"
                },
                {
                    "args": "double_neg, ¬¬(n = 0) ⟶ ¬¬(even n)",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ ¬¬(n = 0) ⟶ ¬¬(even n)"
                },
                {
                    "args": "contrapositive",
                    "id": "4",
                    "prevs": [
                        "1",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n ⊢ ¬(n = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "5",
                    "prevs": [
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n ⊢ 0 < n"
                },
                {
                    "args": "lt_imp_le",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n ⊢ 0 ≤ n"
                },
                {
                    "args": "sum_clauses_right, {f: λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)}",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd n ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) = sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 ^ n / of_nat (fact (2 * n)) * x ^ (2 * n)"
                },
                {
                    "args": "taylor_cos, {n: n - 1, x: x}",
                    "id": "8",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * (n - 1) + 2) / of_nat (fact (2 * (n - 1) + 2))"
                },
                {
                    "args": "real_pow_one, -((1::real) ^ n) = -1",
                    "id": "9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ -((1::real) ^ n) = -1"
                },
                {
                    "args": "if_not_P, (if even n then (1::real) ^ n else -(1 ^ n)) = -1",
                    "id": "10",
                    "prevs": [
                        "9",
                        "1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ (if even n then (1::real) ^ n else -(1 ^ n)) = -1"
                },
                {
                    "args": "real_pow_neg, -(1::real) ^ n = -1",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ -(1::real) ^ n = -1"
                },
                {
                    "args": "2 * (n - 1) + 2 = 2 * n",
                    "id": "12",
                    "prevs": [
                        "5"
                    ],
                    "rule": "z3",
                    "th": "odd n ⊢ 2 * (n - 1) + 2 = 2 * n"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "12",
                        "8"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n ⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ abs x ^ (2 * n) / of_nat (fact (2 * n))"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd n ⊢ ∀a. ∀b. -1 / a * b = -(b / a)"
                },
                {
                    "args": "a, real",
                    "id": "14.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR a"
                },
                {
                    "args": "b, real",
                    "id": "14.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR b"
                },
                {
                    "args": "-1 * real_inverse a * b = -(b * real_inverse a)",
                    "id": "14.2",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ -1 * real_inverse a * b = -(b * real_inverse a)"
                },
                {
                    "args": "real_divide_def, -1 / a * b = -(b / a)",
                    "id": "14.3",
                    "prevs": [
                        "14.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ -1 / a * b = -(b / a)"
                },
                {
                    "args": "",
                    "id": "14.4",
                    "prevs": [
                        "14.0",
                        "14.1",
                        "14.3"
                    ],
                    "rule": "intros",
                    "th": "odd n ⊢ ∀a. ∀b. -1 / a * b = -(b / a)"
                },
                {
                    "args": "even_double, {n: n}",
                    "id": "15",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * n)"
                },
                {
                    "args": "real_abs_abs, abs (abs x) = abs x",
                    "id": "16",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ abs (abs x) = abs x"
                },
                {
                    "args": "disjI2, {A: 2 * n = 0, B: abs (abs x) = abs x}",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd n ⊢ 2 * n = 0 ∨ abs (abs x) = abs x"
                },
                {
                    "args": "if_P, if even (2 * n) then 2 * n = 0 ∨ abs (abs x) = abs x else abs x = x",
                    "id": "18",
                    "prevs": [
                        "17",
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ if even (2 * n) then 2 * n = 0 ∨ abs (abs x) = abs x else abs x = x"
                },
                {
                    "args": "real_pow_eq_eq, abs x ^ (2 * n) = x ^ (2 * n)",
                    "id": "19",
                    "prevs": [
                        "18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n ⊢ abs x ^ (2 * n) = x ^ (2 * n)"
                },
                {
                    "args": "",
                    "id": "20",
                    "prevs": [
                        "19",
                        "13"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n ⊢ abs (cos x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))) ≤ x ^ (2 * n) / of_nat (fact (2 * n))"
                },
                {
                    "args": "∀x::real. ∀y. ∀z. abs (x - y) ≤ z ⟶ y + -z ≤ x",
                    "id": "21",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀x::real. ∀y. ∀z. abs (x - y) ≤ z ⟶ y + -z ≤ x"
                },
                {
                    "args": "cos x, sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)), x ^ (2 * n) / of_nat (fact (2 * n))",
                    "id": "22",
                    "prevs": [
                        "21",
                        "20"
                    ],
                    "rule": "apply_fact_for",
                    "th": "odd n ⊢ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -(x ^ (2 * n) / of_nat (fact (2 * n))) ≤ cos x"
                },
                {
                    "args": "sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 / of_nat (fact (2 * n)) * x ^ (2 * n) ≤ cos x",
                    "id": "23",
                    "prevs": [
                        "14",
                        "22"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n ⊢ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 / of_nat (fact (2 * n)) * x ^ (2 * n) ≤ cos x"
                },
                {
                    "args": "sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 ^ n / of_nat (fact (2 * n)) * x ^ (2 * n) ≤ cos x",
                    "id": "24",
                    "prevs": [
                        "11",
                        "23"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n ⊢ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) + -1 ^ n / of_nat (fact (2 * n)) * x ^ (2 * n) ≤ cos x"
                },
                {
                    "args": "sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) ≤ cos x",
                    "id": "25",
                    "prevs": [
                        "7",
                        "24"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) ≤ cos x"
                },
                {
                    "args": "",
                    "id": "26",
                    "prevs": [
                        "0",
                        "25"
                    ],
                    "rule": "intros",
                    "th": "⊢ odd n ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) ≤ cos x"
                }
            ],
            "prop": "odd n ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i)) ≤ cos x",
            "steps": [
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "goal": "~(n=0)",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "fact_ids": [
                        "4"
                    ],
                    "goal_id": "5",
                    "method_name": "apply_forward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "5",
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. -1 ^ i / of_nat (fact (2 * i)) * x ^ (2 * i))",
                    "theorem": "sum_clauses_right"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "8",
                    "method_name": "apply_forward_step",
                    "param_n": "n-1",
                    "param_x": "x",
                    "theorem": "taylor_cos"
                },
                {
                    "goal": "-(1::real) ^ n = -1",
                    "goal_id": "9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "12",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal": "2 * (n - 1) + 2 = 2 * n",
                    "goal_id": "12",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "12",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "12",
                        "8"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "∀a. ∀b. -1 / a * b = -(b / a)",
                    "goal_id": "14",
                    "method_name": "cut"
                },
                {
                    "goal_id": "14",
                    "method_name": "introduction",
                    "names": "a,b"
                },
                {
                    "goal_id": "14.2",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "14.2",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "abs x ^ (2 * n) = x ^ (2 * n)",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_eq_eq"
                },
                {
                    "goal": "even (2 * n)",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal_id": "16",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI2"
                },
                {
                    "goal_id": "16",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_abs_abs"
                },
                {
                    "fact_ids": [
                        "19",
                        "13"
                    ],
                    "goal_id": "20",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "∀x::real. ∀y. ∀z. abs (x - y) ≤ z ⟶ y + -z ≤ x",
                    "goal_id": "21",
                    "method_name": "cut"
                },
                {
                    "goal_id": "21",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "21"
                    ],
                    "goal_id": "22",
                    "method_name": "apply_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_rewrite"
            ],
            "name": "sin_pi_2",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "pi / 2 - (x + pi / 2) = -x",
                    "id": "0",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ pi / 2 - (x + pi / 2) = -x"
                },
                {
                    "args": "cos_neg, cos (-x) = cos x",
                    "id": "1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (-x) = cos x"
                },
                {
                    "args": "cos (pi / 2 - (x + pi / 2)) = cos x",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ cos (pi / 2 - (x + pi / 2)) = cos x"
                },
                {
                    "args": "sin_cos, sin (x + pi / 2) = cos x",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ sin (x + pi / 2) = cos x"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "intros",
                    "th": "⊢ sin (x + pi / 2) = cos x"
                }
            ],
            "prop": "sin (x + pi / 2) = cos x",
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sin_cos"
                },
                {
                    "goal": "pi / 2 - (x + pi / 2) = -x",
                    "goal_id": "0",
                    "method_name": "cut"
                },
                {
                    "goal_id": "0",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cos_neg"
                }
            ],
            "ty": "thm",
            "vars": {
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "sin_derivatives",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_derivative_sin_compose, {f: λx1. x1 + of_nat n * pi / 2, x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x) ⟶ real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x = cos (x + of_nat n * pi / 2) * real_derivative (λx1. x1 + of_nat n * pi / 2) x"
                },
                {
                    "args": "real_differentiable_id, {net: atreal x}",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. x1) (atreal x)"
                },
                {
                    "args": "real_differentiable_const, {c: of_nat n * pi / 2, net: atreal x}",
                    "id": "2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable (λx1. of_nat n * pi / 2) (atreal x)"
                },
                {
                    "args": "real_differentiable_add",
                    "id": "3",
                    "prevs": [
                        "1",
                        "2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "0",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x = cos (x + of_nat n * pi / 2) * real_derivative (λx1. x1 + of_nat n * pi / 2) x"
                },
                {
                    "args": "has_real_derivative_id, {net: atreal x}",
                    "id": "5",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. x1) 1 (atreal x)"
                },
                {
                    "args": "has_real_derivative_const, {c: of_nat n * pi / 2, net: atreal x}",
                    "id": "6",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. of_nat n * pi / 2) 0 (atreal x)"
                },
                {
                    "args": "has_real_derivative_add",
                    "id": "7",
                    "prevs": [
                        "5",
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ has_real_derivative (λx1. x1 + of_nat n * pi / 2) (1 + 0) (atreal x)"
                },
                {
                    "args": "has_real_derivative_derivative",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ real_derivative (λx1. x1 + of_nat n * pi / 2) x = 1 + 0"
                },
                {
                    "args": "",
                    "id": "9",
                    "prevs": [
                        "8",
                        "4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x = cos (x + of_nat n * pi / 2) * (1 + 0)"
                },
                {
                    "args": "real_add_rid",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x = cos (x + of_nat n * pi / 2) * 1"
                },
                {
                    "args": "real_mul_rid",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x = cos (x + of_nat n * pi / 2)"
                },
                {
                    "args": "x + (of_nat n * pi + pi) / 2 = x + of_nat n * pi / 2 + pi / 2",
                    "id": "12",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ x + (of_nat n * pi + pi) / 2 = x + of_nat n * pi / 2 + pi / 2"
                },
                {
                    "args": "sin (x + (of_nat n * pi + pi) / 2) = sin (x + of_nat n * pi / 2 + pi / 2)",
                    "id": "13",
                    "prevs": [
                        "12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sin (x + (of_nat n * pi + pi) / 2) = sin (x + of_nat n * pi / 2 + pi / 2)"
                },
                {
                    "args": "sin_pi_2, sin (x + (of_nat n * pi + pi) / 2) = cos (x + of_nat n * pi / 2)",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ sin (x + (of_nat n * pi + pi) / 2) = cos (x + of_nat n * pi / 2)"
                },
                {
                    "args": "eq_sym_eq",
                    "id": "15",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ cos (x + of_nat n * pi / 2) = real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x"
                },
                {
                    "args": "has_real_derivative_differentiable, {f: λx1. sin (x1 + of_nat n * pi / 2), x: x}",
                    "id": "16",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x) (atreal x) ⟷ real_differentiable (λx1. sin (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "real_differentiable_compose_atreal, {g: sin}",
                    "id": "17",
                    "prevs": [
                        "3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable sin (atreal (x + of_nat n * pi / 2)) ⟶ real_differentiable (sin ∘ (λx1. x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "comp_fun_def",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ real_differentiable sin (atreal (x + of_nat n * pi / 2)) ⟶ real_differentiable (λx1. sin (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "real_differentiable_at_sin, {x: x + of_nat n * pi / 2}",
                    "id": "19",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ real_differentiable sin (atreal (x + of_nat n * pi / 2))"
                },
                {
                    "args": "",
                    "id": "20",
                    "prevs": [
                        "18",
                        "19"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ real_differentiable (λx1. sin (x1 + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x) (atreal x)",
                    "id": "21",
                    "prevs": [
                        "16",
                        "20"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) x) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (cos (x + of_nat n * pi / 2)) (atreal x)",
                    "id": "22",
                    "prevs": [
                        "15",
                        "21"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (cos (x + of_nat n * pi / 2)) (atreal x)"
                },
                {
                    "args": "has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + pi) / 2)) (atreal x)",
                    "id": "23",
                    "prevs": [
                        "14",
                        "22"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + pi) / 2)) (atreal x)"
                },
                {
                    "args": "real_mul_lid, has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + 1 * pi) / 2)) (atreal x)",
                    "id": "24",
                    "prevs": [
                        "23"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + 1 * pi) / 2)) (atreal x)"
                },
                {
                    "args": "real_one_def, has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + of_nat 1 * pi) / 2)) (atreal x)",
                    "id": "25",
                    "prevs": [
                        "24"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n * pi + of_nat 1 * pi) / 2)) (atreal x)"
                },
                {
                    "args": "real_add_rdistrib, has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n + of_nat 1) * pi / 2)) (atreal x)",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + (of_nat n + of_nat 1) * pi / 2)) (atreal x)"
                },
                {
                    "args": "real_of_nat_add, has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + of_nat (n + 1) * pi / 2)) (atreal x)",
                    "id": "27",
                    "prevs": [
                        "26"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + of_nat (n + 1) * pi / 2)) (atreal x)"
                },
                {
                    "args": "",
                    "id": "28",
                    "prevs": [
                        "27"
                    ],
                    "rule": "intros",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) (sin (x + of_nat (n + 1) * pi / 2)) (atreal x)"
                }
            ],
            "prop": [
                "has_real_derivative (λx1. sin (x1 + of_nat n * pi / 2)) ",
                "  (sin (x + of_nat (n + 1) * pi / 2)) ",
                "  (atreal x)"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. x1 + of_nat n * pi / 2)",
                    "param_x": "x",
                    "theorem": "real_derivative_sin_compose"
                },
                {
                    "goal": "real_differentiable (λx1. x1 + of_nat n * pi / 2) (atreal x)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_add"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_id"
                },
                {
                    "goal_id": "2",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_const"
                },
                {
                    "fact_ids": [
                        "0",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "real_derivative (λx1. x1 + of_nat n * pi / 2) x = 1 + 0",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "has_real_derivative_derivative"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "has_real_derivative_add"
                },
                {
                    "goal_id": "5",
                    "method_name": "apply_backward_step",
                    "theorem": "has_real_derivative_id"
                },
                {
                    "goal_id": "6",
                    "method_name": "apply_backward_step",
                    "theorem": "has_real_derivative_const"
                },
                {
                    "fact_ids": [
                        "8",
                        "4"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rid"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_of_nat_add"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rdistrib"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "goal": "(sin (x + (of_nat n * pi + pi) / 2)) = cos (x + of_nat n * pi / 2)",
                    "goal_id": "12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "12",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "sin_pi_2"
                },
                {
                    "goal": "x + (of_nat n * pi + pi) / 2 = x + of_nat n * pi / 2 + pi / 2",
                    "goal_id": "12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "12",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "14"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal_id": "15",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "eq_sym_eq"
                },
                {
                    "fact_ids": [
                        "15"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "16",
                    "method_name": "apply_forward_step",
                    "param_f": "(λx1. sin (x1 + of_nat n * pi / 2))",
                    "param_x": "x",
                    "theorem": "has_real_derivative_differentiable"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "17",
                    "method_name": "apply_forward_step",
                    "param_g": "sin",
                    "theorem": "real_differentiable_compose_atreal"
                },
                {
                    "fact_ids": [
                        "17"
                    ],
                    "goal_id": "18",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "comp_fun_def"
                },
                {
                    "fact_ids": [
                        "18"
                    ],
                    "goal_id": "19",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "19",
                    "method_name": "apply_backward_step",
                    "theorem": "real_differentiable_at_sin"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "taylor_sin_raw",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "real_taylor, {B: (1::real), f: λi. λx1. sin (x1 + of_nat i * pi / 2), n: n, s: (univ::real set)}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ is_realinterval univ ⟶ (∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)) ⟶ (∀x. x ∈ univ ⟶ abs (sin (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (sin (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "is_realinterval_univ",
                    "id": "1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ is_realinterval univ"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "0",
                        "1"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)) ⟶ (∀x. x ∈ univ ⟶ abs (sin (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (sin (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)"
                },
                {
                    "args": "i, nat",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "x, real",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR x"
                },
                {
                    "args": "x ∈ univ",
                    "id": "3.2",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ∈ univ ⊢ x ∈ univ"
                },
                {
                    "args": "i ≤ n",
                    "id": "3.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i ≤ n ⊢ i ≤ n"
                },
                {
                    "args": "sin_derivatives, {n: i, x: x}",
                    "id": "3.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (atreal x)"
                },
                {
                    "args": "has_real_derivative_atreal_within, {f: λx1. sin (x1 + of_nat i * pi / 2), f1: sin (x + of_nat (i + 1) * pi / 2), s: (univ::real set), x: x}",
                    "id": "3.5",
                    "prevs": [
                        "3.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "i ≤ n, x ∈ univ ⊢ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)"
                },
                {
                    "args": "",
                    "id": "3.6",
                    "prevs": [
                        "3.0",
                        "3.1",
                        "3.2",
                        "3.3",
                        "3.5"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ)"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ (∀x. x ∈ univ ⟶ abs (sin (x + of_nat (n + 1) * pi / 2)) ≤ 1) ⟶ (∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (sin (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1)))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀x. x ∈ univ ⟶ abs (sin (x + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "y, real",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR y"
                },
                {
                    "args": "y ∈ univ",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "y ∈ univ ⊢ y ∈ univ"
                },
                {
                    "args": "sin_bound, {x: y + of_nat (n + 1) * pi / 2}",
                    "id": "5.2",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (sin (y + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "",
                    "id": "5.3",
                    "prevs": [
                        "5.0",
                        "5.1",
                        "5.2"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀y. y ∈ univ ⟶ abs (sin (y + of_nat (n + 1) * pi / 2)) ≤ 1"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "4",
                        "5"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ ∀w. ∀z. w ∈ univ ⟶ z ∈ univ ⟶ abs (sin (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (w + of_nat i * pi / 2) * (z - w) ^ i / of_nat (fact i))) ≤ 1 * abs (z - w) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "(0::real)",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "⊢ ∀z. (0::real) ∈ univ ⟶ z ∈ univ ⟶ abs (sin (z + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (0 + of_nat i * pi / 2) * (z - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (z - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "x",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "forall_elim_gen",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin (x + of_nat 0 * pi / 2) - sum ({0..n}) (λi. sin (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_zero_def",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin (x + 0 * pi / 2) - sum ({0..n}) (λi. sin (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ 1 * abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_mul_lid",
                    "id": "10",
                    "prevs": [
                        "9"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin (x + 0 * pi / 2) - sum ({0..n}) (λi. sin (0 + of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_add_lid",
                    "id": "11",
                    "prevs": [
                        "10"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin (x + 0 * pi / 2) - sum ({0..n}) (λi. sin (of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "x + 0 * pi / 2 = x",
                    "id": "12",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ x + 0 * pi / 2 = x"
                },
                {
                    "args": "",
                    "id": "13",
                    "prevs": [
                        "12",
                        "11"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin x - sum ({0..n}) (λi. sin (of_nat i * pi / 2) * (x - 0) ^ i / of_nat (fact i))) ≤ abs (x - 0) ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "real_sub_rzero",
                    "id": "14",
                    "prevs": [
                        "13"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin x - sum ({0..n}) (λi. sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i))) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "",
                    "id": "15",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "i, nat",
                    "id": "15.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "",
                    "id": "15.1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ odd i ⟶ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "odd i",
                    "id": "15.1.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd i ⊢ odd i"
                },
                {
                    "args": "odd_exists",
                    "id": "15.1.1",
                    "prevs": [
                        "15.1.0"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd i ⊢ ∃m. i = Suc (2 * m)"
                },
                {
                    "args": "m, nat",
                    "id": "15.1.2",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR m"
                },
                {
                    "args": "i = Suc (2 * m)",
                    "id": "15.1.3",
                    "prevs": [],
                    "rule": "assume",
                    "th": "i = Suc (2 * m) ⊢ i = Suc (2 * m)"
                },
                {
                    "args": "eq_refl, {x: m * 2 + 1}",
                    "id": "15.1.4",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ m * 2 + 1 = m * 2 + 1"
                },
                {
                    "args": "(1::nat) < 2",
                    "id": "15.1.5",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (1::nat) < 2"
                },
                {
                    "args": "div_uniq",
                    "id": "15.1.6",
                    "prevs": [
                        "15.1.4",
                        "15.1.5"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd i, i = Suc (2 * m) ⊢ (m * 2 + 1) DIV 2 = m"
                },
                {
                    "args": "mult_comm, (2 * m + 1) DIV 2 = m",
                    "id": "15.1.7",
                    "prevs": [
                        "15.1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd i, i = Suc (2 * m) ⊢ (2 * m + 1) DIV 2 = m"
                },
                {
                    "args": "add_1_right, Suc (2 * m) DIV 2 = m",
                    "id": "15.1.8",
                    "prevs": [
                        "15.1.7"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "odd i, i = Suc (2 * m) ⊢ Suc (2 * m) DIV 2 = m"
                },
                {
                    "args": "of_nat (2 * m + 1) * pi / 2 = of_nat m * pi + pi / 2",
                    "id": "15.1.9",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ of_nat (2 * m + 1) * pi / 2 = of_nat m * pi + pi / 2"
                },
                {
                    "args": "add_1_right, of_nat (Suc (2 * m)) * pi / 2 = of_nat m * pi + pi / 2",
                    "id": "15.1.10",
                    "prevs": [
                        "15.1.9"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "odd i, i = Suc (2 * m) ⊢ of_nat (Suc (2 * m)) * pi / 2 = of_nat m * pi + pi / 2"
                },
                {
                    "args": "cos_npi, cos (of_nat m * pi) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))",
                    "id": "15.1.11",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ cos (of_nat m * pi) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))"
                },
                {
                    "args": "sin_pi_2, sin (of_nat m * pi + pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))",
                    "id": "15.1.12",
                    "prevs": [
                        "15.1.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd i, i = Suc (2 * m) ⊢ sin (of_nat m * pi + pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))"
                },
                {
                    "args": "sin (of_nat (Suc (2 * m)) * pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))",
                    "id": "15.1.13",
                    "prevs": [
                        "15.1.10",
                        "15.1.12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd i, i = Suc (2 * m) ⊢ sin (of_nat (Suc (2 * m)) * pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ m * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))"
                },
                {
                    "args": "sin (of_nat (Suc (2 * m)) * pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ (Suc (2 * m) DIV 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))",
                    "id": "15.1.14",
                    "prevs": [
                        "15.1.8",
                        "15.1.13"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd i, i = Suc (2 * m) ⊢ sin (of_nat (Suc (2 * m)) * pi / 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m))) = -1 ^ (Suc (2 * m) DIV 2) * x ^ Suc (2 * m) / of_nat (fact (Suc (2 * m)))"
                },
                {
                    "args": "sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = -1 ^ (i DIV 2) * x ^ i / of_nat (fact i)",
                    "id": "15.1.15",
                    "prevs": [
                        "15.1.3",
                        "15.1.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd i, i = Suc (2 * m) ⊢ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = -1 ^ (i DIV 2) * x ^ i / of_nat (fact i)"
                },
                {
                    "args": "if_P, sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)",
                    "id": "15.1.16",
                    "prevs": [
                        "15.1.15",
                        "15.1.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd i, i = Suc (2 * m) ⊢ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "∃m. i = Suc (2 * m)",
                    "id": "15.1.17",
                    "prevs": [
                        "15.1.0",
                        "15.1.1",
                        "15.1.2",
                        "15.1.3",
                        "15.1.16"
                    ],
                    "rule": "intros",
                    "th": "⊢ odd i ⟶ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "15.2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ¬(odd i) ⟶ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "¬(odd i)",
                    "id": "15.2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "¬(odd i) ⊢ ¬(odd i)"
                },
                {
                    "args": "not_odd, even i",
                    "id": "15.2.1",
                    "prevs": [
                        "15.2.0"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "¬(odd i) ⊢ even i"
                },
                {
                    "args": "of_nat i * pi / 2 = of_nat i * (pi / 2)",
                    "id": "15.2.2",
                    "prevs": [],
                    "rule": "real_norm",
                    "th": "⊢ of_nat i * pi / 2 = of_nat i * (pi / 2)"
                },
                {
                    "args": "conjI",
                    "id": "15.2.3",
                    "prevs": [
                        "15.2.1",
                        "15.2.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "¬(odd i) ⊢ even i ∧ of_nat i * pi / 2 = of_nat i * (pi / 2)"
                },
                {
                    "args": "exI, {P: λn. even n ∧ of_nat i * pi / 2 = of_nat n * (pi / 2), a: i}",
                    "id": "15.2.4",
                    "prevs": [
                        "15.2.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(odd i) ⊢ ∃a1. even a1 ∧ of_nat i * pi / 2 = of_nat a1 * (pi / 2)"
                },
                {
                    "args": "disjI1, {A: ∃n. even n ∧ of_nat i * pi / 2 = of_nat n * (pi / 2), B: ∃n. even n ∧ of_nat i * pi / 2 = -(of_nat n * (pi / 2))}",
                    "id": "15.2.5",
                    "prevs": [
                        "15.2.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(odd i) ⊢ (∃n. even n ∧ of_nat i * pi / 2 = of_nat n * (pi / 2)) ∨ (∃n. even n ∧ of_nat i * pi / 2 = -(of_nat n * (pi / 2)))"
                },
                {
                    "args": "sin_zero, sin (of_nat i * pi / 2) = 0",
                    "id": "15.2.6",
                    "prevs": [
                        "15.2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(odd i) ⊢ sin (of_nat i * pi / 2) = 0"
                },
                {
                    "args": "eq_refl, {x: (0::real)}",
                    "id": "15.2.7",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) = 0"
                },
                {
                    "args": "disjI1, {A: (0::real) = 0, B: of_nat (fact i) = (0::real)}",
                    "id": "15.2.8",
                    "prevs": [
                        "15.2.7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "¬(odd i) ⊢ (0::real) = 0 ∨ of_nat (fact i) = (0::real)"
                },
                {
                    "args": "real_div_eq_0, 0 / of_nat (fact i) = 0",
                    "id": "15.2.9",
                    "prevs": [
                        "15.2.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(odd i) ⊢ 0 / of_nat (fact i) = 0"
                },
                {
                    "args": "real_mul_lzero, 0 * x ^ i / of_nat (fact i) = 0",
                    "id": "15.2.10",
                    "prevs": [
                        "15.2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(odd i) ⊢ 0 * x ^ i / of_nat (fact i) = 0"
                },
                {
                    "args": "sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = 0",
                    "id": "15.2.11",
                    "prevs": [
                        "15.2.6",
                        "15.2.10"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "¬(odd i) ⊢ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = 0"
                },
                {
                    "args": "if_not_P, sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)",
                    "id": "15.2.12",
                    "prevs": [
                        "15.2.11",
                        "15.2.0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "¬(odd i) ⊢ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "15.2.13",
                    "prevs": [
                        "15.2.0",
                        "15.2.12"
                    ],
                    "rule": "intros",
                    "th": "⊢ ¬(odd i) ⟶ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "classical_cases",
                    "id": "15.3",
                    "prevs": [
                        "15.1",
                        "15.2"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "15.4",
                    "prevs": [
                        "15.0",
                        "15.3"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)"
                },
                {
                    "args": "",
                    "id": "16",
                    "prevs": [
                        "15",
                        "14"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ (0::real) ∈ univ ⟶ x ∈ univ ⟶ abs (sin x - sum ({0..n}) (λi. if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "member_univ, {x: (0::real)}",
                    "id": "17",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ (0::real) ∈ univ"
                },
                {
                    "args": "member_univ, {x: x}",
                    "id": "18",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ x ∈ univ"
                },
                {
                    "args": "",
                    "id": "19",
                    "prevs": [
                        "16",
                        "17",
                        "18"
                    ],
                    "rule": "apply_fact",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λi. if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                },
                {
                    "args": "",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λk. if odd k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ abs x ^ (n + 1) / of_nat (fact (n + 1))"
                }
            ],
            "prop": [
                "abs ",
                "  (sin x - ",
                "   sum ({0..n}) (λk. if odd k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ ",
                "abs x ^ (n + 1) / of_nat (fact (n + 1))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_B": "(1::real)",
                    "param_f": "(%i. λx1. sin (x1 + of_nat i * pi / 2))",
                    "param_n": "n",
                    "param_s": "(univ::real set)",
                    "theorem": "real_taylor"
                },
                {
                    "goal": "is_realinterval univ",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "apply_backward_step",
                    "theorem": "is_realinterval_univ"
                },
                {
                    "fact_ids": [
                        "0",
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀i. ∀x. x ∈ univ ⟶ i ≤ n ⟶ has_real_derivative (λx1. sin (x1 + of_nat i * pi / 2)) (sin (x + of_nat (i + 1) * pi / 2)) (within (atreal x) univ))",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction",
                    "names": "i,x"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "has_real_derivative_atreal_within"
                },
                {
                    "goal_id": "3.4",
                    "method_name": "apply_backward_step",
                    "theorem": "sin_derivatives"
                },
                {
                    "fact_ids": [
                        "2",
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "apply_fact"
                },
                {
                    "goal": "(∀x. x ∈ univ ⟶ abs (sin (x + of_nat (n + 1) * pi / 2)) ≤ 1)",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "y"
                },
                {
                    "goal_id": "5.2",
                    "method_name": "apply_backward_step",
                    "theorem": "sin_bound"
                },
                {
                    "fact_ids": [
                        "4",
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_fact"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "forall_elim",
                    "s": "(0::real)"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "forall_elim",
                    "s": "x"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "real_zero_def"
                },
                {
                    "fact_ids": [
                        "9"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                },
                {
                    "fact_ids": [
                        "10"
                    ],
                    "goal_id": "11",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_add_lid"
                },
                {
                    "fact_ids": [
                        "11"
                    ],
                    "goal": "x + 0 * pi / 2 = x",
                    "goal_id": "12",
                    "method_name": "cut"
                },
                {
                    "goal_id": "12",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "12",
                        "11"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "13"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_sub_rzero"
                },
                {
                    "goal": "∀i. sin (of_nat i * pi / 2) * x ^ i / of_nat (fact i) = (if odd i then -1 ^ (i DIV 2) * x ^ i / of_nat (fact i) else 0)",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "case": "odd i",
                    "goal_id": "15.1",
                    "method_name": "cases"
                },
                {
                    "goal_id": "15.1",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.1.0"
                    ],
                    "goal_id": "15.1.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "15.1.0"
                    ],
                    "goal_id": "15.1.1",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "odd_exists"
                },
                {
                    "fact_ids": [
                        "15.1.1"
                    ],
                    "goal_id": "15.1.2",
                    "method_name": "exists_elim",
                    "names": "m"
                },
                {
                    "fact_ids": [
                        "15.1.3"
                    ],
                    "goal_id": "15.1.4",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "Suc (2 * m) DIV 2 = m",
                    "goal_id": "15.1.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "15.1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_comm"
                },
                {
                    "goal_id": "15.1.4",
                    "method_name": "apply_backward_step",
                    "param_r": "(1::nat)",
                    "theorem": "div_uniq"
                },
                {
                    "goal_id": "15.1.4",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "goal_id": "15.1.5",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "15.1.8"
                    ],
                    "goal_id": "15.1.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "(of_nat (Suc (2 * m)) * pi / 2) = of_nat m * pi + pi / 2",
                    "goal_id": "15.1.9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.1.9",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "15.1.9",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "15.1.10"
                    ],
                    "goal_id": "15.1.11",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "15.1.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sin_pi_2"
                },
                {
                    "goal_id": "15.1.11",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "cos_npi"
                },
                {
                    "goal_id": "15.2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "15.2.0"
                    ],
                    "goal_id": "15.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal": "sin (of_nat i * pi / 2) = 0",
                    "goal_id": "15.2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sin_zero"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "apply_backward_step",
                    "theorem": "conjI"
                },
                {
                    "goal_id": "15.2.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "not_odd"
                },
                {
                    "goal_id": "15.2.2",
                    "method_name": "real_norm"
                },
                {
                    "fact_ids": [
                        "15.2.6"
                    ],
                    "goal_id": "15.2.7",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "15.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lzero"
                },
                {
                    "goal_id": "15.2.7",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_div_eq_0"
                },
                {
                    "goal_id": "15.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "disjI1"
                },
                {
                    "goal_id": "15.2.7",
                    "method_name": "apply_backward_step",
                    "theorem": "eq_refl"
                },
                {
                    "fact_ids": [
                        "15",
                        "14"
                    ],
                    "goal_id": "16",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "16"
                    ],
                    "goal_id": "17",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "17",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                },
                {
                    "goal_id": "18",
                    "method_name": "apply_backward_step",
                    "theorem": "member_univ"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward"
            ],
            "name": "taylor_sin",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "taylor_sin_raw, {n: 2 * n + 2, x: x}",
                    "id": "0",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (sin x - sum ({0..2 * n + 2}) (λk. if odd k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ abs x ^ (2 * n + 2 + 1) / of_nat (fact (2 * n + 2 + 1))"
                },
                {
                    "args": "",
                    "id": "1",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀f. sum ({0..2 * n + 2}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "f, nat ⇒ real",
                    "id": "1.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR f"
                },
                {
                    "args": "∀a::nat. a + 2 = a + 1 + 1",
                    "id": "1.1",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a::nat. a + 2 = a + 1 + 1"
                },
                {
                    "args": "add_1_right, ∀a. a + 2 = Suc (a + 1)",
                    "id": "1.2",
                    "prevs": [
                        "1.1"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "⊢ ∀a. a + 2 = Suc (a + 1)"
                },
                {
                    "args": "le_0, {n: Suc (2 * n + 1)}",
                    "id": "1.3",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ 0 ≤ Suc (2 * n + 1)"
                },
                {
                    "args": "add_1_right, 2 * n + 1 = Suc (2 * n)",
                    "id": "1.4",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 2 * n + 1 = Suc (2 * n)"
                },
                {
                    "args": "exI, {P: λm. 2 * n + 1 = Suc (2 * m), a: n}",
                    "id": "1.5",
                    "prevs": [
                        "1.4"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. 2 * n + 1 = Suc (2 * a1)"
                },
                {
                    "args": "odd_exists, odd (2 * n + 1)",
                    "id": "1.6",
                    "prevs": [
                        "1.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ odd (2 * n + 1)"
                },
                {
                    "args": "double_neg, ¬¬(odd (2 * n + 1))",
                    "id": "1.7",
                    "prevs": [
                        "1.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬¬(odd (2 * n + 1))"
                },
                {
                    "args": "odd_def_2, ¬(odd (Suc (2 * n + 1)))",
                    "id": "1.8",
                    "prevs": [
                        "1.7"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(odd (Suc (2 * n + 1)))"
                },
                {
                    "args": "real_add_rid, sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + 0 = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "id": "1.9",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + 0 = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "if_not_P, sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + (if odd (Suc (2 * n + 1)) then f (Suc (2 * n + 1)) else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "id": "1.10",
                    "prevs": [
                        "1.9",
                        "1.8"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + (if odd (Suc (2 * n + 1)) then f (Suc (2 * n + 1)) else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "if_P, (if 0 ≤ Suc (2 * n + 1) then sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + (if odd (Suc (2 * n + 1)) then f (Suc (2 * n + 1)) else 0) else sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "id": "1.11",
                    "prevs": [
                        "1.10",
                        "1.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if 0 ≤ Suc (2 * n + 1) then sum ({0..2 * n + 1}) (λk. if odd k then f k else 0) + (if odd (Suc (2 * n + 1)) then f (Suc (2 * n + 1)) else 0) else sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "sum_Suc_natseg, sum ({0..Suc (2 * n + 1)}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "id": "1.12",
                    "prevs": [
                        "1.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ sum ({0..Suc (2 * n + 1)}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "sum ({0..2 * n + 2}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "id": "1.13",
                    "prevs": [
                        "1.2",
                        "1.12"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ sum ({0..2 * n + 2}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "",
                    "id": "1.14",
                    "prevs": [
                        "1.0",
                        "1.13"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀f. sum ({0..2 * n + 2}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [
                        "1",
                        "0"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (sin x - sum ({0..2 * n + 1}) (λk. if odd k then -1 ^ (k DIV 2) * x ^ k / of_nat (fact k) else 0)) ≤ abs x ^ (2 * n + 2 + 1) / of_nat (fact (2 * n + 2 + 1))"
                },
                {
                    "args": "sum_pair_from_0",
                    "id": "3",
                    "prevs": [
                        "2"
                    ],
                    "rule": "rewrite_fact",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λi. (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0))) ≤ abs x ^ (2 * n + 2 + 1) / of_nat (fact (2 * n + 2 + 1))"
                },
                {
                    "args": "",
                    "id": "4",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "⊢ ∀i. (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "i, nat",
                    "id": "4.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "even_double, {n: i}",
                    "id": "4.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * i)"
                },
                {
                    "args": "not_odd, ¬(odd (2 * i))",
                    "id": "4.2",
                    "prevs": [
                        "4.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ¬(odd (2 * i))"
                },
                {
                    "args": "add_1_right, 2 * i + 1 = Suc (2 * i)",
                    "id": "4.3",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ 2 * i + 1 = Suc (2 * i)"
                },
                {
                    "args": "exI, {P: λm. 2 * i + 1 = Suc (2 * m), a: i}",
                    "id": "4.4",
                    "prevs": [
                        "4.3"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ∃a1. 2 * i + 1 = Suc (2 * a1)"
                },
                {
                    "args": "odd_exists, odd (2 * i + 1)",
                    "id": "4.5",
                    "prevs": [
                        "4.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ odd (2 * i + 1)"
                },
                {
                    "args": "2 * i + 1 = i * 2 + 1",
                    "id": "4.6",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ 2 * i + 1 = i * 2 + 1"
                },
                {
                    "args": "(1::nat) < 2",
                    "id": "4.7",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ (1::nat) < 2"
                },
                {
                    "args": "div_uniq",
                    "id": "4.8",
                    "prevs": [
                        "4.6",
                        "4.7"
                    ],
                    "rule": "apply_theorem",
                    "th": "⊢ (2 * i + 1) DIV 2 = i"
                },
                {
                    "args": "∀a. ∀b. ∀c. a * b * real_inverse c = a * real_inverse c * b",
                    "id": "4.9",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a. ∀b. ∀c. a * b * real_inverse c = a * real_inverse c * b"
                },
                {
                    "args": "real_divide_def, ∀a. ∀b. ∀c. a * b / c = a / c * b",
                    "id": "4.10",
                    "prevs": [
                        "4.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ ∀a. ∀b. ∀c. a * b / c = a / c * b"
                },
                {
                    "args": "-(1::real) ^ i, x ^ (2 * i + 1), (of_nat::nat ⇒ real) (fact (2 * i + 1))",
                    "id": "4.11",
                    "prevs": [
                        "4.10"
                    ],
                    "rule": "apply_fact_for",
                    "th": "⊢ -1 ^ i * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "-1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)",
                    "id": "4.12",
                    "prevs": [
                        "4.8",
                        "4.11"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "⊢ -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "if_P, (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)",
                    "id": "4.13",
                    "prevs": [
                        "4.12",
                        "4.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "real_add_lid, 0 + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)",
                    "id": "4.14",
                    "prevs": [
                        "4.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ 0 + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "if_not_P, (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)",
                    "id": "4.15",
                    "prevs": [
                        "4.14",
                        "4.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "⊢ (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "",
                    "id": "4.16",
                    "prevs": [
                        "4.0",
                        "4.15"
                    ],
                    "rule": "intros",
                    "th": "⊢ ∀i. (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "4",
                        "3"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ abs x ^ (2 * n + 2 + 1) / of_nat (fact (2 * n + 2 + 1))"
                },
                {
                    "args": "2 * n + 2 + 1 = 2 * n + 3",
                    "id": "6",
                    "prevs": [],
                    "rule": "nat_norm",
                    "th": "⊢ 2 * n + 2 + 1 = 2 * n + 3"
                },
                {
                    "args": "",
                    "id": "7",
                    "prevs": [
                        "6",
                        "5"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ abs x ^ (2 * n + 3) / of_nat (fact (2 * n + 3))"
                },
                {
                    "args": "",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "intros",
                    "th": "⊢ abs (sin x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ abs x ^ (2 * n + 3) / of_nat (fact (2 * n + 3))"
                }
            ],
            "prop": [
                "abs ",
                "  (sin x - sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ ",
                "abs x ^ (2 * n + 3) / of_nat (fact (2 * n + 3))"
            ],
            "steps": [
                {
                    "goal_id": "0",
                    "method_name": "apply_forward_step",
                    "param_n": "2*n+2",
                    "param_x": "x",
                    "theorem": "taylor_sin_raw"
                },
                {
                    "goal": "!f. sum ({0..2 * n + 2}) (λk. if odd k then f k else 0) = sum ({0..2 * n + 1}) (λk. if odd k then f k else 0)",
                    "goal_id": "1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1",
                    "method_name": "introduction",
                    "names": "f"
                },
                {
                    "goal": "!a. a + 2 = Suc (a + 1)",
                    "goal_id": "1.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "1.1",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "1.2"
                    ],
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_Suc_natseg"
                },
                {
                    "goal": "0 ≤ Suc (2 * n + 1)",
                    "goal_id": "1.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.3",
                    "method_name": "apply_backward_step",
                    "theorem": "le_0"
                },
                {
                    "fact_ids": [
                        "1.3"
                    ],
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal": "~odd (Suc (2 * n + 1))",
                    "goal_id": "1.4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "odd_def_2"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "odd_exists"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "inst_exists_goal",
                    "s": "n"
                },
                {
                    "goal_id": "1.4",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "fact_ids": [
                        "1.8"
                    ],
                    "goal_id": "1.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "1.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_rid"
                },
                {
                    "fact_ids": [
                        "1",
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_pair_from_0"
                },
                {
                    "goal": "!i. (if odd (2 * i) then -1 ^ (2 * i DIV 2) * x ^ (2 * i) / of_nat (fact (2 * i)) else 0) + (if odd (2 * i + 1) then -1 ^ ((2 * i + 1) DIV 2) * x ^ (2 * i + 1) / of_nat (fact (2 * i + 1)) else 0) = -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)",
                    "goal_id": "4",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "goal": "~odd (2 * i)",
                    "goal_id": "4.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "not_odd"
                },
                {
                    "goal_id": "4.1",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "4.2"
                    ],
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_add_lid"
                },
                {
                    "goal": "odd (2 * i + 1)",
                    "goal_id": "4.3",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "odd_exists"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "inst_exists_goal",
                    "s": "i"
                },
                {
                    "goal_id": "4.3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "fact_ids": [
                        "4.5"
                    ],
                    "goal_id": "4.6",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "goal": "(2 * i + 1) DIV 2 = i",
                    "goal_id": "4.6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.6",
                    "method_name": "apply_backward_step",
                    "param_r": "(1::nat)",
                    "theorem": "div_uniq"
                },
                {
                    "goal_id": "4.6",
                    "method_name": "nat_norm"
                },
                {
                    "goal_id": "4.7",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.8"
                    ],
                    "goal_id": "4.9",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "!a::real. !b. !c. (a * b) / c = (a / c) * b",
                    "goal_id": "4.9",
                    "method_name": "cut"
                },
                {
                    "goal_id": "4.9",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_divide_def"
                },
                {
                    "goal_id": "4.9",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "4.10"
                    ],
                    "goal_id": "4.11",
                    "method_name": "apply_prev"
                },
                {
                    "fact_ids": [
                        "4",
                        "3"
                    ],
                    "goal_id": "5",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal": "2 * n + 2 + 1 = 2 * n + 3",
                    "goal_id": "6",
                    "method_name": "cut"
                },
                {
                    "goal_id": "6",
                    "method_name": "nat_norm"
                },
                {
                    "fact_ids": [
                        "6",
                        "5"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact_with_prev"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sin_pos_poly_upper_bound",
            "num_gaps": 2,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "even n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "",
                    "id": "2",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n, 0 ≤ x ⊢ n = 0 ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "n = 0",
                    "id": "2.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "mult_1_right, Suc 0 * 1 = Suc 0",
                    "id": "2.1",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ Suc 0 * 1 = Suc 0"
                },
                {
                    "args": "fact_def_1, Suc 0 * fact 0 = Suc 0",
                    "id": "2.2",
                    "prevs": [
                        "2.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ Suc 0 * fact 0 = Suc 0"
                },
                {
                    "args": "fact_def_2, fact (Suc 0) = Suc 0",
                    "id": "2.3",
                    "prevs": [
                        "2.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ fact (Suc 0) = Suc 0"
                },
                {
                    "args": "nat_one_def, fact 1 = 1",
                    "id": "2.4",
                    "prevs": [
                        "2.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ fact 1 = 1"
                },
                {
                    "args": "",
                    "id": "2.5",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ x"
                },
                {
                    "args": "real_mul_lid, sin x ≤ 1 * x",
                    "id": "2.6",
                    "prevs": [
                        "2.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ 1 * x"
                },
                {
                    "args": "real_div_1, sin x ≤ 1 / 1 * x",
                    "id": "2.7",
                    "prevs": [
                        "2.6"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ 1 / 1 * x"
                },
                {
                    "args": "real_one_def, sin x ≤ 1 / of_nat 1 * x",
                    "id": "2.8",
                    "prevs": [
                        "2.7"
                    ],
                    "rule": "rewrite_goal_sym",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ 1 / of_nat 1 * x"
                },
                {
                    "args": "sin x ≤ 1 / of_nat (fact 1) * x",
                    "id": "2.9",
                    "prevs": [
                        "2.4",
                        "2.8"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ 1 / of_nat (fact 1) * x"
                },
                {
                    "args": "real_pow_1, sin x ≤ 1 / of_nat (fact 1) * x ^ (1::nat)",
                    "id": "2.10",
                    "prevs": [
                        "2.9"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ 1 / of_nat (fact 1) * x ^ (1::nat)"
                },
                {
                    "args": "real_nat_power_def_1, sin x ≤ -1 ^ (0::nat) / of_nat (fact 1) * x ^ (1::nat)",
                    "id": "2.11",
                    "prevs": [
                        "2.10"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ -1 ^ (0::nat) / of_nat (fact 1) * x ^ (1::nat)"
                },
                {
                    "args": "nat_plus_def_1, sin x ≤ -1 ^ (0::nat) / of_nat (fact (0 + 1)) * x ^ ((0::nat) + 1)",
                    "id": "2.12",
                    "prevs": [
                        "2.11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ -1 ^ (0::nat) / of_nat (fact (0 + 1)) * x ^ ((0::nat) + 1)"
                },
                {
                    "args": "mult_0_right, sin x ≤ -1 ^ (0::nat) / of_nat (fact (2 * 0 + 1)) * x ^ ((2::nat) * 0 + 1)",
                    "id": "2.13",
                    "prevs": [
                        "2.12"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ -1 ^ (0::nat) / of_nat (fact (2 * 0 + 1)) * x ^ ((2::nat) * 0 + 1)"
                },
                {
                    "args": "sum_sing_natseg, sin x ≤ sum ({0..0}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))",
                    "id": "2.14",
                    "prevs": [
                        "2.13"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ sum ({0..0}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))",
                    "id": "2.15",
                    "prevs": [
                        "2.0",
                        "2.14"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "even n, n = 0, 0 ≤ x ⊢ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "2.16",
                    "prevs": [
                        "2.0",
                        "2.15"
                    ],
                    "rule": "intros",
                    "th": "even n, 0 ≤ x ⊢ n = 0 ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "sorry",
                    "th": "even n, 0 ≤ x ⊢ ¬(n = 0) ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "classical_cases",
                    "id": "4",
                    "prevs": [
                        "2",
                        "3"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, 0 ≤ x ⊢ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [
                        "0",
                        "1",
                        "4"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ even n ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ even n ",
                "   ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
            ],
            "steps": [
                {
                    "case": "n=0",
                    "goal_id": "2",
                    "method_name": "cases"
                },
                {
                    "goal_id": "2",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "2.0"
                    ],
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "sum_sing_natseg"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_0_right"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_plus_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_nat_power_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_1"
                },
                {
                    "goal": "fact 1 = 1",
                    "goal_id": "2.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "nat_one_def"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_2"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "fact_def_1"
                },
                {
                    "goal_id": "2.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "mult_1_right"
                },
                {
                    "fact_ids": [
                        "2.4"
                    ],
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "true",
                    "theorem": "real_one_def"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_div_1"
                },
                {
                    "goal_id": "2.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_mul_lid"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sin_pos_poly_lower_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "0 ≤ x",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "0 ≤ x ⊢ 0 ≤ x"
                },
                {
                    "args": "odd n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd n ⊢ odd n"
                },
                {
                    "args": "not_even",
                    "id": "2",
                    "prevs": [
                        "1"
                    ],
                    "rule": "rewrite_fact_sym",
                    "th": "odd n ⊢ ¬(even n)"
                },
                {
                    "args": "",
                    "id": "3",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd n, 0 ≤ x ⊢ n = 0 ⟶ even n"
                },
                {
                    "args": "n = 0",
                    "id": "3.0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "n = 0 ⊢ n = 0"
                },
                {
                    "args": "trueI",
                    "id": "3.1",
                    "prevs": [],
                    "rule": "apply_theorem",
                    "th": "⊢ true"
                },
                {
                    "args": "even_def_1, even 0",
                    "id": "3.2",
                    "prevs": [
                        "3.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, n = 0, 0 ≤ x ⊢ even 0"
                },
                {
                    "args": "even n",
                    "id": "3.3",
                    "prevs": [
                        "3.0",
                        "3.2"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, n = 0, 0 ≤ x ⊢ even n"
                },
                {
                    "args": "",
                    "id": "3.4",
                    "prevs": [
                        "3.0",
                        "3.3"
                    ],
                    "rule": "intros",
                    "th": "odd n, 0 ≤ x ⊢ n = 0 ⟶ even n"
                },
                {
                    "args": "double_neg, ¬¬(n = 0) ⟶ ¬¬(even n)",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬¬(n = 0) ⟶ ¬¬(even n)"
                },
                {
                    "args": "contrapositive",
                    "id": "5",
                    "prevs": [
                        "2",
                        "4"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, 0 ≤ x ⊢ ¬(n = 0)"
                },
                {
                    "args": "le_1_1",
                    "id": "6",
                    "prevs": [
                        "5"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, 0 ≤ x ⊢ 0 < n"
                },
                {
                    "args": "lt_imp_le",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, 0 ≤ x ⊢ 0 ≤ n"
                },
                {
                    "args": "sum_clauses_right, {f: λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)}",
                    "id": "8",
                    "prevs": [
                        "6",
                        "7"
                    ],
                    "rule": "apply_theorem_for",
                    "th": "odd n, 0 ≤ x ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) = sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) + -1 ^ n / of_nat (fact (2 * n + 1)) * x ^ (2 * n + 1)"
                },
                {
                    "args": "taylor_sin, {n: n - 1, x: x}",
                    "id": "9",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ abs (sin x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ abs x ^ (2 * (n - 1) + 3) / of_nat (fact (2 * (n - 1) + 3))"
                },
                {
                    "args": "real_pow_one, -((1::real) ^ n) = -1",
                    "id": "10",
                    "prevs": [],
                    "rule": "rewrite_goal",
                    "th": "⊢ -((1::real) ^ n) = -1"
                },
                {
                    "args": "if_not_P, (if even n then (1::real) ^ n else -(1 ^ n)) = -1",
                    "id": "11",
                    "prevs": [
                        "10",
                        "2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ (if even n then (1::real) ^ n else -(1 ^ n)) = -1"
                },
                {
                    "args": "real_pow_neg, -(1::real) ^ n = -1",
                    "id": "12",
                    "prevs": [
                        "11"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ -(1::real) ^ n = -1"
                },
                {
                    "args": "2 * (n - 1) + 3 = 2 * n + 1",
                    "id": "13",
                    "prevs": [
                        "6"
                    ],
                    "rule": "z3",
                    "th": "odd n, 0 ≤ x ⊢ 2 * (n - 1) + 3 = 2 * n + 1"
                },
                {
                    "args": "",
                    "id": "14",
                    "prevs": [
                        "13",
                        "9"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n, 0 ≤ x ⊢ abs (sin x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ abs x ^ (2 * n + 1) / of_nat (fact (2 * n + 1))"
                },
                {
                    "args": "even_double, {n: n}",
                    "id": "15",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * n)"
                },
                {
                    "args": "double_neg, ¬¬(even (2 * n))",
                    "id": "16",
                    "prevs": [
                        "15"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬¬(even (2 * n))"
                },
                {
                    "args": "even_def_2, ¬(even (Suc (2 * n)))",
                    "id": "17",
                    "prevs": [
                        "16"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬(even (Suc (2 * n)))"
                },
                {
                    "args": "add_1_right, ¬(even (2 * n + 1))",
                    "id": "18",
                    "prevs": [
                        "17"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬(even (2 * n + 1))"
                },
                {
                    "args": "if_P, (if 0 ≤ x then x else -x) = x",
                    "id": "19",
                    "prevs": [
                        "0"
                    ],
                    "rule": "rewrite_goal",
                    "th": "0 ≤ x ⊢ (if 0 ≤ x then x else -x) = x"
                },
                {
                    "args": "abs_def, abs x = x",
                    "id": "20",
                    "prevs": [
                        "19"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ abs x = x"
                },
                {
                    "args": "if_not_P, if even (2 * n + 1) then 2 * n + 1 = 0 ∨ abs (abs x) = abs x else abs x = x",
                    "id": "21",
                    "prevs": [
                        "20",
                        "18"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ if even (2 * n + 1) then 2 * n + 1 = 0 ∨ abs (abs x) = abs x else abs x = x"
                },
                {
                    "args": "real_pow_eq_eq, abs x ^ (2 * n + 1) = x ^ (2 * n + 1)",
                    "id": "22",
                    "prevs": [
                        "21"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ abs x ^ (2 * n + 1) = x ^ (2 * n + 1)"
                },
                {
                    "args": "",
                    "id": "23",
                    "prevs": [
                        "22",
                        "14"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n, 0 ≤ x ⊢ abs (sin x - sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ x ^ (2 * n + 1) / of_nat (fact (2 * n + 1))"
                },
                {
                    "args": "∀a. ∀b. ∀c. ∀d. ¬(d = 0) ⟶ abs (a - b) ≤ c / d ⟶ b + -1 / d * c ≤ a",
                    "id": "24",
                    "prevs": [],
                    "rule": "z3",
                    "th": "⊢ ∀a. ∀b. ∀c. ∀d. ¬(d = 0) ⟶ abs (a - b) ≤ c / d ⟶ b + -1 / d * c ≤ a"
                },
                {
                    "args": "fact_nz, {n: 2 * n + 1}",
                    "id": "25",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ ¬(fact (2 * n + 1) = 0)"
                },
                {
                    "args": "real_of_nat_eq, ¬((of_nat::nat ⇒ real) (fact (2 * n + 1)) = of_nat 0)",
                    "id": "26",
                    "prevs": [
                        "25"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬((of_nat::nat ⇒ real) (fact (2 * n + 1)) = of_nat 0)"
                },
                {
                    "args": "real_zero_def, ¬(of_nat (fact (2 * n + 1)) = (0::real))",
                    "id": "27",
                    "prevs": [
                        "26"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, 0 ≤ x ⊢ ¬(of_nat (fact (2 * n + 1)) = (0::real))"
                },
                {
                    "args": "sin x, sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)), x ^ (2 * n + 1), (of_nat::nat ⇒ real) (fact (2 * n + 1))",
                    "id": "28",
                    "prevs": [
                        "24",
                        "27",
                        "23"
                    ],
                    "rule": "apply_fact_for",
                    "th": "odd n, 0 ≤ x ⊢ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) + -1 / of_nat (fact (2 * n + 1)) * x ^ (2 * n + 1) ≤ sin x"
                },
                {
                    "args": "sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) + -1 ^ n / of_nat (fact (2 * n + 1)) * x ^ (2 * n + 1) ≤ sin x",
                    "id": "29",
                    "prevs": [
                        "12",
                        "28"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, 0 ≤ x ⊢ sum ({0..n - 1}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) + -1 ^ n / of_nat (fact (2 * n + 1)) * x ^ (2 * n + 1) ≤ sin x"
                },
                {
                    "args": "sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x",
                    "id": "30",
                    "prevs": [
                        "8",
                        "29"
                    ],
                    "rule": "rewrite_goal_with_prev",
                    "th": "odd n, 0 ≤ x ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x"
                },
                {
                    "args": "",
                    "id": "31",
                    "prevs": [
                        "0",
                        "1",
                        "30"
                    ],
                    "rule": "intros",
                    "th": "⊢ 0 ≤ x ⟶ odd n ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x"
                }
            ],
            "prop": [
                "0 ≤ x ",
                "⟶ odd n ",
                "   ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x"
            ],
            "steps": [
                {
                    "fact_ids": [
                        "1"
                    ],
                    "goal_id": "2",
                    "method_name": "rewrite_fact",
                    "sym": "true",
                    "theorem": "not_even"
                },
                {
                    "goal": "~(n=0)",
                    "goal_id": "3",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_backward_step",
                    "theorem": "contrapositive"
                },
                {
                    "goal_id": "3",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "3",
                    "method_name": "introduction"
                },
                {
                    "fact_ids": [
                        "3.0"
                    ],
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_1"
                },
                {
                    "goal_id": "3.1",
                    "method_name": "apply_backward_step",
                    "theorem": "trueI"
                },
                {
                    "fact_ids": [
                        "5"
                    ],
                    "goal_id": "6",
                    "method_name": "apply_forward_step",
                    "theorem": "le_1_1"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "apply_forward_step",
                    "theorem": "lt_imp_le"
                },
                {
                    "fact_ids": [
                        "6",
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "apply_forward_step",
                    "param_f": "(λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))",
                    "theorem": "sum_clauses_right"
                },
                {
                    "goal_id": "9",
                    "method_name": "apply_forward_step",
                    "param_n": "n-1",
                    "param_x": "x",
                    "theorem": "taylor_sin"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "-(1::real) ^ n = -1",
                    "goal_id": "10",
                    "method_name": "cut"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "fact_ids": [
                        "2"
                    ],
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "10",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_one"
                },
                {
                    "fact_ids": [
                        "12"
                    ],
                    "goal_id": "13",
                    "method_name": "rewrite_goal_with_prev"
                },
                {
                    "goal": "2 * (n - 1) + 3 = 2 * n + 1",
                    "goal_id": "13",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "13",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "13",
                        "9"
                    ],
                    "goal_id": "14",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "abs x ^ (2 * n + 1) = x ^ (2 * n + 1)",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_eq_eq"
                },
                {
                    "goal": "~even (2 * n + 1)",
                    "goal_id": "15",
                    "method_name": "cut"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "15",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "15",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "18"
                    ],
                    "goal_id": "19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "goal_id": "19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "abs_def"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "19",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_P"
                },
                {
                    "fact_ids": [
                        "22",
                        "14"
                    ],
                    "goal_id": "23",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "goal": "∀a. ∀b. ∀c. ∀d. ~(d = 0) --> abs (a - b) ≤ c / d ⟶ b + -1 / d * c ≤ a",
                    "goal_id": "24",
                    "method_name": "cut"
                },
                {
                    "goal_id": "24",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "24"
                    ],
                    "goal_id": "25",
                    "method_name": "apply_prev"
                },
                {
                    "goal_id": "25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_zero_def"
                },
                {
                    "goal_id": "25",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_of_nat_eq"
                },
                {
                    "goal_id": "25",
                    "method_name": "apply_backward_step",
                    "theorem": "fact_nz"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sin_neg_poly_upper_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 0 ⊢ x ≤ 0"
                },
                {
                    "args": "odd n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "odd n ⊢ odd n"
                },
                {
                    "args": "0 ≤ -x",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 0 ⊢ 0 ≤ -x"
                },
                {
                    "args": "sin_pos_poly_lower_bound",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "odd n, x ≤ 0 ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -x ^ (2 * i + 1)) ≤ sin (-x)"
                },
                {
                    "args": "sin_neg",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 0 ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -x ^ (2 * i + 1)) ≤ -(sin x)"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "odd n, x ≤ 0 ⊢ ∀i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "i, nat",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "even_double, {n: i}",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * i)"
                },
                {
                    "args": "double_neg, ¬¬(even (2 * i))",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 0 ⊢ ¬¬(even (2 * i))"
                },
                {
                    "args": "even_def_2, ¬(even (Suc (2 * i)))",
                    "id": "5.3",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 0 ⊢ ¬(even (Suc (2 * i)))"
                },
                {
                    "args": "add_1_right, ¬(even (2 * i + 1))",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 0 ⊢ ¬(even (2 * i + 1))"
                },
                {
                    "args": "if_not_P, (if even (2 * i + 1) then x ^ (2 * i + 1) else -(x ^ (2 * i + 1))) = -(x ^ (2 * i + 1))",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 0 ⊢ (if even (2 * i + 1) then x ^ (2 * i + 1) else -(x ^ (2 * i + 1))) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "real_pow_neg, -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))",
                    "id": "5.6",
                    "prevs": [
                        "5.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "odd n, x ≤ 0 ⊢ -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "5.7",
                    "prevs": [
                        "5.0",
                        "5.6"
                    ],
                    "rule": "intros",
                    "th": "odd n, x ≤ 0 ⊢ ∀i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5",
                        "4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "odd n, x ≤ 0 ⊢ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -(x ^ (2 * i + 1))) ≤ -(sin x)"
                },
                {
                    "args": "real_mul_rneg",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 0 ⊢ sum ({0..n}) (λi. -(-1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))) ≤ -(sin x)"
                },
                {
                    "args": "sum_neg",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 0 ⊢ -(sum ({0..n}) (λx1. -1 ^ x1 / of_nat (fact (2 * x1 + 1)) * x ^ (2 * x1 + 1))) ≤ -(sin x)"
                },
                {
                    "args": "real_le_lneg2",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "odd n, x ≤ 0 ⊢ sin x ≤ sum ({0..n}) (λx1. -1 ^ x1 / of_nat (fact (2 * x1 + 1)) * x ^ (2 * x1 + 1))"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ 0 ⟶ odd n ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
                }
            ],
            "prop": [
                "x ≤ 0 ",
                "⟶ odd n ",
                "   ⟶ sin x ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1))"
            ],
            "steps": [
                {
                    "goal": "0 <= -x",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "sin_pos_poly_lower_bound"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sin_neg"
                },
                {
                    "goal": "!i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "goal": "~even (2 * i + 1)",
                    "goal_id": "5.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "5",
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rneg"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_neg"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_le_lneg2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        },
        {
            "attributes": [
                "hint_backward",
                "hint_backward1"
            ],
            "name": "sin_neg_poly_lower_bound",
            "num_gaps": 0,
            "proof": [
                {
                    "args": "x ≤ 0",
                    "id": "0",
                    "prevs": [],
                    "rule": "assume",
                    "th": "x ≤ 0 ⊢ x ≤ 0"
                },
                {
                    "args": "even n",
                    "id": "1",
                    "prevs": [],
                    "rule": "assume",
                    "th": "even n ⊢ even n"
                },
                {
                    "args": "0 ≤ -x",
                    "id": "2",
                    "prevs": [
                        "0"
                    ],
                    "rule": "z3",
                    "th": "x ≤ 0 ⊢ 0 ≤ -x"
                },
                {
                    "args": "sin_pos_poly_upper_bound",
                    "id": "3",
                    "prevs": [
                        "2",
                        "1"
                    ],
                    "rule": "apply_theorem",
                    "th": "even n, x ≤ 0 ⊢ sin (-x) ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -x ^ (2 * i + 1))"
                },
                {
                    "args": "sin_neg",
                    "id": "4",
                    "prevs": [
                        "3"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n, x ≤ 0 ⊢ -(sin x) ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "5",
                    "prevs": [],
                    "rule": "subproof",
                    "th": "even n, x ≤ 0 ⊢ ∀i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "i, nat",
                    "id": "5.0",
                    "prevs": [],
                    "rule": "variable",
                    "th": "⊢ _VAR i"
                },
                {
                    "args": "even_double, {n: i}",
                    "id": "5.1",
                    "prevs": [],
                    "rule": "apply_theorem_for",
                    "th": "⊢ even (2 * i)"
                },
                {
                    "args": "double_neg, ¬¬(even (2 * i))",
                    "id": "5.2",
                    "prevs": [
                        "5.1"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 0 ⊢ ¬¬(even (2 * i))"
                },
                {
                    "args": "even_def_2, ¬(even (Suc (2 * i)))",
                    "id": "5.3",
                    "prevs": [
                        "5.2"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 0 ⊢ ¬(even (Suc (2 * i)))"
                },
                {
                    "args": "add_1_right, ¬(even (2 * i + 1))",
                    "id": "5.4",
                    "prevs": [
                        "5.3"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 0 ⊢ ¬(even (2 * i + 1))"
                },
                {
                    "args": "if_not_P, (if even (2 * i + 1) then x ^ (2 * i + 1) else -(x ^ (2 * i + 1))) = -(x ^ (2 * i + 1))",
                    "id": "5.5",
                    "prevs": [
                        "5.4"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 0 ⊢ (if even (2 * i + 1) then x ^ (2 * i + 1) else -(x ^ (2 * i + 1))) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "real_pow_neg, -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))",
                    "id": "5.6",
                    "prevs": [
                        "5.5"
                    ],
                    "rule": "rewrite_goal",
                    "th": "even n, x ≤ 0 ⊢ -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "5.7",
                    "prevs": [
                        "5.0",
                        "5.6"
                    ],
                    "rule": "intros",
                    "th": "even n, x ≤ 0 ⊢ ∀i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))"
                },
                {
                    "args": "",
                    "id": "6",
                    "prevs": [
                        "5",
                        "4"
                    ],
                    "rule": "rewrite_fact_with_prev",
                    "th": "even n, x ≤ 0 ⊢ -(sin x) ≤ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * -(x ^ (2 * i + 1)))"
                },
                {
                    "args": "real_mul_rneg",
                    "id": "7",
                    "prevs": [
                        "6"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n, x ≤ 0 ⊢ -(sin x) ≤ sum ({0..n}) (λi. -(-1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)))"
                },
                {
                    "args": "sum_neg",
                    "id": "8",
                    "prevs": [
                        "7"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n, x ≤ 0 ⊢ -(sin x) ≤ -(sum ({0..n}) (λx1. -1 ^ x1 / of_nat (fact (2 * x1 + 1)) * x ^ (2 * x1 + 1)))"
                },
                {
                    "args": "real_le_lneg2",
                    "id": "9",
                    "prevs": [
                        "8"
                    ],
                    "rule": "rewrite_fact",
                    "th": "even n, x ≤ 0 ⊢ sum ({0..n}) (λx1. -1 ^ x1 / of_nat (fact (2 * x1 + 1)) * x ^ (2 * x1 + 1)) ≤ sin x"
                },
                {
                    "args": "",
                    "id": "10",
                    "prevs": [
                        "0",
                        "1",
                        "9"
                    ],
                    "rule": "intros",
                    "th": "⊢ x ≤ 0 ⟶ even n ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x"
                }
            ],
            "prop": [
                "x ≤ 0 ",
                "⟶ even n ",
                "   ⟶ sum ({0..n}) (λi. -1 ^ i / of_nat (fact (2 * i + 1)) * x ^ (2 * i + 1)) ≤ sin x"
            ],
            "steps": [
                {
                    "goal": "0 <= -x",
                    "goal_id": "2",
                    "method_name": "cut"
                },
                {
                    "fact_ids": [
                        "0"
                    ],
                    "goal_id": "2",
                    "method_name": "z3"
                },
                {
                    "fact_ids": [
                        "2",
                        "1"
                    ],
                    "goal_id": "3",
                    "method_name": "apply_forward_step",
                    "theorem": "sin_pos_poly_upper_bound"
                },
                {
                    "fact_ids": [
                        "3"
                    ],
                    "goal_id": "4",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sin_neg"
                },
                {
                    "goal": "!i::nat. -x ^ (2 * i + 1) = -(x ^ (2 * i + 1))",
                    "goal_id": "5",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5",
                    "method_name": "introduction",
                    "names": "i"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "real_pow_neg"
                },
                {
                    "goal": "~even (2 * i + 1)",
                    "goal_id": "5.1",
                    "method_name": "cut"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "add_1_right"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "even_def_2"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "double_neg"
                },
                {
                    "goal_id": "5.1",
                    "method_name": "apply_backward_step",
                    "theorem": "even_double"
                },
                {
                    "fact_ids": [
                        "5.4"
                    ],
                    "goal_id": "5.5",
                    "method_name": "rewrite_goal",
                    "sym": "false",
                    "theorem": "if_not_P"
                },
                {
                    "fact_ids": [
                        "5",
                        "4"
                    ],
                    "goal_id": "6",
                    "method_name": "rewrite_fact_with_prev"
                },
                {
                    "fact_ids": [
                        "6"
                    ],
                    "goal_id": "7",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_mul_rneg"
                },
                {
                    "fact_ids": [
                        "7"
                    ],
                    "goal_id": "8",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "sum_neg"
                },
                {
                    "fact_ids": [
                        "8"
                    ],
                    "goal_id": "9",
                    "method_name": "rewrite_fact",
                    "sym": "false",
                    "theorem": "real_le_lneg2"
                }
            ],
            "ty": "thm",
            "vars": {
                "n": "nat",
                "x": "real"
            }
        }
    ],
    "description": "Formal inequalities for trig.",
    "imports": [
        "realgamma"
    ],
    "name": "trig_sin_cos"
}