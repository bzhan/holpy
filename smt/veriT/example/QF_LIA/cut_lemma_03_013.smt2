(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun x10 () Int)
(declare-fun x11 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x14 () Int)
(assert (let ((?v_3 (- x13)) (?v_2 (- x9)) (?v_1 (- x1)) (?v_0 (+ (+ (- x2) x5) (- x7))) (?v_4 (* x9 (- 2)))) (and (not (>= (+ (+ (+ (* x13 (- 2)) (+ (* x0 (- 2)) (+ (* x8 (- 2)) (* x10 2)))) ?v_4) (* x5 (- 2))) 0)) (and (and (and (and (and (and (and (and (and (<= 1 (+ (+ (+ (+ ?v_3 x6) ?v_2) x3) x12)) (<= (+ (+ (+ (+ (+ x11 x7) x8) (- x10)) x4) ?v_1) (- 1))) (<= (+ ?v_0 x10) 0)) (<= (+ (+ (+ (- x0) x14) x8) x12) 0)) (<= (+ (+ (+ x2 x5) x0) (- x3)) 0)) (<= (+ (+ (+ (+ (+ x13 x5) x9) x0) x8) x3) 0)) (<= 0 (+ (+ (+ (+ (+ ?v_0 x13) x0) x4) ?v_1) (- x12)))) (<= (+ (+ (+ (+ x13 x14) ?v_2) x8) (* x10 (- 2))) 1)) (<= (+ (+ (+ (+ (+ x6 x2) ?v_3) (- x11)) (- x8)) x12) (- 1))) (<= 0 (+ (+ x14 x2) ?v_4))))))
(check-sat)
(exit)
